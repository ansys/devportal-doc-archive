{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modules.Material", "body": "<h1>Source code for pyaedt.modules.Material</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains these data classes for creating a material library:</span>\n\n<span class=\"sd\">* `BasicValue`</span>\n<span class=\"sd\">* `ClosedFormTM`</span>\n<span class=\"sd\">* `CommonMaterial`</span>\n<span class=\"sd\">* `Dataset`</span>\n<span class=\"sd\">* `MatProperties`</span>\n<span class=\"sd\">* `MatProperty`</span>\n<span class=\"sd\">* `Material`</span>\n<span class=\"sd\">* `SurMatProperties`</span>\n<span class=\"sd\">* `SufaceMaterial`</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">CSS4_COLORS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">_dict2arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n\n\n<div class=\"viewcode-block\" id=\"MatProperties\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperties/#pyaedt.modules.Material.MatProperties\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MatProperties</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Contains a list of constant names for all materials with</span>\n<span class=\"sd\">    mappings to their internal XML names.</span>\n\n<span class=\"sd\">    Internal names are used in scripts, and XML names are used in the XML syntax.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">aedtname</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;permeability&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;conductivity&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;dielectric_loss_tangent&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;magnetic_loss_tangent&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;thermal_conductivity&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;mass_density&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;specific_heat&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;thermal_expansion_coefficient&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;youngs_modulus&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;poissons_ratio&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;diffusivity&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;molecular_mass&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;viscosity&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">defaultvalue</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">defaultunit</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;[siemens m^-1]&quot;</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;[W m^-1 C^-1]&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;[Kg m^-3]&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;[J Kg^-1 C^-1]&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;[C^-1]&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;[Pa]&quot;</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">diel_order</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">cond_order</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<div class=\"viewcode-block\" id=\"MatProperties.get_defaultunit\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperties.get_defaultunit/#pyaedt.modules.Material.MatProperties.get_defaultunit\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_defaultunit</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">aedtname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Retrieve the default unit for a full name or a category name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedtname : str, optional</span>\n<span class=\"sd\">            AEDT full name or category name. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Default unit if it exists.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">defaultunit</span><span class=\"p\">[</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">aedtname</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;get_defaultunit: Either the full name or category name must be defined.&quot;</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"MatProperties.get_defaultvalue\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperties.get_defaultvalue/#pyaedt.modules.Material.MatProperties.get_defaultvalue\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_defaultvalue</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">aedtname</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Retrieve the default value for a full name or a category name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedtname : str</span>\n<span class=\"sd\">             AEDT full name or category name. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Default value if it exists.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">defaultvalue</span><span class=\"p\">[</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">aedtname</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;get_defaultunit: Either the full name or category name must be defined.&quot;</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"SurfMatProperties\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.SurfMatProperties/#pyaedt.modules.Material.SurfMatProperties\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SurfMatProperties</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Contains a list of constant names for all surface materials with</span>\n<span class=\"sd\">    mappings to their internal XML names.</span>\n\n<span class=\"sd\">    Internal names are used in scripts, and XML names are used in the XML syntax.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">aedtname</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s2\">&quot;surface_emissivity&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;surface_roughness&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;surface_diffuse_absorptance&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;surface_incident_absorptance&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">defaultvalue</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">]</span>\n    <span class=\"n\">defaultunit</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">&quot;[m]&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n\n<div class=\"viewcode-block\" id=\"SurfMatProperties.get_defaultunit\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.SurfMatProperties.get_defaultunit/#pyaedt.modules.Material.SurfMatProperties.get_defaultunit\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_defaultunit</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">aedtname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Retrieve the default unit for a full name or a category name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedtname : str, optional</span>\n<span class=\"sd\">            AEDT full name or category name. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Default unit if it exists.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">defaultunit</span><span class=\"p\">[</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">aedtname</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;get_defaultunit: either fullname or catname MUST be defined&quot;</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SurfMatProperties.get_defaultvalue\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.SurfMatProperties.get_defaultvalue/#pyaedt.modules.Material.SurfMatProperties.get_defaultvalue\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_defaultvalue</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">aedtname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the default value for a full name or a category name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedtname : str, optional</span>\n<span class=\"sd\">            AEDT full name or category name. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Default value if it exists.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">defaultvalue</span><span class=\"p\">[</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">aedtname</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;get_defaultunit: Either the full name or category name must be defined.&quot;</span><span class=\"p\">)</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ClosedFormTM</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manges closed-form thermal modifiers.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">Tref</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;22cel&quot;</span>\n    <span class=\"n\">C1</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">C2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">TL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-273.15cel&quot;</span>\n    <span class=\"n\">TU</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1000cel&quot;</span>\n    <span class=\"n\">autocalculation</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">TML</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n    <span class=\"n\">TMU</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Dataset</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages datasets.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">unitx</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"n\">unity</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"n\">unitz</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Absolute&quot;</span>\n    <span class=\"n\">namex</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"n\">namey</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"n\">namez</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BasicValue</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages thermal and spatial modifier calculations.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">spatialmodifier</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n\n<div class=\"viewcode-block\" id=\"MatProperty\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty/#pyaedt.modules.Material.MatProperty\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MatProperty</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages simple, anisotropic, tensor, and non-linear properties.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    material : :class:`pyaedt.modules.Material.Material`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n<span class=\"sd\">    name : str</span>\n<span class=\"sd\">        Name of the material property.</span>\n<span class=\"sd\">    val :</span>\n<span class=\"sd\">        The default is ``None``.</span>\n<span class=\"sd\">    thermalmodifier</span>\n<span class=\"sd\">        The default is ``None``.</span>\n<span class=\"sd\">    spatialmodifier</span>\n<span class=\"sd\">        The default is ``None``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; matproperty = app.materials[&quot;copper&quot;].conductivity</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">thermalmodifier</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">spatialmodifier</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span> <span class=\"o\">=</span> <span class=\"n\">material</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;simple&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">BasicValue</span><span class=\"p\">()]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_unit</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;AnisoProperty&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;anisotropic&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;component1&quot;</span><span class=\"p\">],</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;component2&quot;</span><span class=\"p\">],</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;component3&quot;</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;nonlinear&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;nonlinear&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;BTypeForSingleCurve&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">btype_for_single_curve</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n                <span class=\"k\">elif</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HUnit&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hunit</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n                <span class=\"k\">elif</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;BUnit&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bunit</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n                <span class=\"k\">elif</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;IsTemperatureDependent&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_temperature_dependent</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n                <span class=\"k\">elif</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;BHCoordinates&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DECoordinates&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;JECoordinates&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_unit</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">elif</span> <span class=\"n\">e</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Temperatures&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temperatures</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">thermalmodifier</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">thermalmodifier</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">tm</span> <span class=\"ow\">in</span> <span class=\"n\">thermalmodifier</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">tm</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"n\">ClosedFormTM</span><span class=\"p\">()</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">Tref</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">C1</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">C2</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">TL</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">TU</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">autocalculation</span> <span class=\"o\">=</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;auto_calculation&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">spatialmodifier</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">spatialmodifier</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">spatialmodifier</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">sm</span> <span class=\"ow\">in</span> <span class=\"n\">spatialmodifier</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">sm</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">sm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">spatialmodifier</span> <span class=\"o\">=</span> <span class=\"n\">sm</span><span class=\"p\">[</span><span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Type of the material property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        type : str</span>\n<span class=\"sd\">            Type of properties. Options are ``simple&quot;``,</span>\n<span class=\"sd\">            ``&quot;anisotropic&quot;,`` ``&quot;tensor&quot;``, and ``&quot;nonlinear&quot;,``</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span>\n\n    <span class=\"nd\">@type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span> <span class=\"o\">=</span> <span class=\"nb\">type</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;simple&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;anisotropic&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;tensor&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;nonlinear&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Value for a material property.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@value</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;nonlinear&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">BasicValue</span><span class=\"p\">())</span>\n\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">unit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Units for a material property value.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_unit</span>\n\n    <span class=\"nd\">@unit</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">unit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_unit</span> <span class=\"o\">=</span> <span class=\"n\">unit</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">data_set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Dataset.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">dataset</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">dataset</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thermalmodifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Thermal modifier.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thermalmodifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">thermal_value</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Thermal modifier.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">thermal_value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_thermal_modifier</span><span class=\"p\">(</span><span class=\"n\">thermal_value</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">thermal_value</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_thermal_modifier</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">thermal_value</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_thermal_modifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a thermal modifier.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        formula : str</span>\n<span class=\"sd\">            Formula to apply.</span>\n<span class=\"sd\">        index : int</span>\n<span class=\"sd\">            Value for the index.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n            <span class=\"ow\">or</span> <span class=\"s2\">&quot;ThermalModifierData&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">tm</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">:</span> <span class=\"n\">formula</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n                <span class=\"ow\">and</span> <span class=\"s2\">&quot;SpatialModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span>\n            <span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier_data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_spatial_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">tm</span><span class=\"p\">}),</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">),</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier_data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_thermal_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">tm</span><span class=\"p\">}),</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">tmname</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">],</span> <span class=\"nb\">list</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">for</span> <span class=\"n\">tm</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span>\n                        <span class=\"n\">tmname</span>\n                    <span class=\"p\">]:</span>\n                        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]:</span>\n                            <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n                            <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">found</span><span class=\"p\">:</span>\n                        <span class=\"n\">tm</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">:</span> <span class=\"n\">formula</span><span class=\"p\">,</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span>\n                            <span class=\"n\">tmname</span>\n                        <span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n                    <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;Property:&quot;</span>\n                    <span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">index</span>\n                    <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;Index:&quot;</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;use_free_form&quot;</span>\n                    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;free_form_value&quot;</span>\n                    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n                    <span class=\"p\">)</span>\n\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">tmname</span><span class=\"p\">]</span>\n                    <span class=\"p\">]</span>\n                    <span class=\"n\">tm</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">:</span> <span class=\"n\">formula</span><span class=\"p\">,</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span>\n                        <span class=\"n\">tmname</span>\n                    <span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tm</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"MatProperty.add_thermal_modifier_free_form\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty.add_thermal_modifier_free_form/#pyaedt.modules.Material.MatProperty.add_thermal_modifier_free_form\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_thermal_modifier_free_form</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a thermal modifier to a material property using a free-form formula.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        formula : str</span>\n<span class=\"sd\">            Full formula to apply.</span>\n<span class=\"sd\">        index : int, optional</span>\n<span class=\"sd\">            Value for the index. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss(specified_version=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1 = hfss.materials.add_material(&quot;new_copper2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1.add_thermal_modifier_free_form(&quot;if(Temp &gt; 1000cel, 1, if(Temp &lt; -273.15cel, 1, 1))&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_thermal_modifier</span><span class=\"p\">(</span><span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"MatProperty.add_thermal_modifier_dataset\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty.add_thermal_modifier_dataset/#pyaedt.modules.Material.MatProperty.add_thermal_modifier_dataset\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_thermal_modifier_dataset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a thermal modifier to a material property using an existing dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        dataset_name : str</span>\n<span class=\"sd\">            Name of the project dataset.</span>\n<span class=\"sd\">        index : int, optional</span>\n<span class=\"sd\">            Value for the index. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss(specified_version=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1 = hfss.materials.add_material(&quot;new_copper2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1.add_thermal_modifier_dataset(&quot;$ds1&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">formula</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pwl(</span><span class=\"si\">{}</span><span class=\"s2\">, Temp)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_thermal_modifier</span><span class=\"p\">(</span><span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"MatProperty.add_thermal_modifier_closed_form\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty.add_thermal_modifier_closed_form/#pyaedt.modules.Material.MatProperty.add_thermal_modifier_closed_form\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_thermal_modifier_closed_form</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tref</span><span class=\"o\">=</span><span class=\"mi\">22</span><span class=\"p\">,</span> <span class=\"n\">c1</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"o\">=</span><span class=\"mf\">1e-6</span><span class=\"p\">,</span> <span class=\"n\">tl</span><span class=\"o\">=-</span><span class=\"mf\">273.15</span><span class=\"p\">,</span> <span class=\"n\">tu</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s2\">&quot;cel&quot;</span><span class=\"p\">,</span> <span class=\"n\">auto_calc</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">tml</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">tmu</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a thermal modifier to a material property using a closed-form formula.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        tref : float, optional</span>\n<span class=\"sd\">            Reference temperature. The default is ``22``.</span>\n<span class=\"sd\">        c1 : float, optional</span>\n<span class=\"sd\">            First coefficient value. The default is ``0.0001``.</span>\n<span class=\"sd\">        c2 : float, optional</span>\n<span class=\"sd\">            Second coefficient value. The default is ``1e-6``.</span>\n<span class=\"sd\">        tl : float, optional</span>\n<span class=\"sd\">            Lower temperature limit. The default is ``273.15``.</span>\n<span class=\"sd\">        tu : float, optional</span>\n<span class=\"sd\">            Upper temperature limit. The default is ``1000``.</span>\n<span class=\"sd\">        units : str, optional</span>\n<span class=\"sd\">            Units for the reference temperature. The default</span>\n<span class=\"sd\">            is ``&quot;cel&quot;``.</span>\n<span class=\"sd\">        auto_calc : bool, optional</span>\n<span class=\"sd\">            Whether to calculate the lower and upper</span>\n<span class=\"sd\">            temperature limits automatically. The default is</span>\n<span class=\"sd\">            ``True``.</span>\n<span class=\"sd\">        tml : float, optional</span>\n<span class=\"sd\">            Lower temperature limit when ``auto_calc=True.``</span>\n<span class=\"sd\">            The default is ``1000``.</span>\n<span class=\"sd\">        tmu : float, optional</span>\n<span class=\"sd\">            Upper temperature limit when ``auto_calc=True.``</span>\n<span class=\"sd\">            The default is ``1000``.</span>\n<span class=\"sd\">        index : int, optional</span>\n<span class=\"sd\">            Value for the index. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss(specified_version=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1 = hfss.materials.add_material(&quot;new_copper2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1.permittivity.add_thermal_modifier_closed_form(c1 = 1e-3)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">index</span> <span class=\"o\">&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Wrong index number. Index must be 0 for simple or nonlinear properties,&quot;</span>\n                <span class=\"s2\">&quot; &lt;=2 for anisotropic materials, &lt;=9 for Tensors&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"n\">ClosedFormTM</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">Tref</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tref</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">C1</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">C2</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">TL</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">TU</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tu</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">autocalculation</span> <span class=\"o\">=</span> <span class=\"n\">auto_calc</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">auto_calc</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">TML</span> <span class=\"o\">=</span> <span class=\"n\">tml</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"o\">.</span><span class=\"n\">TMU</span> <span class=\"o\">=</span> <span class=\"n\">tmu</span>\n        <span class=\"k\">if</span> <span class=\"n\">auto_calc</span><span class=\"p\">:</span>\n            <span class=\"n\">tm_new</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tref</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c2</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tu</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;auto_calculation&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">tm_new</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tref</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c2</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tu</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;auto_calculation&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;TML&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tml</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;TMU&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tmu</span><span class=\"p\">),</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n            <span class=\"ow\">or</span> <span class=\"s2\">&quot;ThermalModifierData&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n                <span class=\"ow\">and</span> <span class=\"s2\">&quot;SpatialModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span>\n            <span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier_data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_spatial_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">tm_new</span><span class=\"p\">}),</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">),</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier_data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_thermal_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">tm_new</span><span class=\"p\">}),</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">tmname</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">tm_definition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">][</span>\n                    <span class=\"n\">tmname</span>\n                <span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">tm_definition</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                    <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">for</span> <span class=\"n\">tm</span> <span class=\"ow\">in</span> <span class=\"n\">tm_definition</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]:</span>\n                            <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                            <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tref</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c2</span><span class=\"p\">)</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tu</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n                            <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;auto_calculation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">auto_calc</span>\n                            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">auto_calc</span><span class=\"p\">:</span>\n                                <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;TML&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tml</span>\n                                <span class=\"n\">tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;TMU&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">tmu</span>\n                            <span class=\"k\">else</span><span class=\"p\">:</span>\n                                <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;TML&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                                <span class=\"n\">tm</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;TMU&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">found</span><span class=\"p\">:</span>\n                        <span class=\"n\">tm_definition</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tm_new</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;use_free_form&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"n\">tm_definition</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Tref&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tref</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">)</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">)</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;TL&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;TU&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n                    <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;auto_calculation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">auto_calc</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">auto_calc</span><span class=\"p\">:</span>\n                        <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;TML&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tml</span><span class=\"p\">)</span>\n                        <span class=\"n\">tm_definition</span><span class=\"p\">[</span><span class=\"s2\">&quot;TMU&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">tmu</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">tm_definition</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;TML&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                        <span class=\"n\">tm_definition</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;TMU&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">tm_definition</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tm_definition</span><span class=\"p\">]</span>\n                    <span class=\"n\">tm_definition</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tm_new</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;thermal_modifier_data&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_thermal_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">tm_definition</span><span class=\"p\">}),</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"MatProperty.set_non_linear\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty.set_non_linear/#pyaedt.modules.Material.MatProperty.set_non_linear\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_non_linear</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">point_list</span><span class=\"p\">,</span> <span class=\"n\">x_unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">y_unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Enable Non Linear Material.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        point_list : list of list</span>\n<span class=\"sd\">            list of [x,y] nonlinear couple of points.</span>\n<span class=\"sd\">        x_unit : str, optional</span>\n<span class=\"sd\">            X units. Defaults will be used if `None`.</span>\n<span class=\"sd\">        y_unit : str, optional</span>\n<span class=\"sd\">            Y units. Defaults will be used if `None`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if succeeded.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;permeability&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;conductivity&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Non linear parameters are only supported for permeability, conductivity and permittivity.&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;nonlinear&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">point_list</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;permeability&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">x_unit</span><span class=\"p\">:</span>\n                <span class=\"n\">x_unit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;tesla&quot;</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">y_unit</span><span class=\"p\">:</span>\n                <span class=\"n\">y_unit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;A_per_meter&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bunit</span> <span class=\"o\">=</span> <span class=\"n\">x_unit</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hunit</span> <span class=\"o\">=</span> <span class=\"n\">y_unit</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_temperature_dependent</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">btype_for_single_curve</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;normal&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temperatures</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">x_unit</span><span class=\"p\">:</span>\n                <span class=\"n\">x_unit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;V_per_meter&quot;</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">y_unit</span><span class=\"p\">:</span>\n                <span class=\"n\">y_unit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;C_per_m2&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_unit</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x_unit</span><span class=\"p\">,</span> <span class=\"n\">y_unit</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;conductivity&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">x_unit</span><span class=\"p\">:</span>\n                <span class=\"n\">x_unit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;V_per_meter&quot;</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">y_unit</span><span class=\"p\">:</span>\n                <span class=\"n\">y_unit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;A_per_m2&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_unit</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x_unit</span><span class=\"p\">,</span> <span class=\"n\">y_unit</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">spatialmodifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Spatial modifier.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">spatialmodifier</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">spatialmodifier</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@spatialmodifier</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">spatialmodifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">spatial_value</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Spatial modifier.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">spatial_value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_spatial_modifier</span><span class=\"p\">(</span><span class=\"n\">spatial_value</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">spatial_value</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_spatial_modifier</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">spatial_value</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_spatial_modifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a spatial modifier.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        formula : str</span>\n<span class=\"sd\">            Formula to apply.</span>\n<span class=\"sd\">        index : int</span>\n<span class=\"sd\">            Value for the index.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n            <span class=\"ow\">or</span> <span class=\"s2\">&quot;SpatialModifierData&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;spatial_modifier&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">:</span> <span class=\"n\">formula</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n                <span class=\"ow\">and</span> <span class=\"s2\">&quot;ThermalModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span>\n            <span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;spatial_modifier_data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_spatial_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">sm</span><span class=\"p\">}),</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">),</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;modifier_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;spatial_modifier_data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;one_spatial_modifier&quot;</span><span class=\"p\">:</span> <span class=\"n\">sm</span><span class=\"p\">}),</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">smname</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">smname</span><span class=\"p\">],</span> <span class=\"nb\">list</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">for</span> <span class=\"n\">sm</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span>\n                        <span class=\"n\">smname</span>\n                    <span class=\"p\">]:</span>\n                        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">sm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"n\">sm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">]:</span>\n                            <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                            <span class=\"n\">sm</span><span class=\"p\">[</span><span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">found</span><span class=\"p\">:</span>\n                        <span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;spatial_modifier&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">:</span> <span class=\"n\">formula</span><span class=\"p\">,</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span>\n                            <span class=\"n\">smname</span>\n                        <span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sm</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n                    <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">smname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;Property:&quot;</span>\n                    <span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">index</span>\n                    <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">smname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;Index:&quot;</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">):</span>\n\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">smname</span><span class=\"p\">][</span>\n                        <span class=\"s2\">&quot;free_form_value&quot;</span>\n                    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">smname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span><span class=\"n\">smname</span><span class=\"p\">]</span>\n                    <span class=\"p\">]</span>\n                    <span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;Index:&quot;</span><span class=\"p\">:</span> <span class=\"n\">index</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;prop_modifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;spatial_modifier&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;free_form_value&quot;</span><span class=\"p\">:</span> <span class=\"n\">formula</span><span class=\"p\">,</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">][</span>\n                        <span class=\"n\">smname</span>\n                    <span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sm</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"MatProperty.add_spatial_modifier_free_form\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty.add_spatial_modifier_free_form/#pyaedt.modules.Material.MatProperty.add_spatial_modifier_free_form\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_spatial_modifier_free_form</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a spatial modifier to a material property using a free-form formula.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        formula : str</span>\n<span class=\"sd\">            Full formula to apply.</span>\n<span class=\"sd\">        index : int, optional</span>\n<span class=\"sd\">            Value for the index. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss(specified_version=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1 = hfss.materials.add_material(&quot;new_copper2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1.add_spatial_modifier_free_form(&quot;if(X &gt; 1mm, 1, if(X &lt; 1mm, 2, 1))&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">spatialmodifier</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_spatial_modifier</span><span class=\"p\">(</span><span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"MatProperty.add_spatial_modifier_dataset\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.MatProperty.add_spatial_modifier_dataset/#pyaedt.modules.Material.MatProperty.add_spatial_modifier_dataset\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_spatial_modifier_dataset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a spatial modifier to a material property using an existing dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        dataset_name : str</span>\n<span class=\"sd\">            Name of the project dataset.</span>\n<span class=\"sd\">        index : int, optional</span>\n<span class=\"sd\">            Value for the index. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss(specified_version=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1 = hfss.materials.add_material(&quot;new_copper2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1.add_spatial_modifier_dataset(&quot;$ds1&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">formula</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;clp(</span><span class=\"si\">{}</span><span class=\"s2\">, X,Y,Z)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_value</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">spatialmodifier</span> <span class=\"o\">=</span> <span class=\"n\">formula</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_spatial_modifier</span><span class=\"p\">(</span><span class=\"n\">formula</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">)</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CommonMaterial</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages datasets with frequency-dependent materials.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    materials : :class:`pyaedt.modules.MaterialLib.Materials`</span>\n\n<span class=\"sd\">    name : str</span>\n\n<span class=\"sd\">    props : dict</span>\n<span class=\"sd\">        The default is ``None``.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materials</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_materials</span> <span class=\"o\">=</span> <span class=\"n\">materials</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_materials</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_omaterial_manager</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_materials</span><span class=\"o\">.</span><span class=\"n\">omaterial_manager</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_materials</span><span class=\"o\">.</span><span class=\"n\">_oproject</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_materials</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">coordinate_system</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_sweep_material</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;CoordinateSystemType&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">coordinate_system</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;CoordinateSystemType&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;CoordinateSystemType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Cartesian&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">coordinate_system</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Cartesian&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;BulkOrSurfaceType&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bulkorsurface</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BulkOrSurfaceType&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BulkOrSurfaceType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;ModTime&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modtime</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModTime&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModTime&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;LibLocation&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lib_location</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;LibLocation&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;LibLocation&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;ModSinceLib&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mod_since_lib</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModSinceLib&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModSinceLib&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Retrieve the arguments for a property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        prop : str, optoinal</span>\n<span class=\"sd\">            Name of the property.  The default is ``None``.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">arg</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_update_props</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">propname</span><span class=\"p\">,</span> <span class=\"n\">provpavlue</span><span class=\"p\">,</span> <span class=\"n\">update_aedt</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update properties.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        propname : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        provpavlue :</span>\n<span class=\"sd\">            Value of the property.</span>\n<span class=\"sd\">        update_aedt : bool, optional</span>\n<span class=\"sd\">            Whether to update the property in AEDT. The default is ``True``.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">provpavlue</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;simple&quot;</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;nonlinear&quot;</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">provpavlue</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">propname</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AnisoProperty&quot;</span><span class=\"p\">})</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;unit&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;component&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">if</span> <span class=\"n\">update_aedt</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">provpavlue</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">provpavlue</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">update_aedt</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">provpavlue</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">provpavlue</span>\n            <span class=\"k\">if</span> <span class=\"n\">update_aedt</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">provpavlue</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;nonlinear&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">propname</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;permeability&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">bh</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">]})</span>\n                <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">provpavlue</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;Point&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">bh</span><span class=\"p\">:</span>\n                        <span class=\"n\">bh</span><span class=\"p\">[</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">bh</span><span class=\"p\">[</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">point</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nonlinear&quot;</span><span class=\"p\">})</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;BTypeForSingleCurve&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">btype_for_single_curve</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;HUnit&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hunit</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;BUnit&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">bunit</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;IsTemperatureDependent&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">is_temperature_dependent</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;BHCoordinates&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">bh</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;BHCoordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Temperatures&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">temperatures</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">][</span><span class=\"s2\">&quot;BHCoordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Temperatures&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">bh</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">propname</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_unit</span><span class=\"p\">]})</span>\n                <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">provpavlue</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;Point&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">bh</span><span class=\"p\">:</span>\n                        <span class=\"n\">bh</span><span class=\"p\">[</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">bh</span><span class=\"p\">[</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">point</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">propname</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;conductivity&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">pr_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;JECoordinates&quot;</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">pr_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;DECoordinates&quot;</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"n\">propname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nonlinear&quot;</span><span class=\"p\">,</span> <span class=\"n\">pr_name</span><span class=\"p\">:</span> <span class=\"n\">bh</span><span class=\"p\">})</span>\n            <span class=\"k\">if</span> <span class=\"n\">update_aedt</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n\n<div class=\"viewcode-block\" id=\"Material\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material/#pyaedt.modules.Material.Material\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Material</span><span class=\"p\">(</span><span class=\"n\">CommonMaterial</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages material properties.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    materiallib : :class:`pyaedt.modules.MaterialLib.Materials`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n<span class=\"sd\">    name : str</span>\n<span class=\"sd\">        Name of the material.</span>\n<span class=\"sd\">    props  :</span>\n<span class=\"sd\">        The default is ``None``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; material = app.materials[&quot;copper&quot;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materiallib</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">CommonMaterial</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materiallib</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thermal_material_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Solid&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;thermal_material_type&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thermal_material_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;thermal_material_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;PhysicsTypes&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;PhysicsTypes&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;set&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;PhysicsTypes&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;set&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]})</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;AttachedData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;MatAppearanceData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;AttachedData&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;AttachedData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MatAppearanceData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Red&quot;</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;AttachedData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MatAppearanceData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Green&quot;</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;AttachedData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MatAppearanceData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Blue&quot;</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">CSS4_COLORS</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">materiallib</span><span class=\"o\">.</span><span class=\"n\">_color_id</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">):</span>\n                <span class=\"n\">materiallib</span><span class=\"o\">.</span><span class=\"n\">_color_id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">vals</span><span class=\"p\">[</span><span class=\"n\">materiallib</span><span class=\"o\">.</span><span class=\"n\">_color_id</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s2\">&quot;#&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n            <span class=\"n\">materiallib</span><span class=\"o\">.</span><span class=\"n\">_color_id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;AttachedData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;MatAppearanceData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;property_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;appearance_data&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;Red&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;Green&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;Blue&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;stacking_type&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stacking_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;stacking_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;wire_type&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wire_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;wire_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"nb\">property</span> <span class=\"ow\">in</span> <span class=\"n\">MatProperties</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"n\">tmods</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"n\">smods</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;ThermalModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"n\">modifiers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">]</span>\n                    <span class=\"k\">for</span> <span class=\"n\">mod</span> <span class=\"ow\">in</span> <span class=\"n\">modifiers</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                            <span class=\"k\">for</span> <span class=\"n\">one_tm</span> <span class=\"ow\">in</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">]:</span>\n                                <span class=\"k\">if</span> <span class=\"n\">one_tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                                    <span class=\"k\">if</span> <span class=\"n\">tmods</span><span class=\"p\">:</span>\n                                        <span class=\"n\">tmods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tmods</span><span class=\"p\">]</span>\n                                        <span class=\"n\">tmods</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">one_tm</span><span class=\"p\">)</span>\n                                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                                        <span class=\"n\">tmods</span> <span class=\"o\">=</span> <span class=\"n\">one_tm</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"k\">if</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">][</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                                <span class=\"n\">tmods</span> <span class=\"o\">=</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;SpatialModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"n\">modifiers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SpatialModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_spatial_modifiers&quot;</span><span class=\"p\">]</span>\n                    <span class=\"k\">for</span> <span class=\"n\">mod</span> <span class=\"ow\">in</span> <span class=\"n\">modifiers</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                            <span class=\"k\">for</span> <span class=\"n\">one_tm</span> <span class=\"ow\">in</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">]:</span>\n                                <span class=\"k\">if</span> <span class=\"n\">one_tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                                    <span class=\"k\">if</span> <span class=\"n\">smods</span><span class=\"p\">:</span>\n                                        <span class=\"n\">smods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">smods</span><span class=\"p\">]</span>\n                                        <span class=\"n\">smods</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">one_tm</span><span class=\"p\">)</span>\n                                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                                        <span class=\"n\">smods</span> <span class=\"o\">=</span> <span class=\"n\">one_tm</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"k\">if</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">][</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                                <span class=\"n\">smods</span> <span class=\"o\">=</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">]</span>\n\n            <span class=\"n\">property_value</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"nb\">property</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"nb\">property</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"k\">else</span> <span class=\"n\">MatProperties</span><span class=\"o\">.</span><span class=\"n\">get_defaultvalue</span><span class=\"p\">(</span><span class=\"n\">aedtname</span><span class=\"o\">=</span><span class=\"nb\">property</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">property</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MatProperty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">,</span> <span class=\"n\">tmods</span><span class=\"p\">,</span> <span class=\"n\">smods</span><span class=\"p\">)</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material_appearance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Material Appearance specified as an RGB list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            Color of the material in RGB.  Values are in the range ``[0, 255]``.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        Create a new material with color ``[0, 153, 153]`` (darker cyan).</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss(specified_version=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1 = hfss.materials.add_material(&quot;new_material&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; rgbcolor = mat1.material_appearance</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat1.material_appearance = [0, 153, 153]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span>\n\n    <span class=\"nd\">@material_appearance</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material_appearance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rgb</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">rgb</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;`material_apperance` must be a list or tuple&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rgb</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;`material_appearance` must be three items (RGB)&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">value_int</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">rgb_item</span> <span class=\"ow\">in</span> <span class=\"n\">rgb</span><span class=\"p\">:</span>\n            <span class=\"n\">rgb_int</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">rgb_item</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">rgb_int</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span> <span class=\"ow\">or</span> <span class=\"n\">rgb_int</span> <span class=\"o\">&gt;</span> <span class=\"mi\">255</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;RGB value must be between 0 and 255&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">value_int</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">rgb_int</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_appearance</span> <span class=\"o\">=</span> <span class=\"n\">value_int</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;AttachedData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;MatAppearanceData&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;property_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;appearance_data&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Red&quot;</span><span class=\"p\">:</span> <span class=\"n\">value_int</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;Green&quot;</span><span class=\"p\">:</span> <span class=\"n\">value_int</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;Blue&quot;</span><span class=\"p\">:</span> <span class=\"n\">value_int</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">permittivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Permittivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Permittivity of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permittivity</span>\n\n    <span class=\"nd\">@permittivity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">permittivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permittivity</span><span class=\"o\">.</span><span class=\"n\">set_non_linear</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permittivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permittivity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;anisotropic&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permittivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permittivity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;simple&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">permeability</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Permeability.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Permeability of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permeability</span>\n\n    <span class=\"nd\">@permeability</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">permeability</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permeability</span><span class=\"o\">.</span><span class=\"n\">set_non_linear</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permeability</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permeability</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;anisotropic&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;permeability&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permeability</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_permeability</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;simple&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;permeability&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conductivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Conductivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Conductivity of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conductivity</span>\n\n    <span class=\"nd\">@conductivity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conductivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conductivity</span><span class=\"o\">.</span><span class=\"n\">set_non_linear</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conductivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conductivity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;anisotropic&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;conductivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conductivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_conductivity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;simple&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;conductivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dielectric_loss_tangent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Dielectric loss tangent.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.MatProperty`</span>\n<span class=\"sd\">            Dielectric loss tangent of the material.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dielectric_loss_tangent</span>\n\n    <span class=\"nd\">@dielectric_loss_tangent</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dielectric_loss_tangent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dielectric_loss_tangent</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;dielectric_loss_tangent&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">magnetic_loss_tangent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Magnetic loss tangent.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Magnetic loss tangent of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_magnetic_loss_tangent</span>\n\n    <span class=\"nd\">@magnetic_loss_tangent</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">magnetic_loss_tangent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_magnetic_loss_tangent</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;magnetic_loss_tangent&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thermal_conductivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Thermal conductivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Thermal conductivity of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal_conductivity</span>\n\n    <span class=\"nd\">@thermal_conductivity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thermal_conductivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal_conductivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;PhysicsTypes&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;set&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]})</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal_conductivity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;anisotropic&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;thermal_conductivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal_conductivity</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;simple&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;thermal_conductivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mass_density</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Mass density.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Mass density of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mass_density</span>\n\n    <span class=\"nd\">@mass_density</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mass_density</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mass_density</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;mass_density&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">specific_heat</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Specific heat.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Specific heat of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_specific_heat</span>\n\n    <span class=\"nd\">@specific_heat</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">specific_heat</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_specific_heat</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;specific_heat&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thermal_expansion_coefficient</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Thermal expansion coefficient.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Thermal expansion coefficient of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal_expansion_coefficient</span>\n\n    <span class=\"nd\">@thermal_expansion_coefficient</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thermal_expansion_coefficient</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal_expansion_coefficient</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;thermal_expansion_coefficient&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">youngs_modulus</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Young&#39;s modulus.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Young&#39;s modulus of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_youngs_modulus</span>\n\n    <span class=\"nd\">@youngs_modulus</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">youngs_modulus</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_youngs_modulus</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;PhysicsTypes&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;set&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;youngs_modulus&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">poissons_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Poisson&#39;s ratio.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Poisson&#39;s ratio of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_poissons_ratio</span>\n\n    <span class=\"nd\">@poissons_ratio</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">poissons_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_poissons_ratio</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;PhysicsTypes&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;set&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Electromagnetic&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">]})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;poissons_ratio&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">diffusivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Diffusivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Diffusivity of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_diffusivity</span>\n\n    <span class=\"nd\">@diffusivity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">diffusivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_diffusivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;diffusivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">molecular_mass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Molecular mass.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Molecular mass of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_molecular_mass</span>\n\n    <span class=\"nd\">@molecular_mass</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">molecular_mass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_molecular_mass</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;molecular_mass&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">viscosity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Viscosity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Viscosity of the material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_viscosity</span>\n\n    <span class=\"nd\">@viscosity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">viscosity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_viscosity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;viscosity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stacking_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Composition of the wire can either be &quot;Solid&quot;, &quot;Lamination&quot; or &quot;Litz Wire&quot;.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        string</span>\n<span class=\"sd\">            Structure of the wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stacking_type</span>\n\n    <span class=\"nd\">@stacking_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stacking_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Solid&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Lamination&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Litz Wire&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Composition of the wire can either be &#39;Solid&#39;, &#39;Lamination&#39; or &#39;Litz Wire&#39;.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stacking_type</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;stacking_type&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;The type of the wire can either be &quot;Round&quot;, &quot;Square&quot; or &quot;Rectangular&quot;.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        string</span>\n<span class=\"sd\">            Type of the wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_type</span>\n\n    <span class=\"nd\">@wire_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Round&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Square&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Rectangular&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;The type of the wire can either be &#39;Round&#39;, &#39;Square&#39; or &#39;Rectangular&#39;.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_type</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;wire_type&quot;</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">}))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_thickness_direction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Thickness direction of the wire can either be &quot;V(1)&quot;, &quot;V(2)&quot; or &quot;V(3)&quot;.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        string</span>\n<span class=\"sd\">            Thickness direction of the wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_thickness_direction</span>\n\n    <span class=\"nd\">@wire_thickness_direction</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_thickness_direction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;V(1)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V(2)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V(3)&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Thickness direction of the wire can either be &#39;V(1)&#39;, &#39;V(2)&#39; or &#39;V(3)&#39;.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_thickness_direction</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;wire_thickness_direction&quot;</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">})</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_width_direction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Width direction of the wire can either be &quot;V(1)&quot;, &quot;V(2)&quot; or &quot;V(3)&quot;.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        string</span>\n<span class=\"sd\">            Width direction of the wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_width_direction</span>\n\n    <span class=\"nd\">@wire_width_direction</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_width_direction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;V(1)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V(2)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V(3)&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Width direction of the wire can either be &#39;V(1)&#39;, &#39;V(2)&#39; or &#39;V(3)&#39;.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_width_direction</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;wire_width_direction&quot;</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">}))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">strand_number</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Strand number for litz wire.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Number of strands for the wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_strand_number</span>\n\n    <span class=\"nd\">@strand_number</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">strand_number</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_strand_number</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;strand_number&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Thickness of rectangular litz wire.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Thickness of the litz wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_thickness</span>\n\n    <span class=\"nd\">@wire_thickness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_thickness</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;wire_thickness&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_diameter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Diameter of the round litz wire.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Diameter of the litz wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_diameter</span>\n\n    <span class=\"nd\">@wire_diameter</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_diameter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_diameter</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;wire_diameter&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_width</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Width of the rectangular or square litz wire.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Width of the litz wire.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_width</span>\n\n    <span class=\"nd\">@wire_width</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wire_width</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wire_width</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;wire_width&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stacking_factor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Stacking factor for lamination.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Stacking factor.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stacking_factor</span>\n\n    <span class=\"nd\">@stacking_factor</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stacking_factor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stacking_factor</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;stacking_factor&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stacking_direction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Stacking direction for the lamination can either be &quot;V(1)&quot;, &quot;V(2)&quot; or &quot;V(3)&quot;.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        string</span>\n<span class=\"sd\">            Stacking direction for lamination.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stacking_direction</span>\n\n    <span class=\"nd\">@stacking_direction</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stacking_direction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;V(1)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V(2)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V(3)&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Stacking direction for the lamination either be &#39;V(1)&#39;, &#39;V(2)&#39; or &#39;V(3)&#39;.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stacking_direction</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;stacking_direction&quot;</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">}))</span>\n\n<div class=\"viewcode-block\" id=\"Material.set_magnetic_coercitivity\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.set_magnetic_coercitivity/#pyaedt.modules.Material.Material.set_magnetic_coercitivity\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_magnetic_coercitivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set Magnetic Coercitivity for material.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Magnitude in A_per_meter. Default value is ``0``.</span>\n<span class=\"sd\">        x : float, optional</span>\n<span class=\"sd\">            Vector x component. Default value is ``1``.</span>\n<span class=\"sd\">        y : float, optional</span>\n<span class=\"sd\">            Vector y component. Default value is ``0``.</span>\n<span class=\"sd\">        z : float, optional</span>\n<span class=\"sd\">            Vector z component. Default value is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;magnetic_coercivity&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;VectorProperty&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Magnitude&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">A_per_meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;DirComp1&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;DirComp2&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;DirComp3&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">z</span><span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.set_electrical_steel_coreloss\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.set_electrical_steel_coreloss/#pyaedt.modules.Material.Material.set_electrical_steel_coreloss\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_electrical_steel_coreloss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">kh</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">kc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">ke</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">kdc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cut_depth</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set Electrical Steel Type Core Loss.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        kh : float</span>\n<span class=\"sd\">        kc : float</span>\n<span class=\"sd\">        ke : float</span>\n<span class=\"sd\">        kdc : float</span>\n<span class=\"sd\">        cut_depth : float</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;core_loss_type&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Electrical Steel&quot;</span><span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Electrical Steel&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kh&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">kh</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">kc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_ke&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ke</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">kdc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cut_depth</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.set_hysteresis_coreloss\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.set_hysteresis_coreloss/#pyaedt.modules.Material.Material.set_hysteresis_coreloss\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_hysteresis_coreloss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">kdc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">hci</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">br</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">hkc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cut_depth</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set Hysteresis Type Core Loss.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        kdc : float</span>\n<span class=\"sd\">        hci : float</span>\n<span class=\"sd\">        br : float</span>\n<span class=\"sd\">        hkc : float</span>\n<span class=\"sd\">        cut_depth : float</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;core_loss_type&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Hysteresis Model&quot;</span><span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_kh&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_kc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_ke&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Hysteresis Model&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">A_per_meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">hci</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">tesla&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">br</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">hkc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">kdc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cut_depth</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.set_power_ferrite_coreloss\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.set_power_ferrite_coreloss/#pyaedt.modules.Material.Material.set_power_ferrite_coreloss\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_power_ferrite_coreloss</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cm</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">kdc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cut_depth</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set Power Ferrite Type Core Loss.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cm : float</span>\n<span class=\"sd\">        x : float</span>\n<span class=\"sd\">        y : float</span>\n<span class=\"sd\">        kdc : float</span>\n<span class=\"sd\">        cut_depth : float</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;core_loss_type&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Power Ferrite&quot;</span><span class=\"p\">})</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_kh&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_kc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_ke&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Power Ferrite&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">A_per_meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">tesla&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">kdc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cut_depth</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.set_bp_curve_coreloss\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.set_bp_curve_coreloss/#pyaedt.modules.Material.Material.set_bp_curve_coreloss\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_bp_curve_coreloss</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">point_list</span><span class=\"p\">,</span> <span class=\"n\">kdc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cut_depth</span><span class=\"o\">=</span><span class=\"mf\">0.0001</span><span class=\"p\">,</span> <span class=\"n\">punit</span><span class=\"o\">=</span><span class=\"s2\">&quot;kw/m^3&quot;</span><span class=\"p\">,</span> <span class=\"n\">bunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;tesla&quot;</span><span class=\"p\">,</span> <span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5mm&quot;</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set B-P Type Core Loss.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        point_list : list of list</span>\n<span class=\"sd\">            List of [x,y] points.</span>\n<span class=\"sd\">        kdc : float</span>\n<span class=\"sd\">        cut_depth : float</span>\n<span class=\"sd\">        punit : str</span>\n<span class=\"sd\">            Core loss unit. The default is ``&quot;kw/m^3&quot;``.</span>\n<span class=\"sd\">        bunit : str</span>\n<span class=\"sd\">            Magnetic field unit. The default is ``&quot;tesla&quot;``.</span>\n<span class=\"sd\">        frequency : float</span>\n<span class=\"sd\">        thickness : str, optional</span>\n<span class=\"sd\">            Lamination thickness. The default is ``&quot;0.5mm&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;core_loss_type&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ChoiceProperty&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;B-P Curve&quot;</span><span class=\"p\">})</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_kh&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_kc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_ke&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;B-P Curve&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">kdc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">meter&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cut_depth</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;property_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;nonlinear&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;PUnit&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">punit</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;BUnit&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">bunit</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">Hz&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">frequency</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Thickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thickness</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;IsTemperatureDependent&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;BPCoordinates&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;BPCoordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">points</span> <span class=\"ow\">in</span> <span class=\"n\">point_list</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;BPCoordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Point&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.get_curve_coreloss_type\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.get_curve_coreloss_type/#pyaedt.modules.Material.Material.get_curve_coreloss_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_curve_coreloss_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the curve core loss type assigned to material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.get_curve_coreloss_values\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.get_curve_coreloss_values/#pyaedt.modules.Material.Material.get_curve_coreloss_values\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_curve_coreloss_values</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the curve core values type assigned to material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Electrical Steel&quot;</span><span class=\"p\">:</span>\n\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kh&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kh&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kc&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_ke&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_ke&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;B-P Curve&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_curves&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Power Ferrite&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_cm&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_x&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_y&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_type&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Hysteresis Model&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_hci&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_br&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_hkc&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_kdc&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;core_loss_equiv_cut_depth&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">out</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.get_magnetic_coercitivity\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.get_magnetic_coercitivity/#pyaedt.modules.Material.Material.get_magnetic_coercitivity\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_magnetic_coercitivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the magnetic coercitivity values.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">            Tuple of (Magnitude, x, y, z).</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;magnetic_coercivity&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;magnetic_coercivity&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Magnitude&quot;</span><span class=\"p\">],</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;magnetic_coercivity&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DirComp1&quot;</span><span class=\"p\">],</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;magnetic_coercivity&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DirComp2&quot;</span><span class=\"p\">],</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;magnetic_coercivity&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DirComp3&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.is_conductor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.is_conductor/#pyaedt.modules.Material.Material.is_conductor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_conductor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mi\">100000</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check if the material is a conductor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        threshold : float, optional</span>\n<span class=\"sd\">            Threshold to define if a material is a conductor. The</span>\n<span class=\"sd\">            default is ``100000``. If the conductivity is equal to or</span>\n<span class=\"sd\">            greater than the threshold, the material is</span>\n<span class=\"sd\">            considered a conductor.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when the material is a condutor, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cond</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">conductivity</span><span class=\"o\">.</span><span class=\"n\">value</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cond</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Freq&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">cond</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">cond</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"n\">threshold</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.is_dielectric\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.is_dielectric/#pyaedt.modules.Material.Material.is_dielectric\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_dielectric</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mi\">100000</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check if the material is dielectric.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        threshold : float, optional</span>\n<span class=\"sd\">            Threshold to define if a material is dielectric. The</span>\n<span class=\"sd\">            default is ``100000``. If the conductivity is equal to or</span>\n<span class=\"sd\">            greater than the threshold, the material is</span>\n<span class=\"sd\">            considered dielectric.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when the material is dielectric, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_conductor</span><span class=\"p\">(</span><span class=\"n\">threshold</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Material.update\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.Material.update/#pyaedt.modules.Material.Material.update\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the material in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddMaterial</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_does_material_exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">AddMaterial</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_sweep_material</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">EditMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_does_material_exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material_name</span><span class=\"p\">):</span>\n        <span class=\"n\">listmatprj</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">GetProjectMaterialNames</span><span class=\"p\">())]</span>\n        <span class=\"k\">if</span> <span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"n\">listmatprj</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SurfaceMaterial\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.SurfaceMaterial/#pyaedt.modules.Material.SurfaceMaterial\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SurfaceMaterial</span><span class=\"p\">(</span><span class=\"n\">CommonMaterial</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages surface material properties for Icepak only.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    materiallib : :class:`pyaedt.modules.MaterialLib.Materials`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n<span class=\"sd\">    name : str</span>\n<span class=\"sd\">        Name of the surface material</span>\n<span class=\"sd\">    props :</span>\n<span class=\"sd\">        The default is ``None``.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materiallib</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">CommonMaterial</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materiallib</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_clarity_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Opaque&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;surface_clarity_type&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_clarity_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;surface_clarity_type&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Choice&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;PhysicsTypes&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;PhysicsTypes&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;set&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">physics_type</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Thermal&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"nb\">property</span> <span class=\"ow\">in</span> <span class=\"n\">SurfMatProperties</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">property</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n                <span class=\"n\">mods</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;ModifierData&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n                    <span class=\"n\">modifiers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ThermalModifierData&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;all_thermal_modifiers&quot;</span><span class=\"p\">]</span>\n                    <span class=\"k\">for</span> <span class=\"n\">mod</span> <span class=\"ow\">in</span> <span class=\"n\">modifiers</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                            <span class=\"k\">for</span> <span class=\"n\">one_tm</span> <span class=\"ow\">in</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">]:</span>\n                                <span class=\"k\">if</span> <span class=\"n\">one_tm</span><span class=\"p\">[</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                                    <span class=\"k\">if</span> <span class=\"n\">mods</span><span class=\"p\">:</span>\n                                        <span class=\"n\">mods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">mods</span><span class=\"p\">]</span>\n                                        <span class=\"n\">mods</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">one_tm</span><span class=\"p\">)</span>\n                                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                                        <span class=\"n\">mods</span> <span class=\"o\">=</span> <span class=\"n\">one_tm</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"k\">if</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">][</span><span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">property</span><span class=\"p\">:</span>\n                                <span class=\"n\">mods</span> <span class=\"o\">=</span> <span class=\"n\">modifiers</span><span class=\"p\">[</span><span class=\"n\">mod</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">property</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MatProperty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"nb\">property</span><span class=\"p\">],</span> <span class=\"n\">mods</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">property</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MatProperty</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"n\">SurfMatProperties</span><span class=\"o\">.</span><span class=\"n\">get_defaultvalue</span><span class=\"p\">(</span><span class=\"n\">aedtname</span><span class=\"o\">=</span><span class=\"nb\">property</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">emissivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Emissivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Emissivity of the surface material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditSurfaceMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_emissivity</span>\n\n    <span class=\"nd\">@emissivity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">emissivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_emissivity</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;surface_emissivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_diffuse_absorptance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Surface diffuse absorptance.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Surface diffuse absorptance of the surface material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditSurfaceMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_diffuse_absorptance</span>\n\n    <span class=\"nd\">@surface_diffuse_absorptance</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_diffuse_absorptance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_diffuse_absorptance</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;surface_diffuse_absorptance&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_incident_absorptance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Surface incident absorptance.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Surface incident absorptance of the surface material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditSurfaceMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_incident_absorptance</span>\n\n    <span class=\"nd\">@surface_incident_absorptance</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_incident_absorptance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_incident_absorptance</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;surface_incident_absorptance&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Surface roughness.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.MatProperty`</span>\n<span class=\"sd\">            Surface roughness of the surface material.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditSurfaceMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_roughness</span>\n\n    <span class=\"nd\">@surface_roughness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_roughness</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"s2\">&quot;surface_roughness&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"SurfaceMaterial.update\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Material.SurfaceMaterial.update/#pyaedt.modules.Material.SurfaceMaterial.update\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the surface material in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.DoesSurfaceMaterialExist</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddSurfaceMaterial</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.EditSurfaceMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_does_material_exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">EditSurfaceMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">AddSurfaceMaterial</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_does_material_exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">szMat</span><span class=\"p\">):</span>\n        <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">DoesSurfaceMaterialExist</span><span class=\"p\">(</span><span class=\"n\">szMat</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modules/Material", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}