{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.application.Design", "body": "<h1>Source code for pyaedt.application.Design</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains these classes: ``Design``.</span>\n\n<span class=\"sd\">This module provides all functionalities for basic project information and objects.</span>\n<span class=\"sd\">These classes are inherited in the main tool class.</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">gc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">string</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.aedt_objects</span> <span class=\"kn\">import</span> <span class=\"n\">AedtObjects</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">DesignSolution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">HFSSDesignSolution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">IcepakDesignSolution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">Maxwell2DDesignSolution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">RmXprtDesignSolution</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">model_names</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">solutions_defaults</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Variables</span> <span class=\"kn\">import</span> <span class=\"n\">DataSet</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Variables</span> <span class=\"kn\">import</span> <span class=\"n\">VariableManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Variables</span> <span class=\"kn\">import</span> <span class=\"n\">decompose_variable_value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.desktop</span> <span class=\"kn\">import</span> <span class=\"n\">Desktop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.desktop</span> <span class=\"kn\">import</span> <span class=\"n\">exception_to_desktop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.desktop</span> <span class=\"kn\">import</span> <span class=\"n\">get_version_env_variable</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.desktop</span> <span class=\"kn\">import</span> <span class=\"n\">release_desktop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">AEDT_UNITS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">unit_system</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">variation_string_to_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">read_csv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">read_tab</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">read_xlsx</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">write_csv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.LoadAEDTFile</span> <span class=\"kn\">import</span> <span class=\"n\">load_entire_aedt_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Boundary</span> <span class=\"kn\">import</span> <span class=\"n\">BoundaryObject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Boundary</span> <span class=\"kn\">import</span> <span class=\"n\">MaxwellParameters</span>\n\n<span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">version_info</span><span class=\"o\">.</span><span class=\"n\">major</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">base64</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Design</span><span class=\"p\">(</span><span class=\"n\">AedtObjects</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains all functions and objects connected to the active project and design.</span>\n\n<span class=\"sd\">    This class is inherited in the caller application and is accessible through it (for</span>\n<span class=\"sd\">    example, ``hfss.method_name``.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    design_type : str</span>\n<span class=\"sd\">        Type of the design.</span>\n<span class=\"sd\">    project_name : str, optional</span>\n<span class=\"sd\">        Name of the project to select or the full path to the project</span>\n<span class=\"sd\">        or AEDTZ archive to open. The default is ``None``, in which</span>\n<span class=\"sd\">        case an attempt is made to get an active project. If no</span>\n<span class=\"sd\">        projects are present, an empty project is created.</span>\n<span class=\"sd\">    design_name : str, optional</span>\n<span class=\"sd\">        Name of the design to select. The default is ``None``, in</span>\n<span class=\"sd\">        which case an attempt is made to get an active design. If no</span>\n<span class=\"sd\">        designs are present, an empty design is created.</span>\n<span class=\"sd\">    solution_type : str, optional</span>\n<span class=\"sd\">        Solution type to apply to the design. The default is</span>\n<span class=\"sd\">        ``None``, in which case the default type is applied.</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``, in which case</span>\n<span class=\"sd\">        the active version or latest installed version is used.</span>\n<span class=\"sd\">    non_graphical : bool, optional</span>\n<span class=\"sd\">        Whether to run AEDT in non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT launches in graphical mode.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the</span>\n<span class=\"sd\">        machine. The default is ``True``.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to release AEDT on exit. The default is ``False``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to enable the student version of AEDT. The default</span>\n<span class=\"sd\">        is ``False``.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Only used when ``new_desktop_session = False``, specifies by process ID which instance</span>\n<span class=\"sd\">        of Electronics Desktop to point PyAEDT at.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">pyaedt_details</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;      pyaedt API</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">pyaedt_details</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;pyaedt running AEDT Version </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span><span class=\"p\">)</span>\n        <span class=\"n\">pyaedt_details</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;Running </span><span class=\"si\">{}</span><span class=\"s2\"> tool in AEDT</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span><span class=\"p\">)</span>\n        <span class=\"n\">pyaedt_details</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;Solution Type: </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">)</span>\n        <span class=\"n\">pyaedt_details</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;Project Name: </span><span class=\"si\">{}</span><span class=\"s2\"> Design Name </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"n\">pyaedt_details</span> <span class=\"o\">+=</span> <span class=\"s1\">&#39;Project Path: &quot;</span><span class=\"si\">{}</span><span class=\"s1\">&quot; </span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">pyaedt_details</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__exit__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ex_type</span><span class=\"p\">,</span> <span class=\"n\">ex_value</span><span class=\"p\">,</span> <span class=\"n\">ex_traceback</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">ex_type</span><span class=\"p\">:</span>\n            <span class=\"n\">exception_to_desktop</span><span class=\"p\">(</span><span class=\"n\">ex_value</span><span class=\"p\">,</span> <span class=\"n\">ex_traceback</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">expression</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">variable_value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">variable_value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"n\">project_name</span><span class=\"p\">,</span>\n            <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"n\">design_name</span><span class=\"p\">,</span>\n            <span class=\"c1\"># solution_type=solution_type if solution_type else self.solution_type,</span>\n            <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"n\">solution_type</span><span class=\"p\">,</span>\n            <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">aedt_version</span><span class=\"p\">,</span>\n            <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n            <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n            <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">student_version</span><span class=\"p\">,</span>\n            <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">machine</span><span class=\"p\">,</span>\n            <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">design_type</span><span class=\"p\">,</span>\n        <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_variables</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_dictionary</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"c1\"># Get Desktop from global Desktop Environment</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_dictionary</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boundaries</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_datasets</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_datasets</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">main_module</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span> <span class=\"o\">=</span> <span class=\"n\">close_on_exit</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;pyaedt_initialized&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">main_module</span><span class=\"p\">):</span>\n            <span class=\"n\">desktop</span> <span class=\"o\">=</span> <span class=\"n\">Desktop</span><span class=\"p\">(</span>\n                <span class=\"n\">specified_version</span><span class=\"p\">,</span>\n                <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n                <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n                <span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n                <span class=\"n\">student_version</span><span class=\"p\">,</span>\n                <span class=\"n\">machine</span><span class=\"p\">,</span>\n                <span class=\"n\">port</span><span class=\"p\">,</span>\n                <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span> <span class=\"o\">=</span> <span class=\"n\">main_module</span><span class=\"o\">.</span><span class=\"n\">aedt_logger</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">student_version</span> <span class=\"o\">=</span> <span class=\"n\">main_module</span><span class=\"o\">.</span><span class=\"n\">student_version</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">student_version</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">disable_bounding_box_sat</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mttime</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span> <span class=\"o\">=</span> <span class=\"n\">design_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span> <span class=\"o\">=</span> <span class=\"n\">main_module</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop_install_dir</span> <span class=\"o\">=</span> <span class=\"n\">main_module</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">GetVersion</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span> <span class=\"o\">=</span> <span class=\"n\">design_type</span>\n        <span class=\"k\">if</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span> <span class=\"o\">=</span> <span class=\"n\">HFSSDesignSolution</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span> <span class=\"o\">=</span> <span class=\"n\">IcepakDesignSolution</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Maxwell 2D&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span> <span class=\"o\">=</span> <span class=\"n\">Maxwell2DDesignSolution</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;RMxprtSolution&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ModelCreation&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span> <span class=\"o\">=</span> <span class=\"n\">RmXprtDesignSolution</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span> <span class=\"o\">=</span> <span class=\"n\">DesignSolution</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">_solution_type</span> <span class=\"o\">=</span> <span class=\"n\">solution_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span> <span class=\"o\">=</span> <span class=\"n\">solution_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"n\">project_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">design_name</span>\n        <span class=\"n\">AedtObjects</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">is_inherithed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Aedt Objects initialized&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span> <span class=\"o\">=</span> <span class=\"n\">VariableManager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_datasets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_datasets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># _mtime = self.project_time_stamp</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variable Manager initialized&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_datasets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Dictionary of Project Datasets.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        Dict[str, :class:`pyaedt.application.Variables.DataSet`]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_datasets</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_datasets</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_project_datasets</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_datasets</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_datasets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Dictionary of Design Datasets.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        Dict[str, :class:`pyaedt.application.Variables.DataSet`]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_datasets</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_datasets</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_design_datasets</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_datasets</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">boundaries</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design boundaries and excitations.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boundaries</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boundaries</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_boundaries_data</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_boundaries</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">odesktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;AEDT instance containing all projects and designs.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        Get the COM object representing the desktop.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.odesktop</span>\n<span class=\"sd\">        &lt;class &#39;win32com.client.CDispatch&#39;&gt;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__delitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Implement destructor with array name or index.&quot;&quot;&quot;</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_variables</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_post</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_materials</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parametrics</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimizations</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_native_components</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Logger for the design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.aedt_logger.AedtLogger`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span>\n\n    <span class=\"c1\"># TODO Project properties are set at the beginning</span>\n    <span class=\"c1\"># but after they are never updated along the different project steps.</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_properties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project properties.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of the project properties.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_properties</span>\n        <span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_timestamp_changed</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_properties</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">load_entire_aedt_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;aedt file load time </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_properties</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_properties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design properties.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">           Dictionary of the design properties.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">model_names</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">designs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"n\">model_names</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]]</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">designs</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                    <span class=\"k\">for</span> <span class=\"n\">design</span> <span class=\"ow\">in</span> <span class=\"n\">designs</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"n\">design</span><span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">:</span>\n                            <span class=\"k\">return</span> <span class=\"n\">design</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">designs</span><span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">:</span>\n                        <span class=\"k\">return</span> <span class=\"n\">designs</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">aedt_version_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;AEDT version.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Version of AEDT.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetVersion()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetVersion</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">get_version_env_variable</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the parent AEDT design.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetName</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.RenameDesignInstance</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        Set the design name.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.design_name = &#39;new_design&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@design_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">new_name</span><span class=\"p\">:</span>\n            <span class=\"n\">new_name</span> <span class=\"o\">=</span> <span class=\"n\">new_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">RenameDesignInstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">)</span>\n        <span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>\n        <span class=\"n\">timestep</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n        <span class=\"k\">while</span> <span class=\"n\">new_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetDesigns</span><span class=\"p\">())]:</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">timestep</span><span class=\"p\">)</span>\n            <span class=\"n\">timeout</span> <span class=\"o\">-=</span> <span class=\"n\">timestep</span>\n            <span class=\"k\">assert</span> <span class=\"n\">timeout</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of the designs.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.GetTopDesignList()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">deslist</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetTopDesignList</span><span class=\"p\">())</span>\n        <span class=\"n\">updateddeslist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">deslist</span><span class=\"p\">:</span>\n            <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;[^;]+$&quot;</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n            <span class=\"n\">updateddeslist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">updateddeslist</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design type.</span>\n\n<span class=\"sd\">        Options are ``&quot;Circuit Design&quot;``, ``&quot;Emit&quot;``, ``&quot;HFSS&quot;``,</span>\n<span class=\"sd\">        ``&quot;HFSS 3D Layout Design&quot;``, ``&quot;Icepak&quot;``, ``&quot;Maxwell 2D&quot;``,</span>\n<span class=\"sd\">        ``&quot;Maxwell 3D&quot;``, ``&quot;Maxwell Circuit&quot;``, ``&quot;Mechanical&quot;``, ``&quot;ModelCreation&quot;``,</span>\n<span class=\"sd\">        ``&quot;Q2D Extractor&quot;``, ``&quot;Q3D Extractor&quot;``, ``&quot;RMxprtSolution&quot;``,</span>\n<span class=\"sd\">        and ``&quot;Twin Builder&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Type of the design. See above for a list of possible return values.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the project.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.GetName</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of projects.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetProjectList</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetProjectList</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project path.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Path to the project.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.GetPath</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetPath</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_time_stamp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return Project time stamp.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span><span class=\"p\">):</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_time_stamp</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">getmtime</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_file</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_time_stamp</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">return</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_time_stamp</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_timestamp_changed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return a bool if time stamp changed or not.&quot;&quot;&quot;</span>\n        <span class=\"n\">old_time</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">_project_time_stamp</span>\n        <span class=\"k\">return</span> <span class=\"n\">old_time</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_time_stamp</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project name and path.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute name and path for the project.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lock_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Lock file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute name and path for the project&#39;s lock file.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt.lock&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">results_directory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Results directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``aedtresults`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedtresults&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solution_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Solution type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Type of the solution.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetSolutionType</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetSolutionType</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">solution_type</span>\n\n    <span class=\"nd\">@solution_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solution_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">soltype</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">=</span> <span class=\"n\">soltype</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">valid_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Valid design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when the project and design exists, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">personallib</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;PersonalLib directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``PersonalLib`` directory.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetPersonalLibDirectory</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetPersonalLibDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">userlib</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;UserLib directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``UserLib`` directory.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetUserLibDirectory</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetUserLibDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">syslib</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;SysLib directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``SysLib`` directory.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetLibraryDirectory</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetLibraryDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">src_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Source directory for Python.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``python`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pyaedt_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;PyAEDT directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Full absolute path for the ``pyaedt`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">src_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;..&quot;</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">library_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Library list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of libraries: ``[syslib, userlib, personallib]``.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">syslib</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">userlib</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">personallib</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">temp_directory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Path to the temporary directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``temp`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetTempDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">toolkit_directory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Path to the toolkit directory.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``pyaedt`` directory for this project.</span>\n<span class=\"sd\">            If this directory does not exist, it is created.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">toolkit_directory</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.pyaedt&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_rpc_session</span><span class=\"p\">:</span>\n            <span class=\"n\">toolkit_directory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.pyaedt&quot;</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_rpc_session</span><span class=\"o\">.</span><span class=\"n\">filemanager</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">toolkit_directory</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"n\">toolkit_directory</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">toolkit_directory</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">:</span>\n                <span class=\"n\">toolkit_directory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">results_directory</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">toolkit_directory</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">working_directory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Path to the working directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">             Full absolute path for the project&#39;s working directory.</span>\n<span class=\"sd\">             If this directory does not exist, it is created.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">working_directory</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">toolkit_directory</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_rpc_session</span><span class=\"p\">:</span>\n            <span class=\"n\">working_directory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">toolkit_directory</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_rpc_session</span><span class=\"o\">.</span><span class=\"n\">filemanager</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">working_directory</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isdir</span><span class=\"p\">(</span><span class=\"n\">working_directory</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">working_directory</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">:</span>\n                <span class=\"n\">working_directory</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">toolkit_directory</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.results&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">working_directory</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">default_solution_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Default solution type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Default for the solution type.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">solutions_defaults</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_find_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">activedes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"n\">valids</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n                <span class=\"n\">des</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">des</span><span class=\"p\">,</span> <span class=\"s2\">&quot;GetDesignType&quot;</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">des</span><span class=\"o\">.</span><span class=\"n\">GetDesignType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Twin Builder&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;EMIT&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">]:</span>\n                        <span class=\"n\">valids</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                    <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span><span class=\"p\">:</span>\n                        <span class=\"n\">valids</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                    <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span> <span class=\"ow\">in</span> <span class=\"n\">des</span><span class=\"o\">.</span><span class=\"n\">GetSolutionType</span><span class=\"p\">():</span>\n                        <span class=\"n\">valids</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">valids</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;No consistent unique design is present. Inserting a new design.&quot;</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">activedes</span> <span class=\"o\">=</span> <span class=\"n\">valids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Active Design set to </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">valids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"c1\"># legacy support for version &lt; 2021.2</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetDesign</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_design_consistency</span><span class=\"p\">():</span>\n                <span class=\"n\">count_consistent_designs</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                <span class=\"k\">for</span> <span class=\"n\">des</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">des</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_design_consistency</span><span class=\"p\">():</span>\n                        <span class=\"n\">count_consistent_designs</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                        <span class=\"n\">activedes</span> <span class=\"o\">=</span> <span class=\"n\">des</span>\n                <span class=\"k\">if</span> <span class=\"n\">count_consistent_designs</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;No consistent unique design is present. Inserting a new design.&quot;</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Active Design set to </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">activedes</span><span class=\"p\">))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">activedes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Active design is set to </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;No design is present. Inserting a new design.&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">activedes</span><span class=\"p\">,</span> <span class=\"n\">warning_msg</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">odesign</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Design object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.SetActiveDesign</span>\n<span class=\"sd\">        &gt;&gt;&gt; oProject.InsertDesign</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span>\n\n    <span class=\"nd\">@odesign</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">odesign</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">des_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">des_name</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_assert_consistent_design_type</span><span class=\"p\">(</span><span class=\"n\">des_name</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">des_name</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"n\">des_name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">activedes</span><span class=\"p\">,</span> <span class=\"n\">warning_msg</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_find_design</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">activedes</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">activedes</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">warning_msg</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span>\n\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">warning_msg</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_temp_solution_type</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oproject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project property.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">            Project object</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetActiveProject</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.SetActiveProject</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.NewProject</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span>\n\n    <span class=\"nd\">@oproject</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oproject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">proj_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">proj_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;No project is defined. Project </span><span class=\"si\">{}</span><span class=\"s2\"> exists and has been read.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">proj_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetProjectList</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;.aedtz&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">proj_name</span><span class=\"p\">:</span>\n                    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_generate_unique_project_name</span><span class=\"p\">()</span>\n\n                    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">RestoreProjectArchive</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n                    <span class=\"n\">proj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Archive </span><span class=\"si\">{}</span><span class=\"s2\"> has been restored to project </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">,</span> <span class=\"n\">proj</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()))</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;.def&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">proj_name</span> <span class=\"ow\">or</span> <span class=\"n\">proj_name</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;.aedb&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">oTool</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetTool</span><span class=\"p\">(</span><span class=\"s2\">&quot;ImportExport&quot;</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;.def&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">proj_name</span><span class=\"p\">:</span>\n                        <span class=\"n\">oTool</span><span class=\"o\">.</span><span class=\"n\">ImportEDB</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">oTool</span><span class=\"o\">.</span><span class=\"n\">ImportEDB</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;edb.def&quot;</span><span class=\"p\">))</span>\n                    <span class=\"n\">proj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n                    <span class=\"n\">proj</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;EDB folder </span><span class=\"si\">%s</span><span class=\"s2\"> has been imported to project </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">proj_name</span><span class=\"p\">,</span> <span class=\"n\">proj</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span>\n                        <span class=\"n\">proj_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.lock&quot;</span>\n                    <span class=\"p\">),</span> <span class=\"s2\">&quot;Project is locked. Close or remove the lock before proceeding.&quot;</span>\n                    <span class=\"n\">proj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">OpenProject</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project </span><span class=\"si\">%s</span><span class=\"s2\"> has been opened.&quot;</span><span class=\"p\">,</span> <span class=\"n\">proj</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())</span>\n                    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"n\">proj</span>\n            <span class=\"k\">elif</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">force_error_on_missing_project</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;.aedt&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">proj_name</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project doesn&#39;t exists. Check it and retry.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">NewProject</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;.aedt&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">proj_name</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">Rename</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">Rename</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"n\">proj_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project </span><span class=\"si\">%s</span><span class=\"s2\"> has been created.&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">NewProject</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project </span><span class=\"si\">%s</span><span class=\"s2\"> has been created.&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">desktop_install_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;AEDT installation directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            AEDT installation directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop_install_dir</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_oo_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the Object Oriented AEDT Properties names.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedt_object : object</span>\n<span class=\"sd\">            AEDT Object on which search for property. It can be any oProperty (ex. oDesign).</span>\n<span class=\"sd\">        object_name : str, optional</span>\n<span class=\"sd\">            Path to the object list. Example `&quot;DesignName\\\\Boundaries&quot;`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            Values returned by method if any.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">object_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">aedt_object</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">aedt_object</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">()</span>\n\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_oo_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the Object Oriented AEDT Object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedt_object : object</span>\n<span class=\"sd\">            AEDT Object on which search for property. It can be any oProperty (ex. oDesign).</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            Path to the object list. Example `&quot;DesginName\\Boundaries&quot;`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        object</span>\n<span class=\"sd\">            Aedt Object if Any.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">aedt_object</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_oo_properties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the Object Oriented AEDT Object Properties.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedt_object : object</span>\n<span class=\"sd\">            AEDT Object on which search for property. It can be any oProperty (ex. oDesign).</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            Path to the object list. Example `&quot;DesginName\\Boundaries&quot;`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            Values returned by method if any.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">aedt_object</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_oo_property_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">prop_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the Object Oriented AEDT Object Properties.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        aedt_object : object</span>\n<span class=\"sd\">            AEDT Object on which search for property. It can be any oProperty (ex. oDesign).</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            Path to the object list. Example `&quot;DesginName\\Boundaries&quot;`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str, float, bool</span>\n<span class=\"sd\">            Values returned by method if any.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">aedt_object</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"n\">prop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_profile</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export a solution profile to a PROF file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name : str</span>\n<span class=\"sd\">            Setup name. For example, ``&#39;Setup1&#39;``.</span>\n<span class=\"sd\">        variation_string : str</span>\n<span class=\"sd\">            Variation string with values. For example, ``&#39;radius=3mm&#39;``.</span>\n<span class=\"sd\">        file_path : str, optional</span>\n<span class=\"sd\">            Full path to the PROF file. The default is ``None``, in which case</span>\n<span class=\"sd\">            the working directory is used.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            File path if created.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ExportProfile</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">file_path</span><span class=\"p\">:</span>\n            <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Profile&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.prop&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">variation_string</span><span class=\"p\">:</span>\n            <span class=\"n\">val_str</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">val_str</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">=</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">))</span>\n            <span class=\"n\">variation_string</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">val_str</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2D Extractor&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">setup</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">setup_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;CGDataBlock&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">:</span>\n                        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;CG&quot;</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CG&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exported Profile to file </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;RLDataBlock&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">:</span>\n                        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;RL&quot;</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RL&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exported Profile to file </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n                    <span class=\"k\">break</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">setup</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">setup_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;Cap&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">:</span>\n                        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;CG&quot;</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CG&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exported Profile to file </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;AC&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">:</span>\n                        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;ACRL&quot;</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC RL&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exported Profile to file </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;DC&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">:</span>\n                        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;DC&quot;</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DC RL&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exported Profile to file </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n\n                    <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportProfile</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exported Profile to file </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">file_path</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_info_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message_text</span><span class=\"p\">,</span> <span class=\"n\">message_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a type 0 &quot;Info&quot; message to either the global, active project, or active design</span>\n<span class=\"sd\">        level of the message manager tree.</span>\n\n<span class=\"sd\">        Also add an &quot;Info&quot; message to the logger if the handler is present.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        message_text : str</span>\n<span class=\"sd\">            Text to display as the info message.</span>\n<span class=\"sd\">        message_type : str, optional</span>\n<span class=\"sd\">            Level to add the &quot;Info&quot; message to. Options are ``&quot;Global&quot;``,</span>\n<span class=\"sd\">            ``&quot;Project&quot;``, and ``&quot;Design&quot;``. The default is ``None``,</span>\n<span class=\"sd\">            in which case the &quot;Info&quot; message gets added to the ``&quot;Design&quot;``</span>\n<span class=\"sd\">            level.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.info(&quot;Global info message&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.project.info(&quot;Project info message&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.design.info(&quot;Design info message&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`add_info_message` is deprecated. Use `logger.design_logger.info` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">message_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;project&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">message_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;design&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_warning_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message_text</span><span class=\"p\">,</span> <span class=\"n\">message_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a type 0 &quot;Warning&quot; message to either the global, active project, or active design</span>\n<span class=\"sd\">        level of the message manager tree.</span>\n\n<span class=\"sd\">        Also add an &quot;Warning&quot; message to the logger if the handler is present.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        message_text : str</span>\n<span class=\"sd\">            Text to display as the &quot;Warning&quot; message.</span>\n<span class=\"sd\">        message_type : str, optional</span>\n<span class=\"sd\">            Level to add the &quot;Warning&quot; message to. Options are ``&quot;Global&quot;``,</span>\n<span class=\"sd\">            ``&quot;Project&quot;``, and ``&quot;Design&quot;``. The default is ``None``,</span>\n<span class=\"sd\">            in which case the &quot;Warning&quot; message gets added to the ``&quot;Design&quot;``</span>\n<span class=\"sd\">            level.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.warning(&quot;Global warning message&quot;, &quot;Global&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.project.warning(&quot;Project warning message&quot;, &quot;Project&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.design.warning(&quot;Design warning message&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`add_warning_message` is deprecated. Use `logger.design_logger.warning` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">message_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;project&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">message_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;design&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_error_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message_text</span><span class=\"p\">,</span> <span class=\"n\">message_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a type 0 &quot;Error&quot; message to either the global, active project, or active design</span>\n<span class=\"sd\">        level of the message mmanager tree.</span>\n\n<span class=\"sd\">        Also add an &quot;Error&quot; message to the logger if the handler is present.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        message_text : str</span>\n<span class=\"sd\">            Text to display as the &quot;Error&quot; message.</span>\n<span class=\"sd\">        message_type : str, optional</span>\n<span class=\"sd\">            Level to add the &quot;Error&quot; message to. Options are ``&quot;Global&quot;``,</span>\n<span class=\"sd\">            ``&quot;Project&quot;``, and ``&quot;Design&quot;``. The default is ``None``,</span>\n<span class=\"sd\">            in which case the &quot;Error&quot; message gets added to the ``&quot;Design&quot;``</span>\n<span class=\"sd\">            level.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.error(&quot;Global error message&quot;, &quot;Global&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.project.error(&quot;Project error message&quot;, &quot;Project&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.logger.design.error(&quot;Design error message&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`add_error_message` is deprecated. Use `logger.design_logger.error` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">message_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;project&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">project</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">message_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;design&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">variable_manager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Variable manager for creating and managing project design and postprocessing variables.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.application.Variables.VariableManager</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_arg_with_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Dimension argument.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value :</span>\n\n<span class=\"sd\">        units : optional</span>\n<span class=\"sd\">             The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            String concatenating the value and unit.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">units</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0}{1}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0}{1}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">val</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_license_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">license_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Pool&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Change the license type between ``&quot;Pack&quot;`` and ``&quot;Pool&quot;``.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        license_type : str, optional</span>\n<span class=\"sd\">            Type of license type, which can be either ``&quot;Pack&quot;`` or ``&quot;Pool&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True``.</span>\n\n<span class=\"sd\">            .. note::</span>\n<span class=\"sd\">               Because of an API limitation, the command returns ``True`` even when the key is wrong.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.SetRegistryString</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryString</span><span class=\"p\">(</span><span class=\"s2\">&quot;Desktop/Settings/ProjectOptions/HPCLicenseType&quot;</span><span class=\"p\">,</span> <span class=\"n\">license_type</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_registry_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Change a specific registry key to a new value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        key_full_name : str</span>\n<span class=\"sd\">            Full name of the AEDT registry key.</span>\n<span class=\"sd\">        key_value : str, int</span>\n<span class=\"sd\">            Value for the AEDT registry key.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.SetRegistryString</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.SetRegistryInt</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryString</span><span class=\"p\">(</span><span class=\"n\">key_full_name</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key </span><span class=\"si\">%s</span><span class=\"s2\"> correctly changed.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error setting up Key </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryInt</span><span class=\"p\">(</span><span class=\"n\">key_full_name</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key </span><span class=\"si\">%s</span><span class=\"s2\"> correctly changed.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error setting up Key </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key value must be an integer or string.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_registry_key_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the value for the AEDT registry key if one exists.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        key_full_name : str</span>\n<span class=\"sd\">            Full name of the AEDT registry key.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">          Value for the AEDT registry key, otherwise ``&#39;&#39;``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetRegistryString</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetRegistryString</span><span class=\"p\">(</span><span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_registry_key_int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the value for the AEDT registry key if one exists.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        key_full_name : str</span>\n<span class=\"sd\">            Full name of the AEDT registry key.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the AEDT registry key, otherwise ``0``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetRegistryInt</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetRegistryInt</span><span class=\"p\">(</span><span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">check_beta_option_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">beta_option_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if a beta option is enabled.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        beta_option_name : str</span>\n<span class=\"sd\">            Name of the beta option to check. For example, ``&#39;SF43060_HFSS_PI&#39;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.GetRegistryString</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">while</span> <span class=\"n\">limit</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_registry_key_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;Desktop/Settings/ProjectOptions/EnabledBetaOptions/Item</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n            <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"ow\">and</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">beta_option_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">elif</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                <span class=\"n\">limit</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_is_object_oriented_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span> <span class=\"o\">&gt;=</span> <span class=\"s2\">&quot;2022.1&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_beta_option_enabled</span><span class=\"p\">(</span><span class=\"s2\">&quot;SF159726_SCRIPTOBJECT&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variables&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_active_dso_config_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">product_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">,</span> <span class=\"n\">config_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Local&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Change a specific registry key to a new value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        product_name : str, optional</span>\n<span class=\"sd\">            Name of the tool to apply the active configuration to. The default is ``&quot;HFSS&quot;``.</span>\n<span class=\"sd\">        config_name : str, optional</span>\n<span class=\"sd\">            Name of the configuration to apply. The default is ``&quot;Local&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.SetRegistryString</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_registry_key</span><span class=\"p\">(</span><span class=\"s2\">&quot;Desktop/ActiveDSOConfigurations/</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">product_name</span><span class=\"p\">),</span> <span class=\"n\">config_name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Configuration Changed correctly to </span><span class=\"si\">%s</span><span class=\"s2\"> for </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">config_name</span><span class=\"p\">,</span> <span class=\"n\">product_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error Setting Up Configuration </span><span class=\"si\">%s</span><span class=\"s2\"> for </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">config_name</span><span class=\"p\">,</span> <span class=\"n\">product_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_registry_from_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">registry_file</span><span class=\"p\">,</span> <span class=\"n\">make_active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Apply desktop registry settings from an ACT file.</span>\n\n<span class=\"sd\">        One way to get an ACF file is to export a configuration from the AEDT UI and then edit and reuse it.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        registry_file : str</span>\n<span class=\"sd\">            Full path to the ACF file.</span>\n<span class=\"sd\">        make_active : bool, optional</span>\n<span class=\"sd\">            Whether to set the imported configuration as active. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.SetRegistryFromFile</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryFromFile</span><span class=\"p\">(</span><span class=\"n\">registry_file</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">make_active</span><span class=\"p\">:</span>\n                <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">registry_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                        <span class=\"n\">stripped_line</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                        <span class=\"k\">if</span> <span class=\"s2\">&quot;ConfigName&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">stripped_line</span><span class=\"p\">:</span>\n                            <span class=\"n\">config_name</span> <span class=\"o\">=</span> <span class=\"n\">stripped_line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span>\n                        <span class=\"k\">elif</span> <span class=\"s2\">&quot;DesignType&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">stripped_line</span><span class=\"p\">:</span>\n                            <span class=\"n\">design_type</span> <span class=\"o\">=</span> <span class=\"n\">stripped_line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span>\n                            <span class=\"k\">break</span>\n                    <span class=\"k\">if</span> <span class=\"n\">design_type</span> <span class=\"ow\">and</span> <span class=\"n\">config_name</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_active_dso_config_name</span><span class=\"p\">(</span><span class=\"n\">design_type</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">config_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_optimetrics_variable_args</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">arg</span><span class=\"p\">,</span>\n        <span class=\"n\">optimetrics_type</span><span class=\"p\">,</span>\n        <span class=\"n\">variable_name</span><span class=\"p\">,</span>\n        <span class=\"n\">min_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">max_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Optimetrics variable arguments.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        arg :</span>\n\n<span class=\"sd\">        optimetrics_type :</span>\n\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        min_val : optional</span>\n<span class=\"sd\">            Minimum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        max_val :  optional</span>\n<span class=\"sd\">            Maximum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        tolerance : optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        probability : optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        mean : optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        enable : bool, optional</span>\n<span class=\"sd\">            The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">variable_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variable </span><span class=\"si\">{}</span><span class=\"s2\"> does not exists.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">variable_name</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:ProjectVariableTab&quot;</span>\n            <span class=\"n\">propserver</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ProjectVariables&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:LocalVariableTab&quot;</span>\n            <span class=\"n\">propserver</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LocalVariables&quot;</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">variable_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"s2\">&quot;DefinitionParameterTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LocalVariables&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:DefinitionParameterTab&quot;</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:DefinitionParameterTab&quot;</span>\n                <span class=\"n\">propserver</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Instance:</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">optimetrics_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Included:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">enable</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">min_val</span><span class=\"p\">:</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Min:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">min_val</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">max_val</span><span class=\"p\">:</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Max:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">max_val</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">tolerance</span><span class=\"p\">:</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Tol:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tolerance</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">probability</span><span class=\"p\">:</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Prob:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">probability</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">mean</span><span class=\"p\">:</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mean:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"p\">)</span>\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"n\">propserver</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">]]]</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">activate_variable_statistical</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">probability</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Activate statitistical analysis for a variable and optionally set up ranges.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        min_val : optional</span>\n<span class=\"sd\">            Minimum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        max_val : optional</span>\n<span class=\"sd\">            Maximum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        tolerance : optional</span>\n<span class=\"sd\">            Tolerance value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        probability : optional</span>\n<span class=\"sd\">            Probability value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        mean :</span>\n<span class=\"sd\">            Mean value for the variable. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span>\n            <span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Statistical&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">,</span> <span class=\"n\">tolerance</span><span class=\"p\">,</span> <span class=\"n\">probability</span><span class=\"p\">,</span> <span class=\"n\">mean</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">activate_variable_optimization</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Activate optimization analysis for a variable and optionally set up ranges.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        min_val : optional</span>\n<span class=\"sd\">            Minimum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        max_val : optional</span>\n<span class=\"sd\">            Maximum value for the variable. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Optimization&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">variable_name</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">activate_variable_sensitivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Activate sensitivity analysis for a variable and optionally set up ranges.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        min_val : optional</span>\n<span class=\"sd\">            Minimum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        max_val : optional</span>\n<span class=\"sd\">            Maximum value for the variable. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Sensitivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">activate_variable_tuning</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Activate tuning analysis for a variable and optionally set up ranges.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        min_val : optional</span>\n<span class=\"sd\">            Minimum value for the variable. The default is ``None``.</span>\n<span class=\"sd\">        max_val : optional</span>\n<span class=\"sd\">            Maximum value for the variable. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tuning&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">deactivate_variable_statistical</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Deactivate the statistical analysis for a variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Statistical&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">deactivate_variable_optimization</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Deactivate the optimization analysis for a variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Optimization&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">deactivate_variable_sensitivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Deactivate the sensitivity analysis for a variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Sensitivity&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">deactivate_variable_tuning</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Deactivate the tuning analysis for a variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_optimetrics_variable_args</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tuning&quot;</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hidden_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the variable to a hidden or unhidden variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        value : bool, optional</span>\n<span class=\"sd\">            Whether to hide the variable. The default is ``True``, in which case the variable</span>\n<span class=\"sd\">            is hidden. When ``False,`` the variable is unhidden.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss[&quot;my_hidden_leaf&quot;] = &quot;15mm&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.make_hidden_variable(&quot;my_hidden_leaf&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hidden</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span>\n    <span class=\"k\">def</span> <span class=\"nf\">read_only_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the variable to a read-only or not read-only variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        value : bool, optional</span>\n<span class=\"sd\">            Whether the variable is read-only. The default is ``True``, in which case</span>\n<span class=\"sd\">            the variable is read-only. When ``False``, the variable is not read-only.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss[&quot;my_read_only_variable&quot;] = &quot;15mm&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.make_read_only_variable(&quot;my_read_only_variable&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">read_only</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_boundaries_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve boundary data.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        [:class:`pyaedt.modules.Boundary.BoundaryObject`]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">boundaries</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;BoundarySetup&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;BoundarySetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Boundaries&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;BoundarySetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Boundaries&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n                        <span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                            <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span>\n                                <span class=\"bp\">self</span><span class=\"p\">,</span>\n                                <span class=\"n\">ds</span><span class=\"p\">,</span>\n                                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;BoundarySetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Boundaries&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span>\n                                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;BoundarySetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Boundaries&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">][</span><span class=\"s2\">&quot;BoundType&quot;</span><span class=\"p\">],</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">)</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;MaxwellParameterSetup&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaxwellParameterSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MaxwellParameters&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">param</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;MaxwellParameters&quot;</span>\n                    <span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;MaxwellParameterSetup&quot;</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"n\">setup</span><span class=\"p\">][</span><span class=\"n\">param</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n                        <span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                            <span class=\"n\">MaxwellParameters</span><span class=\"p\">(</span>\n                                <span class=\"bp\">self</span><span class=\"p\">,</span>\n                                <span class=\"n\">ds</span><span class=\"p\">,</span>\n                                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaxwellParameterSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MaxwellParameters&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span>\n                                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaxwellParameterSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MaxwellParameters&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">][</span>\n                                    <span class=\"s2\">&quot;MaxwellParameterType&quot;</span>\n                                <span class=\"p\">],</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">)</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;ModelSetup&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;MotionSetupList&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModelSetup&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModelSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MotionSetupList&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">motion_list</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;MotionSetupList&quot;</span>\n                        <span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ModelSetup&quot;</span>\n                        <span class=\"c1\"># check moving part</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"n\">setup</span><span class=\"p\">][</span><span class=\"n\">motion_list</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n                            <span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                                <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span>\n                                    <span class=\"bp\">self</span><span class=\"p\">,</span>\n                                    <span class=\"n\">ds</span><span class=\"p\">,</span>\n                                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModelSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MotionSetupList&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span>\n                                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModelSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MotionSetupList&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">][</span><span class=\"s2\">&quot;MotionType&quot;</span><span class=\"p\">],</span>\n                                <span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                    <span class=\"k\">except</span><span class=\"p\">:</span>\n                        <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">for</span> <span class=\"n\">port</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oboundary</span><span class=\"o\">.</span><span class=\"n\">GetAllPortsList</span><span class=\"p\">():</span>\n                <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_port_info</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"p\">:</span>\n                    <span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">boundaries</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_ds_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">datas</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name :</span>\n\n<span class=\"sd\">        datas :</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">datas</span><span class=\"p\">[</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">numcol</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">numcol</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Coordinate&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">datas</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">datas</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinate&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"s2\">&quot;CoordPoint&quot;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"s2\">&quot;CoordPoint&quot;</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">numcol</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                    <span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"s2\">&quot;CoordPoint&quot;</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"s2\">&quot;CoordPoint&quot;</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">new_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">datas</span><span class=\"p\">[</span><span class=\"s2\">&quot;Points&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">numcol</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">datas</span><span class=\"p\">[</span><span class=\"s2\">&quot;Points&quot;</span><span class=\"p\">]),</span> <span class=\"n\">numcol</span><span class=\"p\">)]</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">new_list</span><span class=\"p\">:</span>\n                <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">numcol</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                    <span class=\"n\">z</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"n\">numcol</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">DataSet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">DataSet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_project_datasets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ProjectDatasets&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">datas</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ProjectDatasets&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">][</span>\n                    <span class=\"s2\">&quot;Coordinates&quot;</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">datasets</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_ds_data</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">,</span> <span class=\"n\">datas</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"n\">datasets</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_design_datasets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModelSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DesignDatasets&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">datas</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ModelSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DesignDatasets&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">][</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">datasets</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_ds_data</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">,</span> <span class=\"n\">datas</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"n\">datasets</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">close_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Close AEDT and release it.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">release_desktop</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">autosave_disable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Disable autosave in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.EnableAutoSave</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">EnableAutoSave</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">autosave_enable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable autosave in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.EnableAutoSave</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">EnableAutoSave</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">release_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">close_projects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">close_desktop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Release AEDT.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        close_projects : bool, optional</span>\n<span class=\"sd\">            Whether to close all projects. The default is ``True``.</span>\n<span class=\"sd\">        close_desktop : bool, optional</span>\n<span class=\"sd\">            Whether to close AEDT after releasing it. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">release_desktop</span><span class=\"p\">(</span><span class=\"n\">close_projects</span><span class=\"p\">,</span> <span class=\"n\">close_desktop</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">a</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;__&quot;</span><span class=\"p\">)]</span>\n        <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">gc</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">generate_temp_project_directory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">subdir_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generate a unique directory string to save a project to.</span>\n\n<span class=\"sd\">        This method creates a directory for storage of a project in the ``temp`` directory</span>\n<span class=\"sd\">        of the AEDT installation because this location is guaranteed to exist. If the ``name``</span>\n<span class=\"sd\">        parameter is defined, a subdirectory is added within the ``temp`` directory and a</span>\n<span class=\"sd\">        hash suffix is added to ensure that this directory is empty and has a unique name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        subdir_name : str</span>\n<span class=\"sd\">            Base name of the subdirectory to create in the ``temp`` directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Base name of the created subdirectory.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; m3d = Maxwell3d()</span>\n<span class=\"sd\">        &gt;&gt;&gt; proj_directory = m3d.generate_temp_project_directory(&quot;Example&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temp_directory</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">subdir_name</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Input argument &#39;subdir&#39; must be a string&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">dir_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">subdir_name</span><span class=\"p\">)</span>\n        <span class=\"n\">project_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"n\">dir_name</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">project_dir</span><span class=\"p\">):</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">project_dir</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">project_dir</span>\n        <span class=\"k\">except</span> <span class=\"ne\">OSError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">load_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_file</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">close_active_proj</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Open an AEDT project based on a project and optional design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_file : str</span>\n<span class=\"sd\">            Full path and name for the project.</span>\n<span class=\"sd\">        design_name : str, optional</span>\n<span class=\"sd\">            Design name. The default is ``None``.</span>\n<span class=\"sd\">        close_active_proj : bool, optional</span>\n<span class=\"sd\">            Whether to close the active project. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.OpenProject</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">proj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">OpenProject</span><span class=\"p\">(</span><span class=\"n\">project_file</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">close_active_proj</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_close_edb</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">proj</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_design</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"n\">proj</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_close_edb</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">close_edb</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_dataset1d_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"p\">,</span> <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a design dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        dsname : str</span>\n<span class=\"sd\">            Name of the dataset (without a prefix for a project dataset).</span>\n<span class=\"sd\">        xlist : list</span>\n<span class=\"sd\">            List of X-axis values for the dataset.</span>\n<span class=\"sd\">        ylist : list</span>\n<span class=\"sd\">            List of Y-axis values for the dataset.</span>\n<span class=\"sd\">        xunit : str, optional</span>\n<span class=\"sd\">            Units for the X axis. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        yunit : str, optional</span>\n<span class=\"sd\">            Units for the Y axis. The default is ``&quot;&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.application.Variables.DataSet`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.AddDataset</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddDataset</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span><span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"n\">xunit</span><span class=\"p\">,</span> <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"n\">yunit</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_dataset1d_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"p\">,</span> <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a project dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        dsname : str</span>\n<span class=\"sd\">            Name of dataset (without a prefix for a project dataset).</span>\n<span class=\"sd\">        xlist : list</span>\n<span class=\"sd\">            List of X-axis values for the dataset.</span>\n<span class=\"sd\">        ylist : list</span>\n<span class=\"sd\">            List of Y-axis values for the dataset.</span>\n<span class=\"sd\">        xunit : str, optional</span>\n<span class=\"sd\">            Units for the X axis. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        yunit : str, optional</span>\n<span class=\"sd\">            Units for the Y axis. The default is ``&quot;&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.application.Variables.DataSet`</span>\n<span class=\"sd\">            Dataset object when the dataset is created, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.AddDataset</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddDataset</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span><span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"n\">xunit</span><span class=\"p\">,</span> <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"n\">yunit</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_dataset3d</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">dsname</span><span class=\"p\">,</span>\n        <span class=\"n\">xlist</span><span class=\"p\">,</span>\n        <span class=\"n\">ylist</span><span class=\"p\">,</span>\n        <span class=\"n\">zlist</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">vlist</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">zunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">vunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a 3D dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        dsname : str</span>\n<span class=\"sd\">            Name of the dataset (without a prefix for a project dataset).</span>\n<span class=\"sd\">        xlist : list</span>\n<span class=\"sd\">            List of X-axis values for the dataset.</span>\n<span class=\"sd\">        ylist : list</span>\n<span class=\"sd\">            List of Y-axis values for the dataset.</span>\n<span class=\"sd\">        zylist : list, optional</span>\n<span class=\"sd\">            List of Z-axis values for a 3D dataset only. The default is ``None``.</span>\n<span class=\"sd\">        vylist : list, optional</span>\n<span class=\"sd\">            List of V-axis values for a 3D dataset only. The default is ``None``.</span>\n<span class=\"sd\">        xunit : str, optional</span>\n<span class=\"sd\">            Units for the X axis. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        yunit : str, optional</span>\n<span class=\"sd\">            Units for the Y axis. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        zunit : str, optional</span>\n<span class=\"sd\">            Units for the Z axis for a 3D dataset only. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        vunit : str, optional</span>\n<span class=\"sd\">            Units for the V axis for a 3D dataset only. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        is_project_dataset : bool, optional</span>\n<span class=\"sd\">            Whether it is a project data set. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.application.Variables.DataSet`</span>\n<span class=\"sd\">            Dataset object when the dataset is created, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddDataset</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">dsname</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;$&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">dsname</span> <span class=\"o\">=</span> <span class=\"n\">dsname</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n            <span class=\"n\">is_project_dataset</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">is_project_dataset</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span>\n            <span class=\"n\">dsname</span><span class=\"o\">=</span><span class=\"n\">dsname</span><span class=\"p\">,</span>\n            <span class=\"n\">xlist</span><span class=\"o\">=</span><span class=\"n\">xlist</span><span class=\"p\">,</span>\n            <span class=\"n\">ylist</span><span class=\"o\">=</span><span class=\"n\">ylist</span><span class=\"p\">,</span>\n            <span class=\"n\">zlist</span><span class=\"o\">=</span><span class=\"n\">zlist</span><span class=\"p\">,</span>\n            <span class=\"n\">vlist</span><span class=\"o\">=</span><span class=\"n\">vlist</span><span class=\"p\">,</span>\n            <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"n\">xunit</span><span class=\"p\">,</span>\n            <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"n\">yunit</span><span class=\"p\">,</span>\n            <span class=\"n\">zunit</span><span class=\"o\">=</span><span class=\"n\">zunit</span><span class=\"p\">,</span>\n            <span class=\"n\">vunit</span><span class=\"o\">=</span><span class=\"n\">vunit</span><span class=\"p\">,</span>\n            <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"n\">is_project_dataset</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_dataset1d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Import a 1D dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full path and name for the TAB file.</span>\n<span class=\"sd\">        dsname : str, optional</span>\n<span class=\"sd\">            Name of the dataset. The default is the file name.</span>\n<span class=\"sd\">        is_project_dataset : bool, optional</span>\n<span class=\"sd\">            Whether it is a project data set. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.application.Variables.DataSet`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.AddDataset</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddDataset</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n        <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n        <span class=\"n\">header_list</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">cont</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"n\">header_list</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;\\[([A-Za-z0-9_]+)\\]&quot;</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n                <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"n\">cont</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">cont</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"n\">xlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">ylist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">points</span><span class=\"p\">:</span>\n            <span class=\"n\">xlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n            <span class=\"n\">ylist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dsname</span><span class=\"p\">:</span>\n            <span class=\"n\">dsname</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">dsname</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;$&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">dsname</span> <span class=\"o\">=</span> <span class=\"n\">dsname</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n            <span class=\"n\">is_project_dataset</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span>\n            <span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"n\">is_project_dataset</span><span class=\"p\">,</span> <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_dataset3d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8-sig&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Import a 3D dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full path and name for the tab/csv/xlsx file.</span>\n<span class=\"sd\">        dsname : str, optional</span>\n<span class=\"sd\">            Name of the dataset. The default is the file name.</span>\n<span class=\"sd\">        encoding : str, optional</span>\n<span class=\"sd\">            File encoding to be provided for csv.</span>\n<span class=\"sd\">        is_project_dataset : bool, optional</span>\n<span class=\"sd\">            Whether it is a project data set. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.application.Variables.DataSet`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.AddDataset</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">index_of_dot</span> <span class=\"o\">=</span> <span class=\"n\">filename</span><span class=\"o\">.</span><span class=\"n\">rfind</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">file_extension</span> <span class=\"o\">=</span> <span class=\"n\">filename</span><span class=\"p\">[</span><span class=\"n\">index_of_dot</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span>\n        <span class=\"n\">xlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">ylist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">zlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">vlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">file_extension</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;xlsx&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;You need pandas and openpyxl library installed for reading excel files&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">read_xlsx</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">):</span>\n                <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">([</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">))])</span>\n                <span class=\"n\">xlist</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">((</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">)</span>\n                <span class=\"n\">ylist</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">((</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">)</span>\n                <span class=\"n\">zlist</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">((</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"mi\">2</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">)</span>\n                <span class=\"n\">vlist</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">((</span><span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:,</span> <span class=\"mi\">3</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Pandas is not installed. Either install pandas or save the file as .csv or .tab.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">file_extension</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;csv&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"p\">)</span>\n            <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"s2\">&quot; &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n                <span class=\"n\">xlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n                <span class=\"n\">ylist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n                <span class=\"n\">zlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n                <span class=\"n\">vlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]))</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">file_extension</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;tab&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">read_tab</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n            <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n                <span class=\"n\">xlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n                <span class=\"n\">ylist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n                <span class=\"n\">zlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">]))</span>\n                <span class=\"n\">vlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()[</span><span class=\"mi\">3</span><span class=\"p\">]))</span>\n\n        <span class=\"n\">header_list</span> <span class=\"o\">=</span> <span class=\"n\">header</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n        <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">cont</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"n\">header_list</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;\\[([A-Za-z0-9_]+)\\]&quot;</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n                <span class=\"n\">units</span><span class=\"p\">[</span><span class=\"n\">cont</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">cont</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dsname</span><span class=\"p\">:</span>\n            <span class=\"n\">dsname</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">dsname</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;$&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">dsname</span> <span class=\"o\">=</span> <span class=\"n\">dsname</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n            <span class=\"n\">is_project_dataset</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">is_project_dataset</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span>\n            <span class=\"n\">dsname</span><span class=\"p\">,</span>\n            <span class=\"n\">xlist</span><span class=\"p\">,</span>\n            <span class=\"n\">ylist</span><span class=\"p\">,</span>\n            <span class=\"n\">zlist</span><span class=\"p\">,</span>\n            <span class=\"n\">vlist</span><span class=\"p\">,</span>\n            <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"n\">is_project_dataset</span><span class=\"p\">,</span>\n            <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n            <span class=\"n\">zunit</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n            <span class=\"n\">vunit</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_dataset</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">dsname</span><span class=\"p\">,</span>\n        <span class=\"n\">xlist</span><span class=\"p\">,</span>\n        <span class=\"n\">ylist</span><span class=\"p\">,</span>\n        <span class=\"n\">zlist</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">vlist</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">zunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">vunit</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a dataset.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        dsname : str</span>\n<span class=\"sd\">            Name of the dataset (without a prefix for a project dataset).</span>\n<span class=\"sd\">        xlist : list</span>\n<span class=\"sd\">            List of X-axis values for the dataset.</span>\n<span class=\"sd\">        ylist : list</span>\n<span class=\"sd\">            List of Y-axis values for the dataset.</span>\n<span class=\"sd\">        zlist : list, optional</span>\n<span class=\"sd\">            List of Z-axis values for a 3D dataset only. The default is ``None``.</span>\n<span class=\"sd\">        vlist : list, optional</span>\n<span class=\"sd\">            List of V-axis values for a 3D dataset only. The default is ``None``.</span>\n<span class=\"sd\">        is_project_dataset : bool, optional</span>\n<span class=\"sd\">            Whether it is a project data set. The default is ``True``.</span>\n<span class=\"sd\">        xunit : str, optional</span>\n<span class=\"sd\">            Units for the X axis. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        yunit : str, optional</span>\n<span class=\"sd\">            Units for the Y axis. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        zunit : str, optional</span>\n<span class=\"sd\">            Units for the Z axis for a 3D dataset only. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        vunit : str, optional</span>\n<span class=\"sd\">            Units for the V axis for a 3D dataset only. The default is ``&quot;&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.application.Variables.DataSet`</span>\n<span class=\"sd\">            Dataset object when the dataset is created, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.AddDataset</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddDataset</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dataset_exists</span><span class=\"p\">(</span><span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">is_project_dataset</span><span class=\"p\">:</span>\n                <span class=\"n\">dsname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"o\">+</span> <span class=\"n\">dsname</span>\n            <span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">DataSet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"p\">,</span> <span class=\"n\">zlist</span><span class=\"p\">,</span> <span class=\"n\">vlist</span><span class=\"p\">,</span> <span class=\"n\">xunit</span><span class=\"p\">,</span> <span class=\"n\">yunit</span><span class=\"p\">,</span> <span class=\"n\">zunit</span><span class=\"p\">,</span> <span class=\"n\">vunit</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Dataset </span><span class=\"si\">%s</span><span class=\"s2\"> already exists&quot;</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_project_dataset</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_datasets</span><span class=\"p\">[</span><span class=\"n\">dsname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ds</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_datasets</span><span class=\"p\">[</span><span class=\"n\">dsname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ds</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Dataset </span><span class=\"si\">%s</span><span class=\"s2\"> created successfully.&quot;</span><span class=\"p\">,</span> <span class=\"n\">dsname</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">ds</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dataset_exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">is_project_dataset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if a dataset exists.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name :str</span>\n<span class=\"sd\">            Name of the dataset (without a prefix for a project dataset).</span>\n<span class=\"sd\">        is_project_dataset : bool, optional</span>\n<span class=\"sd\">            Whether it is a project data set. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_project_dataset</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"o\">+</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_datasets</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Dataset </span><span class=\"si\">%s</span><span class=\"s2\">$ exists.&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"c1\"># self.oproject.ExportDataSet(&quot;$&quot;+name, os.path.join(self.temp_directory, &quot;ds.tab&quot;))</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">is_project_dataset</span> <span class=\"ow\">and</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_datasets</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Dataset </span><span class=\"si\">%s</span><span class=\"s2\"> exists.&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"c1\"># self.odesign.ExportDataSet(name, os.path.join(self.temp_directory, &quot;ds.tab&quot;))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Dataset </span><span class=\"si\">%s</span><span class=\"s2\"> doesn&#39;t exist.&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_design_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set Design Settings.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        settings : dict</span>\n<span class=\"sd\">            Dictionary of settings with value to apply.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Design Settings Data&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">SetDesignSettings</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_automatically_use_causal_materials</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">lossy_dielectric</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable or disable the automatic use of causal materials for lossy dielectrics.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        lossy_dielectric : bool, optional</span>\n<span class=\"sd\">            Whether to enable causal materials.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetDesignSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">lossy_dielectric</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Enabling Automatic use of causal materials&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Disabling Automatic use of causal materials&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_design_settings</span><span class=\"p\">({</span><span class=\"s2\">&quot;Calculate Lossy Dielectrics&quot;</span><span class=\"p\">:</span> <span class=\"n\">lossy_dielectric</span><span class=\"p\">})</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_material_override</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material_override</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable or disable the material override in the project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        material_override : bool, optional</span>\n<span class=\"sd\">            Whether to enable the material override.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetDesignSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">material_override</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Enabling Material Override&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Disabling Material Override&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_design_settings</span><span class=\"p\">({</span><span class=\"s2\">&quot;Allow Material Override&quot;</span><span class=\"p\">:</span> <span class=\"n\">material_override</span><span class=\"p\">})</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_validation_settings</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">entity_check_level</span><span class=\"o\">=</span><span class=\"s2\">&quot;Strict&quot;</span><span class=\"p\">,</span> <span class=\"n\">ignore_unclassified</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">skip_intersections</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the validation design settings.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        entity_check_level : str, optional</span>\n<span class=\"sd\">            Entity check level. The default is ``&quot;Strict&quot;``.</span>\n<span class=\"sd\">        ignore_unclassified : bool, optional</span>\n<span class=\"sd\">            Whether to ignore unclassified elements. The default is ``False``.</span>\n<span class=\"sd\">        skip_intersections : bool, optional</span>\n<span class=\"sd\">            Whether to skip intersections. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetDesignSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Changing the validation design settings&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">SetDesignSettings</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Design Settings Data&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Model Validation Settings&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EntityCheckLevel:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">entity_check_level</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IgnoreUnclassifiedObjects:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">ignore_unclassified</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SkipIntersectionChecks:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">skip_intersections</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">clean_proj_folder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete a project folder.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        directory : str, optionl</span>\n<span class=\"sd\">            Name of the directory. The default is ``None``, in which case the active project is</span>\n<span class=\"sd\">            deleted from the ``aedtresults`` directory.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the project. The default is ``None``, in which case the data for the</span>\n<span class=\"sd\">            active project is deleted.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">directory</span><span class=\"p\">:</span>\n            <span class=\"n\">directory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">results_directory</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Cleanup folder </span><span class=\"si\">%s</span><span class=\"s2\"> from project </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">):</span>\n            <span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">rmtree</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">):</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project Directory cleaned&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copy_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">dest</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Copy the project to another destination.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           This method saves the project before copying it.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        path : str</span>\n<span class=\"sd\">            Path to save a copy of the project to.</span>\n<span class=\"sd\">        dest :</span>\n<span class=\"sd\">            Name to give the project in the new destination.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.SaveAs</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Copy AEDT Project &quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SaveAs</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">dest</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_new_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">proj_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a project within AEDT.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        proj_name :</span>\n<span class=\"sd\">            Name of the project.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.NewProject</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Creating new Project &quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">prj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">NewProject</span><span class=\"p\">(</span><span class=\"n\">proj_name</span><span class=\"p\">)</span>\n        <span class=\"n\">prj_name</span> <span class=\"o\">=</span> <span class=\"n\">prj</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"n\">prj_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">close_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">saveproject</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Close an AEDT project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the project. The default is ``None``, in which case the</span>\n<span class=\"sd\">            active project is closed.</span>\n<span class=\"sd\">        saveproject : bool, optional</span>\n<span class=\"sd\">            Whether to save the project before closing it. The default is</span>\n<span class=\"sd\">            ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.CloseProject</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">legacy_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_list</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project not found. &quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Closing the AEDT Project </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n        <span class=\"n\">oproj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">proj_path</span> <span class=\"o\">=</span> <span class=\"n\">oproj</span><span class=\"o\">.</span><span class=\"n\">GetPath</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">saveproject</span><span class=\"p\">:</span>\n            <span class=\"n\">oproj</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">CloseProject</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">legacy_name</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_variables</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">legacy_name</span><span class=\"p\">)</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">proj_path</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt.lock&quot;</span><span class=\"p\">)):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project </span><span class=\"si\">{}</span><span class=\"s2\"> closed correctly&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n                <span class=\"k\">break</span>\n            <span class=\"k\">elif</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"n\">timeout</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Lock File still exists.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">break</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mf\">0.2</span>\n                <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">fallback_design</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete a design from the current project.</span>\n\n<span class=\"sd\">        .. warning::</span>\n<span class=\"sd\">           This method does not work from the toolkit.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the design. The default is ``None``, in which case</span>\n<span class=\"sd\">            the active design is deleted.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.DeleteDesign</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">DeleteDesign</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">if</span> <span class=\"n\">fallback_design</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n            <span class=\"n\">fallback_design</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetDesigns</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">:])]</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_active_design</span><span class=\"p\">(</span><span class=\"n\">fallback_design</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;posix&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_variables</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;posix&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_variables</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_separator</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">separator_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete a separator from either the active project or a design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        separator_name : str</span>\n<span class=\"sd\">            Name of the separator.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.ChangeProperty</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span><span class=\"o\">.</span><span class=\"n\">delete_separator</span><span class=\"p\">(</span><span class=\"n\">separator_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sVarName</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete a variable.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sVarName :</span>\n<span class=\"sd\">            Name of the variable.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.ChangeProperty</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">delete_variable</span><span class=\"p\">(</span><span class=\"n\">sVarName</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a design of a specified type.</span>\n\n<span class=\"sd\">        The default design type is taken from the derived application class.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        design_name : str, optional</span>\n<span class=\"sd\">            Name of the design. The default is ``None``, in which case the</span>\n<span class=\"sd\">            default design name is ``&lt;Design-Type&gt;Design&lt;_index&gt;``. If the</span>\n<span class=\"sd\">            given or default design name is in use, then an underscore and</span>\n<span class=\"sd\">            index is added to ensure that the design name is unique.</span>\n<span class=\"sd\">            The inserted object is assigned to the ``Design`` object.</span>\n<span class=\"sd\">        solution_type : str, optional</span>\n<span class=\"sd\">            Solution type to apply to the design. The default is</span>\n<span class=\"sd\">            ``None``, in which case the default type is applied.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the design.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.InsertDesign</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_close_edb</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_design</span><span class=\"p\">(</span>\n            <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"k\">else</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"n\">design_name</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"n\">solution_type</span> <span class=\"k\">if</span> <span class=\"n\">solution_type</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_insert_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">assert</span> <span class=\"n\">design_type</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">design_types</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Invalid design type for insert: </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">design_type</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># self.save_project() ## Commented because it saves a Projectxxx.aedt when launched on an empty Desktop</span>\n        <span class=\"n\">unique_design_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_generate_unique_design_name</span><span class=\"p\">(</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;RMxprtSolution&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">new_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span><span class=\"s2\">&quot;RMxprt&quot;</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Inner-Rotor Induction Machine&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ModelCreation&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">new_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;RMxprt&quot;</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model Creation Inner-Rotor Induction Machine&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">new_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span><span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SteadyState TemperatureAndFlow&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">new_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span><span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS&quot;</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span> <span class=\"o\">&lt;</span> <span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">new_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span><span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DrivenModal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">new_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span>\n                    <span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_solution_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span>\n                <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Added design &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39; of type </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">unique_design_name</span><span class=\"p\">,</span> <span class=\"n\">design_type</span><span class=\"p\">)</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">new_design</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"n\">new_design</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_generate_unique_design_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generate an unique design name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        design_name : str</span>\n<span class=\"sd\">            Name of the design.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the design.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">design_index</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">design_name</span><span class=\"p\">:</span>\n            <span class=\"n\">char_set</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_uppercase</span> <span class=\"o\">+</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">digits</span>\n            <span class=\"n\">uName</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">char_set</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n            <span class=\"n\">design_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">uName</span>\n        <span class=\"k\">while</span> <span class=\"n\">design_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">design_index</span><span class=\"p\">:</span>\n                <span class=\"n\">design_name</span> <span class=\"o\">=</span> <span class=\"n\">design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">suffix</span><span class=\"p\">)]</span>\n            <span class=\"n\">design_index</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">design_index</span><span class=\"p\">)</span>\n            <span class=\"n\">design_name</span> <span class=\"o\">+=</span> <span class=\"n\">suffix</span>\n        <span class=\"k\">return</span> <span class=\"n\">design_name</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_generate_unique_project_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generate an unique project name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Unique project name in the form ``&quot;Project_&lt;unique_name&gt;.aedt&quot;.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">char_set</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_uppercase</span> <span class=\"o\">+</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">digits</span>\n        <span class=\"n\">uName</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">char_set</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n        <span class=\"n\">proj_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Project_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">uName</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">proj_name</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rename_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Rename the active design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        new_name : str</span>\n<span class=\"sd\">            New name of the design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.RenameDesignInstance</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">RenameDesignInstance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copy_design_from</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_fullname</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"n\">save_project</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">set_active_design</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Copy a design from a project into the active design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_fullname : str</span>\n<span class=\"sd\">            Full path and name for the project containing the design to copy.</span>\n<span class=\"sd\">            The active design is maintained.</span>\n<span class=\"sd\">        design_name : str</span>\n<span class=\"sd\">            Name of the design to copy into the active design. If a design with this</span>\n<span class=\"sd\">            name is already present in the destination project, AEDT automatically</span>\n<span class=\"sd\">            changes the name.</span>\n<span class=\"sd\">        save_project : bool, optional</span>\n<span class=\"sd\">            Save the project after the design has been copied. Default value is `True`.</span>\n<span class=\"sd\">        set_active_design : bool, optional</span>\n<span class=\"sd\">            Set the design active after it has been copied. Default value is `True`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Name of the copied design name when successful or ``None`` when failed.</span>\n<span class=\"sd\">           Failure is generally a result of the name specified for ``design_name``</span>\n<span class=\"sd\">           not existing in the project specified for ``project_fullname``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.CopyDesign</span>\n<span class=\"sd\">        &gt;&gt;&gt; oProject.Paste</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">()</span>\n        <span class=\"n\">active_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span>\n        <span class=\"c1\"># open the origin project</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">project_fullname</span><span class=\"p\">):</span>\n            <span class=\"n\">proj_from</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">OpenProject</span><span class=\"p\">(</span><span class=\"n\">project_fullname</span><span class=\"p\">)</span>\n            <span class=\"n\">proj_from_name</span> <span class=\"o\">=</span> <span class=\"n\">proj_from</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"c1\"># check if the requested design exists in the origin project</span>\n        <span class=\"k\">if</span> <span class=\"n\">design_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">proj_from</span><span class=\"o\">.</span><span class=\"n\">GetDesigns</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">:])]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"c1\"># copy the source design</span>\n        <span class=\"n\">proj_from</span><span class=\"o\">.</span><span class=\"n\">CopyDesign</span><span class=\"p\">(</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"c1\"># paste in the destination project and get the name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n        <span class=\"n\">new_designname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetActiveDesign</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetActiveDesign</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetDesignType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">new_designname</span> <span class=\"o\">=</span> <span class=\"n\">new_designname</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>  <span class=\"c1\"># name is returned as &#39;2;EMDesign3&#39;</span>\n        <span class=\"c1\"># close the source project</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">CloseProject</span><span class=\"p\">(</span><span class=\"n\">proj_from_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">save_project</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">set_active_design</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_close_edb</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_design</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"n\">new_designname</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_active_design</span><span class=\"p\">(</span><span class=\"n\">active_design</span><span class=\"p\">)</span>\n        <span class=\"c1\"># return the pasted design name</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_designname</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">save_after_duplicate</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Copy a design to a new name.</span>\n\n<span class=\"sd\">        The new name consists of the original</span>\n<span class=\"sd\">        design name plus a suffix of ``MMode`` and a running index</span>\n<span class=\"sd\">        as necessary to allow for multiple calls.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        label : str</span>\n<span class=\"sd\">            Name of the design to copy.</span>\n<span class=\"sd\">        save_after_duplicate : bool, optional</span>\n<span class=\"sd\">            Save project after the duplication is completed. If ``False``, pyaedt objects like boundaries will not be</span>\n<span class=\"sd\">            available.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.CopyDesign</span>\n<span class=\"sd\">        &gt;&gt;&gt; oProject.Paste</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">active_design</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span>\n        <span class=\"n\">design_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">CopyDesign</span><span class=\"p\">(</span><span class=\"n\">active_design</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n        <span class=\"n\">newname</span> <span class=\"o\">=</span> <span class=\"n\">label</span>\n        <span class=\"n\">ind</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">while</span> <span class=\"n\">newname</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">:</span>\n            <span class=\"n\">newname</span> <span class=\"o\">=</span> <span class=\"n\">label</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ind</span><span class=\"p\">)</span>\n            <span class=\"n\">ind</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">actual_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">design_list</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">actual_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span> <span class=\"o\">=</span> <span class=\"n\">newname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_close_edb</span><span class=\"p\">()</span>\n        <span class=\"n\">AedtObjects</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">is_inherithed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">save_after_duplicate</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_dictionary</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_design_preview_to_jpg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export design preview image to a JPG file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full path and name for the JPG file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">design_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;ProjectPreview&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DesignInfo&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">design_info</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n            <span class=\"c1\"># there are multiple designs, find the right one</span>\n            <span class=\"c1\"># is self.design_name guaranteed to be there?</span>\n            <span class=\"n\">design_info</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">design</span> <span class=\"k\">for</span> <span class=\"n\">design</span> <span class=\"ow\">in</span> <span class=\"n\">design_info</span> <span class=\"k\">if</span> <span class=\"n\">design</span><span class=\"p\">[</span><span class=\"s2\">&quot;DesignName&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">image_data_str</span> <span class=\"o\">=</span> <span class=\"n\">design_info</span><span class=\"p\">[</span><span class=\"s2\">&quot;Image64&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;wb&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">version_info</span><span class=\"o\">.</span><span class=\"n\">major</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                <span class=\"n\">bytestring</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">image_data_str</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;base64&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">bytestring</span> <span class=\"o\">=</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">decodebytes</span><span class=\"p\">(</span><span class=\"n\">image_data_str</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s2\">&quot;ascii&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">bytestring</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_variables_to_csv</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">export_project</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">export_design</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export design properties, project variables, or both to a CSV file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full path and name for the CSV file.</span>\n<span class=\"sd\">        export_project : bool, optional</span>\n<span class=\"sd\">            Whether to export project variables. The default is ``True``.</span>\n<span class=\"sd\">        export_design : bool, optional</span>\n<span class=\"sd\">            Whether to export design properties. The default is ``True``.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.GetProperties</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetProperties</span>\n<span class=\"sd\">        &gt;&gt;&gt; oProject.GetVariableValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetVariableValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">varnames</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">desnames</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">export_project</span><span class=\"p\">:</span>\n            <span class=\"n\">varnames</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"s2\">&quot;ProjectVariableTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ProjectVariables&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">export_design</span><span class=\"p\">:</span>\n            <span class=\"n\">desnames</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"s2\">&quot;LocalVariableTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LocalVariables&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">desnames</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"s2\">&quot;DefinitionParameterTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LocalVariables&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">list_full</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value&quot;</span><span class=\"p\">]]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">varnames</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetVariableValue</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n            <span class=\"n\">list_full</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">])</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">desnames</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetVariableValue</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n            <span class=\"n\">list_full</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">write_csv</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">list_full</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">read_design_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Read back the design data as a dictionary.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of the design data.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">design_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;design_data.json&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">design_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fps</span><span class=\"p\">:</span>\n            <span class=\"n\">design_data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fps</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">design_data</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_file</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">refresh_obj_ids_after_save</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Save the project and add a message.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_file : str, optional</span>\n<span class=\"sd\">            Full path and project name. The default is ````None``.</span>\n<span class=\"sd\">        overwrite : bool, optional</span>\n<span class=\"sd\">            Whether to overwrite the existing project. The default is ``True``.</span>\n<span class=\"sd\">        refresh_obj_ids_after_save : bool, optional</span>\n<span class=\"sd\">            Whether to refresh object IDs after saving the project.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.Save</span>\n<span class=\"sd\">        &gt;&gt;&gt; oProject.SaveAs</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">project_file</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">project_file</span><span class=\"p\">)):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">project_file</span><span class=\"p\">))</span>\n        <span class=\"k\">elif</span> <span class=\"n\">project_file</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SaveAs</span><span class=\"p\">(</span><span class=\"n\">project_file</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">refresh_obj_ids_after_save</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_refresh_all_ids_from_aedt_file</span><span class=\"p\">()</span>\n        <span class=\"n\">msg_text</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Project </span><span class=\"si\">{0}</span><span class=\"s2\"> Saved correctly&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">msg_text</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">archive_project</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">project_file</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">include_external_files</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">include_results_file</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">additional_file_lists</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">notes</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Archive the AEDT project and add a message.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_file : str, optional</span>\n<span class=\"sd\">            Full path and project name. The default is ``None``.</span>\n<span class=\"sd\">        include_external_files : bool, optional</span>\n<span class=\"sd\">            Whether to include external files in the archive. The default is ``True``.</span>\n<span class=\"sd\">        include_results_file : bool, optional</span>\n<span class=\"sd\">            Whether to include simulation results files in the archive. The default is ``True``.</span>\n<span class=\"sd\">        additional_file_lists : list, optional</span>\n<span class=\"sd\">            List of additional files to add to the archive. The default is ``[]``.</span>\n<span class=\"sd\">        notes : str, optional</span>\n<span class=\"sd\">            Simulation notes to add to the archive. The default is ``&quot;&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.Save</span>\n<span class=\"sd\">        &gt;&gt;&gt; oProject.SaveProjectArchive</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">msg_text</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Saving </span><span class=\"si\">{0}</span><span class=\"s2\"> Project&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">msg_text</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project_file</span><span class=\"p\">:</span>\n            <span class=\"n\">project_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedtz&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SaveProjectArchive</span><span class=\"p\">(</span>\n            <span class=\"n\">project_file</span><span class=\"p\">,</span> <span class=\"n\">include_external_files</span><span class=\"p\">,</span> <span class=\"n\">include_results_file</span><span class=\"p\">,</span> <span class=\"n\">additional_file_lists</span><span class=\"p\">,</span> <span class=\"n\">notes</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete a project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_name : str</span>\n<span class=\"sd\">            Name of the project.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesktop.DeleteProject</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">assert</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">!=</span> <span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;You cannot delete the active project.&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">DeleteProject</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_active_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Change the active design to another design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name :</span>\n<span class=\"sd\">            Name of the design to make active.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.SetActiveDesign</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_close_edb</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_design</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">validate_simple</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">logfile</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Validate a design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        logfile : str, optional</span>\n<span class=\"sd\">            Name of the log file to save validation information to.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            ``1`` when successful, ``0`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ValidateDesign</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">logfile</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">ValidateDesign</span><span class=\"p\">(</span><span class=\"n\">logfile</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">ValidateDesign</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_evaluated_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the evaluated value of a design property or project variable in SI units if no unit is provided.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the design property or project variable.</span>\n<span class=\"sd\">        units : str, optional</span>\n<span class=\"sd\">            Name of the unit to use for rescaling. The default is ``None``,</span>\n<span class=\"sd\">            in which case SI units are applied by default.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Evaluated value of the design property or project variable in SI units.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetNominalVariation</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetVariationVariableValue</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; M3D = Maxwell3d()</span>\n<span class=\"sd\">        &gt;&gt;&gt; M3D[&quot;p1&quot;] = &quot;10mm&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; M3D[&quot;p2&quot;] = &quot;20mm&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; M3D[&quot;p3&quot;] = &quot;P1 * p2&quot;</span>\n<span class=\"sd\">        &gt;&gt;&gt; eval_p3 = M3D.get_evaluated_value(&quot;p3&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">var_obj</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">variable_name</span><span class=\"p\">:</span>\n            <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span>\n            <span class=\"n\">var_obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Variables/</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">))</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Twin Builder&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">variable_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_name</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Instance:</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">())):</span>\n                    <span class=\"n\">var_obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Instance:</span><span class=\"si\">{}</span><span class=\"s2\">/</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">variable_name</span><span class=\"p\">))</span>\n                <span class=\"k\">elif</span> <span class=\"n\">variable_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefinitionParameters&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">():</span>\n                    <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefinitionParameters&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">var_obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Variables/</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">var_obj</span><span class=\"p\">:</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">var_obj</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SIValue&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">variation_string</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetNominalVariation</span><span class=\"p\">()</span>\n                <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetVariationVariableValue</span><span class=\"p\">(</span><span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">)</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"n\">val_units</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">GetVariableValue</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n                <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">original_units</span> <span class=\"o\">=</span> <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">val_units</span><span class=\"p\">)</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">original_units</span><span class=\"p\">:</span>\n                        <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"n\">unit_system</span><span class=\"p\">(</span><span class=\"n\">original_units</span><span class=\"p\">)][</span><span class=\"n\">original_units</span><span class=\"p\">]</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n                            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">scale</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">](</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">val</span> <span class=\"o\">*</span> <span class=\"n\">scale</span>\n                <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">ValueError</span><span class=\"p\">,</span> <span class=\"ne\">KeyError</span><span class=\"p\">,</span> <span class=\"ne\">TypeError</span><span class=\"p\">,</span> <span class=\"ne\">AttributeError</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n                    <span class=\"k\">return</span> <span class=\"n\">val_units</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">units</span><span class=\"p\">:</span>\n                <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"n\">unit_system</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"p\">)][</span><span class=\"n\">units</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n                    <span class=\"k\">return</span> <span class=\"n\">scale</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">](</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"n\">val</span> <span class=\"o\">*</span> <span class=\"n\">scale</span>\n            <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">ValueError</span><span class=\"p\">,</span> <span class=\"ne\">KeyError</span><span class=\"p\">,</span> <span class=\"ne\">TypeError</span><span class=\"p\">,</span> <span class=\"ne\">AttributeError</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">evaluate_expression</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">expression_string</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Evaluate a valid string expression and return the numerical value in SI units.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        expression_string : str</span>\n<span class=\"sd\">            A valid string expression for a design property or project variable.</span>\n<span class=\"sd\">            For example, ``&quot;34mm*sqrt(2)&quot;`` or ``&quot;$G1*p2/34&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Evaluated value for the string expression.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># Set the value of an internal reserved design variable to the specified string</span>\n        <span class=\"k\">if</span> <span class=\"n\">expression_string</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">[</span><span class=\"n\">expression_string</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;pyaedt_evaluator&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"n\">expression_string</span><span class=\"p\">,</span>\n                    <span class=\"n\">readonly</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">hidden</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Internal_Evaluator&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"p\">(</span><span class=\"s2\">&quot;Invalid string expression </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">expression_string</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># Extract the numeric value of the expression (in SI units!)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">[</span><span class=\"s2\">&quot;pyaedt_evaluator&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_variation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generate a string to specify a desired variation.</span>\n\n<span class=\"sd\">        This method converts an input string defining a desired solution variation into a valid</span>\n<span class=\"sd\">        string taking into account all existing design properties and project variables, including</span>\n<span class=\"sd\">        dependent (non-sweep) properties.</span>\n\n<span class=\"sd\">        This is needed because the standard method COM function ``GetVariationVariableValue``</span>\n<span class=\"sd\">        does not work for obtaining values of dependent (non-sweep) variables.</span>\n<span class=\"sd\">        Using the object-oriented scripting model, which is a beta feature, could make this redundant in</span>\n<span class=\"sd\">        future releases.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variation_string : str, optional</span>\n<span class=\"sd\">            Variation string. For example, ``&quot;p1=1mm&quot;`` or ``&quot;p2=3mm&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            String specifying the desired variation.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetNominalVariation</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">nominal</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetNominalVariation</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">variation_string</span><span class=\"p\">:</span>\n            <span class=\"c1\"># decompose the nominal variation into a dictionary of name[value]</span>\n            <span class=\"n\">nominal_dict</span> <span class=\"o\">=</span> <span class=\"n\">variation_string_to_dict</span><span class=\"p\">(</span><span class=\"n\">nominal</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># decompose the desired variation into a dictionary of name[value]</span>\n            <span class=\"n\">var_dict</span> <span class=\"o\">=</span> <span class=\"n\">variation_string_to_dict</span><span class=\"p\">(</span><span class=\"n\">variation_string</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># set the values of the desired variation in the active design</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">var_dict</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n            <span class=\"c1\"># get the desired variation values</span>\n            <span class=\"n\">nominal</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetNominalVariation</span><span class=\"p\">()</span>\n\n            <span class=\"c1\"># Reset the nominal values in the active design</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">var_dict</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">nominal_dict</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">nominal</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_assert_consistent_design_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">des_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">des_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">des_name</span><span class=\"p\">)</span>\n            <span class=\"n\">dtype</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetDesignType</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">dtype</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;RMxprt&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">assert</span> <span class=\"n\">dtype</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Error: Specified design is not of type </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">assert</span> <span class=\"p\">(</span><span class=\"s2\">&quot;RMxprtSolution&quot;</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;ModelCreation&quot;</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span>\n                <span class=\"p\">),</span> <span class=\"s2\">&quot;Error: Specified design is not of type </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">elif</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">des_name</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">des_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">des_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">des_name</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_check_solution_consistency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check solution consistency.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Twin Builder&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HFSS 3D Layout Design&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EMIT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetSolutionType</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_check_design_consistency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"n\">consistent</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">destype</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetDesignType</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">destype</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">:</span>\n            <span class=\"n\">consistent</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_solution_consistency</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">consistent</span>\n</pre></div>", "current_page_name": "_modules/pyaedt/application/Design", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}