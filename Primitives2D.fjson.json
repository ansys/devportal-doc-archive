{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.Primitives2D", "body": "<h1>Source code for pyaedt.modeler.Primitives2D</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_number</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.Primitives</span> <span class=\"kn\">import</span> <span class=\"n\">Primitives</span>\n\n\n<div class=\"viewcode-block\" id=\"Primitives2D\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Primitives2D.Primitives2D/#pyaedt.modeler.Primitives2D.Primitives2D\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Primitives2D</span><span class=\"p\">(</span><span class=\"n\">Primitives</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages primitives in 2D tools.</span>\n\n<span class=\"sd\">    This class is inherited in the caller application and is accessible through the primitives variable part</span>\n<span class=\"sd\">    of the modeler object (for example, ``hfss.modeler`` or ``icepak.modeler``).</span>\n\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Basic usage demonstrated with a Q2D or Maxwell 2D design:</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Q2d</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Q2d()</span>\n<span class=\"sd\">    &gt;&gt;&gt; prim = aedtapp.modeler</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">plane2d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a 2D plane.&quot;&quot;&quot;</span>\n        <span class=\"n\">plane</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Z&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Maxwell 2D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GetGeometryMode</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;about Z&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">plane</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Y&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">plane</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">Primitives</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Primitives2D.create_circle\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Primitives2D.Primitives2D.create_circle/#pyaedt.modeler.Primitives2D.Primitives2D.create_circle\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_circle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a circle.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : list</span>\n<span class=\"sd\">            ApplicationName.modeler.Position(x,y,z) object</span>\n<span class=\"sd\">        radius : float</span>\n<span class=\"sd\">            Radius of the object.</span>\n<span class=\"sd\">        numSides : int, optional</span>\n<span class=\"sd\">            Number of sides. The default is ``0``, which is correct for a circle.</span>\n<span class=\"sd\">        is_covered : bool</span>\n<span class=\"sd\">            Specify whether the ellipse is a sheet (covered) or a line object</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the object. The default is ``None``. If ``None`` ,</span>\n<span class=\"sd\">            a unique name ``&quot;NewObject_xxxxxx&quot;`` will be assigned)</span>\n<span class=\"sd\">        matname : str, optional</span>\n<span class=\"sd\">            Name of the material. The default is ``None``. If ``None``,</span>\n<span class=\"sd\">            the default material is assigned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            Object3d</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateCircle</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; circle1 = aedtapp.modeler.create_circle([0, -2, -2], 3)</span>\n<span class=\"sd\">        &gt;&gt;&gt; circle2 = aedtapp.modeler.create_circle(position=[0, -2, -2], radius=3, num_sides=6,</span>\n<span class=\"sd\">        ...                                         name=&quot;MyCircle&quot;, matname=&quot;Copper&quot;)</span>\n\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">szAxis</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plane2d</span>\n        <span class=\"n\">XCenter</span><span class=\"p\">,</span> <span class=\"n\">YCenter</span><span class=\"p\">,</span> <span class=\"n\">ZCenter</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pos_with_arg</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n        <span class=\"n\">Radius</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:CircleParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;IsCovered:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">is_covered</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;XCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">XCenter</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;YCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">YCenter</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ZCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ZCenter</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Radius:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Radius</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;WhichAxis:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">szAxis</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;NumSegments:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">num_sides</span><span class=\"p\">))</span>\n\n        <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_object_attributes</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"n\">matname</span><span class=\"p\">)</span>\n        <span class=\"n\">new_object_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateCircle</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_object</span><span class=\"p\">(</span><span class=\"n\">new_object_name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Primitives2D.create_ellipse\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Primitives2D.Primitives2D.create_ellipse/#pyaedt.modeler.Primitives2D.Primitives2D.create_ellipse\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_ellipse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">major_radius</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an ellipse.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : list of float</span>\n<span class=\"sd\">            Center Position of the ellipse</span>\n<span class=\"sd\">        major_radius : flost</span>\n<span class=\"sd\">            Length of the major axis of the ellipse</span>\n<span class=\"sd\">        ratio : float</span>\n<span class=\"sd\">            Ratio of the major axis to the minor axis of the ellipse</span>\n<span class=\"sd\">        is_covered : bool</span>\n<span class=\"sd\">            Specify whether the ellipse is a sheet (covered) or a line object</span>\n<span class=\"sd\">        name : str, default=None</span>\n<span class=\"sd\">            Name of the object. The default is ``None``. If ``None`` ,</span>\n<span class=\"sd\">            a unique name NewObject_xxxxxx will be assigned)</span>\n<span class=\"sd\">        matname : str, default=None</span>\n<span class=\"sd\">             Name of the material. The default is ``None``. If ``None``,</span>\n<span class=\"sd\">             the default material is assigned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            Object3d</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateEllipse</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; ellipse1 = aedtapp.modeler.create_ellipse([0, -2, -2], 4.0, 0.2)</span>\n<span class=\"sd\">        &gt;&gt;&gt; ellipse2 = aedtapp.modeler.create_ellipse(position=[0, -2, -2], major_radius=4.0, ratio=0.2,</span>\n<span class=\"sd\">        ...                                           name=&quot;MyEllipse&quot;, matname=&quot;Copper&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">szAxis</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plane2d</span>\n        <span class=\"n\">XStart</span><span class=\"p\">,</span> <span class=\"n\">YStart</span><span class=\"p\">,</span> <span class=\"n\">ZStart</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pos_with_arg</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:EllipseParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;IsCovered:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">is_covered</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;XCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">XStart</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;YCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">YStart</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ZCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ZStart</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;MajRadius:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">major_radius</span><span class=\"p\">))</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Ratio:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ratio</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;WhichAxis:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">szAxis</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_object_attributes</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"n\">matname</span><span class=\"p\">)</span>\n        <span class=\"n\">new_object_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateEllipse</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_object</span><span class=\"p\">(</span><span class=\"n\">new_object_name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Primitives2D.create_rectangle\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Primitives2D.Primitives2D.create_rectangle/#pyaedt.modeler.Primitives2D.Primitives2D.create_rectangle\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_rectangle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">dimension_list</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a rectangle.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : list of float</span>\n<span class=\"sd\">            Position of the lower-left corner of the rectangle</span>\n<span class=\"sd\">        dimension_list : list of float</span>\n<span class=\"sd\">            List of rectangle sizes: [X size, Y size] for XY planes or [Z size, R size] for RZ planes</span>\n<span class=\"sd\">        is_covered : bool</span>\n<span class=\"sd\">            Specify whether the ellipse is a sheet (covered) or a line object</span>\n<span class=\"sd\">        name : str, default=None</span>\n<span class=\"sd\">            Name of the object. The default is ``None``. If ``None`` ,</span>\n<span class=\"sd\">            a unique name NewObject_xxxxxx will be assigned)</span>\n<span class=\"sd\">        matname : str, default=None</span>\n<span class=\"sd\">             Name of the material. The default is ``None``. If ``None``,</span>\n<span class=\"sd\">             the default material is assigned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.Object3d`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateRectangle</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; rect1 = aedtapp.modeler.create_rectangle([0, -2, -2], [3, 4])</span>\n<span class=\"sd\">        &gt;&gt;&gt; rect2 = aedtapp.modeler.create_rectangle(position=[0, -2, -2], dimension_list=[3, 4],</span>\n<span class=\"sd\">        ...                                          name=&quot;MyCircle&quot;, matname=&quot;Copper&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plane2d</span>\n        <span class=\"n\">x_start</span><span class=\"p\">,</span> <span class=\"n\">y_start</span><span class=\"p\">,</span> <span class=\"n\">z_start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pos_with_arg</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n        <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">dimension_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">dimension_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:RectangleParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;IsCovered:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">is_covered</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;XStart:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x_start</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;YStart:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">y_start</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ZStart:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">z_start</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Width:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Height:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;WhichAxis:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_object_attributes</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"n\">matname</span><span class=\"p\">)</span>\n        <span class=\"n\">new_object_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateRectangle</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_object</span><span class=\"p\">(</span><span class=\"n\">new_object_name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Primitives2D.create_regular_polygon\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Primitives2D.Primitives2D.create_regular_polygon/#pyaedt.modeler.Primitives2D.Primitives2D.create_regular_polygon\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_regular_polygon</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a rectangle.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : list of float</span>\n<span class=\"sd\">            Position of the center of the polygon in ``[x, y, z]``.</span>\n<span class=\"sd\">        start_point : list of float</span>\n<span class=\"sd\">            Start point for the outer path of the polygon in ``[x, y, z]``.</span>\n<span class=\"sd\">        num_sides : int</span>\n<span class=\"sd\">            Number of sides of the polygon. Must be an integer &gt;= 3.</span>\n<span class=\"sd\">        is_covered : bool</span>\n<span class=\"sd\">            Specify whether the ellipse is a sheet (covered) or a line object</span>\n<span class=\"sd\">        name : str, default=None</span>\n<span class=\"sd\">            Name of the object. The default is ``None``. If ``None`` ,</span>\n<span class=\"sd\">            a unique name NewObject_xxxxxx will be assigned)</span>\n<span class=\"sd\">        matname : str, default=None</span>\n<span class=\"sd\">             Name of the material. The default is ``None``. If ``None``,</span>\n<span class=\"sd\">             the default material is assigned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateRegularPolygon</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; pg1 = aedtapp.modeler.create_regular_polygon([0, 0, 0], [0, 2, 0])</span>\n<span class=\"sd\">        &gt;&gt;&gt; pg2 = aedtapp.modeler.create_regular_polygon(position=[0, 0, 0], start_point=[0, 2, 0],</span>\n<span class=\"sd\">        ...                                              name=&quot;MyPolygon&quot;, matname=&quot;Copper&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">x_center</span><span class=\"p\">,</span> <span class=\"n\">y_center</span><span class=\"p\">,</span> <span class=\"n\">z_center</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pos_with_arg</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n        <span class=\"n\">x_start</span><span class=\"p\">,</span> <span class=\"n\">y_start</span><span class=\"p\">,</span> <span class=\"n\">z_start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pos_with_arg</span><span class=\"p\">(</span><span class=\"n\">start_point</span><span class=\"p\">)</span>\n\n        <span class=\"n\">n_sides</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">num_sides</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">n_sides</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span>\n\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:RegularPolygonParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;XCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x_center</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;YCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">y_center</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ZCenter:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">z_center</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;XStart:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x_start</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;YStart:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">y_start</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ZStart:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">z_start</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;NumSides:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">n_sides</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;WhichAxis:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plane2d</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_object_attributes</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"n\">matname</span><span class=\"p\">)</span>\n        <span class=\"n\">new_object_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateRegularPolygon</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_object</span><span class=\"p\">(</span><span class=\"n\">new_object_name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Primitives2D.create_region\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Primitives2D.Primitives2D.create_region/#pyaedt.modeler.Primitives2D.Primitives2D.create_region\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_region</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an air region.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        pad_percent : float or list of float, default=300</span>\n<span class=\"sd\">            If float, use padding in per-cent for all dimensions</span>\n<span class=\"sd\">            If list, then interpret as adding for  ``[&quot;+X&quot;, &quot;+Y&quot;, &quot;-X&quot;, &quot;-Y&quot;]`` or</span>\n<span class=\"sd\">            ``[&quot;+R&quot;, &quot;+Z&quot;, &quot;-R&quot;, &quot;-Z&quot;]`` depending if the solution is XY or RZ.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateRegion</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_number</span><span class=\"p\">(</span><span class=\"n\">pad_percent</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">xy_plane</span><span class=\"p\">:</span>\n                <span class=\"n\">pad_percent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">pad_percent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">]</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">xy_plane</span><span class=\"p\">:</span>\n                <span class=\"n\">pad_percent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">pad_percent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Primitives</span><span class=\"o\">.</span><span class=\"n\">create_region</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pad_percent</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/Primitives2D", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}