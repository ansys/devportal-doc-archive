{"parents": [], "prev": {"link": "../examples/07-TwinBuilder/02-Wiring_A_Rectifier/", "title": "Twin Builder: wiring a rectifier with a capacitor filter"}, "next": null, "title": "Contribute", "meta": null, "body": "<section id=\"contribute\">\n<span id=\"contributing-aedt\"></span><h1>Contribute<a class=\"headerlink\" href=\"#contribute\" title=\"Permalink to this heading\">#</a></h1>\n<p>Overall guidance on contributing to a PyAnsys repository appears in\n<a class=\"reference external\" href=\"https://dev.docs.pyansys.com/overview/contributing.html\">Contribute</a>\nin the <em>PyAnsys Developer\u2019s Guide</em>. Ensure that you are thoroughly familiar\nwith this guide, paying particular attention to <a class=\"reference external\" href=\"https://dev.docs.pyansys.com/guidelines/index.html\">Guidelines and Best Practices</a>, before attempting\nto contribute to PyAEDT.</p>\n<p>The following contribution information is specific to PyAEDT.</p>\n<section id=\"clone-the-repository\">\n<h2>Clone the repository<a class=\"headerlink\" href=\"#clone-the-repository\" title=\"Permalink to this heading\">#</a></h2>\n<p>To clone and install the latest version of PyAEDT in\ndevelopment mode, run:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">pyansys</span><span class=\"o\">/</span><span class=\"n\">pyaedt</span>\n<span class=\"n\">cd</span> <span class=\"n\">pyaedt</span>\n<span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">e</span> <span class=\"o\">.</span>\n</pre></div>\n</div>\n</section>\n<section id=\"post-issues\">\n<h2>Post issues<a class=\"headerlink\" href=\"#post-issues\" title=\"Permalink to this heading\">#</a></h2>\n<p>Use the <a class=\"reference external\" href=\"https://github.com/pyansys/pyaedt/issues\">PyAEDT Issues</a>\npage to submit questions, report bugs, and request new features.</p>\n<p>To reach the support team, email <a class=\"reference external\" href=\"mailto:pyansys&#46;support&#37;&#52;&#48;ansys&#46;com\">pyansys<span>&#46;</span>support<span>&#64;</span>ansys<span>&#46;</span>com</a>.</p>\n</section>\n<section id=\"view-pyaedt-documentation\">\n<h2>View PyAEDT documentation<a class=\"headerlink\" href=\"#view-pyaedt-documentation\" title=\"Permalink to this heading\">#</a></h2>\n<p>Documentation for the latest stable release of PyAEDT is hosted at\n<a class=\"reference external\" href=\"https://aedt.docs.pyansys.com\">PyAEDT Documentation</a>.</p>\n<p>Documentation for the latest development version, which tracks the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">main</span></code> branch, is hosted at  <a class=\"reference external\" href=\"https://dev.aedt.docs.pyansys.com/\">Development PyAEDT Documentation</a>.\nThis version is automatically kept up to date via GitHub actions.</p>\n</section>\n<section id=\"adhere-to-code-style\">\n<h2>Adhere to code style<a class=\"headerlink\" href=\"#adhere-to-code-style\" title=\"Permalink to this heading\">#</a></h2>\n<p>PyAEDT is compliant with <a class=\"reference external\" href=\"https://dev.docs.pyansys.com/coding_style/index.html\">PyAnsys code style</a>. It uses the tool\n<a class=\"reference external\" href=\"https://pre-commit.com/\">pre-commit</a> to check the code style. You can install\nand activate this tool with:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>pip install pre-commit\npre-commit run --all-files\n</pre></div>\n</div>\n<p>You can also install this as a pre-commit hook with:</p>\n<div class=\"highlight-bash notranslate\"><div class=\"highlight\"><pre><span></span>pre-commit install\n</pre></div>\n</div>\n<p>This way, it\u2019s not possible for you to push code that fails the style checks.\nFor example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>$ pre-commit install\n$ git commit -am &quot;Add my cool feature.&quot;\nblack....................................................................Passed\nisort....................................................................Passed\nflake8...................................................................Passed\ncodespell................................................................Passed\n</pre></div>\n</div>\n<section id=\"log-errors\">\n<h3>Log errors<a class=\"headerlink\" href=\"#log-errors\" title=\"Permalink to this heading\">#</a></h3>\n<p>PyAEDT has an internal logging tool named <code class=\"docutils literal notranslate\"><span class=\"pre\">Messenger</span></code>\nand a log file that is automatically generated in the project\nfolder.</p>\n<p>The following examples demonstrate how <code class=\"docutils literal notranslate\"><span class=\"pre\">Messenger</span></code> is used to\nwrite both to the internal AEDT message windows and the log file:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is an error message.&quot;</span><span class=\"p\">)</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is a warning message.&quot;</span><span class=\"p\">)</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is an info message.&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>These examples demonstrate how to write messages only to the log file:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is an error message.&quot;</span><span class=\"p\">)</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is a warning message.&quot;</span><span class=\"p\">)</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is an info message.&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"handle-exceptions\">\n<h3>Handle exceptions<a class=\"headerlink\" href=\"#handle-exceptions\" title=\"Permalink to this heading\">#</a></h3>\n<p>PyAEDT uses a specific decorator, <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;pyaedt_function_handler</span></code>,\nto handle exceptions caused by methods and by the AEDT API.\nThis exception handler decorator makes PyAEDT fault tolerant\nto errors that can occur in any method.</p>\n<p>For example:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>Every method can return a value of <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> when successful or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> when failed. When a failure occurs, the error\nhandler returns information about the error in both the console and\nlog file.</p>\n<p>Here is an example of an error:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"o\">----------------------------------------------------------------------------------</span>\n<span class=\"n\">PyAEDT</span> <span class=\"n\">error</span> <span class=\"n\">on</span> <span class=\"n\">method</span> <span class=\"n\">create_box</span><span class=\"p\">:</span>  <span class=\"n\">General</span> <span class=\"ow\">or</span> <span class=\"n\">AEDT</span> <span class=\"n\">error</span><span class=\"o\">.</span> <span class=\"n\">Check</span> <span class=\"n\">again</span>\n<span class=\"n\">the</span> <span class=\"n\">arguments</span> <span class=\"n\">provided</span><span class=\"p\">:</span>\n    <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">dimensions_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">matname</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"o\">----------------------------------------------------------------------------------</span>\n\n<span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2147352567</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Exception occurred.&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2147024381</span><span class=\"p\">),</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">&quot;C:\\GIT</span><span class=\"se\">\\r</span><span class=\"s2\">epos\\AnsysAutomation\\PyAEDT\\Primitives.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1930</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">create_box</span>\n    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">createbox</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">)</span>\n\n<span class=\"o\">************************************************************</span>\n<span class=\"n\">Method</span> <span class=\"n\">Docstring</span><span class=\"p\">:</span>\n\n<span class=\"n\">Create</span> <span class=\"n\">a</span> <span class=\"n\">box</span><span class=\"o\">.</span>\n\n<span class=\"n\">Parameters</span>\n<span class=\"o\">----------</span>\n<span class=\"o\">...</span>\n</pre></div>\n</div>\n</section>\n<section id=\"hard-coded-values\">\n<h3>Hard-coded values<a class=\"headerlink\" href=\"#hard-coded-values\" title=\"Permalink to this heading\">#</a></h3>\n<p>Do not write hard-coded values to the registry. Instead, use the Configuration service.</p>\n</section>\n<section id=\"maximum-line-length\">\n<h3>Maximum line length<a class=\"headerlink\" href=\"#maximum-line-length\" title=\"Permalink to this heading\">#</a></h3>\n<p>Best practice is to keep the length at or below 120 characters for code, docstrings,\nand comments. Lines longer than this might not display properly on some terminals\nand tools or might be difficult to follow.</p>\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/07-TwinBuilder/02-Wiring_A_Rectifier", "Twin Builder: wiring a rectifier with a capacitor filter", "P", "previous"]], "sourcename": "Contributing.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Contribute</a><ul>\n<li><a class=\"reference internal\" href=\"#clone-the-repository\">Clone the repository</a></li>\n<li><a class=\"reference internal\" href=\"#post-issues\">Post issues</a></li>\n<li><a class=\"reference internal\" href=\"#view-pyaedt-documentation\">View PyAEDT documentation</a></li>\n<li><a class=\"reference internal\" href=\"#adhere-to-code-style\">Adhere to code style</a><ul>\n<li><a class=\"reference internal\" href=\"#log-errors\">Log errors</a></li>\n<li><a class=\"reference internal\" href=\"#handle-exceptions\">Handle exceptions</a></li>\n<li><a class=\"reference internal\" href=\"#hard-coded-values\">Hard-coded values</a></li>\n<li><a class=\"reference internal\" href=\"#maximum-line-length\">Maximum line length</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "Contributing", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}