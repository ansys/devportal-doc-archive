{"parents": [{"link": "../../", "title": "Module code"}], "title": "pyaedt.icepak", "body": "<h1>Source code for pyaedt.icepak</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;This module contains the ``Icepak`` class.&quot;&quot;&quot;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">csv</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n\n<span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;posix&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">subprocessdotnet</span> <span class=\"k\">as</span> <span class=\"nn\">subprocess</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Analysis3D</span> <span class=\"kn\">import</span> <span class=\"n\">FieldAnalysis3D</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.configurations</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigurationsIcepak</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">_arg2dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">random_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.cad.components_3d</span> <span class=\"kn\">import</span> <span class=\"n\">UserDefinedComponent</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.geometry_operators</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryOperators</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Boundary</span> <span class=\"kn\">import</span> <span class=\"n\">BoundaryObject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Boundary</span> <span class=\"kn\">import</span> <span class=\"n\">NativeComponentObject</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.monitor_icepak</span> <span class=\"kn\">import</span> <span class=\"n\">Monitor</span>\n\n\n<div class=\"viewcode-block\" id=\"Icepak\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak/#pyaedt.icepak.Icepak\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Icepak</span><span class=\"p\">(</span><span class=\"n\">FieldAnalysis3D</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides the Icepak application interface.</span>\n\n<span class=\"sd\">    This class allows you to connect to an existing Icepak design or create a</span>\n<span class=\"sd\">    new Icepak design if one does not exist.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    projectname : str, optional</span>\n<span class=\"sd\">        Name of the project to select or the full path to the project</span>\n<span class=\"sd\">        or AEDTZ archive to open.  The default is ``None``, in which</span>\n<span class=\"sd\">        case an attempt is made to get an active project. If no</span>\n<span class=\"sd\">        projects are present, an empty project is created.</span>\n<span class=\"sd\">    designname : str, optional</span>\n<span class=\"sd\">        Name of the design to select. The default is ``None``, in</span>\n<span class=\"sd\">        which case an attempt is made to get an active design. If no</span>\n<span class=\"sd\">        designs are present, an empty design is created.</span>\n<span class=\"sd\">    solution_type : str, optional</span>\n<span class=\"sd\">        Solution type to apply to the design. The default is</span>\n<span class=\"sd\">        ``None``, in which case the default type is applied.</span>\n<span class=\"sd\">    setup_name : str, optional</span>\n<span class=\"sd\">        Name of the setup to use as the nominal. The default is</span>\n<span class=\"sd\">        ``None``, in which case the active setup is used or</span>\n<span class=\"sd\">        nothing is used.</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``, in which case</span>\n<span class=\"sd\">        the active version or latest installed version is  used.</span>\n<span class=\"sd\">        This parameter is ignored when Script is launched within AEDT.</span>\n<span class=\"sd\">    non-graphical : bool, optional</span>\n<span class=\"sd\">        Whether to launch AEDT in non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT is launched in graphical mode.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the</span>\n<span class=\"sd\">        machine.  The default is ``True``.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to release AEDT on exit. The default is ``False``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to open the AEDT student version. The default is ``False``.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    machine : str, optional</span>\n<span class=\"sd\">        Machine name to connect the oDesktop session to. This works only in 2022 R2 or later.</span>\n<span class=\"sd\">        The remote server must be up and running with the command `&quot;ansysedt.exe -grpcsrv portnum&quot;`.</span>\n<span class=\"sd\">        If the machine is `&quot;localhost&quot;`, the server also starts if not present.</span>\n<span class=\"sd\">    port : int, optional</span>\n<span class=\"sd\">        Port number of which to start the oDesktop communication on an already existing server.</span>\n<span class=\"sd\">        This parameter is ignored when creating a new server. It works only in 2022 R2 or later.</span>\n<span class=\"sd\">        The remote server must be up and running with the command `&quot;ansysedt.exe -grpcsrv portnum&quot;`.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Process ID for the instance of AEDT to point PyAEDT at. The default is</span>\n<span class=\"sd\">        ``None``. This parameter is only used when ``new_desktop_session = False``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n\n<span class=\"sd\">    Create an instance of Icepak and connect to an existing Icepak</span>\n<span class=\"sd\">    design or create a new Icepak design if one does not exist.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Icepak</span>\n<span class=\"sd\">    &gt;&gt;&gt; icepak = Icepak()</span>\n<span class=\"sd\">    pyaedt INFO: No project is defined. Project ...</span>\n<span class=\"sd\">    pyaedt INFO: Active design is set to ...</span>\n\n<span class=\"sd\">    Create an instance of Icepak and link to a project named</span>\n<span class=\"sd\">    ``IcepakProject``. If this project does not exist, create one with</span>\n<span class=\"sd\">    this name.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; icepak = Icepak(&quot;IcepakProject&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: Project ...</span>\n<span class=\"sd\">    pyaedt INFO: Added design ...</span>\n\n<span class=\"sd\">    Create an instance of Icepak and link to a design named</span>\n<span class=\"sd\">    ``IcepakDesign1`` in a project named ``IcepakProject``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; icepak = Icepak(&quot;IcepakProject&quot;, &quot;IcepakDesign1&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: Added design &#39;IcepakDesign1&#39; of type Icepak.</span>\n\n<span class=\"sd\">    Create an instance of Icepak and open the specified project,</span>\n<span class=\"sd\">    which is ``myipk.aedt``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; icepak = Icepak(&quot;myipk.aedt&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: Project myipk has been created.</span>\n<span class=\"sd\">    pyaedt INFO: No design is present. Inserting a new design.</span>\n<span class=\"sd\">    pyaedt INFO: Added design ...</span>\n\n<span class=\"sd\">    Create an instance of Icepak using the 2021 R1 release and</span>\n<span class=\"sd\">    open the specified project, which is ``myipk2.aedt``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; icepak = Icepak(specified_version=&quot;2021.2&quot;, projectname=&quot;myipk2.aedt&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: Project...</span>\n<span class=\"sd\">    pyaedt INFO: No design is present. Inserting a new design.</span>\n<span class=\"sd\">    pyaedt INFO: Added design...</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">FieldAnalysis3D</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">projectname</span><span class=\"p\">,</span>\n            <span class=\"n\">designname</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_type</span><span class=\"p\">,</span>\n            <span class=\"n\">setup_name</span><span class=\"p\">,</span>\n            <span class=\"n\">specified_version</span><span class=\"p\">,</span>\n            <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n            <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n            <span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n            <span class=\"n\">student_version</span><span class=\"p\">,</span>\n            <span class=\"n\">machine</span><span class=\"p\">,</span>\n            <span class=\"n\">port</span><span class=\"p\">,</span>\n            <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_monitor</span> <span class=\"o\">=</span> <span class=\"n\">Monitor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_configurations</span> <span class=\"o\">=</span> <span class=\"n\">ConfigurationsIcepak</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">problem_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Problem type of the Icepak design. Options are ``&quot;TemperatureAndFlow&quot;``, ``&quot;TemperatureOnly&quot;``,</span>\n<span class=\"sd\">        and ``&quot;FlowOnly&quot;``.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">problem_type</span>\n\n    <span class=\"nd\">@problem_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">problem_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;TemperatureAndFlow&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">problem_type</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">existing_analysis_sweeps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Existing analysis setups.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of str</span>\n<span class=\"sd\">            List of all analysis setups in the design.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">setup_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">existing_analysis_setups</span>\n        <span class=\"n\">sweep_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">s_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">setup_list</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; : &quot;</span> <span class=\"o\">+</span> <span class=\"n\">s_type</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sweep_list</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">monitor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Property to handle monitor objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.monitor_icepak.Monitor`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_monitor</span><span class=\"o\">.</span><span class=\"n\">_delete_removed_monitors</span><span class=\"p\">()</span>  <span class=\"c1\"># force update. some operations may delete monitors</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_monitor</span>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_grille\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_grille/#pyaedt.icepak.Icepak.assign_grille\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_grille</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">air_faces</span><span class=\"p\">,</span>\n        <span class=\"n\">free_loss_coeff</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">free_area_ratio</span><span class=\"o\">=</span><span class=\"mf\">0.8</span><span class=\"p\">,</span>\n        <span class=\"n\">resistance_type</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">external_temp</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">expternal_pressure</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientPressure&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">x_curve</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2&quot;</span><span class=\"p\">],</span>\n        <span class=\"n\">y_curve</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign grille to a face or list of faces.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        air_faces : str, list</span>\n<span class=\"sd\">            List of face names.</span>\n<span class=\"sd\">        free_loss_coeff : bool</span>\n<span class=\"sd\">            Whether to use the free loss coefficient. The default is ``True``. If ``False``,</span>\n<span class=\"sd\">            the free loss coefficient is not used.</span>\n<span class=\"sd\">        free_area_ratio : float, str</span>\n<span class=\"sd\">            Free loss coefficient value. The default is ``0.8``.</span>\n<span class=\"sd\">        resistance_type : int, optional</span>\n<span class=\"sd\">            Type of the resistance. Options are:</span>\n\n<span class=\"sd\">            - ``0`` for ``&quot;Perforated Thin Vent&quot;``</span>\n<span class=\"sd\">            - ``1`` for ``&quot;Circular Metal Wire Screen&quot;``</span>\n<span class=\"sd\">            - ``2`` for ``&quot;Two-Plane Screen Cyl. Bars&quot;``</span>\n\n<span class=\"sd\">            The default is ``0`` for ``&quot;Perforated Thin Vent&quot;``.</span>\n<span class=\"sd\">        external_temp : str, optional</span>\n<span class=\"sd\">            External temperature. The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        expternal_pressure : str, optional</span>\n<span class=\"sd\">            External pressure. The default is ``&quot;AmbientPressure&quot;``.</span>\n<span class=\"sd\">        x_curve : list, optional</span>\n<span class=\"sd\">            List of X curves in m_per_sec. The default is ``[&quot;0&quot;, &quot;1&quot;, &quot;2&quot;]``.</span>\n<span class=\"sd\">        y_curve : list</span>\n<span class=\"sd\">            List of Y curves in n_per_meter_q. The default is ``[&quot;0&quot;, &quot;1&quot;, &quot;2&quot;]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object when successful or ``None`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignGrilleBoundary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Grille&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_face_list</span><span class=\"p\">(</span><span class=\"n\">air_faces</span><span class=\"p\">,</span> <span class=\"s2\">&quot;boundary_faces&quot;</span> <span class=\"o\">+</span> <span class=\"n\">boundary_name</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">air_faces</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">air_faces</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">air_faces</span>\n        <span class=\"k\">if</span> <span class=\"n\">free_loss_coeff</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Pressure Loss Type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Coeff&quot;</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Free Area Ratio&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">free_area_ratio</span><span class=\"p\">)</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Rad. Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">external_temp</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Total Pressure&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">expternal_pressure</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Pressure Loss Type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Curve&quot;</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Rad. Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">external_temp</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Total Pressure&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">expternal_pressure</span>\n\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">x_curve</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">y_curve</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Grille&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Grille Assigned&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_openings\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_openings/#pyaedt.icepak.Icepak.assign_openings\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_openings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">air_faces</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign openings to a list of faces.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        air_faces : list</span>\n<span class=\"sd\">            List of face names.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object when successful or ``None`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignOpeningBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        Create an opening boundary for the faces of the ``&quot;USB_GND&quot;`` object.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; faces = icepak.modeler[&quot;USB_GND&quot;].faces</span>\n<span class=\"sd\">        &gt;&gt;&gt; face_names = [face.id for face in faces]</span>\n<span class=\"sd\">        &gt;&gt;&gt; boundary = icepak.assign_openings(face_names)</span>\n<span class=\"sd\">        pyaedt INFO: Face List boundary_faces created</span>\n<span class=\"sd\">        pyaedt INFO: Opening Assigned</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Opening&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_face_list</span><span class=\"p\">(</span><span class=\"n\">air_faces</span><span class=\"p\">,</span> <span class=\"s2\">&quot;boundary_faces&quot;</span> <span class=\"o\">+</span> <span class=\"n\">boundary_name</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">air_faces</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">air_faces</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">air_faces</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;AmbientTemp&quot;</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Rad. Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;AmbientRadTemp&quot;</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Inlet Type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Pressure&quot;</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Total Pressure&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;AmbientPressure&quot;</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Opening&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Opening Assigned&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_2way_coupling\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_2way_coupling/#pyaedt.icepak.Icepak.assign_2way_coupling\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_2way_coupling</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">number_of_iterations</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">continue_ipk_iterations</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">ipk_iterations_per_coupling</span><span class=\"o\">=</span><span class=\"mi\">20</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign two-way coupling to a setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name : str, optional</span>\n<span class=\"sd\">            Name of the setup. The default is ``None``, in which case the active setup is used.</span>\n<span class=\"sd\">        number_of_iterations : int, optional</span>\n<span class=\"sd\">            Number of iterations. The default is ``2``.</span>\n<span class=\"sd\">        continue_ipk_iterations : bool, optional</span>\n<span class=\"sd\">           Whether to continue Icepak iterations. The default is ``True``.</span>\n<span class=\"sd\">        ipk_iterations_per_coupling : int, optional</span>\n<span class=\"sd\">            Additional iterations per coupling. The default is ``20``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AddTwoWayCoupling</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; icepak.assign_2way_coupling(&quot;Setup1&quot;, 1, True, 10)</span>\n<span class=\"sd\">        True</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">setup_name</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n                <span class=\"n\">setup_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;No setup is defined.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oanalysis</span><span class=\"o\">.</span><span class=\"n\">AddTwoWayCoupling</span><span class=\"p\">(</span>\n            <span class=\"n\">setup_name</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Options&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumCouplingIters:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">number_of_iterations</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ContinueIcepakIterations:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">continue_ipk_iterations</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IcepakIterationsPerCoupling:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">ipk_iterations_per_coupling</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_source_blocks_from_list\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_source_blocks_from_list/#pyaedt.icepak.Icepak.create_source_blocks_from_list\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_source_blocks_from_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">list_powers</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">default_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Ceramic_material&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign to a box in Icepak the sources that come from the CSV file.</span>\n\n<span class=\"sd\">        Assignment is made by name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        list_powers : list</span>\n<span class=\"sd\">            List of input powers. It is a list of lists. For example,</span>\n<span class=\"sd\">            ``[[&quot;Obj1&quot;, 1], [&quot;Obj2&quot;, 3]]``. The list can contain multiple</span>\n<span class=\"sd\">            columns for power inputs.</span>\n<span class=\"sd\">        assign_material : bool, optional</span>\n<span class=\"sd\">            Whether to assign a material. The default is ``True``.</span>\n<span class=\"sd\">        default_material : str, optional</span>\n<span class=\"sd\">            Default material to assign when ``assign_material=True``.</span>\n<span class=\"sd\">            The default is ``&quot;Ceramic_material&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            List of boundaries inserted.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignBlockBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        Create block boundaries from each box in the list.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box1 = icepak.modeler.create_box([1, 1, 1], [3, 3, 3], &quot;BlockBox1&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; box2 = icepak.modeler.create_box([2, 2, 2], [4, 4, 4], &quot;BlockBox2&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; blocks = icepak.create_source_blocks_from_list([[&quot;BlockBox1&quot;, 2], [&quot;BlockBox2&quot;, 4]])</span>\n<span class=\"sd\">        pyaedt INFO: Block on ...</span>\n<span class=\"sd\">        &gt;&gt;&gt; blocks[1].props</span>\n<span class=\"sd\">        {&#39;Objects&#39;: [&#39;BlockBox1&#39;], &#39;Block Type&#39;: &#39;Solid&#39;, &#39;Use External Conditions&#39;: False, &#39;Total Power&#39;: &#39;2W&#39;}</span>\n<span class=\"sd\">        &gt;&gt;&gt; blocks[3].props</span>\n<span class=\"sd\">        {&#39;Objects&#39;: [&#39;BlockBox2&#39;], &#39;Block Type&#39;: &#39;Solid&#39;, &#39;Use External Conditions&#39;: False, &#39;Total Power&#39;: &#39;4W&#39;}</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">oObjects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">solid_names</span>\n        <span class=\"n\">listmcad</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">num_power</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">list_powers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">num_power</span><span class=\"p\">:</span>\n                <span class=\"n\">num_power</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n                <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;P_index&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">if</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">oObjects</span><span class=\"p\">:</span>\n                <span class=\"n\">listmcad</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">num_power</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_P&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n                    <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_source_block</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_P[P_index]&quot;</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"p\">,</span> <span class=\"n\">default_material</span><span class=\"p\">)</span>\n\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_source_block</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;W&quot;</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"p\">,</span> <span class=\"n\">default_material</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n                    <span class=\"n\">listmcad</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">listmcad</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_source_block\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_source_block/#pyaedt.icepak.Icepak.create_source_block\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_source_block</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">input_power</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">material_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Ceramic_material&quot;</span><span class=\"p\">,</span> <span class=\"n\">use_object_for_name</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a source block for an object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_name : str, list</span>\n<span class=\"sd\">            Name of the object.</span>\n<span class=\"sd\">        input_power : str or var</span>\n<span class=\"sd\">            Input power.</span>\n<span class=\"sd\">        assign_material : bool, optional</span>\n<span class=\"sd\">            Whether to assign a material. The default is ``True``.</span>\n<span class=\"sd\">        material_name :</span>\n<span class=\"sd\">            Material to assign if ``assign_material=True``. The default is ``&quot;Ceramic_material&quot;``.</span>\n<span class=\"sd\">        use_object_for_name : bool, optional</span>\n<span class=\"sd\">            Whether to use the object name for the source block name. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object when successful or ``None`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignBlockBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box = icepak.modeler.create_box([5, 5, 5], [1, 2, 3], &quot;BlockBox3&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; block = icepak.create_source_block(&quot;BlockBox3&quot;, &quot;1W&quot;, False)</span>\n<span class=\"sd\">        pyaedt INFO: Block on ...</span>\n<span class=\"sd\">        &gt;&gt;&gt; block.props</span>\n<span class=\"sd\">        {&#39;Objects&#39;: [&#39;BlockBox3&#39;], &#39;Block Type&#39;: &#39;Solid&#39;, &#39;Use External Conditions&#39;: False, &#39;Total Power&#39;: &#39;1W&#39;}</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">assign_material</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">object_name</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"n\">material_name</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"n\">material_name</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">object_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span>\n        <span class=\"n\">object_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">object_name</span>\n\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Block Type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Solid&quot;</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Use External Conditions&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Total Power&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">input_power</span>\n        <span class=\"k\">if</span> <span class=\"n\">use_object_for_name</span><span class=\"p\">:</span>\n            <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">object_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Block&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Block&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Block on </span><span class=\"si\">{}</span><span class=\"s2\"> with </span><span class=\"si\">{}</span><span class=\"s2\"> power created correctly.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">input_power</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_conduting_plate\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_conduting_plate/#pyaedt.icepak.Icepak.create_conduting_plate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_conduting_plate</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">face_id</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_specification</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_dependent_dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">input_power</span><span class=\"o\">=</span><span class=\"s2\">&quot;0W&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate_low</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">low_surf_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate_high</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">high_surf_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">solid_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_conductance</span><span class=\"o\">=</span><span class=\"s2\">&quot;0W_per_Cel&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_resistance</span><span class=\"o\">=</span><span class=\"s2\">&quot;0Kel_per_W&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_impedance</span><span class=\"o\">=</span><span class=\"s2\">&quot;0celm2_per_w&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">bc_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a conductive plate thermal assignment on a face.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        face_id : int or str</span>\n<span class=\"sd\">            If int, Face ID. If str, object name.</span>\n<span class=\"sd\">        thermal_specification : str</span>\n<span class=\"sd\">            Select what thermal specification is to be applied. The possible choices are ``&quot;Thickness&quot;``,</span>\n<span class=\"sd\">            ``&quot;Conductance&quot;``, ``&quot;Thermal Impedance&quot;`` and ``&quot;Thermal Resistance&quot;``</span>\n<span class=\"sd\">        thermal_dependent_dataset : str, optional</span>\n<span class=\"sd\">            Name of the dataset if a thermal dependent power source is to be assigned. The default is ``None``.</span>\n<span class=\"sd\">        input_power : str, float, or int, optional</span>\n<span class=\"sd\">            Input power. The default is ``&quot;0W&quot;``. Ignored if thermal_dependent_dataset is set</span>\n<span class=\"sd\">        radiate_low : bool, optional</span>\n<span class=\"sd\">            Whether to enable radiation on the lower face. The default is ``False``.</span>\n<span class=\"sd\">        low_surf_material : str, optional</span>\n<span class=\"sd\">            Low surface material. The default is ``&quot;Steel-oxidised-surface&quot;``.</span>\n<span class=\"sd\">        radiate_high : bool, optional</span>\n<span class=\"sd\">            Whether to enable radiation on the higher face. The default is ``False``.</span>\n<span class=\"sd\">        high_surf_material : str, optional</span>\n<span class=\"sd\">            High surface material. The default is ``&quot;Steel-oxidised-surface&quot;``.</span>\n<span class=\"sd\">        shell_conduction : str, optional</span>\n<span class=\"sd\">            Whether to enable shell conduction. The default is ``False``.</span>\n<span class=\"sd\">        thickness : str, optional</span>\n<span class=\"sd\">            Thickness value, relevant only if ``thermal_specification=&quot;Thickness&quot;``. The default is ``&quot;1mm&quot;``.</span>\n<span class=\"sd\">        thermal_conductance : str, optional</span>\n<span class=\"sd\">            Thermal Conductance value, relevant only if ``thermal_specification=&quot;Conductance&quot;``.</span>\n<span class=\"sd\">            The default is ``&quot;0W_per_Cel&quot;``.</span>\n<span class=\"sd\">        thermal_resistance : str, optional</span>\n<span class=\"sd\">            Thermal resistance value, relevant only if ``thermal_specification=&quot;Thermal Resistance&quot;``.</span>\n<span class=\"sd\">            The default is ``&quot;0Kel_per_W&quot;``.</span>\n<span class=\"sd\">        thermal_impedance : str, optional</span>\n<span class=\"sd\">            Thermal impedance value, relevant only if ``thermal_specification=&quot;Thermal Impedance&quot;``.</span>\n<span class=\"sd\">            The default is ``&quot;0celm2_per_w&quot;``.</span>\n<span class=\"sd\">        solid_material : str, optional</span>\n<span class=\"sd\">            Material type for the wall. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        bc_name : str, optional</span>\n<span class=\"sd\">            Name of the plate. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object when successful or ``None`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">bc_name</span><span class=\"p\">:</span>\n            <span class=\"n\">bc_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Source&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">face_id</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">face_id</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">face_id</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">face_id</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">radiate_low</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;LowSide&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RadiateTo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AllObjects&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface Material&quot;</span><span class=\"p\">:</span> <span class=\"n\">low_surf_material</span><span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;LowSide&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span>\n        <span class=\"k\">if</span> <span class=\"n\">radiate_high</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;HighSide&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RadiateTo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AllObjects - High&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface Material - High&quot;</span><span class=\"p\">:</span> <span class=\"n\">high_surf_material</span><span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;HighSide&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Specification&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thermal_specification</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thickness</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solid Material&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">solid_material</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Conductance&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thermal_conductance</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Resistance&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thermal_resistance</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Impedance&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thermal_impedance</span>\n        <span class=\"k\">if</span> <span class=\"n\">thermal_dependent_dataset</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Total Power&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">input_power</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Total Power Variation Data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Variation Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Temp Dep&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Variation Function&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Piecewise Linear&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Variation Value&quot;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;[&quot;1W&quot;, &quot;pwl(</span><span class=\"si\">{}</span><span class=\"s1\">,Temp)&quot;]&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">thermal_dependent_dataset</span><span class=\"p\">),</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Shell Conduction&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">shell_conduction</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bc_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Conducting Plate&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_source_power\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_source_power/#pyaedt.icepak.Icepak.create_source_power\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_source_power</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">face_id</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_dependent_dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">input_power</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_condtion</span><span class=\"o\">=</span><span class=\"s2\">&quot;Total Power&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_heat</span><span class=\"o\">=</span><span class=\"s2\">&quot;0irrad_W_per_m2&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">source_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a source power for a face.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        face_id : int or str</span>\n<span class=\"sd\">            If int, Face ID. If str, object name.</span>\n<span class=\"sd\">        thermal_dependent_dataset : str, optional</span>\n<span class=\"sd\">            Name of the dataset if a thermal dependent power source is to be assigned. The default is ``None``.</span>\n<span class=\"sd\">        input_power : str, float, or int, optional</span>\n<span class=\"sd\">            Input power. The default is ``&quot;0W&quot;``.</span>\n<span class=\"sd\">        thermal_condtion : str, optional</span>\n<span class=\"sd\">            Thermal condition. The default is ``&quot;Total Power&quot;``.</span>\n<span class=\"sd\">        surface_heat : str, optional</span>\n<span class=\"sd\">            Surface heat. The default is ``&quot;0irrad_W_per_m2&quot;``.</span>\n<span class=\"sd\">        temperature : str, optional</span>\n<span class=\"sd\">            Type of the temperature. The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        radiate : bool, optional</span>\n<span class=\"sd\">            Whether to enable radiation. The default is ``False``.</span>\n<span class=\"sd\">        source_name : str, optional</span>\n<span class=\"sd\">            Name of the source. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object when successful or ``None`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignSourceBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        Create two source boundaries from one box, one on the top face and one on the bottom face.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box = icepak.modeler.create_box([0, 0, 0], [20, 20, 20], name=&quot;SourceBox&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; source1 = icepak.create_source_power(box.top_face_z.id, input_power=&quot;2W&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; source1.props[&quot;Total Power&quot;]</span>\n<span class=\"sd\">        &#39;2W&#39;</span>\n<span class=\"sd\">        &gt;&gt;&gt; source2 = icepak.create_source_power(box.bottom_face_z.id,</span>\n<span class=\"sd\">        ...                                      thermal_condtion=&quot;Fixed Temperature&quot;,</span>\n<span class=\"sd\">        ...                                      temperature=&quot;28cel&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; source2.props[&quot;Temperature&quot;]</span>\n<span class=\"sd\">        &#39;28cel&#39;</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">input_power</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">input_power</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0W&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">input_power</span><span class=\"p\">)</span> <span class=\"o\">^</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">thermal_dependent_dataset</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Please assigned one input between ``thermal_dependent_dataset`` and  ``input_power``&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">source_name</span><span class=\"p\">:</span>\n            <span class=\"n\">source_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Source&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">face_id</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">face_id</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">face_id</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">face_id</span><span class=\"p\">]</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Condition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">thermal_condtion</span>\n        <span class=\"k\">if</span> <span class=\"n\">thermal_dependent_dataset</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Total Power&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">input_power</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Total Power Variation Data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Variation Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Temp Dep&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Variation Function&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Piecewise Linear&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Variation Value&quot;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;[&quot;1W&quot;, &quot;pwl(</span><span class=\"si\">{}</span><span class=\"s1\">,Temp)&quot;]&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">thermal_dependent_dataset</span><span class=\"p\">),</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Surface Heat&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">surface_heat</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">temperature</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Radiation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"n\">radiate</span><span class=\"p\">})</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SourceIcepak&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_network_block\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_network_block/#pyaedt.icepak.Icepak.create_network_block\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_network_block</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">object_name</span><span class=\"p\">,</span>\n        <span class=\"n\">power</span><span class=\"p\">,</span>\n        <span class=\"n\">rjc</span><span class=\"p\">,</span>\n        <span class=\"n\">rjb</span><span class=\"p\">,</span>\n        <span class=\"n\">gravity_dir</span><span class=\"p\">,</span>\n        <span class=\"n\">top</span><span class=\"p\">,</span>\n        <span class=\"n\">assign_material</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">default_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Ceramic_material&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">use_object_for_name</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a network block.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.6.27</span>\n<span class=\"sd\">            This method will be replaced by `create_two_resistor_network_block`.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            Name of the object to create the block for.</span>\n<span class=\"sd\">        power : str or var</span>\n<span class=\"sd\">            Input power.</span>\n<span class=\"sd\">        rjc :</span>\n<span class=\"sd\">            RJC value.</span>\n<span class=\"sd\">        rjb :</span>\n<span class=\"sd\">            RJB value.</span>\n<span class=\"sd\">        gravity_dir :</span>\n<span class=\"sd\">            Gravity direction from -X to +Z. Options are ``0`` to ``5``.</span>\n<span class=\"sd\">        top :</span>\n<span class=\"sd\">            Board bounding value in millimeters of the top face.</span>\n<span class=\"sd\">        assign_material : bool, optional</span>\n<span class=\"sd\">            Whether to assign a material. The default is ``True``.</span>\n<span class=\"sd\">        default_material : str, optional</span>\n<span class=\"sd\">            Default material if ``assign_material=True``. The default is ``&quot;Ceramic_material&quot;``.</span>\n<span class=\"sd\">        use_object_for_name : bool, optional</span>\n<span class=\"sd\">             The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignNetworkBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box = icepak.modeler.create_box([4, 5, 6], [5, 5, 5], &quot;NetworkBox1&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; block = icepak.create_network_block(&quot;NetworkBox1&quot;, &quot;2W&quot;, 20, 10, icepak.GravityDirection.ZNeg, 1.05918)</span>\n<span class=\"sd\">        &gt;&gt;&gt; block.props[&quot;Nodes&quot;][&quot;Internal&quot;][0]</span>\n<span class=\"sd\">        &#39;2W&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;This method is deprecated in 0.6.27. Please use create_two_resistor_network_block&quot;</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">object_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">gravity_dir</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                <span class=\"n\">gravity_dir</span> <span class=\"o\">=</span> <span class=\"n\">gravity_dir</span> <span class=\"o\">-</span> <span class=\"mi\">3</span>\n            <span class=\"n\">faces_dict</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">faces</span>\n            <span class=\"n\">faceCenter</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">faces_dict</span><span class=\"p\">:</span>\n                <span class=\"n\">faceCenter</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">center</span>\n            <span class=\"n\">fcmax</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1e9</span>\n            <span class=\"n\">fcmin</span> <span class=\"o\">=</span> <span class=\"mf\">1e9</span>\n            <span class=\"n\">fcrjc</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"n\">fcrjb</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">for</span> <span class=\"n\">fc</span> <span class=\"ow\">in</span> <span class=\"n\">faceCenter</span><span class=\"p\">:</span>\n                <span class=\"n\">fc1</span> <span class=\"o\">=</span> <span class=\"n\">faceCenter</span><span class=\"p\">[</span><span class=\"n\">fc</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">fc1</span><span class=\"p\">[</span><span class=\"n\">gravity_dir</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">fcmin</span><span class=\"p\">:</span>\n                    <span class=\"n\">fcmin</span> <span class=\"o\">=</span> <span class=\"n\">fc1</span><span class=\"p\">[</span><span class=\"n\">gravity_dir</span><span class=\"p\">]</span>\n                    <span class=\"n\">fcrjb</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">fc</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">fc1</span><span class=\"p\">[</span><span class=\"n\">gravity_dir</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"n\">fcmax</span><span class=\"p\">:</span>\n                    <span class=\"n\">fcmax</span> <span class=\"o\">=</span> <span class=\"n\">fc1</span><span class=\"p\">[</span><span class=\"n\">gravity_dir</span><span class=\"p\">]</span>\n                    <span class=\"n\">fcrjc</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">fc</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">fcmax</span> <span class=\"o\">&lt;</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">top</span><span class=\"p\">):</span>\n                <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">fcrjc</span>\n                <span class=\"n\">fcrjc</span> <span class=\"o\">=</span> <span class=\"n\">fcrjb</span>\n                <span class=\"n\">fcrjb</span> <span class=\"o\">=</span> <span class=\"n\">app</span>\n            <span class=\"k\">if</span> <span class=\"n\">assign_material</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"n\">default_material</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">if</span> <span class=\"n\">use_object_for_name</span><span class=\"p\">:</span>\n                <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">object_name</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Block&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">fcrjc</span><span class=\"p\">,</span> <span class=\"n\">fcrjb</span><span class=\"p\">]</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Nodes&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Face&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fcrjc</span><span class=\"p\">):</span> <span class=\"p\">[</span><span class=\"n\">fcrjc</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NoResistance&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Face&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fcrjb</span><span class=\"p\">):</span> <span class=\"p\">[</span><span class=\"n\">fcrjb</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NoResistance&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">power</span><span class=\"p\">],</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Links&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Link1&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Face&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fcrjc</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rjc</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel_per_w&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Link2&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Face&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">fcrjb</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rjb</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel_per_w&quot;</span><span class=\"p\">],</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SchematicData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Network&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">return</span> <span class=\"n\">bound</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_network_blocks\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_network_blocks/#pyaedt.icepak.Icepak.create_network_blocks\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_network_blocks</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_list</span><span class=\"p\">,</span> <span class=\"n\">gravity_dir</span><span class=\"p\">,</span> <span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">default_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Ceramic_material&quot;</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create network blocks from CSV files.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        input_list : list</span>\n<span class=\"sd\">            List of sources with inputs ``rjc``, ``rjb``, and ``power``.</span>\n<span class=\"sd\">            For example, ``[[Objname1, rjc, rjb, power1, power2, ...], [Objname2, rjc2, rbj2, power1, power2, ...]]``.</span>\n<span class=\"sd\">        gravity_dir : int</span>\n<span class=\"sd\">            Gravity direction from -X to +Z. Options are ``0`` to ``5``.</span>\n<span class=\"sd\">        top :</span>\n<span class=\"sd\">            Board bounding value in millimeters of the top face.</span>\n<span class=\"sd\">        assign_material : bool, optional</span>\n<span class=\"sd\">            Whether to assign a material. The default is ``True``.</span>\n<span class=\"sd\">        default_material : str, optional</span>\n<span class=\"sd\">            Default material if ``assign_material=True``. The default is ``&quot;Ceramic_material&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            List of boundary objects created.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignNetworkBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        Create network boundaries from each box in the list.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box1 = icepak.modeler.create_box([1, 2, 3], [10, 10, 10], &quot;NetworkBox2&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; box2 = icepak.modeler.create_box([4, 5, 6], [5, 5, 5], &quot;NetworkBox3&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; blocks = icepak.create_network_blocks([[&quot;NetworkBox2&quot;, 20, 10, 3], [&quot;NetworkBox3&quot;, 4, 10, 2]],</span>\n<span class=\"sd\">        ...                                        icepak.GravityDirection.ZNeg, 1.05918, False)</span>\n<span class=\"sd\">        &gt;&gt;&gt; blocks[0].props[&quot;Nodes&quot;][&quot;Internal&quot;]</span>\n<span class=\"sd\">        [&#39;3W&#39;]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">objs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">solid_names</span>\n        <span class=\"n\">countpow</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">input_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"mi\">3</span>\n        <span class=\"n\">networks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">input_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">countpow</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_P&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:])</span>\n                    <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;P_index&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                    <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_network_block</span><span class=\"p\">(</span>\n                        <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_P[P_index]&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                        <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                        <span class=\"n\">gravity_dir</span><span class=\"p\">,</span>\n                        <span class=\"n\">top</span><span class=\"p\">,</span>\n                        <span class=\"n\">assign_material</span><span class=\"p\">,</span>\n                        <span class=\"n\">default_material</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n                        <span class=\"nb\">pow</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0W&quot;</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"nb\">pow</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;W&quot;</span>\n                    <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_network_block</span><span class=\"p\">(</span>\n                        <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">pow</span><span class=\"p\">,</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">gravity_dir</span><span class=\"p\">,</span> <span class=\"n\">top</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"p\">,</span> <span class=\"n\">default_material</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n                    <span class=\"n\">networks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">networks</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_surface_monitor\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_surface_monitor/#pyaedt.icepak.Icepak.assign_surface_monitor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_surface_monitor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">face_name</span><span class=\"p\">,</span> <span class=\"n\">monitor_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">,</span> <span class=\"n\">monitor_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign a surface monitor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        face_name : str</span>\n<span class=\"sd\">            Name of the face.</span>\n<span class=\"sd\">        monitor_type : str, optional</span>\n<span class=\"sd\">            Type of the monitor.  The default is ``&quot;Temperature&quot;``.</span>\n<span class=\"sd\">        monitor_name : str, optional</span>\n<span class=\"sd\">            Name of the monitor. The default is ``None``, in which case</span>\n<span class=\"sd\">            the default name is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Monitor name when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignFaceMonitor</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        Create a rectangle named ``&quot;Surface1&quot;`` and assign a temperature monitor to that surface.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; surface = icepak.modeler.create_rectangle(icepak.PLANE.XY,</span>\n<span class=\"sd\">        ...                                           [0, 0, 0], [10, 20], name=&quot;Surface1&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; icepak.assign_surface_monitor(&quot;Surface1&quot;, monitor_name=&quot;monitor&quot;)</span>\n<span class=\"sd\">        &#39;monitor&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_monitor</span><span class=\"o\">.</span><span class=\"n\">assign_surface_monitor</span><span class=\"p\">(</span><span class=\"n\">face_name</span><span class=\"p\">,</span> <span class=\"n\">monitor_quantity</span><span class=\"o\">=</span><span class=\"n\">monitor_type</span><span class=\"p\">,</span> <span class=\"n\">monitor_name</span><span class=\"o\">=</span><span class=\"n\">monitor_name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_point_monitor\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_point_monitor/#pyaedt.icepak.Icepak.assign_point_monitor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_point_monitor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">point_position</span><span class=\"p\">,</span> <span class=\"n\">monitor_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">,</span> <span class=\"n\">monitor_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create and assign a point monitor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        point_position : list</span>\n<span class=\"sd\">            List of the ``[x, y, z]`` coordinates for the point.</span>\n<span class=\"sd\">        monitor_type : str, optional</span>\n<span class=\"sd\">            Type of the monitor. The default is ``&quot;Temperature&quot;``.</span>\n<span class=\"sd\">        monitor_name : str, optional</span>\n<span class=\"sd\">            Name of the monitor. The default is ``None``, in which case</span>\n<span class=\"sd\">            the default name is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Monitor name when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignPointMonitor</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        Create a temperature monitor at the point ``[1, 1, 1]``.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; icepak.assign_point_monitor([1, 1, 1], monitor_name=&quot;monitor1&quot;)</span>\n<span class=\"sd\">        &#39;monitor1&#39;</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_monitor</span><span class=\"o\">.</span><span class=\"n\">assign_point_monitor</span><span class=\"p\">(</span>\n            <span class=\"n\">point_position</span><span class=\"p\">,</span> <span class=\"n\">monitor_quantity</span><span class=\"o\">=</span><span class=\"n\">monitor_type</span><span class=\"p\">,</span> <span class=\"n\">monitor_name</span><span class=\"o\">=</span><span class=\"n\">monitor_name</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_point_monitor_in_object\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_point_monitor_in_object/#pyaedt.icepak.Icepak.assign_point_monitor_in_object\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_point_monitor_in_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">monitor_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">,</span> <span class=\"n\">monitor_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign a point monitor in the centroid of a specific object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the object to assign monitor point to.</span>\n<span class=\"sd\">        monitor_type : str, optional</span>\n<span class=\"sd\">            Type of the monitor.  The default is ``&quot;Temperature&quot;``.</span>\n<span class=\"sd\">        monitor_name : str, optional</span>\n<span class=\"sd\">            Name of the monitor. The default is ``None``, in which case</span>\n<span class=\"sd\">            the default name is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Monitor name when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignPointMonitor</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        Create a box named ``&quot;BlockBox1&quot;`` and assign a temperature monitor point to that object.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box = icepak.modeler.create_box([1, 1, 1], [3, 3, 3], &quot;BlockBox1&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; icepak.assign_point_monitor(box.name, monitor_name=&quot;monitor2&quot;)</span>\n<span class=\"sd\">        &quot;&#39;monitor2&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_monitor</span><span class=\"o\">.</span><span class=\"n\">assign_point_monitor_in_object</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">monitor_quantity</span><span class=\"o\">=</span><span class=\"n\">monitor_type</span><span class=\"p\">,</span> <span class=\"n\">monitor_name</span><span class=\"o\">=</span><span class=\"n\">monitor_name</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_block_from_sherlock_file\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_block_from_sherlock_file/#pyaedt.icepak.Icepak.assign_block_from_sherlock_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_block_from_sherlock_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">csv_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign block power to components based on a CSV file from Sherlock.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        csv_name : str</span>\n<span class=\"sd\">            Name of the CSV file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Total power applied.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignBlockBoundary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">csv_name</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">csvfile</span><span class=\"p\">:</span>\n            <span class=\"n\">csv_input</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">csvfile</span><span class=\"p\">)</span>\n            <span class=\"n\">component_header</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">csv_input</span><span class=\"p\">)</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">csv_input</span><span class=\"p\">)</span>\n            <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">component_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">component_header</span><span class=\"p\">:</span>\n                <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">]</span>\n                <span class=\"n\">k</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">total_power</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">all_objects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"k\">for</span> <span class=\"n\">power</span> <span class=\"ow\">in</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Applied Power (W)&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">power</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;COMP_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">all_objects</span><span class=\"p\">:</span>\n                    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_source_block</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;COMP_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">power</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;W&quot;</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">status</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                            <span class=\"s2\">&quot;Warning. Block </span><span class=\"si\">%s</span><span class=\"s2\"> skipped with </span><span class=\"si\">%s</span><span class=\"s2\">W power.&quot;</span><span class=\"p\">,</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">power</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">total_power</span> <span class=\"o\">+=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">power</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">all_objects</span><span class=\"p\">:</span>\n                    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_source_block</span><span class=\"p\">(</span>\n                        <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">power</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;W&quot;</span><span class=\"p\">,</span> <span class=\"n\">assign_material</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">status</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                            <span class=\"s2\">&quot;Warning. Block </span><span class=\"si\">%s</span><span class=\"s2\"> skipped with </span><span class=\"si\">%s</span><span class=\"s2\">W power.&quot;</span><span class=\"p\">,</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">power</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">total_power</span> <span class=\"o\">+=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">power</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Blocks inserted with total power </span><span class=\"si\">%s</span><span class=\"s2\">W.&quot;</span><span class=\"p\">,</span> <span class=\"n\">total_power</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">total_power</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_priority_on_intersections\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_priority_on_intersections/#pyaedt.icepak.Icepak.assign_priority_on_intersections\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_priority_on_intersections</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;COMP_&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Validate an Icepak design.</span>\n\n<span class=\"sd\">        If there are intersections, priorities are automatically applied to overcome simulation issues.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_prefix : str, optional</span>\n<span class=\"sd\">            Component prefix to search for. The default is ``&quot;COMP_&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">             ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.UpdatePriorityList</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">temp_log</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;validation.log&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">validate</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ValidateDesign</span><span class=\"p\">(</span><span class=\"n\">temp_log</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">()</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n        <span class=\"k\">if</span> <span class=\"n\">validate</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">priority_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">temp_log</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;[error]&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span> <span class=\"ow\">and</span> <span class=\"n\">component_prefix</span> <span class=\"ow\">in</span> <span class=\"n\">line</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;intersect&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                        <span class=\"n\">id1</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">component_prefix</span><span class=\"p\">)</span>\n                        <span class=\"n\">id2</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"n\">id1</span><span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">)</span>\n                        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"n\">id1</span> <span class=\"p\">:</span> <span class=\"n\">id1</span> <span class=\"o\">+</span> <span class=\"n\">id2</span><span class=\"p\">]</span>\n                        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">priority_list</span><span class=\"p\">:</span>\n                            <span class=\"n\">priority_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\"> Intersections have been found. Applying Priorities&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">priority_list</span><span class=\"p\">)))</span>\n            <span class=\"k\">for</span> <span class=\"n\">objname</span> <span class=\"ow\">in</span> <span class=\"n\">priority_list</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">add_priority</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">objname</span><span class=\"p\">],</span> <span class=\"n\">priority</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.find_top\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.find_top/#pyaedt.icepak.Icepak.find_top\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">find_top</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">gravityDir</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Find the top location of the layout given a gravity.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        gravityDir :</span>\n<span class=\"sd\">            Gravity direction from -X to +Z. Options are ``0`` to ``5``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Top position.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetModelBoundingBox</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">dirs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;-X&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;+X&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Y&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;+Y&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Z&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;+Z&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"nb\">dir</span> <span class=\"ow\">in</span> <span class=\"n\">dirs</span><span class=\"p\">:</span>\n            <span class=\"n\">argsval</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">dir</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; Padding Data&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">]</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Geometry3DCmdTab&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Region:CreateRegion:1&quot;</span><span class=\"p\">],</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"n\">argsval</span><span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"n\">oBoundingBox</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_model_bounding_box</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">gravityDir</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"n\">gravityDir</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"n\">gravityDir</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_parametric_fin_heat_sink\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_parametric_fin_heat_sink/#pyaedt.icepak.Icepak.create_parametric_fin_heat_sink\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_parametric_fin_heat_sink</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">hs_height</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n        <span class=\"n\">hs_width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n        <span class=\"n\">hs_basethick</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"n\">thick</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n        <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span>\n        <span class=\"n\">draftangle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">patternangle</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">separation</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"n\">symmetric</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">symmetric_separation</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"n\">numcolumn_perside</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">vertical_separation</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">center</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"n\">plane_enum</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a parametric heat sink.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        hs_height : int, optional</span>\n<span class=\"sd\">            Height of the heat sink. The default is ``100``.</span>\n<span class=\"sd\">        hs_width : int, optional</span>\n<span class=\"sd\">            Width of the heat sink. The default is ``100``.</span>\n<span class=\"sd\">        hs_basethick : int, optional</span>\n<span class=\"sd\">            Thickness of the heat sink base. The default is ``10``.</span>\n<span class=\"sd\">        pitch : optional</span>\n<span class=\"sd\">            Pitch of the heat sink. The default is ``10``.</span>\n<span class=\"sd\">        thick : optional</span>\n<span class=\"sd\">            Thickness of the heat sink. The default is ``10``.</span>\n<span class=\"sd\">        length : optional</span>\n<span class=\"sd\">            Length of the heat sink. The default is ``40``.</span>\n<span class=\"sd\">        height : optional</span>\n<span class=\"sd\">            Height of the heat sink. The default is ``40``.</span>\n<span class=\"sd\">        draftangle : int, float, optional</span>\n<span class=\"sd\">            Draft angle in degrees. The default is ``0``.</span>\n<span class=\"sd\">        patternangle : int, float, optional</span>\n<span class=\"sd\">            Pattern angle in degrees. The default is ``10``.</span>\n<span class=\"sd\">        separation : optional</span>\n<span class=\"sd\">            The default is ``5``.</span>\n<span class=\"sd\">        symmetric : bool, optional</span>\n<span class=\"sd\">            Whether the heat sink is symmetric. The default is ``True``.</span>\n<span class=\"sd\">        symmetric_separation : optional</span>\n<span class=\"sd\">            The default is ``20``.</span>\n<span class=\"sd\">        numcolumn_perside : int, optional</span>\n<span class=\"sd\">            Number of columns per side. The default is ``2``.</span>\n<span class=\"sd\">        vertical_separation : optional</span>\n<span class=\"sd\">            The default is ``10``.</span>\n<span class=\"sd\">        matname : str, optional</span>\n<span class=\"sd\">            Name of the material. The default is ``Al-Extruded``.</span>\n<span class=\"sd\">        center : list, optional</span>\n<span class=\"sd\">           List of ``[x, y, z]`` coordinates for the center of</span>\n<span class=\"sd\">           the heatsink. The default is ``[0, 0, 0]``.</span>\n<span class=\"sd\">        plane_enum : str, int, optional</span>\n<span class=\"sd\">            Plane for orienting the heat sink.</span>\n<span class=\"sd\">            :class:`pyaedt.constants.PLANE` Enumerator can be used as input.</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        rotation : int, float, optional</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        tolerance : int, float, optional</span>\n<span class=\"sd\">            Tolerance value. The default is ``0.001``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        Create a symmetric fin heat sink.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Icepak</span>\n<span class=\"sd\">        &gt;&gt;&gt; icepak = Icepak()</span>\n<span class=\"sd\">        &gt;&gt;&gt; icepak.insert_design(&quot;Heat_Sink_Example&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; icepak.create_parametric_fin_heat_sink(draftangle=1.5, patternangle=8, numcolumn_perside=3,</span>\n<span class=\"sd\">        ...                                        vertical_separation=5.5, matname=&quot;Steel&quot;, center=[10, 0, 0],</span>\n<span class=\"sd\">        ...                                        plane_enum=icepak.PLANE.XY, rotation=45, tolerance=0.005)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">all_objs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;FinPitch&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">pitch</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;FinThickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">thick</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;FinLength&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;FinHeight&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;DraftAngle&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">draftangle</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;PatternAngle&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">patternangle</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;FinSeparation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">separation</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;VerticalSeparation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">vertical_separation</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;HSHeight&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">hs_height</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;HSWidth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">hs_width</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;HSBaseThick&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">hs_basethick</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">numcolumn_perside</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;NumColumnsPerSide&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numcolumn_perside</span>\n        <span class=\"k\">if</span> <span class=\"n\">symmetric</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;SymSeparation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">symmetric_separation</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;Tolerance&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">tolerance</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_box</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;-HSWidth/200&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-HSHeight/200&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-HSBaseThick&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;HSWidth*1.01&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HSHeight*1.01&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HSBaseThick+Tolerance&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;HSBase&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">matname</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">fin_line</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">fin_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"n\">fin_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"n\">fin_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;FinLength&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinThickness + FinLength*sin(PatternAngle*3.14/180)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"n\">fin_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;FinLength&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinLength*sin(PatternAngle*3.14/180)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"n\">fin_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">fin_line</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Fin&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fin_line2</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">fin_line2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sin(DraftAngle*3.14/180)*FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinHeight&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">fin_line2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinThickness-sin(DraftAngle*3.14/180)*FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinHeight&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">fin_line2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;FinLength&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FinThickness + FinLength*sin(PatternAngle*3.14/180)-sin(DraftAngle*3.14/180)*FinThickness&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FinHeight&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">fin_line2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;FinLength&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinLength*sin(PatternAngle*3.14/180)+sin(DraftAngle*3.14/180)*FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinHeight&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">fin_line2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sin(DraftAngle*3.14/180)*FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinHeight&quot;</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">fin_line2</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Fin_top&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">([</span><span class=\"s2\">&quot;Fin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Fin_top&quot;</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"s2\">&quot;Fin&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"n\">matname</span>\n        <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">((</span><span class=\"n\">hs_width</span> <span class=\"o\">*</span> <span class=\"mf\">1.25</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">separation</span> <span class=\"o\">+</span> <span class=\"n\">thick</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">patternangle</span> <span class=\"o\">*</span> <span class=\"mf\">3.14</span> <span class=\"o\">/</span> <span class=\"mi\">180</span><span class=\"p\">),</span> <span class=\"mf\">0.1</span><span class=\"p\">)))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"s2\">&quot;Fin&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-FinSeparation-FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_along_line</span><span class=\"p\">(</span><span class=\"s2\">&quot;Fin&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinSeparation+FinThickness&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">num</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">all_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">all_names</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;Fin&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">numcolumn_perside</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_along_line</span><span class=\"p\">(</span>\n                <span class=\"nb\">list</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;FinLength+VerticalSeparation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FinLength*sin(PatternAngle*3.14/180)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;NumColumnsPerSide&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">all_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">all_names</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;Fin&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">ZX</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PositiveOnly&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">all_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">all_names</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;Fin&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HSHeight&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;view&quot;</span><span class=\"p\">,</span> <span class=\"n\">view</span><span class=\"o\">=</span><span class=\"s2\">&quot;XY&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;TopRight&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"s2\">&quot;TopRight&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">ZX</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NegativeOnly&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">symmetric</span><span class=\"p\">:</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;(HSWidth-SymSeparation)/2&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n                <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;view&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">view</span><span class=\"o\">=</span><span class=\"s2\">&quot;XY&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CenterRightSep&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"s2\">&quot;TopRight&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">YZ</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NegativeOnly&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;SymSeparation/2&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n                <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;view&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">view</span><span class=\"o\">=</span><span class=\"s2\">&quot;XY&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CenterRight&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"s2\">&quot;CenterRightSep&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_and_mirror</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n            <span class=\"n\">center_line</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">center_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;-SymSeparation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tolerance&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Tolerance&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">center_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;SymSeparation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tolerance&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Tolerance&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">center_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;VerticalSeparation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-HSHeight-Tolerance&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Tolerance&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">center_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;-VerticalSeparation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-HSHeight-Tolerance&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Tolerance&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">center_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;-SymSeparation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tolerance&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-Tolerance&quot;</span><span class=\"p\">))</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">center_line</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Center&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">thicken_sheet</span><span class=\"p\">(</span><span class=\"s2\">&quot;Center&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-FinHeight-2*Tolerance&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">all_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n            <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">all_names</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;Fin&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Center&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"s2\">&quot;HSWidth&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;view&quot;</span><span class=\"p\">,</span> <span class=\"n\">view</span><span class=\"o\">=</span><span class=\"s2\">&quot;XY&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;BottomRight&quot;</span><span class=\"p\">,</span> <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"s2\">&quot;TopRight&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">YZ</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NegativeOnly&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">all_objs2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"n\">list_to_move</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs2</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs</span><span class=\"p\">]</span>\n        <span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">hs_width</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">hs_height</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">hs_basethick</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">,</span> <span class=\"n\">center</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">plane_enum</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">XY</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">AXIS</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">rotation</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">plane_enum</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">ZX</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">AXIS</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">AXIS</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">rotation</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">plane_enum</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PLANE</span><span class=\"o\">.</span><span class=\"n\">YZ</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">AXIS</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">AXIS</span><span class=\"o\">.</span><span class=\"n\">Z</span><span class=\"p\">,</span> <span class=\"n\">rotation</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">unite</span><span class=\"p\">(</span><span class=\"n\">list_to_move</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">list_to_move</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;HeatSink1&quot;</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.edit_design_settings\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.edit_design_settings/#pyaedt.icepak.Icepak.edit_design_settings\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edit_design_settings</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">gravityDir</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">ambtemp</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"n\">performvalidation</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">CheckLevel</span><span class=\"o\">=</span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">defaultfluid</span><span class=\"o\">=</span><span class=\"s2\">&quot;air&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">defaultsolid</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">export_monitor</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">export_directory</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the main settings of the design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        gravityDir : int, optional</span>\n<span class=\"sd\">            Gravity direction from -X to +Z. Options are ``0`` to ``5``.</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        ambtemp : optional</span>\n<span class=\"sd\">            Ambient temperature. The default is ``22``.</span>\n<span class=\"sd\">        performvalidation : bool, optional</span>\n<span class=\"sd\">            Whether to perform validation. The default is ``False``.</span>\n<span class=\"sd\">        CheckLevel : str, optional</span>\n<span class=\"sd\">            Level of check to perform during validation. The default</span>\n<span class=\"sd\">            is ``&quot;None&quot;``.</span>\n<span class=\"sd\">        defaultfluid : str, optional</span>\n<span class=\"sd\">            Default fluid material. The default is ``&quot;air&quot;``.</span>\n<span class=\"sd\">        defaultsolid : str, optional</span>\n<span class=\"sd\">            Default solid material. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        export_monitor : bool, optional</span>\n<span class=\"sd\">            Whether to use the default export directory for monitor point data.</span>\n<span class=\"sd\">            The default value is ``False``.</span>\n<span class=\"sd\">        export_directory : str, optional</span>\n<span class=\"sd\">            Default export directory for monitor point data. The default value is the current working directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetDesignSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">AmbientTemp</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ambtemp</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel&quot;</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># Configure design settings for gravity etc</span>\n        <span class=\"n\">IceGravity</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">GVPos</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">gravityDir</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">GVPos</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">GVA</span> <span class=\"o\">=</span> <span class=\"n\">IceGravity</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">gravityDir</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">SetDesignSettings</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Design Settings Data&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Perform Minimal validation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">performvalidation</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default Fluid Material:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">defaultfluid</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default Solid Material:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">defaultsolid</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default Surface Material:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AmbientTemperature:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">AmbientTemp</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AmbientPressure:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;0n_per_meter_sq&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AmbientRadiationTemperature:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">AmbientTemp</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Gravity Vector CS ID:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Gravity Vector Axis:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">GVA</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Positive:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">GVPos</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExportOnSimulationComplete:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">export_monitor</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExportDirectory:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">export_directory</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Model Validation Settings&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EntityCheckLevel:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">CheckLevel</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IgnoreUnclassifiedObjects:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SkipIntersectionChecks:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_em_losses\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_em_losses/#pyaedt.icepak.Icepak.assign_em_losses\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_em_losses</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"s2\">&quot;HFSSDesign1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Setup1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">sweepname</span><span class=\"o\">=</span><span class=\"s2\">&quot;LastAdaptive&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">map_frequency</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_objects</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">source_project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">paramlist</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">object_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Map EM losses to an Icepak design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        designname : string, optional</span>\n<span class=\"sd\">            Name of the design with the source mapping. The default is ``&quot;HFSSDesign1&quot;``.</span>\n<span class=\"sd\">        setupname : str, optional</span>\n<span class=\"sd\">            Name of the EM setup. The default is ``&quot;Setup1&quot;``.</span>\n<span class=\"sd\">        sweepname : str, optional</span>\n<span class=\"sd\">            Name of the EM sweep to use for the mapping. The default is ``&quot;LastAdaptive&quot;``.</span>\n<span class=\"sd\">        map_frequency : str, optional</span>\n<span class=\"sd\">            String containing the frequency to map. The default is ``None``.</span>\n<span class=\"sd\">            The value must be ``None`` for Eigenmode analysis.</span>\n<span class=\"sd\">        surface_objects : list, optional</span>\n<span class=\"sd\">            List of objects in the source that are metals. The default is ``None``.</span>\n<span class=\"sd\">        source_project_name : str, optional</span>\n<span class=\"sd\">            Name of the source project. The default is ``None``, in which case the</span>\n<span class=\"sd\">            source from the same project is used.</span>\n<span class=\"sd\">        paramlist : list, dict, optional</span>\n<span class=\"sd\">            List of all parameters to map from source and Icepak design. The default is ``None``.</span>\n<span class=\"sd\">            If ``None`` the variables are set to their values (no mapping).</span>\n<span class=\"sd\">            If it is a list, the specified variables in the icepak design are mapped to variables</span>\n<span class=\"sd\">            in the source design having the same name.</span>\n<span class=\"sd\">            If it is a dictionary, it is possible to map variables to the source design having a different name.</span>\n<span class=\"sd\">            The dictionary structure is {&quot;source_design_variable&quot;: &quot;icepak_variable&quot;}.</span>\n<span class=\"sd\">        object_list : list, optional</span>\n<span class=\"sd\">            List of objects. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignEMLoss</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">surface_objects</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">surface_objects</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">object_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">object_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mapping HFSS EM losses.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">==</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">or</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">project_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;This Project*&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">project_name</span> <span class=\"o\">=</span> <span class=\"n\">source_project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># Generate a list of model objects from the lists made previously and use to map the HFSS losses into Icepak</span>\n        <span class=\"c1\">#</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">object_list</span><span class=\"p\">:</span>\n            <span class=\"n\">all_objects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;Region&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">all_objects</span><span class=\"p\">:</span>\n                <span class=\"n\">all_objects</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s2\">&quot;Region&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">all_objects</span> <span class=\"o\">=</span> <span class=\"n\">object_list</span><span class=\"p\">[:]</span>\n\n        <span class=\"n\">surfaces</span> <span class=\"o\">=</span> <span class=\"n\">surface_objects</span>\n        <span class=\"k\">if</span> <span class=\"n\">map_frequency</span><span class=\"p\">:</span>\n            <span class=\"n\">intr</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">map_frequency</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">intr</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">argparam</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"p\">:</span>\n            <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">paramlist</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">paramlist</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">paramlist</span><span class=\"p\">:</span>\n                <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n        <span class=\"k\">elif</span> <span class=\"n\">paramlist</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">paramlist</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">paramlist</span><span class=\"p\">:</span>\n                <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">paramlist</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">all_objects</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">:</span> <span class=\"n\">project_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Product&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ElectronicsDesktop&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Design&quot;</span><span class=\"p\">:</span> <span class=\"n\">designname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Soln&quot;</span><span class=\"p\">:</span> <span class=\"n\">setupname</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; : &quot;</span> <span class=\"o\">+</span> <span class=\"n\">sweepname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Params&quot;</span><span class=\"p\">:</span> <span class=\"n\">argparam</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ForceSourceToSolve&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PreservePartnerSoln&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PathRelativeTo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;TargetProject&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Intrinsics&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">intr</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SurfaceOnly&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">surfaces</span>\n\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;EMLoss&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EMLoss&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;EM losses mapped from design: </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">designname</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.eval_surface_quantity_from_field_summary\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.eval_surface_quantity_from_field_summary/#pyaedt.icepak.Icepak.eval_surface_quantity_from_field_summary\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">eval_surface_quantity_from_field_summary</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">faces_list</span><span class=\"p\">,</span>\n        <span class=\"n\">quantity_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;HeatTransCoeff&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">savedir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">sweep_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">parameter_dict_with_values</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Export the field surface output.</span>\n\n<span class=\"sd\">        This method exports one CSV file for the specified variation.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        faces_list : list</span>\n<span class=\"sd\">            List of faces to apply.</span>\n<span class=\"sd\">        quantity_name : str, optional</span>\n<span class=\"sd\">            Name of the quantity to export. The default is ``&quot;HeatTransCoeff&quot;``.</span>\n<span class=\"sd\">        savedir : str, optional</span>\n<span class=\"sd\">            Directory to save the CSV file to. The default is ``None``, in which</span>\n<span class=\"sd\">            case the file is exported to the working directory.</span>\n<span class=\"sd\">        filename : str, optional</span>\n<span class=\"sd\">            Name of the CSV file. The default is ``None``, in which case the default</span>\n<span class=\"sd\">            name is used.</span>\n<span class=\"sd\">        sweep_name : str, optional</span>\n<span class=\"sd\">            Name of the setup and name of the sweep. For example, ``&quot;IcepakSetup1 : SteatyState&quot;``.</span>\n<span class=\"sd\">            The default is ``None``, in which case the active setup and active sweep are used.</span>\n<span class=\"sd\">        parameter_dict_with_values : dict, optional</span>\n<span class=\"sd\">            Dictionary of parameters defined for the specific setup with values. The default is ``{}``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the file.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.ExportFieldsSummary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">quantity_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_face_list</span><span class=\"p\">(</span><span class=\"n\">faces_list</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">savedir</span><span class=\"p\">:</span>\n            <span class=\"n\">savedir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">filename</span><span class=\"p\">:</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"n\">quantity_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sweep_name</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">EditFieldsSummarySetting</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;Calculation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;Object&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">quantity_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">parameter_dict_with_values</span><span class=\"p\">:</span>\n            <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;=&#39;&quot;</span> <span class=\"o\">+</span> <span class=\"n\">parameter_dict_with_values</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;&#39; &quot;</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">savedir</span><span class=\"p\">,</span> <span class=\"n\">filename</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.csv&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">ExportFieldsSummary</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">sweep_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DesignVariationKey:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">string</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExportFileName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">filename</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IntrinsicValue:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">filename</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.eval_volume_quantity_from_field_summary\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.eval_volume_quantity_from_field_summary/#pyaedt.icepak.Icepak.eval_volume_quantity_from_field_summary\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">eval_volume_quantity_from_field_summary</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">object_list</span><span class=\"p\">,</span>\n        <span class=\"n\">quantity_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;HeatTransCoeff&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">savedir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">sweep_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">parameter_dict_with_values</span><span class=\"o\">=</span><span class=\"p\">{},</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Export the field volume output.</span>\n\n<span class=\"sd\">        This method exports one CSV file for the specified variation.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_list : list</span>\n<span class=\"sd\">            List of faces to apply.</span>\n<span class=\"sd\">        quantity_name : str, optional</span>\n<span class=\"sd\">            Name of the quantity to export. The default is ``&quot;HeatTransCoeff&quot;``.</span>\n<span class=\"sd\">        savedir : str, optional</span>\n<span class=\"sd\">            Directory to save the CSV file to. The default is ``None``, in which</span>\n<span class=\"sd\">            case the file is exported to the working directory.</span>\n<span class=\"sd\">        filename :  str, optional</span>\n<span class=\"sd\">            Name of the CSV file. The default is ``None``, in which case the default name</span>\n<span class=\"sd\">            is used.</span>\n<span class=\"sd\">        sweep_name :</span>\n<span class=\"sd\">            Name of the setup and name of the sweep. For example, ``&quot;IcepakSetup1 : SteatyState&quot;``.</span>\n<span class=\"sd\">            The default is ``None``, in which case the active setup and active sweep are used.</span>\n<span class=\"sd\">        parameter_dict_with_values : dict, optional</span>\n<span class=\"sd\">            Dictionary of parameters defined for the specific setup with values. The default is ``{}``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Name of the file.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.ExportFieldsSummary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">savedir</span><span class=\"p\">:</span>\n            <span class=\"n\">savedir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">filename</span><span class=\"p\">:</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"n\">quantity_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sweep_name</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">EditFieldsSummarySetting</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;Calculation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;Object&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Volume&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">),</span> <span class=\"n\">quantity_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">parameter_dict_with_values</span><span class=\"p\">:</span>\n            <span class=\"n\">string</span> <span class=\"o\">+=</span> <span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;=&#39;&quot;</span> <span class=\"o\">+</span> <span class=\"n\">parameter_dict_with_values</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;&#39; &quot;</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">savedir</span><span class=\"p\">,</span> <span class=\"n\">filename</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.csv&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">ExportFieldsSummary</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">sweep_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DesignVariationKey:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">string</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExportFileName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">filename</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IntrinsicValue:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">filename</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.export_summary\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.export_summary/#pyaedt.icepak.Icepak.export_summary\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">export_summary</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">output_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Object&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">geometryType</span><span class=\"o\">=</span><span class=\"s2\">&quot;Volume&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">quantity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">variation</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">variationlist</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Export a fields summary of all objects.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        output_dir : str, optional</span>\n<span class=\"sd\">            Name of directory for exporting the fields summary.</span>\n<span class=\"sd\">            The default is ``None``, in which case the fields summary</span>\n<span class=\"sd\">            is exported to the working directory.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution. The default is ``None``, in which case the</span>\n<span class=\"sd\">            the default name is used.</span>\n<span class=\"sd\">        type : string, optional</span>\n<span class=\"sd\">            The default is ``&quot;Object&quot;``.</span>\n<span class=\"sd\">        geometryType : str, optional</span>\n<span class=\"sd\">            Type of the geometry. The default is ``&quot;Volume&quot;``.</span>\n<span class=\"sd\">        quantity : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;Temperature&quot;``.</span>\n<span class=\"sd\">        variation : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        variationlist : list, optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditFieldsSummarySetting</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.ExportFieldsSummary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">variationlist</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">variationlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">all_objs</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Solids&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">all_objs_NonModeled</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Non Model&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">all_objs_model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">item</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs</span> <span class=\"k\">if</span> <span class=\"n\">item</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs_NonModeled</span><span class=\"p\">]</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Objects lists &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">all_objs_model</span><span class=\"p\">))</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs_model</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">EditFieldsSummarySetting</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;Calculation:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">geometryType</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">quantity</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">]]</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Calculation:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"n\">geometryType</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">quantity</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Object &quot;</span> <span class=\"o\">+</span> <span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; not added.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">output_dir</span><span class=\"p\">:</span>\n            <span class=\"n\">output_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">EditFieldsSummarySetting</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution_name</span><span class=\"p\">:</span>\n            <span class=\"n\">solution_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"k\">if</span> <span class=\"n\">variation</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"n\">variationlist</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">ExportFieldsSummary</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">solution_name</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;DesignVariationKey:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">variation</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;=&#39;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;ExportFileName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IPKsummaryReport&quot;</span> <span class=\"o\">+</span> <span class=\"n\">quantity</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.csv&quot;</span><span class=\"p\">),</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">ExportFieldsSummary</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">solution_name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;DesignVariationKey:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ExportFileName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">output_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IPKsummaryReport&quot;</span> <span class=\"o\">+</span> <span class=\"n\">quantity</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.csv&quot;</span><span class=\"p\">),</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.get_radiation_settings\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.get_radiation_settings/#pyaedt.icepak.Icepak.get_radiation_settings\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_radiation_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radiation</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get radiation settings.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        radiation : str</span>\n<span class=\"sd\">            Type of the radiation. Options are:</span>\n\n<span class=\"sd\">            * ``&quot;Nothing&quot;``</span>\n<span class=\"sd\">            * ``&quot;Low&quot;``</span>\n<span class=\"sd\">            * ``&quot;High&quot;``</span>\n<span class=\"sd\">            * ``&quot;Both&quot;``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        (bool, bool)</span>\n<span class=\"sd\">            Tuple containing the low side radiation and the high side radiation.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">radiation</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Nothing&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">low_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">high_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">elif</span> <span class=\"n\">radiation</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Low&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">low_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">high_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">elif</span> <span class=\"n\">radiation</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;High&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">low_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">high_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">elif</span> <span class=\"n\">radiation</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Both&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">low_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">high_side_radiation</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"n\">low_side_radiation</span><span class=\"p\">,</span> <span class=\"n\">high_side_radiation</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.get_link_data\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.get_link_data/#pyaedt.icepak.Icepak.get_link_data\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_link_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">links_data</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get a list of linked data.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        linkData : list</span>\n<span class=\"sd\">            List of the data to retrieve for links. Options are:</span>\n\n<span class=\"sd\">            * Project name, if ``None`` use the active project</span>\n<span class=\"sd\">            * Design name</span>\n<span class=\"sd\">            * HFSS solution name, such as ``&quot;HFSS Setup 1 : Last Adaptive&quot;``</span>\n<span class=\"sd\">            * Force source design simulation, ``True`` or ``False``</span>\n<span class=\"sd\">            * Preserve source design solution, ``True`` or ``False``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List containing the requested link data.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;linkData&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The ``linkData`` parameter was deprecated in 0.6.43. Use the ``links_data`` parameter instead.&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">links_data</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;linkData&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">links_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">project_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;This Project*&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">project_name</span> <span class=\"o\">=</span> <span class=\"n\">links_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">design_name</span> <span class=\"o\">=</span> <span class=\"n\">links_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">hfss_solution_name</span> <span class=\"o\">=</span> <span class=\"n\">links_data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">force_source_sim_enabler</span> <span class=\"o\">=</span> <span class=\"n\">links_data</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"n\">preserve_src_res_enabler</span> <span class=\"o\">=</span> <span class=\"n\">links_data</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:DefnLink&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">project_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Product:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ElectronicsDesktop&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Design:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">design_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Soln:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">hfss_solution_name</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Params&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;ForceSourceToSolve:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">force_source_sim_enabler</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;PreservePartnerSoln:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">preserve_src_res_enabler</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;PathRelativeTo:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;TargetProject&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">arg</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_fan\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_fan/#pyaedt.icepak.Icepak.create_fan\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_fan</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">is_2d</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"s2\">&quot;Circular&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">cross_section</span><span class=\"o\">=</span><span class=\"s2\">&quot;XY&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.008mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">hub_radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a fan component in Icepak that is linked to an HFSS 3D Layout object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Fan name. The default is ``None``, in which case the default name is used.</span>\n<span class=\"sd\">        is_2d : bool, optional</span>\n<span class=\"sd\">            Whether the fan is modeled as 2D. The default is ``False``, in which</span>\n<span class=\"sd\">            case the fan is modeled as 3D.</span>\n<span class=\"sd\">        shape : str, optional</span>\n<span class=\"sd\">            Fan shape. Options are ``&quot;Circular&quot;`` and ``&quot;Rectangular&quot;``. The default</span>\n<span class=\"sd\">            is ``&quot;Circular&quot;``.</span>\n<span class=\"sd\">        cross_section : str, optional</span>\n<span class=\"sd\">            Cross section plane of the fan. The default is ``&quot;XY&quot;``.</span>\n<span class=\"sd\">        radius : str, float, optional</span>\n<span class=\"sd\">            Radius of the fan in modeler units. The default is ``&quot;0.008mm&quot;``.</span>\n<span class=\"sd\">        hub_radius : str, float, optional</span>\n<span class=\"sd\">            Hub radius of the fan in modeler units. The default is ``&quot;0mm&quot;``,</span>\n<span class=\"sd\">        origin : list, optional</span>\n<span class=\"sd\">            List of ``[x,y,z]`` coordinates for the position of the fan in the modeler.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.NativeComponentObject`</span>\n<span class=\"sd\">            NativeComponentObject object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InsertNativeComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Fan&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">basic_component</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;ComponentName&quot;</span><span class=\"p\">:</span> <span class=\"n\">name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Company&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Company URL&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Model Number&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Help URL&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Notes&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IconType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Fan&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_2d</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2D&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;3D&quot;</span>\n        <span class=\"n\">cross_section</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">cs_plane_to_plane_str</span><span class=\"p\">(</span><span class=\"n\">cross_section</span><span class=\"p\">)</span>\n        <span class=\"n\">native_component</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Fan&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Unit&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelAs&quot;</span><span class=\"p\">:</span> <span class=\"n\">model</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Shape&quot;</span><span class=\"p\">:</span> <span class=\"n\">shape</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MovePlane&quot;</span><span class=\"p\">:</span> <span class=\"n\">cross_section</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Radius&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;HubRadius&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">hub_radius</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;CaseSide&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FlowDirChoice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;NormalPositive&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FlowType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Curve&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SwirlType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Magnitude&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FailedFan&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;m3_per_s&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;n_per_meter_sq&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;X&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.01&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;Pressure Loss Curve&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;m_per_sec&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;n_per_meter_sq&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;X&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;10&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">]}</span>\n                <span class=\"p\">),</span>\n                <span class=\"s2\">&quot;IntakeTemp&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Swirl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OperatingRPM&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Magnitude&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">native_props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;TargetCS&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SubmodelDefinitionName&quot;</span><span class=\"p\">:</span> <span class=\"n\">name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ComponentPriorityLists&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({}),</span>\n                <span class=\"s2\">&quot;NextUniqueID&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MoveBackwards&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DatasetType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ComponentDatasetType&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({}),</span>\n                <span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">:</span> <span class=\"n\">basic_component</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;GeometryDefinitionParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;VariableOrders&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()}),</span>\n                <span class=\"s2\">&quot;DesignDefinitionParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;VariableOrders&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()}),</span>\n                <span class=\"s2\">&quot;MaterialDefinitionParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;VariableOrders&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()}),</span>\n                <span class=\"s2\">&quot;MapInstanceParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DesignVariable&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;UniqueDefinitionIdentifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;57c8ab4e-4db9-4881-b6bb-&quot;</span>\n                <span class=\"o\">+</span> <span class=\"n\">random_string</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">char_set</span><span class=\"o\">=</span><span class=\"s2\">&quot;abcdef0123456789&quot;</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;OriginFilePath&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IsLocal&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ChecksumString&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ChecksumHistory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n                <span class=\"s2\">&quot;VersionHistory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n                <span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">:</span> <span class=\"n\">native_component</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InstanceParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span><span class=\"s2\">&quot;GeometryParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;MaterialParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DesignParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">}</span>\n                <span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">component3d_names</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentInstanceNames</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span>\n\n        <span class=\"n\">native</span> <span class=\"o\">=</span> <span class=\"n\">NativeComponentObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Fan&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">native_props</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">native</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"n\">user_defined_component</span> <span class=\"o\">=</span> <span class=\"n\">UserDefinedComponent</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">,</span> <span class=\"n\">native</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Fan&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">native</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">user_defined_component</span>\n            <span class=\"n\">new_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentInstanceNames</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">))</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">component3d_names</span>\n            <span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">_load_from_project</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_native_components</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">native</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">origin</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">new_name</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">native</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_ipk_3dcomponent_pcb\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_ipk_3dcomponent_pcb/#pyaedt.icepak.Icepak.create_ipk_3dcomponent_pcb\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_ipk_3dcomponent_pcb</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">compName</span><span class=\"p\">,</span>\n        <span class=\"n\">setupLinkInfo</span><span class=\"p\">,</span>\n        <span class=\"n\">solutionFreq</span><span class=\"p\">,</span>\n        <span class=\"n\">resolution</span><span class=\"p\">,</span>\n        <span class=\"n\">PCB_CS</span><span class=\"o\">=</span><span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">rad</span><span class=\"o\">=</span><span class=\"s2\">&quot;Nothing&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">extent_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Bounding Box&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">outline_polygon</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">powerin</span><span class=\"o\">=</span><span class=\"s2\">&quot;0W&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">custom_x_resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">custom_y_resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a PCB component in Icepak that is linked to an HFSS 3D Layout object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compName : str</span>\n<span class=\"sd\">            Name of the new PCB component.</span>\n<span class=\"sd\">        setupLinkInfo : list</span>\n<span class=\"sd\">            List of the five elements needed to set up the link in this format:</span>\n<span class=\"sd\">            ``[projectname, designname, solution name, forcesimulation (bool), preserve results (bool)]``.</span>\n<span class=\"sd\">        solutionFreq :</span>\n<span class=\"sd\">            Frequency of the solution if cosimulation is requested.</span>\n<span class=\"sd\">        resolution : int</span>\n<span class=\"sd\">            Resolution of the mapping.</span>\n<span class=\"sd\">        PCB_CS : str, optional</span>\n<span class=\"sd\">            Coordinate system for the PCB. The default is ``&quot;Global&quot;``.</span>\n<span class=\"sd\">        rad : str, optional</span>\n<span class=\"sd\">            Radiating faces. The default is ``&quot;Nothing&quot;``.</span>\n<span class=\"sd\">        extent_type : str, optional</span>\n<span class=\"sd\">            Type of the extent. Options are ``&quot;Bounding Box&quot;`` and ``&quot;Polygon&quot;``.</span>\n<span class=\"sd\">            The default is ``&quot;Bounding Box&quot;``.</span>\n<span class=\"sd\">        outline_polygon : str, optional</span>\n<span class=\"sd\">            Name of the polygon if ``extentype=&quot;Polygon&quot;``. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        powerin : str, optional</span>\n<span class=\"sd\">            Power to dissipate if cosimulation is disabled. The default is ``&quot;0W&quot;``.</span>\n<span class=\"sd\">        custom_x_resolution</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        custom_y_resolution</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.NativeComponentObject`</span>\n<span class=\"sd\">            NativeComponentObject object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InsertNativeComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;extenttype&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The ``extenttype`` parameter was deprecated in 0.6.43. Use the ``extent_type`` parameter instead.&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">extent_type</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;extenttype&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;outlinepolygon&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"sd\">&quot;&quot;&quot;The ``outlinepolygon`` parameter was deprecated in 0.6.43.</span>\n<span class=\"sd\">                Use the ``outline_polygon`` parameter instead.&quot;&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">outline_polygon</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;outlinepolygon&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">low_radiation</span><span class=\"p\">,</span> <span class=\"n\">high_radiation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_radiation_settings</span><span class=\"p\">(</span><span class=\"n\">rad</span><span class=\"p\">)</span>\n        <span class=\"n\">hfss_link_info</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"n\">_arg2dict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_link_data</span><span class=\"p\">(</span><span class=\"n\">setupLinkInfo</span><span class=\"p\">),</span> <span class=\"n\">hfss_link_info</span><span class=\"p\">)</span>\n\n        <span class=\"n\">native_props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PCB&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Unit&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;MovePlane&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;XY&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Use3DLayoutExtents&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;ExtentsType&quot;</span><span class=\"p\">:</span> <span class=\"n\">extent_type</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;OutlinePolygon&quot;</span><span class=\"p\">:</span> <span class=\"n\">outline_polygon</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;CreateDevices&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;CreateTopSolderballs&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;CreateBottomSolderballs&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Resolution&quot;</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">resolution</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;LowSide&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"n\">low_radiation</span><span class=\"p\">}),</span>\n                        <span class=\"s2\">&quot;HighSide&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"n\">high_radiation</span><span class=\"p\">}),</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;IconType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PCB&quot;</span><span class=\"p\">})</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">custom_x_resolution</span> <span class=\"ow\">and</span> <span class=\"n\">custom_y_resolution</span><span class=\"p\">:</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;UseThermalLink&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">solutionFreq</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;CustomResolution&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;CustomResolutionRow&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">custom_x_resolution</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;CustomResolutionCol&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">600</span>\n            <span class=\"c1\"># compDefinition += [&quot;UseThermalLink:=&quot;, solutionFreq!=&quot;&quot;,</span>\n            <span class=\"c1\">#                    &quot;CustomResolution:=&quot;, True, &quot;CustomResolutionRow:=&quot;, custom_x_resolution,</span>\n            <span class=\"c1\">#                    &quot;CustomResolutionCol:=&quot;, 600]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;UseThermalLink&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">solutionFreq</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;CustomResolution&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"c1\"># compDefinition += [&quot;UseThermalLink:=&quot;, solutionFreq != &quot;&quot;,</span>\n            <span class=\"c1\">#                    &quot;CustomResolution:=&quot;, False]</span>\n        <span class=\"k\">if</span> <span class=\"n\">solutionFreq</span><span class=\"p\">:</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">solutionFreq</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DefnLink&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">hfss_link_info</span><span class=\"p\">[</span><span class=\"s2\">&quot;DefnLink&quot;</span><span class=\"p\">]</span>\n            <span class=\"c1\"># compDefinition += [&quot;Frequency:=&quot;, solutionFreq, hfssLinkInfo]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Power&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">powerin</span>\n            <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DefnLink&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">hfss_link_info</span><span class=\"p\">[</span><span class=\"s2\">&quot;DefnLink&quot;</span><span class=\"p\">]</span>\n            <span class=\"c1\"># compDefinition += [&quot;Power:=&quot;, powerin, hfssLinkInfo]</span>\n\n        <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;TargetCS&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">PCB_CS</span>\n        <span class=\"n\">native</span> <span class=\"o\">=</span> <span class=\"n\">NativeComponentObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PCB&quot;</span><span class=\"p\">,</span> <span class=\"n\">compName</span><span class=\"p\">,</span> <span class=\"n\">native_props</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">native</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"n\">user_defined_component</span> <span class=\"o\">=</span> <span class=\"n\">UserDefinedComponent</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">,</span> <span class=\"n\">native</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">native_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;PCB&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">native</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">user_defined_component</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">_load_from_project</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_native_components</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">native</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">native</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_pcb_from_3dlayout\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_pcb_from_3dlayout/#pyaedt.icepak.Icepak.create_pcb_from_3dlayout\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_pcb_from_3dlayout</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">component_name</span><span class=\"p\">,</span>\n        <span class=\"n\">project_name</span><span class=\"p\">,</span>\n        <span class=\"n\">design_name</span><span class=\"p\">,</span>\n        <span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">extent_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Bounding Box&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">outline_polygon</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">close_linked_project_after_import</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">custom_x_resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">custom_y_resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">power_in</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a PCB component in Icepak that is linked to an HFSS 3DLayout object linking only to the geometry file.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           No solution is linked.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_name : str</span>\n<span class=\"sd\">            Name of the new PCB component to create in Icepak.</span>\n<span class=\"sd\">        project_name : str</span>\n<span class=\"sd\">            Name of the project or the full path to the project.</span>\n<span class=\"sd\">        design_name : str</span>\n<span class=\"sd\">            Name of the design.</span>\n<span class=\"sd\">        resolution : int, optional</span>\n<span class=\"sd\">            Resolution of the mapping. The default is ``2``.</span>\n<span class=\"sd\">        extent_type :</span>\n<span class=\"sd\">            Type of the extent. Options are ``&quot;Polygon&quot;`` and ``&quot;Bounding Box&quot;``. The default</span>\n<span class=\"sd\">            is ``&quot;Bounding Box&quot;``.</span>\n<span class=\"sd\">        outline_polygon : str, optional</span>\n<span class=\"sd\">            Name of the outline polygon if ``extent_type=&quot;Polygon&quot;``. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        close_linked_project_after_import : bool, optional</span>\n<span class=\"sd\">            Whether to close the linked AEDT project after the import. The default is ``True``.</span>\n<span class=\"sd\">        custom_x_resolution :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        custom_y_resolution :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        power_in : float, optional</span>\n<span class=\"sd\">            Power in in Watt.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InsertNativeComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;extenttype&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;``extenttype`` was deprecated in 0.6.43. Use ``extent_type`` instead.&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">extent_type</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;extenttype&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;outlinepolygon&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;``outlinepolygon`` was deprecated in 0.6.43. Use ``outline_polygon`` instead.&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">outline_polygon</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;outlinepolygon&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">project_name</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">:</span>\n            <span class=\"n\">project_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;This Project*&quot;</span>\n        <span class=\"n\">link_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;--EDB Layout Data--&gt;&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_ipk_3dcomponent_pcb</span><span class=\"p\">(</span>\n            <span class=\"n\">component_name</span><span class=\"p\">,</span>\n            <span class=\"n\">link_data</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">resolution</span><span class=\"p\">,</span>\n            <span class=\"n\">extent_type</span><span class=\"o\">=</span><span class=\"n\">extent_type</span><span class=\"p\">,</span>\n            <span class=\"n\">outline_polygon</span><span class=\"o\">=</span><span class=\"n\">outline_polygon</span><span class=\"p\">,</span>\n            <span class=\"n\">custom_x_resolution</span><span class=\"o\">=</span><span class=\"n\">custom_x_resolution</span><span class=\"p\">,</span>\n            <span class=\"n\">custom_y_resolution</span><span class=\"o\">=</span><span class=\"n\">custom_y_resolution</span><span class=\"p\">,</span>\n            <span class=\"n\">powerin</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">power_in</span><span class=\"p\">,</span> <span class=\"s2\">&quot;W&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">close_linked_project_after_import</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;.aedt&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">project_name</span><span class=\"p\">:</span>\n            <span class=\"n\">prjname</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_project</span><span class=\"p\">(</span><span class=\"n\">prjname</span><span class=\"p\">,</span> <span class=\"n\">save_project</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;PCB component correctly created in Icepak.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">status</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.copyGroupFrom\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.copyGroupFrom/#pyaedt.icepak.Icepak.copyGroupFrom\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copyGroupFrom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"p\">,</span> <span class=\"n\">source_design</span><span class=\"p\">,</span> <span class=\"n\">source_project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">source_project_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Copy a group from another design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        group_name : str</span>\n<span class=\"sd\">            Name of the group.</span>\n<span class=\"sd\">        source_design : str</span>\n<span class=\"sd\">            Name of the source design.</span>\n<span class=\"sd\">        source_project_name : str, optional</span>\n<span class=\"sd\">            Name of the source project. The default is ``None`` in which case, the current active project will be used.</span>\n<span class=\"sd\">        source_project_path : str, optional</span>\n<span class=\"sd\">            Path to the source project. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Copy</span>\n<span class=\"sd\">        &gt;&gt;&gt; oeditor.Paste</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;groupName&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The ``groupName`` parameter was deprecated in 0.6.43. Use the ``group_name`` parameter instead.&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">group_name</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;groupName&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;sourceDesign&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The ``sourceDesign`` parameter was deprecated in 0.6.43. Use the ``source_design`` parameter instead.&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">source_design</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;sourceDesign&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;sourceProject&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"sd\">&quot;&quot;&quot;The ``sourceProject`` parameter was deprecated in 0.6.43.</span>\n<span class=\"sd\">                Use the ``source_project_name`` parameter instead.&quot;&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">source_project_name</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;sourceProject&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;sourceProjectPath&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n<span class=\"w\">                </span><span class=\"sd\">&quot;&quot;&quot;The ``sourceProjectPath`` parameter was deprecated in 0.6.43.</span>\n<span class=\"sd\">                Use the ``source_project_path`` parameter instead.&quot;&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">source_project_path</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;sourceProjectPath&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">source_project_name</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"ow\">or</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">active_project</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">OpenProject</span><span class=\"p\">(</span><span class=\"n\">source_project_path</span><span class=\"p\">)</span>\n            <span class=\"n\">active_project</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">source_project_name</span><span class=\"p\">)</span>\n\n        <span class=\"n\">active_design</span> <span class=\"o\">=</span> <span class=\"n\">active_project</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">source_design</span><span class=\"p\">)</span>\n        <span class=\"n\">active_editor</span> <span class=\"o\">=</span> <span class=\"n\">active_design</span><span class=\"o\">.</span><span class=\"n\">SetActiveEditor</span><span class=\"p\">(</span><span class=\"s2\">&quot;3D Modeler&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">active_editor</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"p\">])</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">_load_from_project</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.globalMeshSettings\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.globalMeshSettings/#pyaedt.icepak.Icepak.globalMeshSettings\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">globalMeshSettings</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">meshtype</span><span class=\"p\">,</span>\n        <span class=\"n\">gap_min_elements</span><span class=\"o\">=</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">noOgrids</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">MLM_en</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">MLM_Type</span><span class=\"o\">=</span><span class=\"s2\">&quot;3D&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">stairStep_en</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">edge_min_elements</span><span class=\"o\">=</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n        <span class=\"nb\">object</span><span class=\"o\">=</span><span class=\"s2\">&quot;Region&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a custom mesh tailored on a PCB design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        meshtype : int</span>\n<span class=\"sd\">            Type of the mesh. Options are ``1``, ``2``, and ``3``, which represent</span>\n<span class=\"sd\">            respectively a coarse, standard, and very accurate mesh.</span>\n<span class=\"sd\">        gap_min_elements : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;1&quot;``.</span>\n<span class=\"sd\">        noOgrids : bool, optional</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        MLM_en : bool, optional</span>\n<span class=\"sd\">            The default is ``True``.</span>\n<span class=\"sd\">        MLM_Type : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;3D&quot;``.</span>\n<span class=\"sd\">        stairStep_en : bool, optional</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        edge_min_elements : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;1&quot;``.</span>\n<span class=\"sd\">        object : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;Region&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditGlobalMeshRegion</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">bounding_box</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetModelBoundingBox</span><span class=\"p\">()</span>\n        <span class=\"n\">xsize</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">15</span> <span class=\"o\">*</span> <span class=\"n\">meshtype</span> <span class=\"o\">*</span> <span class=\"n\">meshtype</span><span class=\"p\">)</span>\n        <span class=\"n\">ysize</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">15</span> <span class=\"o\">*</span> <span class=\"n\">meshtype</span> <span class=\"o\">*</span> <span class=\"n\">meshtype</span><span class=\"p\">)</span>\n        <span class=\"n\">zsize</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]))</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">meshtype</span><span class=\"p\">)</span>\n        <span class=\"n\">MaxSizeRatio</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">meshtype</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditGlobalMeshRegion</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Settings&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MeshMethod:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MesherHD&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;UserSpecifiedSettings:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ComputeGap:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxElementSizeX:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">xsize</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxElementSizeY:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ysize</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxElementSizeZ:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">zsize</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MinElementsInGap:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">gap_min_elements</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MinElementsOnEdge:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">edge_min_elements</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxSizeRatio:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MaxSizeRatio</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;NoOGrids:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">noOgrids</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EnableMLM:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">MLM_en</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EnforeMLMType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">MLM_Type</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxLevels:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;BufferLayers:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;UniformMeshParametersType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Average&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;StairStepMeshing:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">stairStep_en</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MinGapX:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">xsize</span> <span class=\"o\">/</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MinGapY:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">xsize</span> <span class=\"o\">/</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MinGapZ:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">xsize</span> <span class=\"o\">/</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Objects:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"nb\">object</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_meshregion_component\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_meshregion_component/#pyaedt.icepak.Icepak.create_meshregion_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_meshregion_component</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">scale_factor</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Component_Region&quot;</span><span class=\"p\">,</span> <span class=\"n\">restore_padding_values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">]</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a bounding box to use as a mesh region in Icepak.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        scale_factor : float, optional</span>\n<span class=\"sd\">            The default is ``1.0``.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the bounding box. The default is ``&quot;Component_Region&quot;``.</span>\n<span class=\"sd\">        restore_padding_values : list, optional</span>\n<span class=\"sd\">            The default is ``[50,50,50,50,50,50]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">            Tuple containing the ``(x, y, z)`` distances of the region.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oeditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">edit_region_dimensions</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n\n        <span class=\"n\">vertex_ids</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetVertexIDsFromObject</span><span class=\"p\">(</span><span class=\"s2\">&quot;Region&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">x_values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">y_values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">z_values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">vertex_id</span> <span class=\"ow\">in</span> <span class=\"n\">vertex_ids</span><span class=\"p\">:</span>\n            <span class=\"n\">tmp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetVertexPosition</span><span class=\"p\">(</span><span class=\"n\">vertex_id</span><span class=\"p\">)</span>\n            <span class=\"n\">x_values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"n\">y_values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">z_values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n\n        <span class=\"n\">scale_factor</span> <span class=\"o\">=</span> <span class=\"n\">scale_factor</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n        <span class=\"n\">delta_x</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">)))</span> <span class=\"o\">*</span> <span class=\"n\">scale_factor</span>\n        <span class=\"n\">x_max</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">delta_x</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n        <span class=\"n\">x_min</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_values</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"n\">delta_x</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n\n        <span class=\"n\">delta_y</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">y_values</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">y_values</span><span class=\"p\">)))</span> <span class=\"o\">*</span> <span class=\"n\">scale_factor</span>\n        <span class=\"n\">y_max</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">y_values</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">delta_y</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n        <span class=\"n\">y_min</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">y_values</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"n\">delta_y</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n\n        <span class=\"n\">delta_z</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">z_values</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">z_values</span><span class=\"p\">)))</span> <span class=\"o\">*</span> <span class=\"n\">scale_factor</span>\n        <span class=\"n\">z_max</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">z_values</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"n\">delta_z</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n        <span class=\"n\">z_min</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">z_values</span><span class=\"p\">))</span> <span class=\"o\">-</span> <span class=\"n\">delta_z</span> <span class=\"o\">/</span> <span class=\"mf\">2.0</span>\n\n        <span class=\"n\">dis_x</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">x_max</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">x_min</span><span class=\"p\">))</span>\n        <span class=\"n\">dis_y</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">y_max</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">y_min</span><span class=\"p\">))</span>\n        <span class=\"n\">dis_z</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">z_max</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">z_min</span><span class=\"p\">))</span>\n\n        <span class=\"n\">min_position</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">Position</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">x_min</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">y_min</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">z_min</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mesh_box</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_box</span><span class=\"p\">(</span><span class=\"n\">min_position</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">dis_x</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">dis_y</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">dis_z</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">edit_region_dimensions</span><span class=\"p\">(</span><span class=\"n\">restore_padding_values</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">dis_x</span><span class=\"p\">,</span> <span class=\"n\">dis_y</span><span class=\"p\">,</span> <span class=\"n\">dis_z</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.delete_em_losses\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.delete_em_losses/#pyaedt.icepak.Icepak.delete_em_losses\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_em_losses</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bound_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete the EM losses boundary.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        bound_name : str</span>\n<span class=\"sd\">            Name of the boundary.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.DeleteBoundaries</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oboundary</span><span class=\"o\">.</span><span class=\"n\">DeleteBoundaries</span><span class=\"p\">([</span><span class=\"n\">bound_name</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.delete_pcb_component\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.delete_pcb_component/#pyaedt.icepak.Icepak.delete_pcb_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_pcb_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">comp_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete a PCB component.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        comp_name : str</span>\n<span class=\"sd\">            Name of the PCB component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Delete</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">comp_name</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.get_liquid_objects\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.get_liquid_objects/#pyaedt.icepak.Icepak.get_liquid_objects\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_liquid_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get liquid material objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of all liquid material objects.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">liquids</span><span class=\"p\">:</span>\n            <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_objects_by_material</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.get_gas_objects\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.get_gas_objects/#pyaedt.icepak.Icepak.get_gas_objects\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_gas_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get gas objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of all gas objects.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">gases</span><span class=\"p\">:</span>\n            <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_objects_by_material</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.generate_fluent_mesh\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.generate_fluent_mesh/#pyaedt.icepak.Icepak.generate_fluent_mesh\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">generate_fluent_mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_lists</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Generate a Fluent mesh for a list of selected objects and assign the mesh automatically to the objects.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_lists : list, optional</span>\n<span class=\"sd\">            List of objects to compute the Fluent mesh on. The default is ``None``, in which case</span>\n<span class=\"sd\">            all fluids objects are used to compute the mesh.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_version_id</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">:]</span>\n        <span class=\"n\">ansys_install_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;ANSYS</span><span class=\"si\">{}</span><span class=\"s2\">_DIR&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">),</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ansys_install_dir</span><span class=\"p\">:</span>\n            <span class=\"n\">ansys_install_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;AWP_ROOT</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">),</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">ansys_install_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Fluent </span><span class=\"si\">{}</span><span class=\"s2\"> has to be installed on to generate mesh.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;ANSYS</span><span class=\"si\">{}</span><span class=\"s2\">_DIR&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">object_lists</span><span class=\"p\">:</span>\n            <span class=\"n\">object_lists</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_liquid_objects</span><span class=\"p\">()</span>\n            <span class=\"k\">assert</span> <span class=\"n\">object_lists</span><span class=\"p\">,</span> <span class=\"s2\">&quot;No Fluids objects found.&quot;</span>\n        <span class=\"n\">object_lists</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">object_lists</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span>\n        <span class=\"n\">sab_file_pointer</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"n\">file_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.sab&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mesh_file_pointer</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"n\">file_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.msh&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fl_uscript_file_pointer</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FLUscript.jou&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">sab_file_pointer</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">sab_file_pointer</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">fl_uscript_file_pointer</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">fl_uscript_file_pointer</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.trn&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.trn&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">export_3d_model</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.sab&quot;</span><span class=\"p\">,</span> <span class=\"n\">object_lists</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Failed to export .sab&quot;</span>\n\n        <span class=\"c1\"># Building Fluent journal script file *.jou</span>\n        <span class=\"n\">fluent_script</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">fl_uscript_file_pointer</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;/file/start-transcript &quot;</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;.trn&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;/file/set-tui-version &quot;</span><span class=\"si\">{}</span><span class=\"s1\">&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_version_id</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_version_id</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(enable-feature &#39;serial-hexcore-without-poly)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;(cx-gui-do cx-activate-tab-index &quot;NavigationPane*Frame1(TreeTab)&quot; 0)</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.InitializeWorkflow(WorkflowType=r&#39;Watertight Geometry&#39;)</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Import Geometry&#39;].&quot;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;Arguments.setState({r&#39;FileName&#39;: r&#39;&quot;</span> <span class=\"o\">+</span> <span class=\"n\">sab_file_pointer</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;&#39;,})</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Import Geometry&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Add Local Sizing&#39;].AddChildToTask()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Add Local Sizing&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Generate the Surface Mesh&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Describe Geometry&#39;].UpdateChildTasks(SetupTypeChanged=False)</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Describe Geometry&#39;].&quot;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;Arguments.setState({r&#39;SetupType&#39;: r&#39;The geometry consists of only fluid regions with no voids&#39;,})</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Describe Geometry&#39;].UpdateChildTasks(SetupTypeChanged=True)</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Describe Geometry&#39;].Arguments.setState({r&#39;InvokeShareTopology&#39;: r&#39;Yes&#39;,&quot;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;r&#39;SetupType&#39;: r&#39;The geometry consists of only fluid regions with no voids&#39;,r&#39;WallToInternal&#39;: &quot;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;r&#39;Yes&#39;,})</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Describe Geometry&#39;].UpdateChildTasks(SetupTypeChanged=False)</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Describe Geometry&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Apply Share Topology&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Update Boundaries&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Update Regions&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Add Boundary Layers&#39;].AddChildToTask()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Add Boundary Layers&#39;].InsertCompoundChildTask()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;smooth-transition_1&#39;].&quot;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;Arguments.setState({r&#39;BLControlName&#39;: r&#39;smooth-transition_1&#39;,})</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Add Boundary Layers&#39;].Arguments.setState(</span><span class=\"si\">{}</span><span class=\"s2\">)</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;smooth-transition_1&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># r&#39;VolumeFill&#39;: r&#39;hexcore&#39; / r&#39;tetrahedral&#39;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Generate the Volume Mesh&#39;].Arguments.setState({r&#39;VolumeFill&#39;: &quot;</span>\n        <span class=\"n\">cmd</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;r&#39;hexcore&#39;, r&#39;VolumeMeshPreferences&#39;: {r&#39;MergeBodyLabels&#39;: r&#39;yes&#39;,},})</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;(%py-exec </span><span class=\"se\">\\&quot;</span><span class=\"s2\">workflow.TaskObject[&#39;Generate the Volume Mesh&#39;].Execute()</span><span class=\"se\">\\&quot;</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;/file/hdf no</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">&#39;/file/write-mesh &quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;</span><span class=\"se\">\\n</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;/file/stop-transcript</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;/exit,</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">fluent_script</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Fluent command line parameters: -meshing -i &lt;journal&gt; -hidden -tm&lt;x&gt; (# processors for meshing) -wait</span>\n        <span class=\"n\">fl_ucommand</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">desktop_install_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fluent&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ntbin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;win64&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;fluent.exe&quot;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;3d&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;-meshing&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;-hidden&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;-i&quot;</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">fl_uscript_file_pointer</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Fluent is starting in BG.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">fl_ucommand</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.trn&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.trn&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">fl_uscript_file_pointer</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">fl_uscript_file_pointer</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">sab_file_pointer</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">sab_file_pointer</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">mesh_file_pointer</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span> <span class=\"o\">+</span> <span class=\"n\">mesh_file_pointer</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;&#39; has been created.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">assign_mesh_from_file</span><span class=\"p\">(</span><span class=\"n\">object_lists</span><span class=\"p\">,</span> <span class=\"n\">mesh_file_pointer</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to create msh file&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.apply_icepak_settings\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.apply_icepak_settings/#pyaedt.icepak.Icepak.apply_icepak_settings\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">apply_icepak_settings</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">ambienttemp</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"n\">gravityDir</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"n\">perform_minimal_val</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">default_fluid</span><span class=\"o\">=</span><span class=\"s2\">&quot;air&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">default_solid</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">default_surface</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Apply Icepak default design settings.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        ambienttemp : float, str, optional</span>\n<span class=\"sd\">            Ambient temperature, which can be an integer or a parameter already</span>\n<span class=\"sd\">            created in AEDT. The default is ``20``.</span>\n<span class=\"sd\">        gravityDir : int, optional</span>\n<span class=\"sd\">            Gravity direction index in the range ``[0, 5]``. The default is ``5``.</span>\n<span class=\"sd\">        perform_minimal_val : bool, optional</span>\n<span class=\"sd\">            Whether to perform minimal validation. The default is ``True``.</span>\n<span class=\"sd\">            If ``False``, full validation is performed.</span>\n<span class=\"sd\">        default_fluid : str, optional</span>\n<span class=\"sd\">            Type of fluid. The default is ``&quot;Air&quot;``.</span>\n<span class=\"sd\">        default_solid :</span>\n<span class=\"sd\">            Type of solid. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        default_surface :</span>\n<span class=\"sd\">            Type of surface. The default is ``&quot;Steel-oxidised-surface&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetDesignSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">ambient_temperature</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">ambienttemp</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cel&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">GVPos</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">gravityDir</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">GVPos</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">gravity_axis</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">gravityDir</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">SetDesignSettings</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Design Settings Data&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Perform Minimal validation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">perform_minimal_val</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default Fluid Material:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">default_fluid</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default Solid Material:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">default_solid</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default Surface Material:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">default_surface</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AmbientTemperature:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">ambient_temperature</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AmbientPressure:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;0n_per_meter_sq&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AmbientRadiationTemperature:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">ambient_temperature</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Gravity Vector CS ID:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Gravity Vector Axis:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">gravity_axis</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Positive:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">GVPos</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Model Validation Settings&quot;</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_surface_material\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_surface_material/#pyaedt.icepak.Icepak.assign_surface_material\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_surface_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign a surface material to one or more objects.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        obj : str, list</span>\n<span class=\"sd\">            One or more objects to assign surface materials to.</span>\n<span class=\"sd\">        mat : str</span>\n<span class=\"sd\">            Material to assign. The material must be present in the database.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">objs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">objs</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">))</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">objs</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Surface Material&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">mat</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">]],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Warning. The material is not the database. Use add_surface_material.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">:</span>\n            <span class=\"n\">oo</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_oo_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface Materials/</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">))</span>\n            <span class=\"k\">if</span> <span class=\"n\">oo</span><span class=\"p\">:</span>\n                <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Material</span> <span class=\"kn\">import</span> <span class=\"n\">SurfaceMaterial</span>\n\n                <span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">SurfaceMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">)</span>\n                <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">coordinate_system</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropEvaluatedValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Coordinate System Type&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Surface Emissivity&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">emissivity</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropEvaluatedValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Surface Emissivity&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Surface Roughness&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">surface_roughness</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropEvaluatedValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Surface Roughness&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Solar Behavior&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">surface_clarity_type</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropEvaluatedValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Solar Behavior&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Solar Diffuse Absorptance&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">surface_diffuse_absorptance</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropEvaluatedValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Solar Diffuse Absorptance&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Solar Normal Absorptance&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">surface_incident_absorptance</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetPropEvaluatedValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Solar Normal Absorptance&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">sm</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_two_resistor_network_block_depr\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_two_resistor_network_block_depr/#pyaedt.icepak.Icepak.create_two_resistor_network_block_depr\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_two_resistor_network_block_depr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">power</span><span class=\"p\">,</span> <span class=\"n\">rjb</span><span class=\"p\">,</span> <span class=\"n\">rjc</span><span class=\"p\">,</span> <span class=\"n\">placement</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a two-resistor network block.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.6.30</span>\n<span class=\"sd\">            This method is replaced by the ``create_two_resistor_network_block`` method.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            Name of the object (3D block primitive) on which to create the two-resistor</span>\n<span class=\"sd\">            network.</span>\n<span class=\"sd\">        power : float</span>\n<span class=\"sd\">            Junction power in [W].</span>\n<span class=\"sd\">        rjb : float</span>\n<span class=\"sd\">            Junction-to-board thermal resistance in [K/W].</span>\n<span class=\"sd\">        rjc : float</span>\n<span class=\"sd\">            Junction-to-case thermal resistance in [K/W].</span>\n<span class=\"sd\">        placement : str</span>\n<span class=\"sd\">            Placement of the network block. Options are:</span>\n<span class=\"sd\">            - ``top``: Network block is placed on top of the board.</span>\n<span class=\"sd\">            - &quot;bottom&quot; : Network block is placed on bottom of the board.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignNetworkBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; box = icepak.modeler.create_box([4, 5, 6], [5, 5, 5], &quot;NetworkBox1&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; block = icepak.create_two_resistor_network_block(&quot;NetworkBox1&quot;, &quot;2W&quot;, 20, 10, &quot;top&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; block.props[&quot;Nodes&quot;][&quot;Internal&quot;][0]</span>\n<span class=\"sd\">        &#39;2W&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;This method is deprecated in 0.6.29. Use the ``create_two_resistor_network_block`` method instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">object_handle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span>\n        <span class=\"n\">placement</span> <span class=\"o\">=</span> <span class=\"n\">placement</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">placement</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;top&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">board_face_id</span> <span class=\"o\">=</span> <span class=\"n\">object_handle</span><span class=\"o\">.</span><span class=\"n\">top_face_z</span><span class=\"o\">.</span><span class=\"n\">id</span>\n            <span class=\"n\">case_face_id</span> <span class=\"o\">=</span> <span class=\"n\">object_handle</span><span class=\"o\">.</span><span class=\"n\">bottom_face_z</span><span class=\"o\">.</span><span class=\"n\">id</span>\n            <span class=\"n\">board_side</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;bottom&quot;</span>\n            <span class=\"n\">case_side</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;top&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">board_face_id</span> <span class=\"o\">=</span> <span class=\"n\">object_handle</span><span class=\"o\">.</span><span class=\"n\">bottom_face_z</span><span class=\"o\">.</span><span class=\"n\">id</span>\n            <span class=\"n\">case_face_id</span> <span class=\"o\">=</span> <span class=\"n\">object_handle</span><span class=\"o\">.</span><span class=\"n\">top_face_z</span><span class=\"o\">.</span><span class=\"n\">id</span>\n            <span class=\"n\">board_side</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;top&quot;</span>\n            <span class=\"n\">case_side</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;bottom&quot;</span>\n\n        <span class=\"c1\"># Define network properties in props directory</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">board_face_id</span><span class=\"p\">,</span> <span class=\"n\">case_face_id</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;Nodes&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Case_side(&quot;</span> <span class=\"o\">+</span> <span class=\"n\">case_side</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">case_face_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NoResistance&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Board_side(&quot;</span> <span class=\"o\">+</span> <span class=\"n\">board_side</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">board_face_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NoResistance&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">power</span><span class=\"p\">],</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Links&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Rjc&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Case_side(&quot;</span> <span class=\"o\">+</span> <span class=\"n\">case_side</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rjc</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel_per_w&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Rjb&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Board_side(&quot;</span> <span class=\"o\">+</span> <span class=\"n\">board_side</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rjb</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel_per_w&quot;</span><span class=\"p\">],</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">),</span>\n            <span class=\"s2\">&quot;SchematicData&quot;</span><span class=\"p\">:</span> <span class=\"p\">({}),</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"c1\"># Default material is Ceramic_material</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Ceramic_material&quot;</span>\n\n        <span class=\"c1\"># Create boundary condition and set solve_inside = False</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Network&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">primitives</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.import_idf\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.import_idf/#pyaedt.icepak.Icepak.import_idf\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_idf</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">board_path</span><span class=\"p\">,</span>\n        <span class=\"n\">library_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">control_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">filter_cap</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">filter_ind</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">filter_res</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">filter_height_under</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">filter_height_exclude_2d</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">power_under</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">create_filtered_as_non_model</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">high_surface_thick</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.07mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">low_surface_thick</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.07mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">internal_thick</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.07mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">internal_layer_number</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">high_surface_coverage</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\n        <span class=\"n\">low_surface_coverage</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\n        <span class=\"n\">internal_layer_coverage</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\n        <span class=\"n\">trace_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Cu-Pure&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">substrate_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;FR-4&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">create_board</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">model_board_as_rect</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">model_device_as_rect</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">cutoff_height</span><span class=\"o\">=</span><span class=\"s2\">&quot;5mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">component_lib</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import an IDF file into an Icepak design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        board_path : str</span>\n<span class=\"sd\">            Full path to the EMN/BDF file.</span>\n<span class=\"sd\">        library_path : str</span>\n<span class=\"sd\">            Full path to the EMP/LDF file. The default is ``None``, in which case a search for an EMP/LDF file</span>\n<span class=\"sd\">            with the same name as the EMN/BDF file is performed in the folder with the EMN/BDF file.</span>\n<span class=\"sd\">        control_path : str</span>\n<span class=\"sd\">            Full path to the XML file. The default is ``None``, in which case a search for an XML file</span>\n<span class=\"sd\">            with the same name as the EMN/BDF file is performed in the folder with the EMN/BDF file.</span>\n<span class=\"sd\">        filter_cap : bool, optional</span>\n<span class=\"sd\">            Whether to filter capacitors from the IDF file. The default is ``False``.</span>\n<span class=\"sd\">        filter_ind : bool, optional</span>\n<span class=\"sd\">            Whether to filter inductors from the IDF file. The default is ``False``.</span>\n<span class=\"sd\">        filter_res : bool, optional</span>\n<span class=\"sd\">            Whether to filter resistors from the IDF file. The default is ``False``.</span>\n<span class=\"sd\">        filter_height_under : float or str, optional</span>\n<span class=\"sd\">            Filter components under a given height. The default is ``None``, in which case</span>\n<span class=\"sd\">            no components are filtered based on height.</span>\n<span class=\"sd\">        filter_height_exclude_2d : bool, optional</span>\n<span class=\"sd\">            Whether to filter 2D components from the IDF file. The default is ``False``.</span>\n<span class=\"sd\">        power_under : float or str, optional</span>\n<span class=\"sd\">            Filter components with power under a given mW. The default is ``None``, in which</span>\n<span class=\"sd\">            case no components are filtered based on power.</span>\n<span class=\"sd\">        create_filtered_as_non_model : bool, optional</span>\n<span class=\"sd\">            Whether to set imported filtered components as ``Non-Model``. The default is ``False``.</span>\n<span class=\"sd\">        high_surface_thick : float or str optional</span>\n<span class=\"sd\">            High surface thickness. The default is ``&quot;0.07mm&quot;``.</span>\n<span class=\"sd\">        low_surface_thick : float or str, optional</span>\n<span class=\"sd\">            Low surface thickness. The default is ``&quot;0.07mm&quot;``.</span>\n<span class=\"sd\">        internal_thick : float or str, optional</span>\n<span class=\"sd\">            Internal layer thickness. The default is ``&quot;0.07mm&quot;``.</span>\n<span class=\"sd\">        internal_layer_number : int, optional</span>\n<span class=\"sd\">            Number of internal layers. The default is ``2``.</span>\n<span class=\"sd\">        high_surface_coverage : float, optional</span>\n<span class=\"sd\">            High surface material coverage. The default is ``30``.</span>\n<span class=\"sd\">        low_surface_coverage : float, optional</span>\n<span class=\"sd\">            Low surface material coverage. The default is ``30``.</span>\n<span class=\"sd\">        internal_layer_coverage : float, optional</span>\n<span class=\"sd\">            Internal layer material coverage. The default is ``30``.</span>\n<span class=\"sd\">        trace_material : str, optional</span>\n<span class=\"sd\">            Trace material. The default is ``&quot;Cu-Pure&quot;``.</span>\n<span class=\"sd\">        substrate_material : str, optional</span>\n<span class=\"sd\">            Substrate material. The default is ``&quot;FR-4&quot;``.</span>\n<span class=\"sd\">        create_board : bool, optional</span>\n<span class=\"sd\">            Whether to create the board. The default is ``True``.</span>\n<span class=\"sd\">        model_board_as_rect : bool, optional</span>\n<span class=\"sd\">            Whether to create the board as a rectangle. The default is ``False``.</span>\n<span class=\"sd\">        model_device_as_rect : bool, optional</span>\n<span class=\"sd\">            Whether to create the components as rectangles. The default is ``True``.</span>\n<span class=\"sd\">        cutoff_height : str or float, optional</span>\n<span class=\"sd\">            Cutoff height. The default is ``None``.</span>\n<span class=\"sd\">        component_lib : str, optional</span>\n<span class=\"sd\">            Full path to the component library.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ImportIDF</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">library_path</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">board_path</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;.emn&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">library_path</span> <span class=\"o\">=</span> <span class=\"n\">board_path</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;emp&quot;</span>\n            <span class=\"k\">if</span> <span class=\"n\">board_path</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;.bdf&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">library_path</span> <span class=\"o\">=</span> <span class=\"n\">board_path</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;ldf&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">control_path</span> <span class=\"ow\">and</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">board_path</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;xml&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">control_path</span> <span class=\"o\">=</span> <span class=\"n\">board_path</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;xml&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">control_path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">filter_cap</span><span class=\"p\">:</span>\n            <span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Cap&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">filter_ind</span><span class=\"p\">:</span>\n            <span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Ind&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">filter_res</span><span class=\"p\">:</span>\n            <span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Res&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">filter_height_under</span><span class=\"p\">:</span>\n            <span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Height&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">filter_height_under</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0.1mm&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">power_under</span><span class=\"p\">:</span>\n            <span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Power&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">power_under</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;10mW&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">filter_height_exclude_2d</span><span class=\"p\">:</span>\n            <span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;HeightExclude2D&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">cutoff_height</span><span class=\"p\">:</span>\n            <span class=\"n\">cutoff</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">cutoff</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">component_lib</span><span class=\"p\">:</span>\n            <span class=\"n\">replace_device</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">replace_device</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ImportIDF</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Settings&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Board:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">board_path</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">library_path</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;Control:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">control_path</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;Filters:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">filters</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CreateFilteredAsNonModel:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">create_filtered_as_non_model</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HeightVal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">filter_height_under</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;PowerVal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">power_under</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mW&quot;</span><span class=\"p\">),</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:definitionOverridesMap&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:instanceOverridesMap&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;HighSurfThickness:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">high_surface_thick</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;LowSurfThickness:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">low_surface_thick</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;InternalLayerThickness:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">internal_thick</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;NumInternalLayer:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">internal_layer_number</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HighSurfaceCopper:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">high_surface_coverage</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;LowSurfaceCopper:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">low_surface_coverage</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InternalLayerCopper:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">internal_layer_coverage</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;TraceMaterial:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">trace_material</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SubstrateMaterial:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">substrate_material</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CreateBoard:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">create_board</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelBoardAsRect:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">model_board_as_rect</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelDeviceAsRect:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">model_device_as_rect</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Cutoff:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">cutoff</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CutoffHeight:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_units</span><span class=\"p\">(</span><span class=\"n\">cutoff_height</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;ReplaceDevices:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">replace_device</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CompLibDir:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">component_lib</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">add_new_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.create_two_resistor_network_block\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.create_two_resistor_network_block/#pyaedt.icepak.Icepak.create_two_resistor_network_block\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_two_resistor_network_block</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">pcb</span><span class=\"p\">,</span> <span class=\"n\">power</span><span class=\"p\">,</span> <span class=\"n\">rjb</span><span class=\"p\">,</span> <span class=\"n\">rjc</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Function to create 2-Resistor network object.</span>\n<span class=\"sd\">        This method is going to replace create_network_block method.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            name of the object (3D block primitive) on which 2-R network is to be created</span>\n<span class=\"sd\">        pcb : str</span>\n<span class=\"sd\">            name of board touching the network block. If the board is a PCB 3D component, enter name of</span>\n<span class=\"sd\">            3D component instance</span>\n<span class=\"sd\">        power : float</span>\n<span class=\"sd\">            junction power in [W]</span>\n<span class=\"sd\">        rjb : float</span>\n<span class=\"sd\">            Junction to board thermal resistance in [K/W]</span>\n<span class=\"sd\">        rjc : float</span>\n<span class=\"sd\">            Junction to case thermal resistance in [K/W]</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignNetworkBoundary</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; board = icepak.modeler.create_box([0, 0, 0], [50, 100, 2], &quot;board&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; box = icepak.modeler.create_box([20, 20, 2], [10, 10, 3], &quot;network_box1&quot;, &quot;copper&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; network_block = icepak.create_two_resistor_network_block_new(&quot;network_box1&quot;, &quot;board&quot;, &quot;5W&quot;, 2.5, 5)</span>\n<span class=\"sd\">        &gt;&gt;&gt; network_block.props[&quot;Nodes&quot;][&quot;Internal&quot;][0]</span>\n<span class=\"sd\">        &#39;5W&#39;</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">obj_face</span><span class=\"p\">):</span>\n            <span class=\"n\">vertex1</span> <span class=\"o\">=</span> <span class=\"n\">obj_face</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span>\n            <span class=\"n\">vertex2</span> <span class=\"o\">=</span> <span class=\"n\">obj_face</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span>\n            <span class=\"n\">face_center</span> <span class=\"o\">=</span> <span class=\"n\">obj_face</span><span class=\"o\">.</span><span class=\"n\">center_from_aedt</span>\n            <span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"n\">j</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">vertex1</span><span class=\"p\">,</span> <span class=\"n\">face_center</span><span class=\"p\">)]</span>\n            <span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"n\">j</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">vertex2</span><span class=\"p\">,</span> <span class=\"n\">face_center</span><span class=\"p\">)]</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_cross</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">,</span> <span class=\"n\">v2</span><span class=\"p\">)</span>\n            <span class=\"n\">normalized_n</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">normalize_vector</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">normalized_n</span>\n\n        <span class=\"n\">net_handle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">pcb</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_component_names</span><span class=\"p\">:</span>\n            <span class=\"n\">part_names</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"n\">pcb_layer</span>\n                    <span class=\"k\">for</span> <span class=\"n\">pcb_layer</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_3d_component_object_list</span><span class=\"p\">(</span><span class=\"n\">componentname</span><span class=\"o\">=</span><span class=\"n\">pcb</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">pcb</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">definition_name</span> <span class=\"o\">+</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;_\\d\\d\\d.*&quot;</span><span class=\"p\">,</span> <span class=\"n\">pcb_layer</span><span class=\"p\">)</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">pcb_layers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">part_names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">part_names</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n            <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"n\">pcb_layers</span><span class=\"p\">:</span>\n                <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_touching_faces</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">x</span><span class=\"p\">:</span>\n                    <span class=\"n\">board_side</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"n\">board_side_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">board_side</span><span class=\"p\">)</span>\n                    <span class=\"n\">pcb_handle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">)</span>\n            <span class=\"n\">pcb_faces</span> <span class=\"o\">=</span> <span class=\"n\">pcb_handle</span><span class=\"o\">.</span><span class=\"n\">faces_by_area</span><span class=\"p\">(</span><span class=\"n\">area</span><span class=\"o\">=</span><span class=\"mf\">1e-5</span><span class=\"p\">,</span> <span class=\"n\">area_filter</span><span class=\"o\">=</span><span class=\"s2\">&quot;&gt;=&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"n\">pcb_faces</span><span class=\"p\">:</span>\n                <span class=\"n\">pcb_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n                <span class=\"n\">dot_product</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">board_side_normal</span><span class=\"p\">,</span> <span class=\"n\">pcb_normal</span><span class=\"p\">)]))</span>\n                <span class=\"k\">if</span> <span class=\"n\">dot_product</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"n\">pcb_face</span> <span class=\"o\">=</span> <span class=\"n\">face</span>\n            <span class=\"n\">pcb_face_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">pcb_face</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">pcb_handle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">pcb</span><span class=\"p\">)</span>\n            <span class=\"n\">board_side</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_touching_faces</span><span class=\"p\">(</span><span class=\"n\">pcb</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">board_side_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">board_side</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"n\">pcb_handle</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n                <span class=\"n\">pcb_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n                <span class=\"n\">dot_product</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">board_side_normal</span><span class=\"p\">,</span> <span class=\"n\">pcb_normal</span><span class=\"p\">)]))</span>\n                <span class=\"k\">if</span> <span class=\"n\">dot_product</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"n\">pcb_face</span> <span class=\"o\">=</span> <span class=\"n\">face</span>\n            <span class=\"n\">pcb_face_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">pcb_face</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"n\">net_handle</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"n\">net_face_normal</span> <span class=\"o\">=</span> <span class=\"n\">get_face_normal</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n            <span class=\"n\">dot_product</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">net_face_normal</span><span class=\"p\">,</span> <span class=\"n\">pcb_face_normal</span><span class=\"p\">)]))</span>\n            <span class=\"k\">if</span> <span class=\"n\">dot_product</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">case_side</span> <span class=\"o\">=</span> <span class=\"n\">face</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">board_side</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">case_side</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;Nodes&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Case_side(&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">case_side</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">case_side</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NoResistance&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Board_side(&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">board_side</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">board_side</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NoResistance&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">power</span><span class=\"p\">],</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Links&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Rjc&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Case_side(&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">case_side</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rjc</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel_per_w&quot;</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Rjb&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Board_side(&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">board_side</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Internal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rjb</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;cel_per_w&quot;</span><span class=\"p\">],</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">),</span>\n            <span class=\"s2\">&quot;SchematicData&quot;</span><span class=\"p\">:</span> <span class=\"p\">({}),</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">primitives</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Ceramic_material&quot;</span>\n        <span class=\"n\">boundary</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Network&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">boundary</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">boundary</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">primitives</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">return</span> <span class=\"n\">boundary</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_stationary_wall\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_stationary_wall/#pyaedt.icepak.Icepak.assign_stationary_wall\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_stationary_wall</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">geometry</span><span class=\"p\">,</span>\n        <span class=\"n\">boundary_condition</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;0cel&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">heat_flux</span><span class=\"o\">=</span><span class=\"s2\">&quot;0irrad_W_per_m2&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">htc</span><span class=\"o\">=</span><span class=\"s2\">&quot;0w_per_m2kel&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">htc_dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">ref_temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># relevant if th&gt;0</span>\n        <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># relevant if radiate = False</span>\n        <span class=\"n\">ht_correlation</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Natural Convection&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_fluid</span><span class=\"o\">=</span><span class=\"s2\">&quot;air&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_flow_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Turbulent&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_flow_direction</span><span class=\"o\">=</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_value_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Average Values&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># &quot;Local Values&quot;</span>\n        <span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"o\">=</span><span class=\"s2\">&quot;1m_per_sec&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_surface</span><span class=\"o\">=</span><span class=\"s2\">&quot;Vertical&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># Top, Bottom, Vertical</span>\n        <span class=\"n\">ht_correlation_amb_temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Stainless-steel-cleaned&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad_ref_temp</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad_view_factor</span><span class=\"o\">=</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign surface wall boundary condition.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        geometry : str or int</span>\n<span class=\"sd\">            Name of the surface object or ID of the face.</span>\n<span class=\"sd\">        boundary_condition : str</span>\n<span class=\"sd\">            Type of the boundary condition. Options are ``&quot;Temperature&quot;``, ``&quot;Heat Flux&quot;``,</span>\n<span class=\"sd\">            or ``&quot;Heat Transfer Coefficient&quot;``.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the boundary condition. The default is ``None``.</span>\n<span class=\"sd\">        temperature : str or float, optional</span>\n<span class=\"sd\">            Temperature to assign to the wall. This parameter is relevant if</span>\n<span class=\"sd\">            ``ext_condition=&quot;Temperature&quot;``. If a float value is specified, the</span>\n<span class=\"sd\">            unit is degrees Celsius. The default is ``&quot;0cel&quot;``.</span>\n<span class=\"sd\">        heat_flux : str or float, optional</span>\n<span class=\"sd\">            Heat flux to assign to the wall. This parameter is relevant if</span>\n<span class=\"sd\">            ``ext_condition=&quot;Temperature&quot;``. If a float value is specified,</span>\n<span class=\"sd\">            the unit is irrad_W_per_m2. The default is ``&quot;0irrad_W_per_m2&quot;``.</span>\n<span class=\"sd\">        htc : str or float, optional</span>\n<span class=\"sd\">            Heat transfer coefficient to assign to the wall. This parameter</span>\n<span class=\"sd\">            is relevant if ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. If a</span>\n<span class=\"sd\">            float value is specified, the unit is w_per_m2kel. The default</span>\n<span class=\"sd\">            is ``&quot;0w_per_m2kel&quot;``.</span>\n<span class=\"sd\">        thickness : str or float, optional</span>\n<span class=\"sd\">            Thickness of the wall. If a float value is specified, the unit is</span>\n<span class=\"sd\">            the current unit system set in Icepak. The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        htc_dataset : str, optional</span>\n<span class=\"sd\">            Dataset that represents the dependency of the heat transfer</span>\n<span class=\"sd\">            coefficient on temperature. This parameter is relevant if</span>\n<span class=\"sd\">            ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. The default is ``None``.</span>\n<span class=\"sd\">        ref_temperature : str or float, optional</span>\n<span class=\"sd\">            Reference temperature for the definition of the heat transfer</span>\n<span class=\"sd\">            coefficient. This parameter is relevant if</span>\n<span class=\"sd\">            ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. The default</span>\n<span class=\"sd\">            is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Solid material of the wall. This parameter is relevant if</span>\n<span class=\"sd\">            the thickness is a non-zero value. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        radiate : bool, optional</span>\n<span class=\"sd\">            Whether to enable the inner surface radiation option. The default is ``False``.</span>\n<span class=\"sd\">        radiate_surf_mat : str, optional</span>\n<span class=\"sd\">            Surface material used for inner surface radiation. Relevant if it is enabled.</span>\n<span class=\"sd\">            The default is ``&quot;Steel-oxidised-surface``.</span>\n<span class=\"sd\">        ht_correlation : bool, optional</span>\n<span class=\"sd\">            Whether to use the correlation option to compute the heat transfer coefficient.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        ht_correlation_type : str, optional</span>\n<span class=\"sd\">            The correlation type for the heat transfer coefficient. Options are</span>\n<span class=\"sd\">            &quot;Natural Convection&quot; and &quot;Forced Convection&quot;. This parameter is</span>\n<span class=\"sd\">            relevant if ``ht_correlation=True``. The default is ``&quot;Natural Convection&quot;``.</span>\n<span class=\"sd\">        ht_correlation_fluid : str, optional</span>\n<span class=\"sd\">            Fluid for the correlation option. This parameter is relevant if</span>\n<span class=\"sd\">            ``ht_correlation=True``. The default is ``&quot;air&quot;``.</span>\n<span class=\"sd\">        ht_correlation_flow_type : str, optional</span>\n<span class=\"sd\">            Type of flow for the correlation option. This parameter</span>\n<span class=\"sd\">            is relevant if ``ht_correlation=True``. Options are ``&quot;Turbulent&quot;``</span>\n<span class=\"sd\">            and ``&quot;Laminar&quot;``. The default is ``&quot;Turbulent&quot;``.</span>\n<span class=\"sd\">        ht_correlation_flow_direction : str, optional</span>\n<span class=\"sd\">            Flow direction for the correlation option. This parameter is relevant if</span>\n<span class=\"sd\">            ``ht_correlation_type=&quot;Forced Convection&quot;``. The default is ``&quot;X&quot;``.</span>\n<span class=\"sd\">        ht_correlation_value_type : str, optional</span>\n<span class=\"sd\">             Value type for the forced convection correlation option.</span>\n<span class=\"sd\">             This parameter is relevant if ``ht_correlation_type=&quot;Forced Convection&quot;``.</span>\n<span class=\"sd\">             Options are &quot;Average Values&quot; and &quot;Local Values&quot;. The default is</span>\n<span class=\"sd\">             ``&quot;Average Values&quot;``.</span>\n<span class=\"sd\">        ht_correlation_free_stream_velocity : str or float, optional</span>\n<span class=\"sd\">             Free stream flow velocity. This parameter is relevant if</span>\n<span class=\"sd\">             ``ht_correlation_type=&quot;Forced Convection&quot;``. If a float value</span>\n<span class=\"sd\">             is specified, the default unit is ``m_per_sec``. The default is</span>\n<span class=\"sd\">             ``&quot;1m_per_sec&quot;``.</span>\n<span class=\"sd\">        ht_correlation_surface : str, optional</span>\n<span class=\"sd\">            Surface type for the natural convection correlation option.</span>\n<span class=\"sd\">            This parameter is relevant if ``ht_correlation_type=&quot;Natural Convection&quot;``.</span>\n<span class=\"sd\">            Options are &quot;Top&quot;, &quot;Bottom&quot;, and &quot;Vertical&quot;. The default is ``&quot;Vertical&quot;``.</span>\n<span class=\"sd\">        ht_correlation_amb_temperature : str or float, optional</span>\n<span class=\"sd\">            Ambient temperature for the natural convection correlation option.</span>\n<span class=\"sd\">            This parameter is relevant if ``ht_correlation_type=&quot;Natural Convection&quot;``.</span>\n<span class=\"sd\">            If a float value is specified, the default unit is degrees Celsius.</span>\n<span class=\"sd\">            The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        shell_conduction : bool, optional</span>\n<span class=\"sd\">            Whether to use the shell conduction option. The default is ``False``.</span>\n<span class=\"sd\">        ext_surf_rad : bool, optional</span>\n<span class=\"sd\">            Whether to use the external surface radiation option. This parameter</span>\n<span class=\"sd\">            is relevant if ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. The</span>\n<span class=\"sd\">            default is ``False``.</span>\n<span class=\"sd\">        ext_surf_rad_material : str, optional</span>\n<span class=\"sd\">            Surface material for the external surface radiation option. This parameter</span>\n<span class=\"sd\">            is relevant if ``ext_surf_rad=True``. The default is ``&quot;Stainless-steel-cleaned&quot;``.</span>\n<span class=\"sd\">        ext_surf_rad_ref_temp : str or float, optional</span>\n<span class=\"sd\">             Reference temperature for the external surface radiation option. This parameter</span>\n<span class=\"sd\">             is relevant if  ``ext_surf_rad=True``.  If a float value is specified, the default</span>\n<span class=\"sd\">             unit is degrees Celsius. The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        ext_surf_rad_view_factor : str or float, optional</span>\n<span class=\"sd\">            View factor for the external surface radiation option. The default is ``&quot;1&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignStationaryWallBoundary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;StationaryWall&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">geometry</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">geometry</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">geometry</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">geometry</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">geometry</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">geometry</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">thickness</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">thickness</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">thickness</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">heat_flux</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">heat_flux</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">irrad_W_per_m2&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">heat_flux</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">temperature</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">temperature</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">cel&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">temperature</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">htc</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">htc</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">w_per_m2kel&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">htc</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ref_temperature</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">ref_temperature</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">cel&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ref_temperature</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">ht_correlation_free_stream_velocity</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">m_per_sec&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ht_correlation_amb_temperature</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">ht_correlation_amb_temperature</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">cel&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ht_correlation_amb_temperature</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ext_surf_rad_view_factor</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">ext_surf_rad_view_factor</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ext_surf_rad_view_factor</span><span class=\"p\">)</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">geometry</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">geometry</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">geometry</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">thickness</span><span class=\"p\">,)</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solid Material&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">material</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Condition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">boundary_condition</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Flux&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">heat_flux</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">temperature</span>\n        <span class=\"k\">if</span> <span class=\"n\">htc_dataset</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Transfer Coefficient&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">htc</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Transfer Coefficient Variation Data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Variation Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Temp Dep&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Variation Function&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Piecewise Linear&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Variation Value&quot;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;[&quot;1w_per_m2kel&quot;, &quot;pwl(</span><span class=\"si\">{}</span><span class=\"s1\">,Temp)&quot;]&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">htc_dataset</span><span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Reference Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ref_temperature</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Transfer Data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;Heat Transfer Correlation&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Heat Transfer Convection Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Forced Convection&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"n\">ht_correlation</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Transfer Data&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Heat Transfer Correlation&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Heat Transfer Convection Type&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_type</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Heat Transfer Convection Fluid Material&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_fluid</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">ht_correlation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Forced Convection&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Transfer Data&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;Flow Type&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_flow_type</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Flow Direction&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_flow_direction</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Heat Transfer Coeff Value Type&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_value_type</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Stream Velocity&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"p\">,</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">ht_correlation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Natural Convection&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Heat Transfer Data&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span><span class=\"s2\">&quot;Surface&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_surface</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Ambient Temperature&quot;</span><span class=\"p\">:</span> <span class=\"n\">ht_correlation_amb_temperature</span><span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Radiation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;Radiate&quot;</span><span class=\"p\">:</span> <span class=\"n\">radiate</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RadiateTo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AllObjects&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface Material&quot;</span><span class=\"p\">:</span> <span class=\"n\">radiate_surf_mat</span><span class=\"p\">}</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Shell Conduction&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">shell_conduction</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Surface Radiation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ext_surf_rad</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Material&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ext_surf_rad_material</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Radiation Reference Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ext_surf_rad_ref_temp</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;External Radiation View Factor&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ext_surf_rad_view_factor</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Stationary Wall&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">bound</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_stationary_wall_with_heat_flux\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_stationary_wall_with_heat_flux/#pyaedt.icepak.Icepak.assign_stationary_wall_with_heat_flux\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_stationary_wall_with_heat_flux</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">geometry</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">heat_flux</span><span class=\"o\">=</span><span class=\"s2\">&quot;0irrad_W_per_m2&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign a surface wall boundary condition with specified heat flux.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        geometry : str or int</span>\n<span class=\"sd\">            Name of the surface object or ID of the face.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the boundary condition. The default is ``None``.</span>\n<span class=\"sd\">        heat_flux : str or float, optional</span>\n<span class=\"sd\">            Heat flux to assign to the wall. If a float value is</span>\n<span class=\"sd\">            specified, the unit is ``irrad_W_per_m2``. The default is</span>\n<span class=\"sd\">            ``&quot;0irrad_W_per_m2&quot;``.</span>\n<span class=\"sd\">        thickness : str or float, optional</span>\n<span class=\"sd\">            Thickness of the wall. If a float value is specified, the unit is the</span>\n<span class=\"sd\">            current unit system set in Icepak. The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Solid material of the wall. This parameter is relevant if the thickness</span>\n<span class=\"sd\">            is non-zero. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        radiate : bool, optional</span>\n<span class=\"sd\">            Whether to enable the inner surface radiation option. The default is ``False``.</span>\n<span class=\"sd\">        radiate_surf_mat : str, optional</span>\n<span class=\"sd\">            Surface material for the inner surface radiation. This parameter is</span>\n<span class=\"sd\">            relevant if ``radiate`` is enabled. The default is ``&quot;Steel-oxidised-surface``.</span>\n<span class=\"sd\">        shell_conduction : bool, optional</span>\n<span class=\"sd\">            Whether to use the shell conduction option. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignStationaryWallBoundary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assign_stationary_wall</span><span class=\"p\">(</span>\n            <span class=\"n\">geometry</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Heat Flux&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">heat_flux</span><span class=\"o\">=</span><span class=\"n\">heat_flux</span><span class=\"p\">,</span>\n            <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"n\">thickness</span><span class=\"p\">,</span>\n            <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"n\">material</span><span class=\"p\">,</span>\n            <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"n\">radiate</span><span class=\"p\">,</span>\n            <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"n\">radiate_surf_mat</span><span class=\"p\">,</span>\n            <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"n\">shell_conduction</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_stationary_wall_with_temperature\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_stationary_wall_with_temperature/#pyaedt.icepak.Icepak.assign_stationary_wall_with_temperature\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_stationary_wall_with_temperature</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">geometry</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;0cel&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign a surface wall boundary condition with specified temperature.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        geometry : str or int</span>\n<span class=\"sd\">            Name of the surface object or ID of the face.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the boundary condition. The default is ``None``.</span>\n<span class=\"sd\">        temperature : str or float, optional</span>\n<span class=\"sd\">            Temperature to assign to the wall. If a float value is specified,</span>\n<span class=\"sd\">            the unit is degrees Celsius. The default is ``&quot;0cel&quot;``.</span>\n<span class=\"sd\">        thickness : str or float, optional</span>\n<span class=\"sd\">            Thickness of the wall. If a float value is specified used, the unit is the</span>\n<span class=\"sd\">            current unit system set in Icepak. The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Solid material of the wall. This parameter is relevant if the</span>\n<span class=\"sd\">            thickness is a non-zero value. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        radiate : bool, optional</span>\n<span class=\"sd\">            Whether to enable the inner surface radiation option. The default is ``False``.</span>\n<span class=\"sd\">        radiate_surf_mat : str, optional</span>\n<span class=\"sd\">            Surface material to use for inner surface radiation. This parameter is relevant</span>\n<span class=\"sd\">            if ``radiate`` is enabled. The default is ``&quot;Steel-oxidised-surface``.</span>\n<span class=\"sd\">        shell_conduction : bool, optional</span>\n<span class=\"sd\">            Whether to use the shell conduction option. The default is ``False``.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignStationaryWallBoundary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assign_stationary_wall</span><span class=\"p\">(</span>\n            <span class=\"n\">geometry</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"n\">temperature</span><span class=\"p\">,</span>\n            <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"n\">thickness</span><span class=\"p\">,</span>\n            <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"n\">material</span><span class=\"p\">,</span>\n            <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"n\">radiate</span><span class=\"p\">,</span>\n            <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"n\">radiate_surf_mat</span><span class=\"p\">,</span>\n            <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"n\">shell_conduction</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Icepak.assign_stationary_wall_with_htc\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.icepak.Icepak.assign_stationary_wall_with_htc/#pyaedt.icepak.Icepak.assign_stationary_wall_with_htc\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_stationary_wall_with_htc</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">geometry</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Al-Extruded&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">htc</span><span class=\"o\">=</span><span class=\"s2\">&quot;0w_per_m2kel&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">htc_dataset</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">ref_temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Natural Convection&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_fluid</span><span class=\"o\">=</span><span class=\"s2\">&quot;air&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_flow_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Turbulent&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_flow_direction</span><span class=\"o\">=</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_value_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Average Values&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"o\">=</span><span class=\"s2\">&quot;1m_per_sec&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_surface</span><span class=\"o\">=</span><span class=\"s2\">&quot;Vertical&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ht_correlation_amb_temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Stainless-steel-cleaned&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad_ref_temp</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ext_surf_rad_view_factor</span><span class=\"o\">=</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assign a surface wall boundary condition with specified heat transfer coefficient.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        geometry : str or int</span>\n<span class=\"sd\">            Name of the surface object or id of the face.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the boundary condition. The default is ``None``.</span>\n<span class=\"sd\">        htc : str or float, optional</span>\n<span class=\"sd\">            Heat transfer coefficient to assign to the wall. If a float value</span>\n<span class=\"sd\">            is specified, the unit is ``w_per_m2kel``. The default is</span>\n<span class=\"sd\">            ``&quot;0w_per_m2kel&quot;``.</span>\n<span class=\"sd\">        thickness : str or float, optional</span>\n<span class=\"sd\">            Thickness of the wall. If a float value is specified, the unit is the</span>\n<span class=\"sd\">            current unit system set in Icepak. The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        htc_dataset : str, optional</span>\n<span class=\"sd\">            Dataset that represents the dependency of the heat transfer</span>\n<span class=\"sd\">            coefficient on temperature. This parameter is relevant if</span>\n<span class=\"sd\">            ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. The default is ``None``.</span>\n<span class=\"sd\">        ref_temperature : str or float, optional</span>\n<span class=\"sd\">            Reference temperature for the definition of the heat transfer</span>\n<span class=\"sd\">            coefficient. This parameter is relevant if</span>\n<span class=\"sd\">            ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Solid material of the wall. This parameter is relevant if the thickness</span>\n<span class=\"sd\">            is non-zero. The default is ``&quot;Al-Extruded&quot;``.</span>\n<span class=\"sd\">        radiate : bool, optional</span>\n<span class=\"sd\">            Whether to enable the inner surface radiation option. The default is ``False``.</span>\n<span class=\"sd\">        radiate_surf_mat : str, optional</span>\n<span class=\"sd\">            Surface material for inner surface radiation. This parameter is relevant</span>\n<span class=\"sd\">            if ``radiate`` is enabled. The default is ``&quot;Steel-oxidised-surface``.</span>\n<span class=\"sd\">        ht_correlation : bool, optional</span>\n<span class=\"sd\">            Whether to use the correlation option to compute the heat transfer</span>\n<span class=\"sd\">            coefficient. The default is ``False``.</span>\n<span class=\"sd\">        ht_correlation_type : str, optional</span>\n<span class=\"sd\">            Correlation type for the correlation option. This parameter is</span>\n<span class=\"sd\">            relevant if ``ht_correlation=True``. Options are &quot;Natural Convection&quot;</span>\n<span class=\"sd\">            and &quot;Forced Convection&quot;. The default is ``&quot;Natural Convection&quot;``.</span>\n<span class=\"sd\">        ht_correlation_fluid : str, optional</span>\n<span class=\"sd\">            Fluid for the correlation option. This parameter is relevant if</span>\n<span class=\"sd\">            ``ht_correlation=True``. The default is ``&quot;air&quot;``.</span>\n<span class=\"sd\">        ht_correlation_flow_type : str, optional</span>\n<span class=\"sd\">            Type of flow for the correlation option. This parameter is relevant</span>\n<span class=\"sd\">            if ``ht_correlation=True``. Options are ``&quot;Turbulent&quot;`` and ``&quot;Laminar&quot;``.</span>\n<span class=\"sd\">            The default is ``&quot;Turbulent&quot;``.</span>\n<span class=\"sd\">        ht_correlation_flow_direction : str, optional</span>\n<span class=\"sd\">            Flow direction for the correlation option. This parameter is relevant</span>\n<span class=\"sd\">            if ``ht_correlation_type=&quot;Forced Convection&quot;``. The default is ``&quot;X&quot;``.</span>\n<span class=\"sd\">        ht_correlation_value_type : str, optional</span>\n<span class=\"sd\">             Value type for the forced convection correlation option. This</span>\n<span class=\"sd\">             parameter is relevant if ``ht_correlation_type=&quot;Forced Convection&quot;``.</span>\n<span class=\"sd\">             Options are &quot;Average Values&quot; and &quot;Local Values&quot;. The default</span>\n<span class=\"sd\">             is ``&quot;Average Values&quot;``.</span>\n<span class=\"sd\">        ht_correlation_free_stream_velocity : str or float, optional</span>\n<span class=\"sd\">             Free stream flow velocity. This parameter is relevant if</span>\n<span class=\"sd\">             ``ht_correlation_type=&quot;Forced Convection&quot;``.  If a float</span>\n<span class=\"sd\">             value is specified, ``m_per_sec`` is the unit. The default</span>\n<span class=\"sd\">             is ``&quot;1m_per_sec&quot;``.</span>\n<span class=\"sd\">        ht_correlation_surface : str, optional</span>\n<span class=\"sd\">            Surface for the natural convection correlation option. This parameter is</span>\n<span class=\"sd\">            relevant if ``ht_correlation_type=&quot;Natural Convection&quot;``. Options are &quot;Top&quot;,</span>\n<span class=\"sd\">            &quot;Bottom&quot;, and &quot;Vertical&quot;. The default is ``&quot;Vertical&quot;``.</span>\n<span class=\"sd\">        ht_correlation_amb_temperature : str or float, optional</span>\n<span class=\"sd\">            Ambient temperature for the natural convection correlation option.</span>\n<span class=\"sd\">            This parameter is relevant if ``ht_correlation_type=&quot;Natural Convection&quot;``.</span>\n<span class=\"sd\">            If a float value is specified, the default unit is degrees Celsius. The</span>\n<span class=\"sd\">            default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        shell_conduction : bool, optional</span>\n<span class=\"sd\">            Whether to use the shell conduction option. The default is ``False``.</span>\n<span class=\"sd\">        ext_surf_rad : bool, optional</span>\n<span class=\"sd\">            Whether to use the external surface radiation option. This parameter</span>\n<span class=\"sd\">            is relevant if ``ext_condition=&quot;Heat Transfer Coefficient&quot;``. The default</span>\n<span class=\"sd\">            is ``False``.</span>\n<span class=\"sd\">        ext_surf_rad_material : str, optional</span>\n<span class=\"sd\">            Surface material for the external surface radiation option. This parameter is</span>\n<span class=\"sd\">            relevant if ``ext_surf_rad=True``. The default is ``&quot;Stainless-steel-cleaned&quot;``.</span>\n<span class=\"sd\">        ext_surf_rad_ref_temp : str or float, optional</span>\n<span class=\"sd\">             Reference temperature for the external surface radiation option. This</span>\n<span class=\"sd\">             parameter is relevant if ``ext_surf_rad=True``. If a float value is</span>\n<span class=\"sd\">             specified, the default unit is degrees Celsius. The default is</span>\n<span class=\"sd\">             ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        ext_surf_rad_view_factor : str or float, optional</span>\n<span class=\"sd\">            View factor for the external surface radiation option. The default is ``&quot;1&quot;``.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignStationaryWallBoundary</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assign_stationary_wall</span><span class=\"p\">(</span>\n            <span class=\"n\">geometry</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Heat Transfer Coefficient&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"n\">thickness</span><span class=\"p\">,</span>\n            <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"n\">material</span><span class=\"p\">,</span>\n            <span class=\"n\">htc</span><span class=\"o\">=</span><span class=\"n\">htc</span><span class=\"p\">,</span>\n            <span class=\"n\">htc_dataset</span><span class=\"o\">=</span><span class=\"n\">htc_dataset</span><span class=\"p\">,</span>\n            <span class=\"n\">ref_temperature</span><span class=\"o\">=</span><span class=\"n\">ref_temperature</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation</span><span class=\"o\">=</span><span class=\"n\">ht_correlation</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_type</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_fluid</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_fluid</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_flow_type</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_flow_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_flow_direction</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_flow_direction</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_value_type</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_value_type</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_free_stream_velocity</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_surface</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_amb_temperature</span><span class=\"p\">,</span>\n            <span class=\"n\">ht_correlation_amb_temperature</span><span class=\"o\">=</span><span class=\"n\">ht_correlation_surface</span><span class=\"p\">,</span>\n            <span class=\"n\">ext_surf_rad</span><span class=\"o\">=</span><span class=\"n\">ext_surf_rad</span><span class=\"p\">,</span>\n            <span class=\"n\">ext_surf_rad_material</span><span class=\"o\">=</span><span class=\"n\">ext_surf_rad_material</span><span class=\"p\">,</span>\n            <span class=\"n\">ext_surf_rad_ref_temp</span><span class=\"o\">=</span><span class=\"n\">ext_surf_rad_ref_temp</span><span class=\"p\">,</span>\n            <span class=\"n\">ext_surf_rad_view_factor</span><span class=\"o\">=</span><span class=\"n\">ext_surf_rad_view_factor</span><span class=\"p\">,</span>\n            <span class=\"n\">radiate</span><span class=\"o\">=</span><span class=\"n\">radiate</span><span class=\"p\">,</span>\n            <span class=\"n\">radiate_surf_mat</span><span class=\"o\">=</span><span class=\"n\">radiate_surf_mat</span><span class=\"p\">,</span>\n            <span class=\"n\">shell_conduction</span><span class=\"o\">=</span><span class=\"n\">shell_conduction</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/icepak", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}