{"parents": [{"link": "../../", "title": "API EDB reference"}, {"link": "../../CoreEdb/", "title": "EDB manager"}, {"link": "../pyaedt.edb.Edb/", "title": "pyaedt.edb.Edb"}], "prev": {"link": "../pyaedt.edb.Edb.create_cutout/", "title": "create_cutout"}, "next": {"link": "../pyaedt.edb.Edb.create_cutout_on_point_list/", "title": "create_cutout_on_point_list"}, "title": "create_cutout_multithread", "meta": {}, "body": "<section id=\"create-cutout-multithread\">\n<h1>create_cutout_multithread<a class=\"headerlink\" href=\"#create-cutout-multithread\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb.Edb.create_cutout_multithread\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">Edb.</span></span><span class=\"sig-name descname\"><span class=\"pre\">create_cutout_multithread</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">signal_list</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">[]</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference_list</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">['GND']</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extent_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'Conforming'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">expansion_size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.002</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_round_corner</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">number_of_threads</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">4</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">custom_extent</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">output_aedb_path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">remove_single_pin_components</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">use_pyaedt_extent_computing</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extent_defeature</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb/#Edb.create_cutout_multithread\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb.Edb.create_cutout_multithread\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Create a cutout using an approach entirely based on pyaedt.\nIt does in sequence:\n- delete all nets not in list,\n- create a extent of the nets,\n- check and delete all vias not in the extent,\n- check and delete all the primitives not in extent,\n- check and intersect all the primitives that intersect the extent.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>signal_list</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#list\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a></span></dt><dd><p>List of signal strings.</p>\n</dd>\n<dt><strong>reference_list</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#list\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>List of references to add. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">[&quot;GND&quot;]</span></code>.</p>\n</dd>\n<dt><strong>extent_type</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Type of the extension. Options are <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Conforming&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;ConvexHull&quot;</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Bounding&quot;</span></code>. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Conforming&quot;</span></code>.</p>\n</dd>\n<dt><strong>expansion_size</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#float\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Expansion size ratio in meters. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">0.002</span></code>.</p>\n</dd>\n<dt><strong>use_round_corner</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Whether to use round corners. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt><strong>number_of_threads</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#int\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Number of thread to use. Default is 4</p>\n</dd>\n<dt><strong>custom_extent</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#list\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Custom extent to use for the cutout. It has to be a list of points [[x1,y1],[x2,y2]\u2026.] or\nEdb PolygonData object. In this case, both signal_list and reference_list will be cut.</p>\n</dd>\n<dt><strong>output_aedb_path</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Full path and name for the new AEDB file. If None, then current aedb will be cutout.</p>\n</dd>\n<dt><strong>remove_single_pin_components</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Remove all Single Pin RLC after the cutout is completed. Default is <cite>False</cite>.</p>\n</dd>\n<dt><strong>use_pyaedt_extent_computing</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Whether to use pyaedt extent computing (experimental).</p>\n</dd>\n<dt><strong>extent_defeature</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#float\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Defeature the cutout before applying it to produce simpler geometry for mesh (Experimental).\nIt applies only to Conforming bounding box. Default value is <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> which disable it.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> when successful, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> when failed.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span> <span class=\"o\">=</span> <span class=\"n\">Edb</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;C:.aedb&#39;</span><span class=\"p\">,</span> <span class=\"n\">edbversion</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info_timer</span><span class=\"p\">(</span><span class=\"s2\">&quot;Edb Opening&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">reset_timer</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">signal_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">net</span> <span class=\"ow\">in</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>     <span class=\"k\">if</span> <span class=\"s2\">&quot;3V3&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">net</span><span class=\"p\">:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>          <span class=\"n\">signal_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">net</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">power_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;PGND&quot;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">create_cutout_multithread</span><span class=\"p\">(</span><span class=\"n\">signal_list</span><span class=\"o\">=</span><span class=\"n\">signal_list</span><span class=\"p\">,</span> <span class=\"n\">reference_list</span><span class=\"o\">=</span><span class=\"n\">power_list</span><span class=\"p\">,</span> <span class=\"n\">extent_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Conforming&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">((</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Total pyaedt cutout time in min </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">end_time</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">signal_list</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">color_by_net</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">power_list</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">color_by_net</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">save_edb</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">close_edb</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["EDBAPI/_autosummary/pyaedt.edb.Edb.create_cutout_on_point_list", "create_cutout_on_point_list", "N", "next"], ["EDBAPI/_autosummary/pyaedt.edb.Edb.create_cutout", "create_cutout", "P", "previous"]], "sourcename": "EDBAPI/_autosummary/pyaedt.edb.Edb.create_cutout_multithread.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">create_cutout_multithread</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb.Edb.create_cutout_multithread\"><code class=\"docutils literal notranslate\"><span class=\"pre\">create_cutout_multithread()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "EDBAPI/_autosummary/pyaedt.edb.Edb.create_cutout_multithread", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}