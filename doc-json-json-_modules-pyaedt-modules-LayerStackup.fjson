{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modules.LayerStackup", "body": "<h1>Source code for pyaedt.modules.LayerStackup</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains these classes: `Layer` and `Layers`.</span>\n\n<span class=\"sd\">This module provides all layer stackup functionalities for the Circuit and HFSS 3D Layout tools.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_str2bool</span><span class=\"p\">(</span><span class=\"n\">str0</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Convert a string to a Boolean value.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    str0 : str</span>\n<span class=\"sd\">       String to convert.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    bool</span>\n<span class=\"sd\">        ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">str0</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;false&quot;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n    <span class=\"k\">elif</span> <span class=\"n\">str0</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;true&quot;</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">typen</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Convert a number.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    number</span>\n<span class=\"sd\">       Number represented a float.</span>\n\n<span class=\"sd\">    typen :</span>\n<span class=\"sd\">         The default is ``float``.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">typen</span> <span class=\"ow\">is</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">number</span>\n    <span class=\"k\">elif</span> <span class=\"n\">typen</span> <span class=\"ow\">is</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">number</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_getIfromRGB</span><span class=\"p\">(</span><span class=\"n\">rgb</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Retrieve if from a specific layer color.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    rgb :</span>\n\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n    <span class=\"n\">green</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">blue</span> <span class=\"o\">=</span> <span class=\"n\">rgb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">RGBint</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">red</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">green</span> <span class=\"o\">&lt;&lt;</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">blue</span>\n    <span class=\"k\">return</span> <span class=\"n\">RGBint</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_getRGBfromI</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Retrieve the Integer from a specific layer color.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    value : int</span>\n\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    list</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"mh\">0xFF</span>\n    <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"mh\">0xFF</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"mh\">0xFF</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"Layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layer/#pyaedt.modules.LayerStackup.Layer\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Layer</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages the stackup layer for the Circuit and HFSS 3D Layout tools.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    app : :class:`pyaedt.modules.LayerStackup.Layers`</span>\n\n<span class=\"sd\">    layertype : string, optional</span>\n<span class=\"sd\">        The default is ``&quot;signal&quot;``.</span>\n<span class=\"sd\">    negative : bool, optional</span>\n<span class=\"sd\">        Whether the geometry on the layer is cut away</span>\n<span class=\"sd\">        from the layer. The default is ``False``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss3dLayout</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss3dLayout()</span>\n<span class=\"sd\">    &gt;&gt;&gt; layers = app.modeler.layers[&quot;Top&quot;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">layertype</span><span class=\"o\">=</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"n\">negative</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnit</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">LengthUnit</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">LengthUnit</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layers</span> <span class=\"o\">=</span> <span class=\"n\">app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"n\">layertype</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisible</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleShape</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePath</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePad</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleHole</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleComponent</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshBackgroundMaterial</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshOverlay</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_locked</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_topbottom</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;neither&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pattern</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_drawoverride</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_botroughness</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_toprounghenss</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sideroughness</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;copper&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fillmaterial</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;FR4_epoxy&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsNegative</span> <span class=\"o\">=</span> <span class=\"n\">negative</span>\n        <span class=\"c1\"># Etch option</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_useetch</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"c1\"># Rough option</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_user</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">RMdl</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Huray&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">NR</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">HRatio</span> <span class=\"o\">=</span> <span class=\"mf\">2.9</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BRMdl</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Huray&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BNR</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BHRatio</span> <span class=\"o\">=</span> <span class=\"mf\">2.9</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SRMdl</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Huray&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SNR</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SHRatio</span> <span class=\"o\">=</span> <span class=\"mf\">2.9</span>\n        <span class=\"c1\"># Solver option</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_usp</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfssSp</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;si&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dt&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dtv&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">planaremSp</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;ifg&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;vly&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zones</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the property of the active layer. Color it is list of rgb values (0,255).</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span>\n\n    <span class=\"nd\">@color</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transparency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the property to the active layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span>\n\n    <span class=\"nd\">@transparency</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transparency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer visibility.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisible</span>\n\n    <span class=\"nd\">@is_visible</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisible</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_shape</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer shape visibility.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleShape</span>\n\n    <span class=\"nd\">@is_visible_shape</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_shape</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleShape</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer paths visibility.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePath</span>\n\n    <span class=\"nd\">@is_visible_path</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePath</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_pad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer pad visibility.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePad</span>\n\n    <span class=\"nd\">@is_visible_pad</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_pad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePad</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_hole</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer hole visibility.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleHole</span>\n\n    <span class=\"nd\">@is_visible_hole</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_hole</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleHole</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer component visibility.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleComponent</span>\n\n    <span class=\"nd\">@is_visible_component</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_visible_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleComponent</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_mesh_background</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer mesh backgraound.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshBackgroundMaterial</span>\n\n    <span class=\"nd\">@is_mesh_background</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_mesh_background</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshBackgroundMaterial</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_mesh_overlay</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer mesh overlay.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshOverlay</span>\n\n    <span class=\"nd\">@is_mesh_overlay</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_mesh_overlay</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshOverlay</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">locked</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer lock flag.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_locked</span>\n\n    <span class=\"nd\">@locked</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">locked</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_locked</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_bottom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer top bottom alignment.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_topbottom</span>\n\n    <span class=\"nd\">@top_bottom</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_bottom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_topbottom</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pattern</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer pattern.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pattern</span>\n\n    <span class=\"nd\">@pattern</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pattern</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pattern</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">draw_override</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer draw override value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_drawoverride</span>\n\n    <span class=\"nd\">@draw_override</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">draw_override</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_drawoverride</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer thickness value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span>\n\n    <span class=\"nd\">@thickness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lower_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer lower elevation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span>\n\n    <span class=\"nd\">@lower_elevation</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lower_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer roughness (with units).</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness</span>\n\n    <span class=\"nd\">@roughness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer bottom roughness (with units).</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_botroughness</span>\n\n    <span class=\"nd\">@bottom_roughness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_botroughness</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer top roughness (with units).</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_toprounghenss</span>\n\n    <span class=\"nd\">@top_roughness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_toprounghenss</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer side roughness (with units).</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sideroughness</span>\n\n    <span class=\"nd\">@side_roughness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_roughness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sideroughness</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer material name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span>\n\n    <span class=\"nd\">@material</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">fill_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer filling material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fillmaterial</span>\n\n    <span class=\"nd\">@fill_material</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">fill_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fillmaterial</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer index.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span>\n\n    <span class=\"nd\">@index</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_negative</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer negative flag. When `True` the layer will be negative.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsNegative</span>\n\n    <span class=\"nd\">@is_negative</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_negative</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsNegative</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_etch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer etiching flag. When `True` the layer will use etch.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_useetch</span>\n\n    <span class=\"nd\">@use_etch</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_etch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_useetch</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">etch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer etch value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch</span>\n\n    <span class=\"nd\">@etch</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">etch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">user</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer user flag.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_user</span>\n\n    <span class=\"nd\">@user</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">user</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_user</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_roughness_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer top roughness model.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">RMdl</span>\n\n    <span class=\"nd\">@top_roughness_model</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_roughness_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">RMdl</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_nodule_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer top roughness radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">NR</span>\n\n    <span class=\"nd\">@top_nodule_radius</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_nodule_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">NR</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_huray_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer top roughness ratio.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">HRatio</span>\n\n    <span class=\"nd\">@top_huray_ratio</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_huray_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">HRatio</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_roughness_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer bottom roughness model.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BRMdl</span>\n\n    <span class=\"nd\">@bottom_roughness_model</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_roughness_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BRMdl</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_nodule_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer bottom roughness radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BNR</span>\n\n    <span class=\"nd\">@bottom_nodule_radius</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_nodule_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BNR</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_huray_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer bottom roughness ratio.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BHRatio</span>\n\n    <span class=\"nd\">@bottom_huray_ratio</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_huray_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BHRatio</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer side roughness model.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SRMdl</span>\n\n    <span class=\"nd\">@side_model</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SRMdl</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_nodule_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer side roughness radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SNR</span>\n\n    <span class=\"nd\">@side_nodule_radius</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_nodule_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SNR</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_huray_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer bottom roughness ratio.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SHRatio</span>\n\n    <span class=\"nd\">@side_huray_ratio</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">side_huray_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SHRatio</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">usp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer usp flag.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_usp</span>\n\n    <span class=\"nd\">@usp</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">usp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_usp</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hfss_solver_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer hfss solver settings.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfssSp</span>\n\n    <span class=\"nd\">@hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hfss_solver_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfssSp</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">planar_em_solver_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer PlanarEm solver settings.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">planaremSp</span>\n\n    <span class=\"nd\">@planar_em_solver_settings</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">planar_em_solver_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">planaremSp</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">zones</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the active layer zoness.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zones</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zones</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layers</span><span class=\"o\">.</span><span class=\"n\">all_layers</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">i</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zones</span>\n\n    <span class=\"nd\">@zones</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">zones</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zones</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_stackup_layer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oeditor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Oeditor Module.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layers</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">visflag</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Visibility flag for objects on the layer.&quot;&quot;&quot;</span>\n        <span class=\"n\">visflag</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisible</span><span class=\"p\">:</span>\n            <span class=\"n\">visflag</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshBackgroundMaterial</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">64</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsMeshOverlay</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">32</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleShape</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePath</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePad</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">4</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleHole</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">8</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsVisibleComponent</span><span class=\"p\">:</span>\n                <span class=\"n\">visflag</span> <span class=\"o\">+=</span> <span class=\"mi\">16</span>\n        <span class=\"k\">return</span> <span class=\"n\">visflag</span>\n\n<div class=\"viewcode-block\" id=\"Layer.set_layer_color\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layer.set_layer_color/#pyaedt.modules.LayerStackup.Layer.set_layer_color\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_layer_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the color of the layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        r : int</span>\n<span class=\"sd\">            Red color value.</span>\n<span class=\"sd\">        g : int</span>\n<span class=\"sd\">            Green color value.</span>\n<span class=\"sd\">        b :  int</span>\n<span class=\"sd\">            Blue color value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeLayer</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">rgb</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">_getIfromRGB</span><span class=\"p\">(</span><span class=\"n\">rgb</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Layer.create_stackup_layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layer.create_stackup_layer/#pyaedt.modules.LayerStackup.Layer.create_stackup_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_stackup_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a stackup layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.AddStackupLayer</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">remove_stackup_layer</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">AddStackupLayer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_layer_arg</span><span class=\"p\">)</span>\n        <span class=\"n\">infos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetLayerInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">infos</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;: &quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">infos</span><span class=\"p\">]</span>\n        <span class=\"n\">infosdict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">infos</span><span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;LayerId&quot;</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Argument with dimensions.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value :</span>\n\n<span class=\"sd\">        units :</span>\n<span class=\"sd\">             The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">units</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnit</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0}{1}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">val</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_layer_arg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:stackup layer&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:layer&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;ID:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">],</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Top Bottom:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_bottom</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Color:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">_getIfromRGB</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;Transparency:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transparency</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Pattern:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pattern</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;VisFlag:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">visflag</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Locked:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">locked</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;DrawOverride:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">draw_override</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Zones:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Sublayer&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Thickness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thickness</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;LowerElevation:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lower_elevation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnit</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;Roughness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roughness</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;BotRoughness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bottom_roughness</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;SideRoughness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_roughness</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;Material:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span>\n                        <span class=\"s2\">&quot;FillMaterial:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fill_material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span>\n                    <span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Neg:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">IsNegative</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Usp:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">usp</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Sp&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Sn:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Sv:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;so(si=&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfssSp</span><span class=\"p\">[</span><span class=\"s2\">&quot;si&quot;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot; , dt=&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfssSp</span><span class=\"p\">[</span><span class=\"s2\">&quot;dt&quot;</span><span class=\"p\">])</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;, dtv=&#39;&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfssSp</span><span class=\"p\">[</span><span class=\"s2\">&quot;dtv&quot;</span><span class=\"p\">])</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;&#39;)&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">],</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Sp&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Sn:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;PlanarEM&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Sv:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;so(ifg=&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">planaremSp</span><span class=\"p\">[</span><span class=\"s2\">&quot;ifg&quot;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;, vly=&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">planaremSp</span><span class=\"p\">[</span><span class=\"s2\">&quot;vly&quot;</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;Etch:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">etch</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;UseEtch:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_etch</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;UseR:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;RMdl:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">RMdl</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;NR:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">NR</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;HRatio:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">HRatio</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;BRMdl:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BRMdl</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;BNR:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BNR</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;BHRatio:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">BHRatio</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;SRMdl:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SRMdl</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;SNR:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SNR</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LengthUnitRough</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;SHRatio:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">SHRatio</span><span class=\"p\">),</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Top Bottom:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_bottom</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Color:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Transparency:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transparency</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Pattern:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pattern</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;VisFlag:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">visflag</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Locked:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">locked</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;DrawOverride:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">draw_override</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Zones:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Sublayer&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Thickness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thickness</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;LowerElevation:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lower_elevation</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Roughness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;BotRoughness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;SideRoughness:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Material:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Top Bottom:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">top_bottom</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Color:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Transparency:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transparency</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Pattern:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pattern</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;VisFlag:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">visflag</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Locked:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">locked</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">args</span>\n\n<div class=\"viewcode-block\" id=\"Layer.update_stackup_layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layer.update_stackup_layer/#pyaedt.modules.LayerStackup.Layer.update_stackup_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_stackup_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the stackup layer.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           This method is valid for release 2021 R1 and later.</span>\n<span class=\"sd\">           This method works only for signal and dielectric layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeLayer</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">ChangeLayer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_layer_arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Layer.remove_stackup_layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layer.remove_stackup_layer/#pyaedt.modules.LayerStackup.Layer.remove_stackup_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove_stackup_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Remove the stackup layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.RemoveLayer</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetStackupLayerNames</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">RemoveLayer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Layers\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layers/#pyaedt.modules.LayerStackup.Layers\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Layers</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages stackup for the Circuit and HFSS 3D Layout tools.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    modeler : :class:`pyaedt.modeler.modelerpcb.Modeler3DLayout`</span>\n\n<span class=\"sd\">    roughnessunits : str, optional</span>\n<span class=\"sd\">       Units for the roughness of layers. The default is ``&quot;um&quot;``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss3dLayout</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss3dLayout()</span>\n<span class=\"sd\">    &gt;&gt;&gt; layers = app.modeler.layers</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">modeler</span><span class=\"p\">,</span> <span class=\"n\">roughnessunits</span><span class=\"o\">=</span><span class=\"s2\">&quot;um&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_currentId</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lengthUnitRough</span> <span class=\"o\">=</span> <span class=\"n\">roughnessunits</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oeditor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Editor.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor = oDesign.SetActiveEditor(&quot;Layout&quot;)&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">zones</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of all available zones.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">all_layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetStackupLayerNames</span><span class=\"p\">())</span>\n        <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">lay</span> <span class=\"ow\">in</span> <span class=\"n\">all_layers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">lay</span><span class=\"p\">:</span>\n                <span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">zones</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">LengthUnit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Length units.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">all_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All stackup layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">           List of stackup layers.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetStackupLayerNames()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetAllLayerNames</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">drawing_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All drawing layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">           List of drawing layers.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetAllLayerNames()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">]]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stackup_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All stackup layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modules.LayerStackup.Layer`</span>\n<span class=\"sd\">           List of stackup layers.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetAllLayerNames()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">]]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">all_signal_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All signal layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modules.LayerStackup.Layer`</span>\n<span class=\"sd\">            List of signal layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">all_diel_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All dielectric layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modules.LayerStackup.Layer`</span>\n<span class=\"sd\">            List of dielectric layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">]</span>\n\n<div class=\"viewcode-block\" id=\"Layers.layer_id\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layers.layer_id/#pyaedt.modules.LayerStackup.Layers.layer_id\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve a layer ID.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name :  str</span>\n<span class=\"sd\">            Name of the layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.LayerStackup.Layer`</span>\n<span class=\"sd\">            Layer objecy if the layer name exists.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">el</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Refresh all layers in the current stackup.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">         Dict[int,  :class:`pyaedt.modules.LayerStackup.Layer`]</span>\n<span class=\"sd\">            Number of layers in the current stackup.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">all_layers</span><span class=\"p\">:</span>\n            <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n            <span class=\"n\">infos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetLayerInfo</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n            <span class=\"n\">infos</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;: &quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">infos</span><span class=\"p\">]</span>\n            <span class=\"n\">infosdict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">():</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">infos</span><span class=\"p\">}</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;LayerId&quot;</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;metalizedsignal&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;signal&quot;</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsNegative</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsNegative</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_locked</span> <span class=\"o\">=</span> <span class=\"n\">_str2bool</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsLocked&quot;</span><span class=\"p\">])</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_top_bottom</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;TopBottomAssociation&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsVisible</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsVisible&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;IsVisiblePath&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">infosdict</span><span class=\"p\">:</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePath</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsVisiblePath&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsVisiblePad</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsVisiblePad&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsVisibleComponent</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsVisibleComponent&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsVisibleShape</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsVisibleShape&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">IsVisibleHole</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;IsVisibleHole&quot;</span><span class=\"p\">]</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"n\">_getRGBfromI</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Color&quot;</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n            <span class=\"k\">if</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_index</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Index&quot;</span><span class=\"p\">])</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"n\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;LayerThickness&quot;</span><span class=\"p\">])</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"n\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;LowerElevation0&quot;</span><span class=\"p\">])</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_fillmaterial</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;FillMaterial0&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_material</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material0&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;EtchFactor&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">infosdict</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_useetch</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_etch</span> <span class=\"o\">=</span> <span class=\"n\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;EtchFactor&quot;</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Roughness0 Type&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">infosdict</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_user</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">RMdl</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Roughness0 Type&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">NR</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Roughness0&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">HRatio</span> <span class=\"o\">=</span> <span class=\"n\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;Roughness0&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;BottomRoughness0 Type&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">infosdict</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_user</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">BRMdl</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;BottomRoughness0 Type&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">BNR</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;BottomRoughness0&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">BHRatio</span> <span class=\"o\">=</span> <span class=\"n\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;BottomRoughness0&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;SideRoughness0 Type&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">infosdict</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">_user</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">SRMdl</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;SideRoughness0 Type&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">SNR</span> <span class=\"o\">=</span> <span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;SideRoughness0&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">SHRatio</span> <span class=\"o\">=</span> <span class=\"n\">_conv_number</span><span class=\"p\">(</span><span class=\"n\">infosdict</span><span class=\"p\">[</span><span class=\"s2\">&quot;SideRoughness0&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">o</span>\n        <span class=\"k\">return</span> <span class=\"n\">layers</span>\n\n<div class=\"viewcode-block\" id=\"Layers.add_layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layers.add_layer/#pyaedt.modules.LayerStackup.Layers.add_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_layer</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layername</span><span class=\"p\">,</span> <span class=\"n\">layertype</span><span class=\"o\">=</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">elevation</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span> <span class=\"n\">isnegative</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layername : str</span>\n<span class=\"sd\">            Name of the layer.</span>\n<span class=\"sd\">        layertype : str, optional</span>\n<span class=\"sd\">            Type of the layer. The default is ``&quot;signal&quot;``.</span>\n<span class=\"sd\">        thickness : str, optional</span>\n<span class=\"sd\">            Thickness with units. The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        elevation : str, optional</span>\n<span class=\"sd\">            Elevation with units. The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Name of the material. The default is ``&quot;copper&quot;``.</span>\n<span class=\"sd\">        isnegative : bool, optional</span>\n<span class=\"sd\">            If ``True``, the geometry on the layer is cut away from the layer. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.LayerStackup.Layer`</span>\n<span class=\"sd\">            Layer object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">newlayer</span> <span class=\"o\">=</span> <span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layertype</span><span class=\"p\">,</span> <span class=\"n\">isnegative</span><span class=\"p\">)</span>\n        <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">layername</span>\n        <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"n\">thickness</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">elevation</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">el</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"mi\">0</span>\n                <span class=\"k\">if</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">else</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">+</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower_elevation</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thickness</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;pyaedt_evaluator&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"n\">el</span><span class=\"p\">,</span>\n                    <span class=\"n\">readonly</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">hidden</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">get_evaluated_value</span><span class=\"p\">(</span><span class=\"s2\">&quot;pyaedt_evaluator&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0mm&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"n\">elevation</span>\n        <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">_material</span> <span class=\"o\">=</span> <span class=\"n\">material</span>\n        <span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">create_stackup_layer</span><span class=\"p\">()</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">newlayer</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Layers.change_stackup_type\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.LayerStackup.Layers.change_stackup_type/#pyaedt.modules.LayerStackup.Layers.change_stackup_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_stackup_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;MultiZone&quot;</span><span class=\"p\">,</span> <span class=\"n\">number_zones</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Change the stackup type between Multizone, Overlap and Laminate.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        mode : str, optional</span>\n<span class=\"sd\">            Stackup type. Default is `&quot;Multizone&quot;`. Options are `&quot;Overlap&quot;` and `&quot;Laminate&quot;`.</span>\n<span class=\"sd\">        number_zones : int, optional</span>\n<span class=\"sd\">            Number of zones of multizone. By default all layers will be enabled in all zones.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if successful.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">mode</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;multizone&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Zones&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Primary&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">number_zones</span><span class=\"p\">):</span>\n                <span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Zone</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:layers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mode:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Multizone&quot;</span><span class=\"p\">,</span> <span class=\"n\">zones</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:pps&quot;</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">mode</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;overlap&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:layers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mode:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Overlap&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:pps&quot;</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">mode</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;laminate&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:layers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mode:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Laminate&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:pps&quot;</span><span class=\"p\">]]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Stackup mode has to be Multizone, Overlap or Laminate.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">mode</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;multizone&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">_zones</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">number_zones</span><span class=\"p\">)]</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">_zones</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">_get_layer_arg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">ChangeLayers</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modules/LayerStackup", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}