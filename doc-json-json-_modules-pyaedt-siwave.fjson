{"parents": [{"link": "../../", "title": "Module code"}], "title": "pyaedt.siwave", "body": "<h1>Source code for pyaedt.siwave</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains the ``Siwave`` class.</span>\n\n<span class=\"sd\">The ``Siwave`` module can be initialized as standalone before launching an app or</span>\n<span class=\"sd\">automatically initialized by an app to the latest installed AEDT version.</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pkgutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">_clr</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_pythonver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.misc</span> <span class=\"kn\">import</span> <span class=\"n\">list_installed_ansysem</span>\n\n\n<div class=\"viewcode-block\" id=\"Siwave\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave/#pyaedt.siwave.Siwave\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Siwave</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Initializes SIwave based on the inputs provided and manages SIwave release and closing.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``, in which case</span>\n<span class=\"sd\">        the active setup is used or the latest installed version is used.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">version_keys</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Version keys for AEDT.&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"n\">version_list</span> <span class=\"o\">=</span> <span class=\"n\">list_installed_ansysem</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">version_env_var</span> <span class=\"ow\">in</span> <span class=\"n\">version_list</span><span class=\"p\">:</span>\n            <span class=\"n\">current_version_id</span> <span class=\"o\">=</span> <span class=\"n\">version_env_var</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;ANSYSEM_ROOT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;ANSYSEMSV_ROOT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">current_version_id</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n            <span class=\"n\">release</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">current_version_id</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">version</span> <span class=\"o\">&lt;</span> <span class=\"mi\">20</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">release</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                    <span class=\"n\">version</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">release</span> <span class=\"o\">-=</span> <span class=\"mi\">2</span>\n            <span class=\"n\">v_key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;20</span><span class=\"si\">{0}</span><span class=\"s2\">.</span><span class=\"si\">{1}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">release</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v_key</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">v_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">version_env_var</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">current_version</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Current version of AEDT.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">version_keys</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"n\">_com</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pythonnet&quot;</span>\n            <span class=\"kn\">import</span> <span class=\"nn\">System</span>\n        <span class=\"k\">elif</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;nt&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">modules</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"n\">pkgutil</span><span class=\"o\">.</span><span class=\"n\">iter_modules</span><span class=\"p\">()]</span>\n            <span class=\"k\">if</span> <span class=\"n\">_clr</span><span class=\"p\">:</span>\n                <span class=\"kn\">import</span> <span class=\"nn\">win32com.client</span>\n\n                <span class=\"n\">_com</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pythonnet_v3&quot;</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;win32com&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">modules</span><span class=\"p\">:</span>\n                <span class=\"kn\">import</span> <span class=\"nn\">win32com.client</span>\n\n                <span class=\"n\">_com</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pywin32&quot;</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error. No win32com.client or PythonNET modules are found. They need to be installed.&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Launching Siwave Init&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;oSiwave&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">AEDTVersion</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">GetVersion</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">RestoreWindow</span><span class=\"p\">()</span>\n            <span class=\"n\">specified_version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_version</span>\n            <span class=\"k\">assert</span> <span class=\"n\">specified_version</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">version_keys</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Specified version </span><span class=\"si\">{}</span><span class=\"s2\"> is not known.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                <span class=\"n\">specified_version</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"n\">specified_version</span>\n            <span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">specified_version</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span> <span class=\"o\">=</span> <span class=\"n\">base_path</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">specified_version</span><span class=\"p\">:</span>\n                <span class=\"k\">assert</span> <span class=\"n\">specified_version</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">version_keys</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Specified version </span><span class=\"si\">{}</span><span class=\"s2\"> is not known.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">specified_version</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"n\">specified_version</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_version</span>\n            <span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">version_key</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span> <span class=\"o\">=</span> <span class=\"n\">base_path</span>\n            <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Siwave.Application.&quot;</span> <span class=\"o\">+</span> <span class=\"n\">version_key</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">AEDTVersion</span> <span class=\"o\">=</span> <span class=\"n\">version_key</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">interpreter</span> <span class=\"o\">=</span> <span class=\"n\">_com</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">interpreter_ver</span> <span class=\"o\">=</span> <span class=\"n\">_pythonver</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;oSiwave&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"p\">):</span>\n                <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">_com</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pythonnet&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span> <span class=\"o\">=</span> <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Activator</span><span class=\"o\">.</span><span class=\"n\">CreateInstance</span><span class=\"p\">(</span><span class=\"n\">System</span><span class=\"o\">.</span><span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">GetTypeFromProgID</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">))</span>\n\n            <span class=\"k\">elif</span> <span class=\"n\">_com</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pythonnet_v3&quot;</span><span class=\"p\">:</span>\n                <span class=\"c1\"># TODO check if possible to use pythonnet. at the moment the tool open AEDt</span>\n                <span class=\"c1\"># but doesn&#39;t return the wrapper of oApp</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Launching Siwave with module win32com.&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span> <span class=\"o\">=</span> <span class=\"n\">win32com</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Dispatch</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">AEDTVersion</span> <span class=\"o\">=</span> <span class=\"n\">version_key</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">RestoreWindow</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">siwave_initialized</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the project.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project path.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the project.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">GetProjectDirectory</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path and name for the project file.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.siw&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lock_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Lock file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path and name for the project lock file.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.siw.lock&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">results_directory</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Results directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path to the ``aedtresults`` directory.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.siwresults&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">src_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Source directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path to the ``python`` directory.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pyaedt_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;PyAEDT directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path to the ``pyaedt`` directory.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">src_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;..&quot;</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oproject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Project.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span>\n\n<div class=\"viewcode-block\" id=\"Siwave.open_project\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave.open_project/#pyaedt.siwave.Siwave.open_project\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">open_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">proj_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Open a project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        proj_path : str, optional</span>\n<span class=\"sd\">            Full path to the project. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">proj_path</span><span class=\"p\">):</span>\n            <span class=\"n\">open_result</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">OpenProject</span><span class=\"p\">(</span><span class=\"n\">proj_path</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"n\">open_result</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Siwave.save_project\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave.save_project/#pyaedt.siwave.Siwave.save_project\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">projectpath</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">projectName</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Save the project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        proj_path : str, optional</span>\n<span class=\"sd\">            Full path to the project. The default is ``None``.</span>\n<span class=\"sd\">        projectName : str, optional</span>\n<span class=\"sd\">             Name of the project. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">projectName</span> <span class=\"ow\">and</span> <span class=\"n\">projectpath</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ScrSaveProjectAs</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">projectpath</span><span class=\"p\">,</span> <span class=\"n\">projectName</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.siw&quot;</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Siwave.close_project\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave.close_project/#pyaedt.siwave.Siwave.close_project\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">close_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">save_project</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Close the project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        save_project : bool, optional</span>\n<span class=\"sd\">            Whether to save the current project before closing it. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">save_project</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ScrCloseProject</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Siwave.quit_application\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave.quit_application/#pyaedt.siwave.Siwave.quit_application\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">quit_application</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Quit the application.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oSiwave</span><span class=\"o\">.</span><span class=\"n\">Quit</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Siwave.export_element_data\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave.export_element_data/#pyaedt.siwave.Siwave.export_element_data\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_element_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">simulation_name</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Vias&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export element data.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        simulation_name : str</span>\n<span class=\"sd\">            Name of the setup.</span>\n<span class=\"sd\">        file_path : str</span>\n<span class=\"sd\">            Path to the exported report.</span>\n<span class=\"sd\">        data_type : str, optional</span>\n<span class=\"sd\">            Type of the data. The default is ``&quot;Vias&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ScrExportElementData</span><span class=\"p\">(</span><span class=\"n\">simulation_name</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Siwave.export_siwave_report\"><a class=\"viewcode-back\" href=\"../../../EDBAPI/_autosummary/pyaedt.siwave.Siwave.export_siwave_report/#pyaedt.siwave.Siwave.export_siwave_report\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_siwave_report</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">simulation_name</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">bkground_color</span><span class=\"o\">=</span><span class=\"s2\">&quot;White&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export the Siwave report.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        simulation_name : str</span>\n<span class=\"sd\">            Name of the setup.</span>\n<span class=\"sd\">        file_path : str</span>\n<span class=\"sd\">            Path to the exported report.</span>\n<span class=\"sd\">        bkground_color : str, optional</span>\n<span class=\"sd\">            Color of the report&#39;s background. The default is ``&quot;White&quot;``.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ScrExportDcSimReportScaling</span><span class=\"p\">(</span><span class=\"s2\">&quot;All&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;All&quot;</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">ScrExportDcSimReport</span><span class=\"p\">(</span><span class=\"n\">simulation_name</span><span class=\"p\">,</span> <span class=\"n\">bkground_color</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">):</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/siwave", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}