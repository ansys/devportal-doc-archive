{"parents": [{"link": "../../", "title": "Module code"}], "title": "pyaedt.maxwellcircuit", "body": "<h1>Source code for pyaedt.maxwellcircuit</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;This module contains the ``MaxwellCircuit`` class.&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.AnalysisMaxwellCircuit</span> <span class=\"kn\">import</span> <span class=\"n\">AnalysisMaxwellCircuit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n\n\n<div class=\"viewcode-block\" id=\"MaxwellCircuit\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.maxwellcircuit.MaxwellCircuit/#pyaedt.maxwellcircuit.MaxwellCircuit\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MaxwellCircuit</span><span class=\"p\">(</span><span class=\"n\">AnalysisMaxwellCircuit</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides the Maxwell Circuit application interface.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    projectname : str, optional</span>\n<span class=\"sd\">        Name of the project to select or the full path to the project</span>\n<span class=\"sd\">        or AEDTZ archive to open.  The default is ``None``, in which</span>\n<span class=\"sd\">        case an attempt is made to get an active project. If no</span>\n<span class=\"sd\">        projects are present, an empty project is created.</span>\n<span class=\"sd\">    designname : str, optional</span>\n<span class=\"sd\">        Name of the design to select. The default is ``None``, in</span>\n<span class=\"sd\">        which case an attempt is made to get an active design. If no</span>\n<span class=\"sd\">        designs are present, an empty design is created.</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``. If ``None``,</span>\n<span class=\"sd\">        the active setup is used or the latest installed version is</span>\n<span class=\"sd\">        used.</span>\n<span class=\"sd\">    non-graphical : bool, optional</span>\n<span class=\"sd\">        Whether to launch AEDT in non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT is launched in graphical mode.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the</span>\n<span class=\"sd\">        machine.  The default is ``True``.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to release AEDT on exit. The default is ``False``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to open the AEDT student version. The default is ``False``.</span>\n<span class=\"sd\">    machine : str, optional</span>\n<span class=\"sd\">        Machine name to connect the oDesktop session to. This works only in 2022 R2</span>\n<span class=\"sd\">        and later. The remote server must be up and running with the command</span>\n<span class=\"sd\">        `&quot;ansysedt.exe -grpcsrv portnum&quot;`. If the machine is `&quot;localhost&quot;`, the server</span>\n<span class=\"sd\">        is also started if not present.</span>\n<span class=\"sd\">    port : int, optional</span>\n<span class=\"sd\">        Port number on which to start the oDesktop communication on an already existing server.</span>\n<span class=\"sd\">        This parameter is ignored when creating a new server. It works only in 2022 R2 or</span>\n<span class=\"sd\">        later. The remote server must be up and running with the command `&quot;ansysedt.exe -grpcsrv portnum&quot;`.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Process ID for the instance of AEDT to point PyAEDT at. The default is</span>\n<span class=\"sd\">        ``None``. This parameter is only used when ``new_desktop_session = False``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Create an instance of Maxwell Circuit and connect to an existing</span>\n<span class=\"sd\">    Maxwell circuit design or create a new Maxwell circuit design if one does</span>\n<span class=\"sd\">    not exist.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import MaxwellCircuit</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = MaxwellCircuit()</span>\n\n<span class=\"sd\">    Create an instance of Maxwell Circuit and link to a project named</span>\n<span class=\"sd\">    ``&quot;projectname&quot;``. If this project does not exist, create one with</span>\n<span class=\"sd\">    this name.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; app = MaxwellCircuit(projectname)</span>\n\n<span class=\"sd\">    Create an instance of Maxwell Circuit and link to a design named</span>\n<span class=\"sd\">    ``&quot;designname&quot;`` in a project named ``&quot;projectname&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; app = MaxwellCircuit(projectname, designame)</span>\n\n<span class=\"sd\">    Create an instance of Maxwell Circuit and open the specified</span>\n<span class=\"sd\">    project, which is named ``&quot;myfile.aedt&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; app = MaxwellCircuit(&quot;myfile.aedt&quot;)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Constructor.&quot;&quot;&quot;</span>\n        <span class=\"n\">AnalysisMaxwellCircuit</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Maxwell Circuit&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">projectname</span><span class=\"p\">,</span>\n            <span class=\"n\">designname</span><span class=\"p\">,</span>\n            <span class=\"n\">specified_version</span><span class=\"p\">,</span>\n            <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n            <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n            <span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n            <span class=\"n\">student_version</span><span class=\"p\">,</span>\n            <span class=\"n\">machine</span><span class=\"p\">,</span>\n            <span class=\"n\">port</span><span class=\"p\">,</span>\n            <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"MaxwellCircuit.create_schematic_from_netlist\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.maxwellcircuit.MaxwellCircuit.create_schematic_from_netlist/#pyaedt.maxwellcircuit.MaxwellCircuit.create_schematic_from_netlist\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_schematic_from_netlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_to_import</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a circuit schematic from an HSpice net list.</span>\n\n<span class=\"sd\">        Supported currently are:</span>\n\n<span class=\"sd\">        * R</span>\n<span class=\"sd\">        * L</span>\n<span class=\"sd\">        * C</span>\n<span class=\"sd\">        * Diodes</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        file_to_import : str</span>\n<span class=\"sd\">            Full path to the HSpice file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">xpos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"mf\">0.0508</span>\n        <span class=\"n\">use_instance</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">file_to_import</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_resistor</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;L&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_inductor</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;C&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_capacitor</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_diode</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">mycomp</span><span class=\"p\">:</span>\n                    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                    <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">mycomp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CH&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                            <span class=\"k\">continue</span>\n                        <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">location</span>\n                        <span class=\"k\">if</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">xpos</span><span class=\"p\">:</span>\n                            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">angle</span><span class=\"p\">)</span>\n                        <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                    <span class=\"n\">ypos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                    <span class=\"k\">if</span> <span class=\"n\">ypos</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.254</span><span class=\"p\">:</span>\n                        <span class=\"n\">xpos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                        <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"MaxwellCircuit.export_netlist_from_schematic\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.maxwellcircuit.MaxwellCircuit.export_netlist_from_schematic/#pyaedt.maxwellcircuit.MaxwellCircuit.export_netlist_from_schematic\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_netlist_from_schematic</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_to_export</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Create netlist from schematic circuit.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        file_to_export : str</span>\n<span class=\"sd\">            File path to export the netlist to.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Netlist file path when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">file_to_export</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;.sph&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Invalid file extension. It must be ``.sph``.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportNetlist</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">file_to_export</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">file_to_export</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/maxwellcircuit", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}