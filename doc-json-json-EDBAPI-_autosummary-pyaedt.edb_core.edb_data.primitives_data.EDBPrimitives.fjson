{"parents": [{"link": "../../", "title": "API EDB reference"}, {"link": "../../DataEdb/", "title": "Components, primitives, and nets"}], "prev": {"link": "../pyaedt.edb_core.edb_data.nets_data.EDBNetsData.primitives/", "title": "primitives"}, "next": {"link": "../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.add_void/", "title": "add_void"}, "title": "pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives", "meta": {}, "body": "<section id=\"pyaedt-edb-core-edb-data-primitives-data-edbprimitives\">\n<h1>pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives<a class=\"headerlink\" href=\"#pyaedt-edb-core-edb-data-primitives-data-edbprimitives\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">pyaedt.edb_core.edb_data.primitives_data.</span></span><span class=\"sig-name descname\"><span class=\"pre\">EDBPrimitives</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">raw_primitive</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">core_app</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb_core/edb_data/primitives_data/#EDBPrimitives\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Manages EDB functionalities for a primitives.\nIt Inherits EDB Object properties.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">Edb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb</span> <span class=\"o\">=</span> <span class=\"n\">Edb</span><span class=\"p\">(</span><span class=\"n\">myedb</span><span class=\"p\">,</span> <span class=\"n\">edbversion</span><span class=\"o\">=</span><span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb_prim</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">primitives</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb_prim</span><span class=\"o\">.</span><span class=\"n\">is_void</span> <span class=\"c1\"># Class Property</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb_prim</span><span class=\"o\">.</span><span class=\"n\">IsVoid</span><span class=\"p\">()</span> <span class=\"c1\"># EDB Object Property</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.add_void/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.add_void\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.add_void\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.add_void</span></code></a>(point_list)</p></td>\n<td><p>Add a void to current primitive.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.area/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.area\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.area\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.area</span></code></a>([include_voids])</p></td>\n<td><p>Return the total area.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.convert_to_polygon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.convert_to_polygon</span></code></a>()</p></td>\n<td><p>Convert path to polygon.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.delete/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.delete\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.delete\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.delete</span></code></a>()</p></td>\n<td><p>Delete this primtive.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.get_connected_object_id_set\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.get_connected_object_id_set</span></code></a>()</p></td>\n<td><p>Produce a list of all geometries physically connected to a given layout object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.intersect/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.intersect\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.intersect\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.intersect</span></code></a>(primitives)</p></td>\n<td><p>Intersect active primitive with one or more primitives.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.is_arc\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.is_arc</span></code></a>(point)</p></td>\n<td><p>Either if a point is an arc or not.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.points/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.points\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.points</span></code></a>([arc_segments])</p></td>\n<td><p>Return the list of points with arcs converted to segments.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.points_raw/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.points_raw\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.points_raw\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.points_raw</span></code></a>()</p></td>\n<td><p>Return a list of Edb points.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.subtract/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.subtract\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.subtract\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.subtract</span></code></a>(primitives)</p></td>\n<td><p>Subtract active primitive with one or more primitives.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.unite/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.unite\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.unite\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.unite</span></code></a>(primitives)</p></td>\n<td><p>Unite active primitive with one or more primitives.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.id/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.id\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.id\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.id</span></code></a></p></td>\n<td><p>Primitive ID.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.is_void/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.is_void\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.is_void\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.is_void</span></code></a></p></td>\n<td><p>Either if the primitive is a void or not.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.layer/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.layer\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.layer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.layer</span></code></a></p></td>\n<td><p>Get the primitive edb layer object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.layer_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.layer_name</span></code></a></p></td>\n<td><p>Get or Set the primitive layer name.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.net/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.net\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.net\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.net</span></code></a></p></td>\n<td><p>Return EDB Net Object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.net_name/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.net_name\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.net_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.net_name</span></code></a></p></td>\n<td><p>Get or Set the primitive net name.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.type/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.type\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.type\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.type</span></code></a></p></td>\n<td><p>Return the type of the primitive.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.voids/#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.voids\" title=\"pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.voids\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDBPrimitives.voids</span></code></a></p></td>\n<td><p>Return a list of voids of the given primitive if any.</p></td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["EDBAPI/_autosummary/pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.add_void", "add_void", "N", "next"], ["EDBAPI/_autosummary/pyaedt.edb_core.edb_data.nets_data.EDBNetsData.primitives", "primitives", "P", "previous"]], "sourcename": "EDBAPI/_autosummary/pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EDBPrimitives</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "EDBAPI/_autosummary/pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}