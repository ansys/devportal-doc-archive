{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.PrimitivesNexxim", "body": "<h1>Source code for pyaedt.modeler.PrimitivesNexxim</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.LoadAEDTFile</span> <span class=\"kn\">import</span> <span class=\"n\">load_entire_aedt_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.Object3d</span> <span class=\"kn\">import</span> <span class=\"n\">CircuitComponent</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.PrimitivesCircuit</span> <span class=\"kn\">import</span> <span class=\"n\">CircuitComponents</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.PrimitivesCircuit</span> <span class=\"kn\">import</span> <span class=\"n\">ComponentCatalog</span>\n\n\n<div class=\"viewcode-block\" id=\"NexximComponents\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents/#pyaedt.modeler.PrimitivesNexxim.NexximComponents\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">NexximComponents</span><span class=\"p\">(</span><span class=\"n\">CircuitComponents</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages circuit components for Nexxim.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    modeler : :class:`pyaedt.modeler.Circuit.ModelerNexxim`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Circuit</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit()</span>\n<span class=\"sd\">    &gt;&gt;&gt; prim = aedtapp.modeler.schematic</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_libray</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design library.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Nexxim Circuit Elements&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">tab_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Tab name.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">partname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the object ID if the part name is an integer or the object name if it is a string.</span>\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        partname : int or str</span>\n<span class=\"sd\">            Part ID or object name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">partname</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">partname</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">partname</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span> <span class=\"o\">==</span> <span class=\"n\">partname</span> <span class=\"ow\">or</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"n\">partname</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">modeler</span><span class=\"p\">):</span>\n        <span class=\"n\">CircuitComponents</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">modeler</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_currentId</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">components_catalog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the syslib component catalog with all info.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.PrimitivesCircuit.ComponentCatalog`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span> <span class=\"o\">=</span> <span class=\"n\">ComponentCatalog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_subcircuit\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_subcircuit/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_subcircuit\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_subcircuit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">nested_subcircuit_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a new Circuit subcircuit to the design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``None``.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the design. The default is ``None``, in which case</span>\n<span class=\"sd\">            a unique name is generated.</span>\n<span class=\"sd\">        nested_subcircuit_id : str, optional</span>\n<span class=\"sd\">            ID of the nested subcircuit.</span>\n<span class=\"sd\">            Example `&quot;U1&quot;`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object when successful or ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Circuit</span>\n<span class=\"sd\">        &gt;&gt;&gt; cir = Circuit()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Circuit&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">nested_subcircuit_id</span><span class=\"p\">:</span>\n            <span class=\"n\">parent_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">:</span><span class=\"si\">{}</span><span class=\"s2\">:</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">nested_subcircuit_id</span><span class=\"p\">,</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">parent_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">:</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;:U&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10000</span><span class=\"p\">)))</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span><span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">parent_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">nested_subcircuit_id</span><span class=\"p\">:</span>\n            <span class=\"n\">pname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">:</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">nested_subcircuit_id</span><span class=\"p\">)</span>\n            <span class=\"n\">odes</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">pname</span><span class=\"p\">)</span>\n            <span class=\"n\">oed</span> <span class=\"o\">=</span> <span class=\"n\">odes</span><span class=\"o\">.</span><span class=\"n\">SetActiveEditor</span><span class=\"p\">(</span><span class=\"s2\">&quot;SchematicEditor&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">objs</span> <span class=\"o\">=</span> <span class=\"n\">oed</span><span class=\"o\">.</span><span class=\"n\">GetAllElements</span><span class=\"p\">()</span>\n            <span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">objs</span> <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tabname</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tab_name</span><span class=\"p\">,</span> <span class=\"n\">custom_editor</span><span class=\"o\">=</span><span class=\"n\">oed</span><span class=\"p\">)</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">match</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">o</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">location</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">location</span>\n                <span class=\"k\">if</span> <span class=\"n\">angle</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u00b0&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.duplicate\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.duplicate/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.duplicate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">flip</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a new subcircuit to the design.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            This works only in graphical mode.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component : class:`pyaedt.modeler.Object3d.CircuitComponent` Circuit Component Object</span>\n<span class=\"sd\">            Component to duplicate.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        flip : bool, optional</span>\n<span class=\"sd\">            Whether the component should be flipped. The default value is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent` Circuit Component Object</span>\n<span class=\"sd\">        when successful or ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comp_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">):</span>\n            <span class=\"n\">comp_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">comp_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">comp_names</span><span class=\"p\">])</span>\n        <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">flip</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">id</span> <span class=\"k\">for</span> <span class=\"nb\">id</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"n\">new_ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">id</span> <span class=\"k\">for</span> <span class=\"nb\">id</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span> <span class=\"k\">if</span> <span class=\"nb\">id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">ids</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_ids</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">new_ids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.connect_components_in_series\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.connect_components_in_series/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.connect_components_in_series\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connect_components_in_series</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">components_to_connect</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Connect schematic components in series.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        components_to_connect : list of :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">           List of Components to connect. It can be a list of objects or component names.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Circuit</span>\n<span class=\"sd\">        &gt;&gt;&gt; circuit = Circuit()</span>\n<span class=\"sd\">        &gt;&gt;&gt; myind = circuit.modeler.schematic.create_inductor(compname=&quot;L100&quot;, value=1e-9, location=[0,0])</span>\n<span class=\"sd\">        &gt;&gt;&gt; myres = circuit.modeler.schematic.create_resistor(compname=&quot;R100&quot;, value=50, location=[0.002, 0.05])</span>\n<span class=\"sd\">        &gt;&gt;&gt; circuit.modeler.schematic.connect_components_in_series([myind, myres])</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comps</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">component</span> <span class=\"ow\">in</span> <span class=\"n\">components_to_connect</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">):</span>\n                <span class=\"n\">comps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                    <span class=\"k\">if</span> <span class=\"n\">component</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">]:</span>\n                        <span class=\"n\">comps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"p\">)</span>\n                        <span class=\"k\">break</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">comps</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;At least two components have to be passed.&quot;</span>\n        <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">comps</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"n\">comps</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">connect_to_component</span><span class=\"p\">(</span><span class=\"n\">comps</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.connect_components_in_parallel\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.connect_components_in_parallel/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.connect_components_in_parallel\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connect_components_in_parallel</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">components_to_connect</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Connect schematic components in parallel.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        components_to_connect : list of :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">           List of Components to connect. It can be a list of objects or component names.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Circuit</span>\n<span class=\"sd\">        &gt;&gt;&gt; circuit = Circuit()</span>\n<span class=\"sd\">        &gt;&gt;&gt; myind = circuit.modeler.schematic.create_inductor(&quot;L100&quot;, 1e-9)</span>\n<span class=\"sd\">        &gt;&gt;&gt; myres = circuit.modeler.schematic.create_resistor(&quot;R100&quot;, 50)</span>\n<span class=\"sd\">        &gt;&gt;&gt; circuit.modeler.schematic.connect_components_in_parallel([myind, myres.composed_name])</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comps</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">component</span> <span class=\"ow\">in</span> <span class=\"n\">components_to_connect</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">):</span>\n                <span class=\"n\">comps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                    <span class=\"k\">if</span> <span class=\"n\">component</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">]:</span>\n                        <span class=\"n\">comps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"p\">)</span>\n                        <span class=\"k\">break</span>\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">comps</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;At least two components have to be passed.&quot;</span>\n        <span class=\"n\">comps</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">connect_to_component</span><span class=\"p\">([</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">comps</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]])</span>\n        <span class=\"n\">terminal_to_connect</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cmp</span> <span class=\"k\">for</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"n\">comps</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">terminal_to_connect</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">terminal_to_connect</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">connect_to_component</span><span class=\"p\">([</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">terminal_to_connect</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]])</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_3dlayout_subcircuit\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_3dlayout_subcircuit/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_3dlayout_subcircuit\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_3dlayout_subcircuit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sourcename</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a subcircuit from a HFSS 3DLayout.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.0</span>\n<span class=\"sd\">           Use :func:`Circuit.modeler.schematic.add_subcircuit_3dlayout` instead.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`create_3dlayout_subcircuit` is deprecated. Use `add_subcircuit_3dlayout` instead.&quot;</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_subcircuit_3dlayout</span><span class=\"p\">(</span><span class=\"n\">sourcename</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.add_subcircuit_3dlayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_3dlayout/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_3dlayout\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_subcircuit_3dlayout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sourcename</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a subcircuit from a HFSS 3DLayout.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sourcename : str</span>\n<span class=\"sd\">            Name of the source design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.CopyDesign</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.PasteDesign</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">CopyDesign</span><span class=\"p\">(</span><span class=\"n\">sourcename</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">PasteDesign</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">sourcename</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_field_model\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_field_model/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_field_model\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_field_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"p\">,</span> <span class=\"n\">pin_names</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;hfss&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a field model.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        design_name : str</span>\n<span class=\"sd\">            Name of the design.</span>\n<span class=\"sd\">        solution_name : str</span>\n<span class=\"sd\">            Name  of the solution.</span>\n<span class=\"sd\">        pin_names : list</span>\n<span class=\"sd\">            List of the pin names.</span>\n<span class=\"sd\">        model_type : str, optional</span>\n<span class=\"sd\">            Type of the model. The default is ``&quot;hfss&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n        <span class=\"n\">component_name</span> <span class=\"o\">=</span> <span class=\"n\">design_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME: &quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModTime:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1589868932</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;LibLocation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModelType:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">model_type</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ImageFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SymbolPinConfiguration:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortInfoBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortOrderBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;DesignName:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">design_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NewToOldMap:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"s2\">&quot;OldToNewMap:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"s2\">&quot;PinNames:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">pin_names</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:DesignerCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:HSpiceCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;NoiseModelOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;External&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;WB_SystemID:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">design_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IsWBModel:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;filename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;numberofports:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_names</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Simulate:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CloseProject:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SaveProject:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InterpY:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InterpAlg:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IgnoreDepVars:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Renormalize:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;RenormImpedance:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">50</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Info:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">8</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumTerminals:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_names</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;DataSource:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModifiedOn:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1589868933</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Manufacturer:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Symbol:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelNames:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Footprint:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InfoTopic:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InfoHelpFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IconFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OriginalLocation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IEEE:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Author:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OriginalAuthor:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CreationDate:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1589868933</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExampleFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HiddenComponent:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;GroupID:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Refbase:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;S&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NumParts:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n        <span class=\"k\">for</span> <span class=\"n\">pn</span> <span class=\"ow\">in</span> <span class=\"n\">pin_names</span><span class=\"p\">:</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Terminal:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">pn</span><span class=\"p\">,</span> <span class=\"n\">pn</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Electrical&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">])</span>\n            <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Properties&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Owner&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()]])</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompExtID:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;ModelName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FieldSolver&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:CosimDefinition&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;CosimulatorType:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">103</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;CosimDefName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;IsDefinition:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Connect:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ModelDefinitionName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">component_name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ShowRefPin2:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">2</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;LenPropName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">AddCompInstance</span><span class=\"p\">(</span><span class=\"n\">component_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">component_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_resistor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_resistor/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_resistor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_resistor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a resistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the resistor. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Resistance in ohms. The default is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_inductor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_inductor/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_inductor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_inductor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an inductor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the inductor. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Inductance value. The default is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Inductors&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;IND_&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;L&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_capacitor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_capacitor/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_capacitor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_capacitor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a capacitor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the capacitor. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Capacitor value. The default is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Capacitors&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CAP_&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_voltage_dc\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_voltage_dc/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_voltage_dc\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_voltage_dc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a voltage DC source.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the voltage DC source. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Voltage value. The default is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Independent Sources&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;V_DC&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;DC&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_voltage_probe\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_voltage_probe/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_voltage_probe\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_voltage_probe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">probe_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a voltage probe.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        probe_name :</span>\n<span class=\"sd\">            Name of the voltage probe. The default is ``None``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"mf\">24.4</span> <span class=\"o\">/</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"mf\">24.4</span> <span class=\"o\">/</span> <span class=\"mi\">1000</span><span class=\"p\">]</span>\n\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Probes&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;VPROBE&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">,</span> <span class=\"n\">probe_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_current_pulse\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_current_pulse/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_current_pulse\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_current_pulse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a current pulse.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the current pulse. The default is ``None``.</span>\n<span class=\"sd\">        value_lists : list, optional</span>\n<span class=\"sd\">            List of values for the current pulse. The default is ``[]``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Independent Sources&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;I_PULSE&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;I1&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;I2&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TD&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TR&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TF&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PW&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PER&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_voltage_pulse\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_voltage_pulse/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_voltage_pulse\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_voltage_pulse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a voltage pulse.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the voltage pulse. The default is ``None``.</span>\n<span class=\"sd\">        value_lists : list, optional</span>\n<span class=\"sd\">            List of values for the voltage pulse. The default is ``[]``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Independent Sources&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;V_PULSE&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;V1&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;V2&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TD&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TR&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TF&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PW&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_lists</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n            <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PER&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lists</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_current_dc\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_current_dc/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_current_dc\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_current_dc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a current DC source.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the current DC source. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Current value. The default is ``1``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Independent Sources&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;I_DC&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;DC&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_coupling_inductors\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_coupling_inductors/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_coupling_inductors\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">create_coupling_inductors</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"p\">,</span> <span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a coupling inductor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str</span>\n<span class=\"sd\">            Name of the coupling inductor.</span>\n<span class=\"sd\">        l1 : float, optional</span>\n<span class=\"sd\">            Value for the first inductor.</span>\n<span class=\"sd\">        l2 : float, optional</span>\n<span class=\"sd\">            Value for the second inductor.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Value for the coupling inductor. The default is ``1``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Inductors&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;K_IND&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;Inductor1&quot;</span><span class=\"p\">,</span> <span class=\"n\">l1</span><span class=\"p\">)</span>\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;Inductor2&quot;</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">)</span>\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;CouplingFactor&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_diode\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_diode/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_diode\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_diode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;required&quot;</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a diode.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str</span>\n<span class=\"sd\">            Name of the diode. The default is ``None``.</span>\n<span class=\"sd\">        model_name : str, optional</span>\n<span class=\"sd\">            Name of the model. The default is ``&quot;required&quot;``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cmpid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Diodes&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;DIODE_Level1&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">cmpid</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;MOD&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">cmpid</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_npn\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_npn/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_npn\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_npn</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an NPN transistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str</span>\n<span class=\"sd\">            Name of the NPN transistor. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Value for the NPN transistor. The default is ``None``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;BJTs&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Level01_NPN&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;MOD&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_pnp\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_pnp/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_pnp\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_pnp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a PNP transistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str</span>\n<span class=\"sd\">            Name of the PNP transistor. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Value for the PNP transistor. The default is ``None``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;BJTs&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Level01_PNP&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;MOD&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_new_component_from_symbol\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_new_component_from_symbol/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_new_component_from_symbol\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_new_component_from_symbol</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">symbol_name</span><span class=\"p\">,</span>\n        <span class=\"n\">pin_lists</span><span class=\"p\">,</span>\n        <span class=\"n\">time_stamp</span><span class=\"o\">=</span><span class=\"mi\">1591858313</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">refbase</span><span class=\"o\">=</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">parameter_list</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">parameter_value</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">gref</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a component from a symbol.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        symbol_name : str</span>\n<span class=\"sd\">            Name of the symbol.</span>\n<span class=\"sd\">        pin_lists : list</span>\n<span class=\"sd\">            List of pin names.</span>\n<span class=\"sd\">        time_stamp : int, optional</span>\n<span class=\"sd\">            UTC time stamp.</span>\n<span class=\"sd\">        description : str, optional</span>\n<span class=\"sd\">            Component description.</span>\n<span class=\"sd\">        refbase : str, optional</span>\n<span class=\"sd\">            Reference base. The default is ``&quot;U&quot;``.</span>\n<span class=\"sd\">        parameter_list : list</span>\n<span class=\"sd\">            List of parameters. The default is ``[]``.</span>\n<span class=\"sd\">        parameter_value : list</span>\n<span class=\"sd\">            List of parameter values. The default is ``[]``.</span>\n<span class=\"sd\">        gref : str, optional</span>\n<span class=\"sd\">            Global Reference</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">symbol_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Info:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumTerminals:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_lists</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;DataSource:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModifiedOn:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">time_stamp</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Manufacturer:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Symbol:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">symbol_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelNames:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Footprint:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">description</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InfoTopic:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InfoHelpFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IconFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OriginalLocation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IEEE:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Author:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OriginalAuthor:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CreationDate:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">time_stamp</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExampleFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HiddenComponent:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;GroupID:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Refbase:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">refbase</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NumParts:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">pin_lists</span><span class=\"p\">:</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Terminal:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Electrical&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompExtID:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">parameter_list</span><span class=\"p\">,</span> <span class=\"n\">parameter_value</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;MOD&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;TextValueProp:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">])</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">])</span>\n\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]])</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"n\">spicesintax</span> <span class=\"o\">=</span> <span class=\"n\">refbase</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;@ID &quot;</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">while</span> <span class=\"nb\">id</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_lists</span><span class=\"p\">):</span>\n            <span class=\"n\">spicesintax</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;%&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span>\n            <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">spicesintax</span> <span class=\"o\">+=</span> <span class=\"n\">symbol_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">parameter_list</span><span class=\"p\">,</span> <span class=\"n\">parameter_value</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;MOD&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                <span class=\"n\">spicesintax</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;@</span><span class=\"si\">{}</span><span class=\"s2\"> &quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">spicesintax</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">=@</span><span class=\"si\">{}</span><span class=\"s2\"> &quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:CosimDefinition&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CosimulatorType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">4</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CosimDefName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IsDefinition:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Connect:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Data:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;Nexxim Circuit:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">spicesintax</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;GRef:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;Nexxim Circuit:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">gref</span><span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.get_comp_custom_settings\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.get_comp_custom_settings/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.get_comp_custom_settings\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_comp_custom_settings</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">toolNum</span><span class=\"p\">,</span> <span class=\"n\">dc</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">interp</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">extrap</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">conv</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">passivity</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">reciprocal</span><span class=\"o\">=</span><span class=\"s2\">&quot;False&quot;</span><span class=\"p\">,</span> <span class=\"n\">opt</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve custom settings for a resistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        toolNum :</span>\n\n<span class=\"sd\">        dc :</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        interp :</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        extrap :</span>\n<span class=\"sd\">            The default is ``1``.</span>\n<span class=\"sd\">        conv :</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        passivity : optional</span>\n<span class=\"sd\">            The default is ``0``.</span>\n<span class=\"sd\">        reciprocal : bool, optional</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        opt : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        data_type : optional</span>\n<span class=\"sd\">            Type of the data. The default is ``1``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of the custom settings for the resistor.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">toolNum</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">custom</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:DesignerCustomization&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">toolNum</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">custom</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:NexximCustomization&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">custom</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;NAME:HSpiceCustomization&quot;</span>\n\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">custom</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">dc</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">interp</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">extrap</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">conv</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">passivity</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">reciprocal</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">opt</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">data_type</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">res</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.add_subcircuit_hfss_link\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_hfss_link/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_hfss_link\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_subcircuit_hfss_link</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">comp_name</span><span class=\"p\">,</span>\n        <span class=\"n\">pin_names</span><span class=\"p\">,</span>\n        <span class=\"n\">source_project_path</span><span class=\"p\">,</span>\n        <span class=\"n\">source_design_name</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Setup1 : Sweep&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">image_subcircuit_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a subcircuit HFSS link.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.27</span>\n<span class=\"sd\">           Use :func:`pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_dynamic_link.` instead.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        comp_name : str</span>\n<span class=\"sd\">            Name of the subcircuit HFSS link.</span>\n<span class=\"sd\">        pin_names : list</span>\n<span class=\"sd\">            List of the pin names.</span>\n<span class=\"sd\">        source_project_path : str</span>\n<span class=\"sd\">            Path to the source project.</span>\n<span class=\"sd\">        source_design_name : str</span>\n<span class=\"sd\">            Name of the design.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution and sweep. The</span>\n<span class=\"sd\">            default is ``&quot;Setup1 : Sweep&quot;``.</span>\n<span class=\"sd\">        image_subcircuit_path : str, optional</span>\n<span class=\"sd\">            Path of the Picture used in Circuit.</span>\n<span class=\"sd\">            Default is an HFSS Picture exported automatically.</span>\n<span class=\"sd\">        variables : dict, optional.</span>\n<span class=\"sd\">            Dictionary of design variables of linked object if any. Key is name, value is default value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddCompInstance</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`add_subcircuit_hfss_link` is deprecated. Use `add_subcircuit_dynamic_link` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_subcircuit_link</span><span class=\"p\">(</span>\n            <span class=\"n\">comp_name</span><span class=\"o\">=</span><span class=\"n\">comp_name</span><span class=\"p\">,</span>\n            <span class=\"n\">pin_names</span><span class=\"o\">=</span><span class=\"n\">pin_names</span><span class=\"p\">,</span>\n            <span class=\"n\">source_project_path</span><span class=\"o\">=</span><span class=\"n\">source_project_path</span><span class=\"p\">,</span>\n            <span class=\"n\">source_design_name</span><span class=\"o\">=</span><span class=\"n\">source_design_name</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"n\">image_subcircuit_path</span><span class=\"o\">=</span><span class=\"n\">image_subcircuit_path</span><span class=\"p\">,</span>\n            <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hfss&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"n\">variables</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.add_subcircuit_dynamic_link\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_dynamic_link/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_subcircuit_dynamic_link\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_subcircuit_dynamic_link</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">pyaedt_app</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">extrusion_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">enable_cable_modeling</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">default_matrix</span><span class=\"o\">=</span><span class=\"s2\">&quot;Original&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">tline_port</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">comp_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a subcircuit from `HFSS`, `Q3d` or `2D Extractor` in circuit design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        pyaedt_app : :class:`pyaedt.q3d.Q3d` or :class:`pyaedt.q3d.Q2d` or :class:`pyaedt.q3d.Hfss`.</span>\n<span class=\"sd\">            pyaedt application object to include. It could be an Hfss object, a Q3d object or a Q2d.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution and sweep. The default is ``&quot;Setup1 : Sweep&quot;``.</span>\n<span class=\"sd\">        extrusion_length : float, str, optional</span>\n<span class=\"sd\">            Extrusion length for 2D Models (q2d or Hfss) in model units. Default is `None`.</span>\n<span class=\"sd\">        enable_cable_modeling : bool, optional</span>\n<span class=\"sd\">            Either if the Hfss Cable modeling has to be enabled for 2D subcircuits.</span>\n<span class=\"sd\">        default_matrix : str, optional</span>\n<span class=\"sd\">            Matrix to link to the subcircuit. Default to `&quot;Original&quot;`. It only applies to 2D Extractor and Q3D.</span>\n<span class=\"sd\">        tline_port : str, optional</span>\n<span class=\"sd\">            Port to be used for tramsission line. Only applies to Hfss.</span>\n<span class=\"sd\">        comp_name : str, optional</span>\n<span class=\"sd\">            Component name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddCompInstance</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddDynamicLink</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">comp_name</span><span class=\"p\">:</span>\n            <span class=\"n\">comp_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">pyaedt_app</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"n\">source_project_path</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt_app</span><span class=\"o\">.</span><span class=\"n\">project_file</span>\n        <span class=\"n\">source_design_name</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt_app</span><span class=\"o\">.</span><span class=\"n\">design_name</span>\n        <span class=\"c1\"># matrix = None</span>\n        <span class=\"c1\"># if pyaedt_app.design_type == &quot;HFSS&quot;:</span>\n        <span class=\"c1\">#     pin_names = pyaedt_app.get_excitations_name()</span>\n        <span class=\"c1\"># elif pyaedt_app.design_type == &quot;Q3D Extractor&quot;:</span>\n        <span class=\"c1\">#     excts = list(pyaedt_app.oboundary.GetExcitations())</span>\n        <span class=\"c1\">#     i = 0</span>\n        <span class=\"c1\">#     sources = []</span>\n        <span class=\"c1\">#     sinks = []</span>\n        <span class=\"c1\">#     while i &lt; len(excts):</span>\n        <span class=\"c1\">#         if excts[i + 1] == &quot;Source&quot;:</span>\n        <span class=\"c1\">#             sources.append(excts[i])</span>\n        <span class=\"c1\">#         elif excts[i + 1] == &quot;Sink&quot;:</span>\n        <span class=\"c1\">#             sinks.append(excts[i])</span>\n        <span class=\"c1\">#         i += 2</span>\n        <span class=\"c1\">#     pin_names = sources + sinks</span>\n        <span class=\"c1\">#     matrix = [&quot;NAME:Reduce Matrix Choices&quot;] + list(pyaedt_app.omatrix.ListReduceMatrixes())</span>\n        <span class=\"c1\"># elif pyaedt_app.design_type == &quot;2D Extractor&quot;:</span>\n        <span class=\"c1\">#     excts = list(pyaedt_app.oboundary.GetExcitations())</span>\n        <span class=\"c1\">#     pins = []</span>\n        <span class=\"c1\">#     i = 0</span>\n        <span class=\"c1\">#     while i &lt; len(excts):</span>\n        <span class=\"c1\">#         if excts[i + 1] != &quot;ReferenceGround&quot;:</span>\n        <span class=\"c1\">#             pins.append(excts[i])</span>\n        <span class=\"c1\">#         i += 2</span>\n        <span class=\"c1\">#     pin_names = [i + &quot;_in&quot; for i in pins]</span>\n        <span class=\"c1\">#     pin_names.append(&quot;Input_ref&quot;)</span>\n        <span class=\"c1\">#     pin_names.extend([i + &quot;_out&quot; for i in pins])</span>\n        <span class=\"c1\">#     pin_names.append(&quot;Output_ref&quot;)</span>\n        <span class=\"c1\">#     matrix = [&quot;NAME:Reduce Matrix Choices&quot;] + list(pyaedt_app.omatrix.ListReduceMatrixes())</span>\n        <span class=\"c1\"># variables = {}</span>\n        <span class=\"c1\"># for k, v in pyaedt_app.variable_manager.variables.items():</span>\n        <span class=\"c1\">#     variables[k] = v.evaluated_value</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution_name</span><span class=\"p\">:</span>\n            <span class=\"n\">solution_name</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"c1\"># comp = self._add_subcircuit_link(</span>\n        <span class=\"c1\">#     comp_name=comp_name,</span>\n        <span class=\"c1\">#     pin_names=pin_names,</span>\n        <span class=\"c1\">#     source_project_path=source_project_path,</span>\n        <span class=\"c1\">#     source_design_name=source_design_name,</span>\n        <span class=\"c1\">#     solution_name=solution_name,</span>\n        <span class=\"c1\">#     image_subcircuit_path=&quot;&quot;,</span>\n        <span class=\"c1\">#     model_type=pyaedt_app.design_type,</span>\n        <span class=\"c1\">#     variables=variables,</span>\n        <span class=\"c1\">#     extrusion_length_q2d=extrusion_length,</span>\n        <span class=\"c1\">#     matrix=matrix,</span>\n        <span class=\"c1\">#     enable_cable_modeling=enable_cable_modeling,</span>\n        <span class=\"c1\">#     default_matrix=default_matrix,</span>\n        <span class=\"c1\"># )</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">AddDynamicLink</span><span class=\"p\">(</span>\n            <span class=\"n\">source_design_name</span><span class=\"p\">,</span>\n            <span class=\"n\">source_project_path</span><span class=\"p\">,</span>\n            <span class=\"n\">comp_name</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"n\">tline_port</span><span class=\"p\">,</span>\n            <span class=\"n\">default_matrix</span><span class=\"p\">,</span>\n            <span class=\"n\">enable_cable_modeling</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Pyaedt Dynamic Link&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">comp_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">extrusion_length</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">extrusion_length</span><span class=\"p\">))</span>\n                <span class=\"k\">if</span> <span class=\"n\">tline_port</span> <span class=\"ow\">and</span> <span class=\"n\">extrusion_length</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TLineLength&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">extrusion_length</span><span class=\"p\">))</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_subcircuit_link</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">comp_name</span><span class=\"p\">,</span>\n        <span class=\"n\">pin_names</span><span class=\"p\">,</span>\n        <span class=\"n\">source_project_path</span><span class=\"p\">,</span>\n        <span class=\"n\">source_design_name</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Setup1 : Sweep&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">image_subcircuit_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;hfss&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">extrusion_length_q2d</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"n\">matrix</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">enable_cable_modeling</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">default_matrix</span><span class=\"o\">=</span><span class=\"s2\">&quot;Original&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">simulate_solutions</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a subcircuit HFSS link.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        comp_name : str</span>\n<span class=\"sd\">            Name of the subcircuit HFSS link.</span>\n<span class=\"sd\">        pin_names : list</span>\n<span class=\"sd\">            List of the pin names.</span>\n<span class=\"sd\">        source_project_path : str</span>\n<span class=\"sd\">            Path to the source project.</span>\n<span class=\"sd\">        source_design_name : str</span>\n<span class=\"sd\">            Name of the design.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution and sweep. The</span>\n<span class=\"sd\">            default is ``&quot;Setup1 : Sweep&quot;``.</span>\n<span class=\"sd\">        image_subcircuit_path : str, optional</span>\n<span class=\"sd\">            Path of the Picture used in Circuit.</span>\n<span class=\"sd\">            Default is an HFSS Picture exported automatically.</span>\n<span class=\"sd\">        model_type : str, optional</span>\n<span class=\"sd\">            Dynamick Link type. Options are `Hfss`, `Q3d`, `Q2d`.</span>\n<span class=\"sd\">        variables : dict, optional</span>\n<span class=\"sd\">            Dictionary of variables and default values of original design, if exists.</span>\n<span class=\"sd\">        extrusion_length_q2d : str, float optional</span>\n<span class=\"sd\">            Extrusion length for 2D Models. Default is 10 (in model units).</span>\n<span class=\"sd\">        matrix : list, optional</span>\n<span class=\"sd\">        simulate_solutions : bool, optional</span>\n<span class=\"sd\">            Either if simulate or interpolate solutions.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.AddCompInstance</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;hfss&quot;</span>\n        <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;HFSS&quot;</span>\n        <span class=\"n\">icon_file</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;hfss.bmp&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">model_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;q3d extractor&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;q3d&quot;</span>\n            <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Q3D&quot;</span>\n            <span class=\"n\">icon_file</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;q3d.bmp&quot;</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">model_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2d extractor&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2dext&quot;</span>\n            <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2DExtractor&quot;</span>\n            <span class=\"n\">icon_file</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2dextractor.bmp&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">model_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;siwave&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;siwave&quot;</span>\n            <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Siwave&quot;</span>\n            <span class=\"n\">icon_file</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">designer_customization</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_comp_custom_settings</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">nexxim_customization</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_comp_custom_settings</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">hspice_customization</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_comp_custom_settings</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">image_subcircuit_path</span><span class=\"p\">:</span>\n            <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">file_extension</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">image_subcircuit_path</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">file_extension</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;.gif&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">file_extension</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;.bmp&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">file_extension</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;.jpg&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">image_subcircuit_path</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;Image extension is not valid. Use default image instead.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">image_subcircuit_path</span><span class=\"p\">:</span>\n            <span class=\"n\">image_subcircuit_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">desktop_install_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;syslib&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Bitmaps&quot;</span><span class=\"p\">,</span> <span class=\"n\">icon_file</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">comp_name_aux</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">source_design_name</span><span class=\"p\">)</span>\n        <span class=\"n\">WB_SystemID</span> <span class=\"o\">=</span> <span class=\"n\">source_design_name</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_file</span> <span class=\"o\">==</span> <span class=\"n\">source_project_path</span><span class=\"p\">:</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">source_project_path</span>\n            <span class=\"n\">comp_name_aux</span> <span class=\"o\">=</span> <span class=\"n\">comp_name</span>\n            <span class=\"n\">WB_SystemID</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n\n        <span class=\"n\">compInfo</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">comp_name_aux</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">comp_name_aux</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModTime:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1591855779</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;LibLocation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModelType:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">model</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ImageFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">image_subcircuit_path</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SymbolPinConfiguration:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortInfoBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortOrderBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;DesignName:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">source_design_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NewToOldMap:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"s2\">&quot;OldToNewMap:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"s2\">&quot;PinNames:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">pin_names</span><span class=\"p\">,</span>\n            <span class=\"n\">designer_customization</span><span class=\"p\">,</span>\n            <span class=\"n\">nexxim_customization</span><span class=\"p\">,</span>\n            <span class=\"n\">hspice_customization</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NoiseModelOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;External&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;WB_SystemID:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">WB_SystemID</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IsWBModel:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;filename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">filename</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;numberofports:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_names</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Simulate:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">simulate_solutions</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CloseProject:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">model_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;siwave&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SaveProject:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InterpY:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InterpAlg:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IgnoreDepVars:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">owner</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Siwave&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">compInfo</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;Renormalize:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;RenormImpedance:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">50</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">owner</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">compInfo</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;Renormalize:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;RenormImpedance:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">50</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">matrix</span><span class=\"p\">:</span>\n                <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Reduce Matrix Choices&quot;</span><span class=\"p\">,</span> <span class=\"n\">default_matrix</span><span class=\"p\">]</span>\n            <span class=\"n\">compInfo</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"s2\">&quot;Reduce Matrix:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Original&quot;</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">matrix</span><span class=\"p\">:</span>\n                <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Reduce Matrix Choices&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Original&quot;</span><span class=\"p\">]</span>\n            <span class=\"n\">compInfo</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span><span class=\"s2\">&quot;Reduce Matrix:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">default_matrix</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EnableCableModeling:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">enable_cable_modeling</span><span class=\"p\">])</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">compInfo</span><span class=\"p\">)</span>\n\n        <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">8</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NumTerminals:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_names</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;DataSource:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModifiedOn:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1591855894</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Manufacturer:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Symbol:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModelNames:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Footprint:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InfoTopic:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InfoHelpFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IconFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">icon_file</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;OriginalLocation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;IEEE:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Author:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;OriginalAuthor:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CreationDate:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1591855894</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ExampleFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;HiddenComponent:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;GroupID:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">compInfo2</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">comp_name</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Info:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">info</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Refbase:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;S&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NumParts:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">pin_names</span><span class=\"p\">:</span>\n            <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Terminal:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Electrical&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">])</span>\n            <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Properties&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Owner&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"p\">]])</span>\n        <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompExtID:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n        <span class=\"n\">variable_args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;ModelName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FieldSolver&quot;</span><span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">owner</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2DExtractor&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;VariableProp:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">extrusion_length_q2d</span><span class=\"p\">)])</span>\n        <span class=\"k\">if</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">variables</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;VariableProp:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)])</span>\n        <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">variable_args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]])</span>\n\n        <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">variable_args</span><span class=\"p\">)</span>\n        <span class=\"n\">compInfo2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:CosimDefinition&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;CosimulatorType:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">103</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;CosimDefName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;IsDefinition:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Connect:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ModelDefinitionName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">comp_name_aux</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ShowRefPin2:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">2</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;LenPropName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">compInfo2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">AddCompInstance</span><span class=\"p\">(</span><span class=\"n\">comp_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">comp_name</span>\n            <span class=\"n\">item2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span>\n            <span class=\"k\">if</span> <span class=\"n\">comp_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.set_sim_option_on_hfss_subcircuit\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.set_sim_option_on_hfss_subcircuit/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.set_sim_option_on_hfss_subcircuit\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_sim_option_on_hfss_subcircuit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">option</span><span class=\"o\">=</span><span class=\"s2\">&quot;simulate&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the simulation option on the HFSS subscircuit.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component : str</span>\n<span class=\"sd\">            Address of the component instance. For example, ``&quot;Inst@Galileo_cutout3;87;1&quot;``.</span>\n<span class=\"sd\">        option : str</span>\n<span class=\"sd\">            Set the simulation strategy. Options are ``&quot;simulate&quot;`` and ``&quot;interpolate&quot;``. The default</span>\n<span class=\"sd\">            is ``&quot;simulate&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">option</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;simulate&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">setting</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Simulate missing solutions&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">option</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;interpolate&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">setting</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Interpolate existing solutions&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Simulation option&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">setting</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edit_link_definition_hfss_subcircuit</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.set_sim_solution_on_hfss_subcircuit\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.set_sim_solution_on_hfss_subcircuit/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.set_sim_solution_on_hfss_subcircuit\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_sim_solution_on_hfss_subcircuit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Setup1 : Sweep&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the simulation solution on the HFSS subcircuit.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component : str</span>\n<span class=\"sd\">            Address of the component instance. For example, ``&quot;Inst@Galileo_cutout3;87;1&quot;``.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution and sweep. The default is ``&quot;Setup1 : Sweep&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oProject.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Solution&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edit_link_definition_hfss_subcircuit</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edit_link_definition_hfss_subcircuit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">edited_prop</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generic function to set the link definition for an hfss subcircuit.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">complist</span> <span class=\"o\">=</span> <span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">):</span>\n            <span class=\"n\">complist</span> <span class=\"o\">=</span> <span class=\"n\">component</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">complist</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">component</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Wrong Component Input&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">complist2</span> <span class=\"o\">=</span> <span class=\"n\">complist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Component@&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">complist2</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])]</span>\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"n\">edited_prop</span><span class=\"p\">]</span>\n\n        <span class=\"n\">arg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"n\">arg1</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.refresh_dynamic_link\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.refresh_dynamic_link/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.refresh_dynamic_link\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">refresh_dynamic_link</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Refresh a dynamic link.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_name : str</span>\n<span class=\"sd\">            Name of the dynamic link.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.UpdateDynamicLink</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;@&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_name</span><span class=\"p\">:</span>\n            <span class=\"n\">component_name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">component_name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">UpdateDynamicLink</span><span class=\"p\">(</span><span class=\"n\">component_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.push_excitations\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.push_excitations/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.push_excitations\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">push_excitations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance_name</span><span class=\"p\">,</span> <span class=\"n\">thevenin_calculation</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearFrequency&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Push excitations.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.0</span>\n<span class=\"sd\">           Use :func:`Circuit.push_excitations` instead.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`circuit.modeler.schematic.push_excitation` is deprecated. &quot;</span> <span class=\"s2\">&quot;Use `circuit.push_excitation` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">push_excitations</span><span class=\"p\">(</span><span class=\"n\">instance_name</span><span class=\"p\">,</span> <span class=\"n\">thevenin_calculation</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.assign_sin_excitation2ports\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.assign_sin_excitation2ports/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.assign_sin_excitation2ports\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_sin_excitation2ports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a voltage sinusoidal excitation to circuit ports.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.0</span>\n<span class=\"sd\">           Use :func:`Circuit.modeler.schematic.assign_voltage_sinusoidal_excitation_to_ports` instead.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`assign_sin_excitation2ports` is deprecated. &quot;</span>\n            <span class=\"s2\">&quot;Use `assign_voltage_sinusoidal_excitation_to_ports` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">assign_voltage_sinusoidal_excitation_to_ports</span><span class=\"p\">(</span><span class=\"n\">ports</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_parse_spice_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">):</span>\n        <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;.subckt&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">():</span>\n                    <span class=\"n\">pinNames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; |</span><span class=\"se\">\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n                    <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pinNames</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">models</span>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.create_component_from_spicemodel\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_component_from_spicemodel/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.create_component_from_spicemodel\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_component_from_spicemodel</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create and place a new component based on a spice .lib file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_path : str</span>\n<span class=\"sd\">            Path to .lib file.</span>\n<span class=\"sd\">        model_name : str, optional</span>\n<span class=\"sd\">            Model name to import. If `None` the first subckt in the lib file will be placed.</span>\n<span class=\"sd\">        location : list, optional</span>\n<span class=\"sd\">            Position in the schematic of the new component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parse_spice_model</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">model_name</span> <span class=\"ow\">and</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n            <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">model_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Options&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Mode:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Overwrite:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SupportsSimModels:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LoadOnly:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Models&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n            <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"n\">model_name</span><span class=\"p\">:</span>\n                <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">ImportModelsFromFile</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">),</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"n\">model_name</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"NexximComponents.add_siwave_dynamic_link\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_siwave_dynamic_link/#pyaedt.modeler.PrimitivesNexxim.NexximComponents.add_siwave_dynamic_link\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_siwave_dynamic_link</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_path</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">simulate_solutions</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a siwave dinamyc link object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_path : str</span>\n<span class=\"sd\">            Full path to the .siw file.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Solution name.</span>\n<span class=\"sd\">        simulate_solutions : bool, optional</span>\n<span class=\"sd\">            Either if simulate or interpolate existing solutions.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Project file doesn&#39;t exist&quot;</span>\n        <span class=\"n\">comp_name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">results_path</span> <span class=\"o\">=</span> <span class=\"n\">model_path</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;averesults&quot;</span>\n        <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">results_path</span><span class=\"p\">,</span> <span class=\"n\">comp_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.asol&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">load_entire_aedt_file</span><span class=\"p\">(</span><span class=\"n\">solution</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution_name</span><span class=\"p\">:</span>\n            <span class=\"n\">solution_name</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solutions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SYZSolutions&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">results_folder</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">results_path</span><span class=\"p\">,</span>\n            <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solutions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SYZSolutions&quot;</span><span class=\"p\">][</span><span class=\"n\">solution_name</span><span class=\"p\">][</span><span class=\"s2\">&quot;DiskName&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solutions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SYZSolutions&quot;</span><span class=\"p\">][</span><span class=\"n\">solution_name</span><span class=\"p\">][</span><span class=\"s2\">&quot;DiskName&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.syzinfo&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">pin_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">results_folder</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">line</span><span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;PORT&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">line_spit</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">pin_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line_spit</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_subcircuit_link</span><span class=\"p\">(</span>\n            <span class=\"n\">comp_name</span><span class=\"p\">,</span>\n            <span class=\"n\">pin_names</span><span class=\"p\">,</span>\n            <span class=\"n\">model_path</span><span class=\"p\">,</span>\n            <span class=\"n\">comp_name</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;siwave&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">simulate_solutions</span><span class=\"o\">=</span><span class=\"n\">simulate_solutions</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/PrimitivesNexxim", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}