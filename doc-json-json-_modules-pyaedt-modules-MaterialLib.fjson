{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modules.MaterialLib", "body": "<h1>Source code for pyaedt.modules.MaterialLib</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains the `Materials` class.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">fnmatch</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">_arg2dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_create_json_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Material</span> <span class=\"kn\">import</span> <span class=\"n\">Material</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Material</span> <span class=\"kn\">import</span> <span class=\"n\">MatProperties</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Material</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Material</span> <span class=\"kn\">import</span> <span class=\"n\">SurfaceMaterial</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The Pandas module is required to run some functionalities.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span> <span class=\"s2\">&quot;Install with </span><span class=\"se\">\\n\\n</span><span class=\"s2\">pip install pandas</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Materials\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials/#pyaedt.modules.MaterialLib.Materials\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Materials</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Contains the AEDT materials database and all methods for creating and editing materials.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    app : :class:`pyaedt.application.Analysis3D.FieldAnalysis3D`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; materials = app.materials</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color_id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omaterial_manager</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">omaterial_manager</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats_lower</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesktop</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">oproject</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Successfully loaded project materials !&quot;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># self.material_keys = self._get_materials()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material_keys</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_load_from_project</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__iter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">itervalues</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"p\">):</span>\n        <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkifmaterialexists</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">matobj</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">matobj</span>\n        <span class=\"k\">elif</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">item</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_material_keys</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Dictionary of Surface Material in the project.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict of :class:`pyaedt.modules.Material.Material`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material_keys</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material_keys</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_surface_materials</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material_keys</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">liquids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the liquids materials. A liquid is a fluid with density greater or equal to 100Kg/m3.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of fluid materials.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">thermal_material_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Fluid&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">mass_density</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"ow\">and</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">mass_density</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n                <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">gases</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the gas materials. A gas is a fluid with density lower than 100Kg/m3.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of all Gas materials.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">thermal_material_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Fluid&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">mass_density</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"ow\">and</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">mass_density</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n                <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_mat_names_aedt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_read_materials</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_mat_names_aedt_lower</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats_lower</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat_names_aedt</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats_lower</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat_names_aedt</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats_lower</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mat_names_aedt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;List material names.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat_names_aedt</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mat_names_aedt_lower</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;List material names with lower case.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat_names_aedt_lower</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_read_materials</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">get_mat_list</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">):</span>\n            <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">_begin_search</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;^\\$begin &#39;(.+)&#39;&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">aedt_fh</span><span class=\"p\">:</span>\n                <span class=\"n\">raw_lines</span> <span class=\"o\">=</span> <span class=\"n\">aedt_fh</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">raw_lines</span><span class=\"p\">:</span>\n                    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">_begin_search</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">b</span><span class=\"p\">:</span>  <span class=\"c1\"># walk down a level</span>\n                        <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">mats</span>\n\n        <span class=\"n\">amat_sys</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">filenames</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">syslib</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span>\n            <span class=\"k\">if</span> <span class=\"n\">fnmatch</span><span class=\"o\">.</span><span class=\"n\">fnmatch</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.amat&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">amat_personal</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">filenames</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">personallib</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span>\n            <span class=\"k\">if</span> <span class=\"n\">fnmatch</span><span class=\"o\">.</span><span class=\"n\">fnmatch</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.amat&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">amat_user</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">dirpath</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">filenames</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">userlib</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">filename</span> <span class=\"ow\">in</span> <span class=\"n\">filenames</span>\n            <span class=\"k\">if</span> <span class=\"n\">fnmatch</span><span class=\"o\">.</span><span class=\"n\">fnmatch</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.amat&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">amat_libs</span> <span class=\"o\">=</span> <span class=\"n\">amat_sys</span> <span class=\"o\">+</span> <span class=\"n\">amat_personal</span> <span class=\"o\">+</span> <span class=\"n\">amat_user</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">amat</span> <span class=\"ow\">in</span> <span class=\"n\">amat_libs</span><span class=\"p\">:</span>\n            <span class=\"c1\"># m = load_entire_aedt_file(amat)</span>\n            <span class=\"c1\"># mats.extend(list(m.keys()))</span>\n            <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">get_mat_list</span><span class=\"p\">(</span><span class=\"n\">amat</span><span class=\"p\">))</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s2\">&quot;$index$&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s2\">&quot;$base_index$&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"n\">mats</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">GetProjectMaterialNames</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_aedt_case_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"k\">if</span> <span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mat_names_aedt_lower</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat_names_aedt</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mat_names_aedt_lower</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">())]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_materials</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get materials.&quot;&quot;&quot;</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Definitions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Materials&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">mats</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ds</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Definitions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Materials&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_surface_materials</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Definitions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SurfaceMaterials&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">mats</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">SurfaceMaterial</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"p\">,</span>\n                    <span class=\"n\">ds</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Definitions&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SurfaceMaterials&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"n\">mats</span>\n\n<div class=\"viewcode-block\" id=\"Materials.checkifmaterialexists\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.checkifmaterialexists/#pyaedt.modules.MaterialLib.Materials.checkifmaterialexists\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">checkifmaterialexists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check if a material exists in AEDT or PyAEDT Definitions.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        mat : str</span>\n<span class=\"sd\">            Name of the material. If the material exists and is not in the materials database,</span>\n<span class=\"sd\">            it is added to this database.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.Material`</span>\n<span class=\"sd\">            Material object if present, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.GetProjectMaterialNames</span>\n<span class=\"sd\">        &gt;&gt;&gt; oMaterialManager.GetData</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">,</span> <span class=\"n\">Material</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">mat</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mat_names_aedt_lower</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n            <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">GetProjectMaterialNames</span><span class=\"p\">()):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mat_names_aedt_lower</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_api</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.check_thermal_modifier\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.check_thermal_modifier/#pyaedt.modules.MaterialLib.Materials.check_thermal_modifier\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">check_thermal_modifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check a material to see if it has any thermal modifiers.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        mat : str</span>\n<span class=\"sd\">            Name of the material. All properties for this material are checked</span>\n<span class=\"sd\">            for thermal modifiers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">omat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkifmaterialexists</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">omat</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">MatProperties</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">omat</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.add_material\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.add_material/#pyaedt.modules.MaterialLib.Materials.add_material\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materialname</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a material with default values.</span>\n\n<span class=\"sd\">        When the added material object is returned, you can customize</span>\n<span class=\"sd\">        the material. This method does not update the material.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        materialname : str</span>\n<span class=\"sd\">            Name of the material.</span>\n<span class=\"sd\">        props : dict, optional</span>\n<span class=\"sd\">            Material property dictionary. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.Material`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat = hfss.materials.add_material(&quot;MyMaterial&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(mat.conductivity.value)</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.GetProjectMaterialNames</span>\n<span class=\"sd\">        &gt;&gt;&gt; oMaterialManager.GetData</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">materialname</span> <span class=\"o\">=</span> <span class=\"n\">materialname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Adding new material to the Project Library: &quot;</span> <span class=\"o\">+</span> <span class=\"n\">materialname</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">materialname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Warning. The material is already in the database. Change or edit the name.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">materialname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_aedt_case_name</span><span class=\"p\">(</span><span class=\"n\">materialname</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_aedt_case_name</span><span class=\"p\">(</span><span class=\"n\">materialname</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">material</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materialname</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material has been added. Edit it to update in Desktop.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">materialname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">material</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">materialname</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">materialname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.add_surface_material\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.add_surface_material/#pyaedt.modules.MaterialLib.Materials.add_surface_material\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_surface_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material_name</span><span class=\"p\">,</span> <span class=\"n\">emissivity</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a surface material.</span>\n\n<span class=\"sd\">        In AEDT, base properties are loaded from the XML database file ``amat.xml``</span>\n<span class=\"sd\">        or from the emissivity.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        material_name : str</span>\n<span class=\"sd\">            Name of the surface material.</span>\n<span class=\"sd\">        emissivity : float, optional</span>\n<span class=\"sd\">            Emissivity value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.SurfaceMaterial`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddSurfaceMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; mat = hfss.materials.add_surface_material(&quot;Steel&quot;, 0.85)</span>\n<span class=\"sd\">        &gt;&gt;&gt; print(mat.emissivity.value)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Adding a surface material to the project library: &quot;</span> <span class=\"o\">+</span> <span class=\"n\">material_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Warning. The material is already in the database. Change the name or edit it.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">material</span> <span class=\"o\">=</span> <span class=\"n\">SurfaceMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">,</span> <span class=\"n\">material_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">emissivity</span><span class=\"p\">:</span>\n                <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">emissivity</span> <span class=\"o\">=</span> <span class=\"n\">emissivity</span>\n                <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material has been added. Edit it to update in Desktop.&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">material</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_create_mat_project_vars</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">matlist</span><span class=\"p\">):</span>\n        <span class=\"n\">matprop</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">tol</span> <span class=\"o\">=</span> <span class=\"mf\">1e-12</span>\n        <span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">MatProperties</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"p\">:</span>\n            <span class=\"n\">matprop</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">mat</span> <span class=\"ow\">in</span> <span class=\"n\">matlist</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">matprop</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">prop</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">))</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Warning. Wrong parsed property. Reset to 0&quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">matprop</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">matprop</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span><span class=\"p\">:</span>\n                    <span class=\"k\">del</span> <span class=\"n\">matprop</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"n\">matprop</span>\n\n<div class=\"viewcode-block\" id=\"Materials.add_material_sweep\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.add_material_sweep/#pyaedt.modules.MaterialLib.Materials.add_material_sweep\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_material_sweep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">swargs</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a sweep material made of an array of materials.</span>\n\n<span class=\"sd\">        If a material needs to have a dataset (thermal modifier), then a</span>\n<span class=\"sd\">        dataset is created. Material properties are loaded from the XML file</span>\n<span class=\"sd\">        database ``amat.xml``.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        swargs : list</span>\n<span class=\"sd\">            List of materials to merge into a single sweep material.</span>\n<span class=\"sd\">        matname : str</span>\n<span class=\"sd\">            Name of the sweep material.</span>\n<span class=\"sd\">        enableTM : bool, optional</span>\n<span class=\"sd\">            Unavailable currently. Whether to enable the thermal modifier.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Index of the project variable.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.add_material(&quot;MyMaterial&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.add_material(&quot;MyMaterial2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.add_material_sweep([&quot;MyMaterial&quot;, &quot;MyMaterial2&quot;], &quot;Sweep_copper&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">matsweep</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">args</span> <span class=\"ow\">in</span> <span class=\"n\">swargs</span><span class=\"p\">:</span>\n            <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">checkifmaterialexists</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">matobj</span><span class=\"p\">:</span>\n                <span class=\"n\">matsweep</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">matobj</span><span class=\"p\">)</span>\n\n        <span class=\"n\">mat_dict</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_mat_project_vars</span><span class=\"p\">(</span><span class=\"n\">matsweep</span><span class=\"p\">)</span>\n\n        <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"p\">)</span>\n        <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;$ID&quot;</span> <span class=\"o\">+</span> <span class=\"n\">matname</span>\n        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">is_sweep_material</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">mat_dict</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">mat_dict</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">[</span><span class=\"s2\">&quot;$&quot;</span> <span class=\"o\">+</span> <span class=\"n\">matname</span> <span class=\"o\">+</span> <span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mat_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n                <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"o\">+</span> <span class=\"n\">matname</span> <span class=\"o\">+</span> <span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;[&quot;</span> <span class=\"o\">+</span> <span class=\"n\">index</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;]&quot;</span>\n                <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"o\">+</span> <span class=\"n\">matname</span> <span class=\"o\">+</span> <span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;[&quot;</span> <span class=\"o\">+</span> <span class=\"n\">index</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;]&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">matname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">newmat</span>\n        <span class=\"k\">return</span> <span class=\"n\">index</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.duplicate_material\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.duplicate_material/#pyaedt.modules.MaterialLib.Materials.duplicate_material\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Duplicate a material.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        material : str</span>\n<span class=\"sd\">            Name of the material.</span>\n<span class=\"sd\">        new_name : str</span>\n<span class=\"sd\">            Name for the copy of the material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.Material`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.add_material(&quot;MyMaterial&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.duplicate_material(&quot;MyMaterial&quot;, &quot;MyMaterial2&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">{}</span><span class=\"s2\"> is not present&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">material</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"n\">material</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n\n        <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">,</span> <span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">)</span>\n        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mats</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">new_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">newmat</span>\n        <span class=\"k\">return</span> <span class=\"n\">newmat</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.duplicate_surface_material\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.duplicate_surface_material/#pyaedt.modules.MaterialLib.Materials.duplicate_surface_material\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_surface_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Duplicate a surface material.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">         material : str</span>\n<span class=\"sd\">            Name of the surface material.</span>\n<span class=\"sd\">        new_name : str</span>\n<span class=\"sd\">            Name for the copy of the surface material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.SurfaceMaterial`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.AddSurfaceMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.add_surface_material(&quot;MyMaterial&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.duplicate_surface_material(&quot;MyMaterial&quot;, &quot;MyMaterial2&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">{}</span><span class=\"s2\"> is not present&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">material</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"n\">SurfaceMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">)</span>\n        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_material_keys</span><span class=\"p\">[</span><span class=\"n\">new_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">newmat</span>\n        <span class=\"k\">return</span> <span class=\"n\">newmat</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.remove_material\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.remove_material/#pyaedt.modules.MaterialLib.Materials.remove_material\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"p\">,</span> <span class=\"n\">library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Remove a material.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        material : str</span>\n<span class=\"sd\">            Name of the material.</span>\n<span class=\"sd\">        library : str, optional</span>\n<span class=\"sd\">            Name of the library containing this material.</span>\n<span class=\"sd\">            The default is ``&quot;Project&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager.RemoveMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.add_material(&quot;MyMaterial&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.materials.remove_material(&quot;MyMaterial&quot;)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">material</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">mat</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">{}</span><span class=\"s2\"> is not present&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">RemoveMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_aedt_case_name</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">),</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">library</span><span class=\"p\">)</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">mat</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conductors</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Conductors in the material database.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of conductors in the material database.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">mat</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">is_conductor</span><span class=\"p\">():</span>\n                <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dielectrics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Dielectrics in the material database.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of dielectrics in the material database.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">mat</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">is_dielectric</span><span class=\"p\">():</span>\n                <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_load_from_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"p\">:</span>\n            <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">GetProjectMaterialNames</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">mats</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">el</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n                    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;aedmattolibrary failed for material </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get and convert Material Properties from AEDT to Dictionary.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        matname : str</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Material.Material`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">matname</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odefinition_manager</span><span class=\"o\">.</span><span class=\"n\">GetProjectMaterialNames</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_api</span><span class=\"p\">:</span>\n            <span class=\"n\">matname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_aedt_case_name</span><span class=\"p\">(</span><span class=\"n\">matname</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">_arg2dict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omaterial_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"p\">)),</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n        <span class=\"n\">values_view</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n        <span class=\"n\">value_iterator</span> <span class=\"o\">=</span> <span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">values_view</span><span class=\"p\">)</span>\n        <span class=\"n\">first_value</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">value_iterator</span><span class=\"p\">)</span>\n        <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"p\">,</span> <span class=\"n\">first_value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">matname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">newmat</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">matname</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n\n<div class=\"viewcode-block\" id=\"Materials.export_materials_to_file\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.export_materials_to_file/#pyaedt.modules.MaterialLib.Materials.export_materials_to_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_materials_to_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">full_json_path</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Export all materials to a JSON file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        full_json_path : str</span>\n<span class=\"sd\">            Full path and name of the JSON file to export to.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">find_datasets</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">out_list</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">)):</span>\n                    <span class=\"n\">find_datasets</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">out_list</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n                    <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;&lt;type &#39;List&#39;&gt;&quot;</span><span class=\"p\">:</span>\n                        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;pwl(&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;cpl(&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">):</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                            <span class=\"k\">for</span> <span class=\"n\">element</span> <span class=\"ow\">in</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                                <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;(?:pwl|cwl)\\((.*?),&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">))</span>\n                                <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n                                    <span class=\"n\">out_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">out_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)])</span>\n\n        <span class=\"c1\"># Data to be written</span>\n        <span class=\"n\">output_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">output_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">)</span>\n        <span class=\"n\">out_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">find_datasets</span><span class=\"p\">(</span><span class=\"n\">output_dict</span><span class=\"p\">,</span> <span class=\"n\">out_list</span><span class=\"p\">)</span>\n        <span class=\"n\">datasets</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"n\">out_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_datasets</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_datasets</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">:</span>\n                    <span class=\"n\">datasets</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                                <span class=\"p\">{</span>\n                                    <span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">xunit</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">yunit</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">zunit</span><span class=\"p\">],</span>\n                                    <span class=\"s2\">&quot;Points&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">val</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">z</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">tup</span><span class=\"p\">],</span>\n                                <span class=\"p\">}</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">datasets</span><span class=\"p\">[</span><span class=\"n\">ds</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                                <span class=\"p\">{</span>\n                                    <span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">xunit</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">yunit</span><span class=\"p\">],</span>\n                                    <span class=\"s2\">&quot;Points&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">val</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">tup</span><span class=\"p\">],</span>\n                                <span class=\"p\">}</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">)</span>\n        <span class=\"n\">json_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">json_dict</span><span class=\"p\">[</span><span class=\"s2\">&quot;materials&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">output_dict</span>\n        <span class=\"k\">if</span> <span class=\"n\">datasets</span><span class=\"p\">:</span>\n            <span class=\"n\">json_dict</span><span class=\"p\">[</span><span class=\"s2\">&quot;datasets&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span>\n        <span class=\"k\">return</span> <span class=\"n\">_create_json_file</span><span class=\"p\">(</span><span class=\"n\">json_dict</span><span class=\"p\">,</span> <span class=\"n\">full_json_path</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.import_materials_from_file\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.import_materials_from_file/#pyaedt.modules.MaterialLib.Materials.import_materials_from_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_materials_from_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">full_json_path</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import and create materials from a JSON file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        full_json_path : str</span>\n<span class=\"sd\">            Full path and name for the JSON file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modules.Material.Material`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">materials_added</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">full_json_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">json_file</span><span class=\"p\">:</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">json_file</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;datasets&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">&quot;datasets&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">numcol</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">])</span>\n                <span class=\"n\">xunit</span> <span class=\"o\">=</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">yunit</span> <span class=\"o\">=</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                <span class=\"n\">zunit</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n\n                <span class=\"n\">new_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Points&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">numcol</span><span class=\"p\">]</span>\n                    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Points&quot;</span><span class=\"p\">]),</span> <span class=\"n\">numcol</span><span class=\"p\">)</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">xval</span> <span class=\"o\">=</span> <span class=\"n\">new_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">yval</span> <span class=\"o\">=</span> <span class=\"n\">new_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                <span class=\"n\">zval</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"k\">if</span> <span class=\"n\">numcol</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                    <span class=\"n\">zunit</span> <span class=\"o\">=</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"s2\">&quot;Coordinates&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                    <span class=\"n\">zval</span> <span class=\"o\">=</span> <span class=\"n\">new_list</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span>\n                    <span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">xunit</span><span class=\"o\">=</span><span class=\"n\">xunit</span><span class=\"p\">,</span> <span class=\"n\">yunit</span><span class=\"o\">=</span><span class=\"n\">yunit</span><span class=\"p\">,</span> <span class=\"n\">zunit</span><span class=\"o\">=</span><span class=\"n\">zunit</span><span class=\"p\">,</span> <span class=\"n\">xlist</span><span class=\"o\">=</span><span class=\"n\">xval</span><span class=\"p\">,</span> <span class=\"n\">ylist</span><span class=\"o\">=</span><span class=\"n\">yval</span><span class=\"p\">,</span> <span class=\"n\">zlist</span><span class=\"o\">=</span><span class=\"n\">zval</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">&quot;materials&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                <span class=\"n\">newname</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">%s</span><span class=\"s2\"> already exists. Renaming to </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">newname</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">newname</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n            <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">newname</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n            <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">newname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">newmat</span>\n            <span class=\"n\">materials_added</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">newmat</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">materials_added</span></div>\n\n<div class=\"viewcode-block\" id=\"Materials.import_materials_from_excel\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.MaterialLib.Materials.import_materials_from_excel/#pyaedt.modules.MaterialLib.Materials.import_materials_from_excel\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_materials_from_excel</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material_file</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import and create materials from a csv or excel file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        material_file : str</span>\n<span class=\"sd\">            Full path and name for the csv or xlsx file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modules.Material.Material`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">materials_added</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;This method only works with CPython.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">material_file</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;.csv&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">material_file</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">material_file</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;.xlsx&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"n\">material_file</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Only csv and xlsx are supported.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">iterrows</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n                <span class=\"k\">break</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                <span class=\"n\">newname</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">%s</span><span class=\"s2\"> already exists. Renaming to </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">newname</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">newname</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n            <span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">MatProperties</span><span class=\"o\">.</span><span class=\"n\">aedtname</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span>\n                    <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">keys</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"n\">keys</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"p\">)]</span>\n                    <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"n\">keys</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"p\">)],</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">isnan</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"n\">keys</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"p\">)]))</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"n\">keys</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"p\">)]</span>\n            <span class=\"n\">new_material</span> <span class=\"o\">=</span> <span class=\"n\">Material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">newname</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n            <span class=\"n\">new_material</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">newname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">new_material</span>\n            <span class=\"n\">materials_added</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_material</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">materials_added</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modules/MaterialLib", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}