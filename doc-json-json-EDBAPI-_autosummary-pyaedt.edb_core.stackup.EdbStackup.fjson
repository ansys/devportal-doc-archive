{"parents": [{"link": "../../", "title": "API EDB reference"}, {"link": "../../CoreEdb/", "title": "EDB manager"}], "prev": {"link": "../pyaedt.edb_core.layout.EdbLayout.rectangles/", "title": "rectangles"}, "next": {"link": "../pyaedt.edb_core.stackup.EdbStackup.adjust_solder_dielectrics/", "title": "adjust_solder_dielectrics"}, "title": "pyaedt.edb_core.stackup.EdbStackup", "meta": {}, "body": "<section id=\"pyaedt-edb-core-stackup-edbstackup\">\n<h1>pyaedt.edb_core.stackup.EdbStackup<a class=\"headerlink\" href=\"#pyaedt-edb-core-stackup-edbstackup\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb_core.stackup.EdbStackup\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">pyaedt.edb_core.stackup.</span></span><span class=\"sig-name descname\"><span class=\"pre\">EdbStackup</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p_edb</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb_core/stackup/#EdbStackup\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb_core.stackup.EdbStackup\" title=\"Permalink to this definition\">#</a></dt>\n<dd><dl class=\"simple\">\n<dt>Manages EDB methods for stackup and material management accessible from the</dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">Edb.core_stackup</span></code> property (deprecated).</p>\n</dd>\n</dl>\n<div class=\"deprecated\">\n<p><span class=\"versionmodified deprecated\">Deprecated since version 0.6.5: </span>This class has been deprecated and replaced by the <code class=\"docutils literal notranslate\"><span class=\"pre\">Stackup</span></code> class.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">Edb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edbapp</span> <span class=\"o\">=</span> <span class=\"n\">Edb</span><span class=\"p\">(</span><span class=\"s2\">&quot;myaedbfolder&quot;</span><span class=\"p\">,</span> <span class=\"n\">edbversion</span><span class=\"o\">=</span><span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb_stackup</span> <span class=\"o\">=</span> <span class=\"n\">edbapp</span><span class=\"o\">.</span><span class=\"n\">core_stackup</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.adjust_solder_dielectrics/#pyaedt.edb_core.stackup.EdbStackup.adjust_solder_dielectrics\" title=\"pyaedt.edb_core.stackup.EdbStackup.adjust_solder_dielectrics\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.adjust_solder_dielectrics</span></code></a>()</p></td>\n<td><p>Adjust the stack-up by adding or modifying dielectric layers that contains Solder Balls.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.create_conductor/#pyaedt.edb_core.stackup.EdbStackup.create_conductor\" title=\"pyaedt.edb_core.stackup.EdbStackup.create_conductor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.create_conductor</span></code></a>(name[,\u00a0conductivity])</p></td>\n<td><p>Create a conductor with simple properties.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.create_debye_material/#pyaedt.edb_core.stackup.EdbStackup.create_debye_material\" title=\"pyaedt.edb_core.stackup.EdbStackup.create_debye_material\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.create_debye_material</span></code></a>(name,\u00a0...)</p></td>\n<td><p>Create a dielectric with the Debye model.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.create_dielectric/#pyaedt.edb_core.stackup.EdbStackup.create_dielectric\" title=\"pyaedt.edb_core.stackup.EdbStackup.create_dielectric\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.create_dielectric</span></code></a>(name[,\u00a0...])</p></td>\n<td><p>Create a dielectric with simple properties.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.create_djordjevicsarkar_material/#pyaedt.edb_core.stackup.EdbStackup.create_djordjevicsarkar_material\" title=\"pyaedt.edb_core.stackup.EdbStackup.create_djordjevicsarkar_material\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.create_djordjevicsarkar_material</span></code></a>(...)</p></td>\n<td><p>Create a Djordjevic_Sarkar dielectric.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.create_multipole_debye_material/#pyaedt.edb_core.stackup.EdbStackup.create_multipole_debye_material\" title=\"pyaedt.edb_core.stackup.EdbStackup.create_multipole_debye_material\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.create_multipole_debye_material</span></code></a>(...)</p></td>\n<td><p>Create a dielectric with the Multipole Debye model.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.create_symmetric_stackup/#pyaedt.edb_core.stackup.EdbStackup.create_symmetric_stackup\" title=\"pyaedt.edb_core.stackup.EdbStackup.create_symmetric_stackup\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.create_symmetric_stackup</span></code></a>(layer_count)</p></td>\n<td><p>Create a symmetric stackup.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.duplicate_material/#pyaedt.edb_core.stackup.EdbStackup.duplicate_material\" title=\"pyaedt.edb_core.stackup.EdbStackup.duplicate_material\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.duplicate_material</span></code></a>(material_name,\u00a0...)</p></td>\n<td><p>Duplicate a material from the database.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.flip_design/#pyaedt.edb_core.stackup.EdbStackup.flip_design\" title=\"pyaedt.edb_core.stackup.EdbStackup.flip_design\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.flip_design</span></code></a>()</p></td>\n<td><p>Flip the current design of a layout.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.get_layout_thickness/#pyaedt.edb_core.stackup.EdbStackup.get_layout_thickness\" title=\"pyaedt.edb_core.stackup.EdbStackup.get_layout_thickness\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.get_layout_thickness</span></code></a>()</p></td>\n<td><p>Return the layout thickness.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.get_property_by_material_name/#pyaedt.edb_core.stackup.EdbStackup.get_property_by_material_name\" title=\"pyaedt.edb_core.stackup.EdbStackup.get_property_by_material_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.get_property_by_material_name</span></code></a>(...)</p></td>\n<td><p>Get the property of a material. If it is executed in IronPython,</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.material_name_to_id/#pyaedt.edb_core.stackup.EdbStackup.material_name_to_id\" title=\"pyaedt.edb_core.stackup.EdbStackup.material_name_to_id\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.material_name_to_id</span></code></a>(property_name)</p></td>\n<td><p>Convert a material property name to a material property ID.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.place_a3dcomp_3d_placement/#pyaedt.edb_core.stackup.EdbStackup.place_a3dcomp_3d_placement\" title=\"pyaedt.edb_core.stackup.EdbStackup.place_a3dcomp_3d_placement\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.place_a3dcomp_3d_placement</span></code></a>(...[,\u00a0...])</p></td>\n<td><p>Place a 3D Component into current layout.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.place_in_layout/#pyaedt.edb_core.stackup.EdbStackup.place_in_layout\" title=\"pyaedt.edb_core.stackup.EdbStackup.place_in_layout\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.place_in_layout</span></code></a>(edb[,\u00a0angle,\u00a0...])</p></td>\n<td><p>Place current Cell into another cell using layer placement method.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.place_in_layout_3d_placement/#pyaedt.edb_core.stackup.EdbStackup.place_in_layout_3d_placement\" title=\"pyaedt.edb_core.stackup.EdbStackup.place_in_layout_3d_placement\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.place_in_layout_3d_placement</span></code></a>(edb)</p></td>\n<td><p>Place current Cell into another cell using 3d placement method.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.stackup_limits/#pyaedt.edb_core.stackup.EdbStackup.stackup_limits\" title=\"pyaedt.edb_core.stackup.EdbStackup.stackup_limits\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.stackup_limits</span></code></a>([only_metals])</p></td>\n<td><p>Retrieve stackup limits.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.layer_types/#pyaedt.edb_core.stackup.EdbStackup.layer_types\" title=\"pyaedt.edb_core.stackup.EdbStackup.layer_types\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.layer_types</span></code></a></p></td>\n<td><p>Layer types.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.materials/#pyaedt.edb_core.stackup.EdbStackup.materials\" title=\"pyaedt.edb_core.stackup.EdbStackup.materials\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.materials</span></code></a></p></td>\n<td><p>Materials.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.signal_layers/#pyaedt.edb_core.stackup.EdbStackup.signal_layers\" title=\"pyaedt.edb_core.stackup.EdbStackup.signal_layers\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.signal_layers</span></code></a></p></td>\n<td><p>Dictionary of all signal layers.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.stackup.EdbStackup.stackup_layers/#pyaedt.edb_core.stackup.EdbStackup.stackup_layers\" title=\"pyaedt.edb_core.stackup.EdbStackup.stackup_layers\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbStackup.stackup_layers</span></code></a></p></td>\n<td><p>Stackup layers.</p></td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["EDBAPI/_autosummary/pyaedt.edb_core.stackup.EdbStackup.adjust_solder_dielectrics", "adjust_solder_dielectrics", "N", "next"], ["EDBAPI/_autosummary/pyaedt.edb_core.layout.EdbLayout.rectangles", "rectangles", "P", "previous"]], "sourcename": "EDBAPI/_autosummary/pyaedt.edb_core.stackup.EdbStackup.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">pyaedt.edb_core.stackup.EdbStackup</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb_core.stackup.EdbStackup\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EdbStackup</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "EDBAPI/_autosummary/pyaedt.edb_core.stackup.EdbStackup", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}