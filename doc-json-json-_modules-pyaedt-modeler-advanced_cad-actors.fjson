{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "pyaedt.modeler.advanced_cad.actors", "body": "<h1>Source code for pyaedt.modeler.advanced_cad.actors</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">json_to_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.advanced_cad.multiparts</span> <span class=\"kn\">import</span> <span class=\"n\">Actor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.advanced_cad.multiparts</span> <span class=\"kn\">import</span> <span class=\"n\">MultiPartComponent</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">read_actors</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">,</span> <span class=\"n\">actor_lib</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Read and map actors in a JSON file to a list of actor objects.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    fn : str</span>\n<span class=\"sd\">        Name of the JSON file describing the actors.</span>\n<span class=\"sd\">    actor_lib : str</span>\n<span class=\"sd\">        Full path to the library containing the actor definitions.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    list</span>\n<span class=\"sd\">        List of actor objects.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">actor_dict</span> <span class=\"o\">=</span> <span class=\"n\">json_to_dict</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">actor_dict</span><span class=\"p\">:</span>\n        <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Actor</span><span class=\"p\">(</span><span class=\"n\">actor_dict</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">],</span> <span class=\"n\">actor_lib</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Generic</span><span class=\"p\">(</span><span class=\"n\">Actor</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides an instance of an actor.</span>\n\n<span class=\"sd\">    This class is derived from :class:`pyaedt.modeler.multiparts.MultiPartComponent`.</span>\n\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">       Motion is always forward in the X-axis direction of the person</span>\n<span class=\"sd\">       coordinate system.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    actor_folder : str</span>\n<span class=\"sd\">        Full path to the directory containing the definition of the person.</span>\n<span class=\"sd\">        This can be changed later in the :class:`Person` class definition.</span>\n<span class=\"sd\">    speed : float or str</span>\n<span class=\"sd\">        Speed of the person in the X-axis direction.</span>\n<span class=\"sd\">    relative_cs_name : str</span>\n<span class=\"sd\">        Name of the relative coordinate system of the actor. The default is ``None``,</span>\n<span class=\"sd\">        in which case the global coordinate system is used.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">actor_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Generic class.&quot;&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Generic</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">actor_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"n\">relative_cs_name</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Person\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Person/#pyaedt.modeler.advanced_cad.actors.Person\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">Actor</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides an instance of a person.</span>\n\n<span class=\"sd\">    This class is derived from :class:`pyaedt.modeler.multiparts.MultiPartComponent`.</span>\n\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">       Motion is always forward in the X-axis direction of the person coordinate system.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    actor_folder : str</span>\n<span class=\"sd\">        Full path to the folder containing the definition of the</span>\n<span class=\"sd\">        person. This can be changed later in the :class:`Person`</span>\n<span class=\"sd\">        class definition.</span>\n<span class=\"sd\">    speed : float or str, optional</span>\n<span class=\"sd\">        Speed of the person in the X-axis direction. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">    stride : float or str, optional</span>\n<span class=\"sd\">        Stride length of the person. The default is &quot;0.8meters&quot;.</span>\n<span class=\"sd\">    relative_cs_name : str, optional</span>\n<span class=\"sd\">        Name of the relative coordinate system of the actor. The</span>\n<span class=\"sd\">        default is ``None``, in which case the global coordinate</span>\n<span class=\"sd\">        system is used.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">actor_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"n\">stride</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.8meters&quot;</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Initialize person actor.&quot;&quot;&quot;</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">actor_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"n\">relative_cs_name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stride</span> <span class=\"o\">=</span> <span class=\"n\">stride</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stride</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Stride in meters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stride</span>\n\n    <span class=\"nd\">@stride</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stride</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stride</span> <span class=\"o\">=</span> <span class=\"n\">s</span>  <span class=\"c1\"># TODO: Add validation to allow expressions.</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_walking</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Update expressions for oscillation of limbs. At this point</span>\n        <span class=\"c1\"># we could parse p.name to handle motion (arm, leg, ...).</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">):</span>  <span class=\"c1\"># use this key to determine if there is motion of the part.</span>\n                <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>  <span class=\"c1\"># Make sure pitch rotation is True</span>\n                    <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">pitch_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                        <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">pitch</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;*sin(2*pi*(&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stride</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;) &quot;</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;*&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;) + &quot;</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;(&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"s2\">&quot;compensation_angle&quot;</span><span class=\"p\">]</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;)rad&quot;</span>\n                    <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Person.insert\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Person.insert/#pyaedt.modeler.advanced_cad.actors.Person.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Insert the person in HFSS SBR+.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">            HFSS application instance.</span>\n<span class=\"sd\">        motion : bool, optional</span>\n<span class=\"sd\">            Whether the person is in motion. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Adding person: &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Insert the component first, then set variables.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>  <span class=\"c1\"># Place the person in the app.</span>\n        <span class=\"k\">if</span> <span class=\"n\">motion</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_speed</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_walking</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Bird\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Bird/#pyaedt.modeler.advanced_cad.actors.Bird\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Bird</span><span class=\"p\">(</span><span class=\"n\">Actor</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides an instance of a bird.</span>\n\n<span class=\"sd\">    This class is derived from :class:`pyaedt.modeler.multiparts.MultiPartComponent`.</span>\n\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">       Motion is always forward in the X-axis direction.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    bird_folder : str</span>\n<span class=\"sd\">        Full path to the directory containing the definition of the</span>\n<span class=\"sd\">        bird. This can be changed later.</span>\n<span class=\"sd\">    speed : float or str, optional</span>\n<span class=\"sd\">        Speed of the bird. The default is ``&quot;2.0&quot;``.</span>\n<span class=\"sd\">    flapping_rate : float or str, optional</span>\n<span class=\"sd\">        Flapping rate. The default is ``&quot;50Hz&quot;``.</span>\n<span class=\"sd\">    relative_cs_name : str, optional</span>\n<span class=\"sd\">        Name of the relative coordinate system of the actor. The</span>\n<span class=\"sd\">        default is``None``, in which case the global coordinate system</span>\n<span class=\"sd\">        is used.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bird_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.0&quot;</span><span class=\"p\">,</span> <span class=\"n\">flapping_rate</span><span class=\"o\">=</span><span class=\"s2\">&quot;50Hz&quot;</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Bike class.&quot;&quot;&quot;</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Bird</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">bird_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"n\">relative_cs_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flapping_rate</span> <span class=\"o\">=</span> <span class=\"n\">flapping_rate</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_flying</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Update expressions for wheel motion:</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">):</span>  <span class=\"c1\"># use this key to verify that there is local motion.</span>\n                <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span>  <span class=\"c1\"># Flapping is roll</span>\n                    <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">roll_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                        <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;* sin(2*pi*&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_flapping_rate</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*&quot;</span> <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span>\n                    <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Bird.insert\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Bird.insert/#pyaedt.modeler.advanced_cad.actors.Bird.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Insert the bird in HFSS SBR+.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">        motion : bool</span>\n<span class=\"sd\">            Whether the bird is in motion. The default is ``True``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Adding Vehicle: &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>  <span class=\"c1\"># Place the multipart component in the app.</span>\n        <span class=\"k\">if</span> <span class=\"n\">motion</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_speed</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_flying</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Vehicle\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Vehicle/#pyaedt.modeler.advanced_cad.actors.Vehicle\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Vehicle</span><span class=\"p\">(</span><span class=\"n\">Actor</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides an instance of a vehicle.</span>\n\n<span class=\"sd\">    This class is derived from :class:`pyaedt.modeler.multiparts.MultiPartComponent`.</span>\n\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">        Motion is always forward in the X-axis direction.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    car_folder : str, required</span>\n<span class=\"sd\">        Full path to the folder containing the definition of the</span>\n<span class=\"sd\">        vehicle.  This can be changed later.</span>\n<span class=\"sd\">    speed : float or str, optional</span>\n<span class=\"sd\">        Speed of the vehicle. The default is ``10.0``.</span>\n<span class=\"sd\">    relative_cs_name : str, optional</span>\n<span class=\"sd\">        Name of the relative coordinate system of the actor. The</span>\n<span class=\"sd\">        default is ``None``, in which case the global coordinate</span>\n<span class=\"sd\">        system is used.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">car_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Vehicle class.&quot;&quot;&quot;</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Vehicle</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">car_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"n\">speed</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"n\">relative_cs_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_driving</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Update expressions for wheel motion:</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">):</span>  <span class=\"c1\"># use this key to determine if there is motion of the wheel.</span>\n                <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>  <span class=\"c1\"># Make sure pitch rotation is True</span>\n                    <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">pitch_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;(&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;*&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"s2\">&quot;tire_radius&quot;</span><span class=\"p\">]</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;meter)*(180/pi)*1deg&quot;</span>\n                    <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Vehicle.insert\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Vehicle.insert/#pyaedt.modeler.advanced_cad.actors.Vehicle.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Insert the vehicle in HFSS SBR+.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">        motion : bool, optional</span>\n<span class=\"sd\">            Whether the vehicle is in motion. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Adding vehicle: &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>  <span class=\"c1\"># Place the multipart component in the app.</span>\n        <span class=\"k\">if</span> <span class=\"n\">motion</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_speed</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_driving</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Radar\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Radar/#pyaedt.modeler.advanced_cad.actors.Radar\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Radar</span><span class=\"p\">(</span><span class=\"n\">MultiPartComponent</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages the radar definition and placement in the HFSS design.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    radar_folder : str</span>\n<span class=\"sd\">        Full path to the folder containing the radar file.</span>\n<span class=\"sd\">    name : str, optional</span>\n<span class=\"sd\">        Name of the radar file. The default is ``None``.</span>\n<span class=\"sd\">    motion : bool, optional</span>\n<span class=\"sd\">        Whether the actor is in motion. The default is ``False``.</span>\n<span class=\"sd\">    use_relative_cs : bool, optional</span>\n<span class=\"sd\">        Whether to use the relative coordinate system. The default is ``False``.</span>\n<span class=\"sd\">    offset : list, optional</span>\n<span class=\"sd\">        List of offset values. The default is ``(&quot;0&quot;, &quot;0&quot;, &quot;0&quot;)``.</span>\n<span class=\"sd\">    speed : float or str, optional</span>\n<span class=\"sd\">        Speed of the vehicle. The default is ``0``.</span>\n<span class=\"sd\">    relative_cs_name : str, optional</span>\n<span class=\"sd\">        Name of the relative coordinate system of the actor. The</span>\n<span class=\"sd\">        default is ``None``, in which case the global coordinate</span>\n<span class=\"sd\">        system is used.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">radar_folder</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">use_relative_cs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_antenna_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>  <span class=\"c1\"># List of Antenna Names</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"k\">else</span> <span class=\"n\">name</span>  <span class=\"c1\"># remove suffix if any</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_class</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;radar&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Radar</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">radar_folder</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">use_relative_cs</span><span class=\"o\">=</span><span class=\"n\">use_relative_cs</span><span class=\"p\">,</span>\n            <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"n\">motion</span><span class=\"p\">,</span>\n            <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">offset</span><span class=\"p\">,</span>\n            <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"n\">relative_cs_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_speed_expression</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">speed</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;m_per_sec&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pair</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Multi-part units.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Multipart units.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">speed_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Speed variable name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the speed variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_speed&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">speed_expression</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Speed variable expression.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Expression for the speed variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_speed_expression</span>\n\n    <span class=\"nd\">@speed_expression</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">speed_expression</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_speed_expression</span> <span class=\"o\">=</span> <span class=\"n\">s</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_speed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n            <span class=\"n\">variable_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_expression</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;radar speed&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Update expressions for x and y position in app:</span>\n        <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; * &quot;</span> <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;* cos(&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_names</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; * &quot;</span> <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;* sin(&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Radar.insert\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.actors.Radar.insert/#pyaedt.modeler.advanced_cad.actors.Radar.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Insert radar in the HFSS application instance.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">        motion : bool, optional</span>\n<span class=\"sd\">            Whether the actor is in motion. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of antennae that have been placed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Adding radar module:  &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_global_cs</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span> <span class=\"ow\">in</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetCoordinateSystems</span><span class=\"p\">():</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_relative_cs</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_cs&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position_in_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n        <span class=\"n\">tx_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">rx_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">:</span>\n            <span class=\"n\">antenna_object</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_units</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_components</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">antenna_object</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_antenna_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">antenna_object</span><span class=\"o\">.</span><span class=\"n\">excitation_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;tx&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">tx_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">antenna_object</span><span class=\"o\">.</span><span class=\"n\">excitation_name</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;rx&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">rx_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">antenna_object</span><span class=\"o\">.</span><span class=\"n\">excitation_name</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Define tx/rx pairs:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pair</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">tx</span> <span class=\"ow\">in</span> <span class=\"n\">tx_names</span><span class=\"p\">:</span>\n            <span class=\"n\">rx_string</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">rx</span> <span class=\"ow\">in</span> <span class=\"n\">rx_names</span><span class=\"p\">:</span>\n                <span class=\"n\">rx_string</span> <span class=\"o\">+=</span> <span class=\"n\">rx</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;,&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pair</span><span class=\"p\">[</span><span class=\"n\">tx</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">rx_string</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">set_sbr_txrx_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pair</span><span class=\"p\">)</span>\n\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_group</span><span class=\"p\">(</span><span class=\"n\">components</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_components</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Group Created:  &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">motion</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_speed</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_antenna_names</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/advanced_cad/actors", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}