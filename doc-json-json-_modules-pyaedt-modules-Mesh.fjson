{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modules.Mesh", "body": "<h1>Source code for pyaedt.modules.Mesh</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains the `Mesh` class.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.design_solutions</span> <span class=\"kn\">import</span> <span class=\"n\">model_names</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">_dict2arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">MethodNotSupportedError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">PropsManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.LoadAEDTFile</span> <span class=\"kn\">import</span> <span class=\"n\">load_entire_aedt_file</span>\n\n<span class=\"n\">meshers</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshRegion&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;HFSS3DLayout&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Maxwell 2D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Maxwell 3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Mechanical&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;2D Extractor&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MeshProps</span><span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;AEDT Mesh Component Internal Parameters.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Edges&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_mesh</span><span class=\"o\">.</span><span class=\"n\">update_assignment</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_mesh</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_mesh</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Update of </span><span class=\"si\">%s</span><span class=\"s2\"> Failed. Check needed arguments&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mesh_object</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">):</span>\n        <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">)):</span>\n                    <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">MeshProps</span><span class=\"p\">(</span><span class=\"n\">mesh_object</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_mesh</span> <span class=\"o\">=</span> <span class=\"n\">mesh_object</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_setitem_without_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MeshOperation</span><span class=\"p\">(</span><span class=\"n\">PropsManager</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;MeshOperation class.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    meshicepak : :class:`pyaedt.modules.MeshIcepak.MeshIcepak`</span>\n\n<span class=\"sd\">    name:</span>\n\n<span class=\"sd\">    props :</span>\n\n<span class=\"sd\">    meshoptpe :</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshicepak</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">meshoptype</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span> <span class=\"o\">=</span> <span class=\"n\">meshicepak</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">MeshProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">=</span> <span class=\"n\">meshoptype</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve arguments.&quot;&quot;&quot;</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">arg</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a mesh.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SurfApproxBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignTrueSurfOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;DefeatureBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignModelResolutionOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SurfaceRepPriority&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignSurfPriorityForTauOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;LengthBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignLengthOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SkinDepthBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignSkinDepthOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Curvilinear&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignApplyCurvlinearElementsOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;RotationalLayerMesh&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignRotationalLayerOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;DensityControlBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignDensityControlOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignMeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CurvatureExtraction&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignCurvatureExtractionOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CylindricalGap&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">AssignCylindricalGapOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the mesh.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditTrueSurfOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditModelResolutionOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSurfPriorityForTauOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditLengthOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditApplyCurvlinearElementsOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditRotationalLayerOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditDensityControlOp</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditMeshOperation</span>\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSBRCurvatureExtractionOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SurfApproxBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditTrueSurfOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;DefeatureBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditModelResolutionOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SurfaceRepPriority&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditSurfPriorityForTauOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;LengthBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditLengthOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SkinDepthBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditSkinDepthOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Curvilinear&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditApplyCurvlinearElementsOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;RotationalLayerMesh&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditRotationalLayerOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;DensityControlBased&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditDensityControlOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditMeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CurvatureExtraction&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditSBRCurvatureExtractionOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;InitialMeshSettings&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">InitialMeshSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;CylindricalGap&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">EditCylindricalGapOp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">())</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete the mesh.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.DeleteOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">DeleteOp</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">])</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_meshicepak</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n\n<div class=\"viewcode-block\" id=\"Mesh\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh/#pyaedt.modules.Mesh.Mesh\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Mesh</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages AEDT mesh functions for 2D and 3D solvers (HFSS, Maxwell, and Q3D).</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    app : :class:`pyaedt.application.Analysis3D.FieldAnalysis3D`</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">app</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesign</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">modeler</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_design_mesh_operations</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_globalmesh</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">initial_mesh_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the global mesh object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InitialMeshSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_globalmesh</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_globalmesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_design_global_mesh</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_globalmesh</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">omeshmodule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Aedt Mesh Module.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetModule(&quot;MeshSetup&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_design_global_mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MeshSettings&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">temp_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;temp_prj&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">temp_proj</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"n\">temp_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">oproject_target</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">NewProject</span><span class=\"p\">(</span><span class=\"n\">temp_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Modal&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">sol</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;HFSS Modal Network&quot;</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Terminal&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">sol</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;HFSS Terminal Network&quot;</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">sol</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span>\n            <span class=\"n\">oproject_target</span><span class=\"o\">.</span><span class=\"n\">InsertDesign</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span><span class=\"p\">,</span> <span class=\"n\">temp_name</span><span class=\"p\">,</span> <span class=\"n\">sol</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">oproject_target</span><span class=\"o\">.</span><span class=\"n\">SaveAs</span><span class=\"p\">(</span><span class=\"n\">temp_proj</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">CloseProject</span><span class=\"p\">(</span><span class=\"n\">temp_name</span><span class=\"p\">)</span>\n            <span class=\"n\">_project_dictionary</span> <span class=\"o\">=</span> <span class=\"n\">load_entire_aedt_file</span><span class=\"p\">(</span><span class=\"n\">temp_proj</span><span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">_project_dictionary</span><span class=\"p\">[</span><span class=\"s2\">&quot;AnsoftProject&quot;</span><span class=\"p\">][</span><span class=\"n\">model_names</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span><span class=\"p\">]][</span><span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">][</span>\n                    <span class=\"s2\">&quot;MeshSettings&quot;</span>\n                <span class=\"p\">]</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n            <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">temp_proj</span><span class=\"p\">):</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">temp_proj</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">temp_proj</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;results&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">rmtree</span><span class=\"p\">(</span><span class=\"n\">temp_proj</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;results&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;MeshSettings&quot;</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;InitialMeshSettings&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_design_mesh_operations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"n\">meshops</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">ds</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MeshOperations&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MeshOperations&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n                    <span class=\"n\">meshops</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                        <span class=\"n\">MeshOperation</span><span class=\"p\">(</span>\n                            <span class=\"bp\">self</span><span class=\"p\">,</span>\n                            <span class=\"n\">ds</span><span class=\"p\">,</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MeshOperations&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">],</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;MeshSetup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;MeshOperations&quot;</span><span class=\"p\">][</span><span class=\"n\">ds</span><span class=\"p\">][</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">],</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"n\">meshops</span>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_surface_mesh\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_surface_mesh/#pyaedt.modules.Mesh.Mesh.assign_surface_mesh\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_surface_mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a surface mesh level to one or more objects.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            One or more names of the objects.</span>\n<span class=\"sd\">        level : int</span>\n<span class=\"sd\">            Level of the surface mesh. Options are ``1`` through ``10``</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignTrueSurfOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;SurfApprox&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Assigning Mesh Level &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; to &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">))</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Faces&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SurfApproxBased&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CurvedSurfaceApproxChoice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;UseSlider&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SliderMeshSettings&quot;</span><span class=\"p\">:</span> <span class=\"n\">level</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SurfApproxBased&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_surface_mesh_manual\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_surface_mesh_manual/#pyaedt.modules.Mesh.Mesh.assign_surface_mesh_manual\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_surface_mesh_manual</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">surf_dev</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">normal_dev</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">aspect_ratio</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a surface mesh to a list of faces.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list or str or :class:`pyaedt.modeler.elements3d.FacePrimitive`</span>\n<span class=\"sd\">            List of faces to apply the surface mesh to.</span>\n<span class=\"sd\">        surf_dev : float or str, optional</span>\n<span class=\"sd\">            Surface deviation. The default is ``None``. Allowed values are float, number with units or `&quot;inf&quot;`.</span>\n<span class=\"sd\">        normal_dev : float or str, optional</span>\n<span class=\"sd\">            Normal deviation. The default is ``None``.</span>\n<span class=\"sd\">        aspect_ratio : int, optional</span>\n<span class=\"sd\">            Aspect ratio. The default is ``None``.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignTrueSurfOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;ModelResolution&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">surf_dev_enable</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n        <span class=\"n\">normal_dev_enable</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n        <span class=\"n\">aspect_ratio_enable</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">surf_dev</span><span class=\"p\">:</span>\n            <span class=\"n\">surf_dev_enable</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">surf_dev</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0.0001mm&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">surf_dev</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;inf&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">surf_dev_enable</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">normal_dev</span><span class=\"p\">:</span>\n            <span class=\"n\">normal_dev_enable</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">normal_dev</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">aspect_ratio</span><span class=\"p\">:</span>\n            <span class=\"n\">aspect_ratio_enable</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">aspect_ratio</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;10&quot;</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SurfApproxBased&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CurvedSurfaceApproxChoice&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ManualSettings&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SurfDevChoice&quot;</span><span class=\"p\">:</span> <span class=\"n\">surf_dev_enable</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SurfDev&quot;</span><span class=\"p\">:</span> <span class=\"n\">surf_dev</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NormalDevChoice&quot;</span><span class=\"p\">:</span> <span class=\"n\">normal_dev_enable</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NormalDev&quot;</span><span class=\"p\">:</span> <span class=\"n\">normal_dev</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AspectRatioChoice&quot;</span><span class=\"p\">:</span> <span class=\"n\">aspect_ratio_enable</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;AspectRatio&quot;</span><span class=\"p\">:</span> <span class=\"n\">aspect_ratio</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SurfApproxBased&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_model_resolution\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_model_resolution/#pyaedt.modules.Mesh.Mesh.assign_model_resolution\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_model_resolution</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">defeature_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign the model resolution.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            List of objects to defeature.</span>\n<span class=\"sd\">        defeature_length : float, optional</span>\n<span class=\"sd\">            Defeaturing length in millimeters. The default is ``None``, in which case</span>\n<span class=\"sd\">            automatic defeaturing is used.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignModelResolutionOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;ModelResolution&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mesh Operation Applies to Objects only&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">defeature_length</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"s2\">&quot;UseAutoLength&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DefeatureBased&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;UseAutoLength&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;DefeatureLength&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">defeature_length</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefeatureBased&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_initial_mesh_from_slider\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_initial_mesh_from_slider/#pyaedt.modules.Mesh.Mesh.assign_initial_mesh_from_slider\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_initial_mesh_from_slider</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">&quot;Auto&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">usedynamicsurface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">useflexmesh</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">applycurvilinear</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">usefallback</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">usephi</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">automodelresolution</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">modelresolutionlength</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0001mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a surface mesh level to an object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        level : int, optional</span>\n<span class=\"sd\">            Level of the surface mesh. Options are ``1`` through ``10``. The default is ``5.``</span>\n<span class=\"sd\">        method : str, optional</span>\n<span class=\"sd\">            Meshing method. Options are ``&quot;Auto&quot;``, ``&quot;AnsoftTAU&quot;``, and ``&quot;AnsoftClassic&quot;``</span>\n<span class=\"sd\">            The default is ``&quot;Auto&quot;``.</span>\n<span class=\"sd\">        usedynamicsurface : bool, optional</span>\n<span class=\"sd\">            Whether to use a dynamic surface. The default is ``True``.</span>\n<span class=\"sd\">        useflexmesh : bool, optional</span>\n<span class=\"sd\">            Whether to use a flexible mesh. The default is ``False``.</span>\n<span class=\"sd\">        applycurvilinear : bool, optional</span>\n<span class=\"sd\">            Whether to apply curvilinear elements. The default is ``False``.</span>\n<span class=\"sd\">        usefallback : bool, optional</span>\n<span class=\"sd\">            Whether to retain as a fallback. The default is ``True``.</span>\n<span class=\"sd\">        usephi : bool, optional</span>\n<span class=\"sd\">            Whether to use the Phi mesher for layered geometry.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n<span class=\"sd\">        automodelresolution : bool, optional</span>\n<span class=\"sd\">            Whether to automatically calculate the resolution length</span>\n<span class=\"sd\">            based on each object&#39;s effective thickness. The default is ``True``.</span>\n<span class=\"sd\">        modelresolutionlength : float, optional</span>\n<span class=\"sd\">             Resolution thickness with units if ``automodelresolution=False``.</span>\n<span class=\"sd\">             The default ``&quot;0.0001mm&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InitialMeshSettings</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2D Extractor&quot;</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Maxwell 2D&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">mesh_methods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Auto&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AnsoftClassic&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">mesh_methods</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Auto&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AnsoftTAU&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AnsoftClassic&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">assert</span> <span class=\"n\">method</span> <span class=\"ow\">in</span> <span class=\"n\">mesh_methods</span>\n\n        <span class=\"n\">modelres</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:GlobalModelRes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;UseAutoLength:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">automodelresolution</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">automodelresolution</span><span class=\"p\">:</span>\n            <span class=\"n\">modelres</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;DefeatureLength:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">modelres</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">modelresolutionlength</span><span class=\"p\">)</span>\n        <span class=\"n\">surface_appr</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:GlobalSurfApproximation&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CurvedSurfaceApproxChoice:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;UseSlider&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SliderMeshSettings:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">level</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2D Extractor&quot;</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Maxwell 2D&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:MeshSettings&quot;</span><span class=\"p\">,</span> <span class=\"n\">surface_appr</span><span class=\"p\">,</span> <span class=\"n\">modelres</span><span class=\"p\">,</span> <span class=\"s2\">&quot;MeshMethod:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:MeshSettings&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">surface_appr</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:GlobalCurvilinear&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Apply:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">applycurvilinear</span><span class=\"p\">],</span>\n                <span class=\"n\">modelres</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MeshMethod:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">method</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;UseLegacyFaceterForTauVolumeMesh:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DynamicSurfaceResolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">usedynamicsurface</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;UseFlexMeshingForTAUvolumeMesh:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">useflexmesh</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;UseAlternativeMeshMethodsAsFallBack:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">usefallback</span><span class=\"p\">)</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;AllowPhiForLayeredGeometry:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">usephi</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">InitialMeshSettings</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_surf_priority_for_tau\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_surf_priority_for_tau/#pyaedt.modules.Mesh.Mesh.assign_surf_priority_for_tau\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_surf_priority_for_tau</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_lists</span><span class=\"p\">,</span> <span class=\"n\">surfpriority</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a surface representation priority for the TAU mesh.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_lists : list</span>\n<span class=\"sd\">            List of objects to apply a surface representation</span>\n<span class=\"sd\">            priority to.</span>\n<span class=\"sd\">        surfpriority : int, optional</span>\n<span class=\"sd\">            Surface representation priority. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignSurfPriorityForTauOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;SurfaceRepPriority&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SurfaceRepPriority&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">object_lists</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SurfaceRepPriority&quot;</span><span class=\"p\">:</span> <span class=\"n\">surfpriority</span><span class=\"p\">})</span>\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SurfaceRepPriority&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.generate_mesh\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.generate_mesh/#pyaedt.modules.Mesh.Mesh.generate_mesh\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">generate_mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generate the mesh for a design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GenerateMesh</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">GenerateMesh</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.delete_mesh_operations\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.delete_mesh_operations/#pyaedt.modules.Mesh.Mesh.delete_mesh_operations\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_mesh_operations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mesh_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Remove mesh operations from a design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        mesh_type : optional</span>\n<span class=\"sd\">           Type of the mesh operation to delete. The default is ``None``, in which</span>\n<span class=\"sd\">           case all mesh operations are deleted.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.DeleteOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># Type &quot;Area Based&quot; not included since the delete command causes</span>\n        <span class=\"c1\"># desktop to crash</span>\n        <span class=\"c1\"># https://tfs.ansys.com:8443/tfs/ANSYS_Development/Portfolio/ACE%20Team/_queries?id=150923</span>\n        <span class=\"n\">mesh_op_types</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Length Based&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface Approximation Based&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">mesh_type</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">mesh_type</span> <span class=\"ow\">in</span> <span class=\"n\">mesh_op_types</span><span class=\"p\">:</span>\n                <span class=\"n\">mesh_op_types</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">mesh_type</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">mesh_op_type</span> <span class=\"ow\">in</span> <span class=\"n\">mesh_op_types</span><span class=\"p\">:</span>\n            <span class=\"n\">opnames</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">GetOperationNames</span><span class=\"p\">(</span><span class=\"n\">mesh_op_type</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">opnames</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omeshmodule</span><span class=\"o\">.</span><span class=\"n\">DeleteOp</span><span class=\"p\">(</span><span class=\"n\">opnames</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">opnames</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_length_mesh\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_length_mesh/#pyaedt.modules.Mesh.Mesh.assign_length_mesh\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_length_mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">isinside</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">maxlength</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">maxel</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a length for the model resolution.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            List of object names or face IDs.</span>\n<span class=\"sd\">        isinside : bool, optional</span>\n<span class=\"sd\">            Whether the length mesh is inside the selection. The default is ``True``.</span>\n<span class=\"sd\">        maxlength : str, float, optional</span>\n<span class=\"sd\">            Maximum element length. The default is ``1``. When ``None``,</span>\n<span class=\"sd\">            this parameter is disabled.</span>\n<span class=\"sd\">        maxel : int, optional</span>\n<span class=\"sd\">            Maximum number of elements. The default is ``1000``. When ``None``, this parameter</span>\n<span class=\"sd\">            is disabled.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignLengthOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;length&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">maxlength</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">restrictlength</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">restrictlength</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">modeler_variable</span><span class=\"p\">(</span><span class=\"n\">maxlength</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">maxel</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">restrictel</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">numel</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1000&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">restrictel</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">numel</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">maxel</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">maxlength</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">maxel</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;mesh not assigned due to incorrect settings&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">isinside</span><span class=\"p\">:</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Faces&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">seltype</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error in Assignment&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;LengthBased&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RefineInside&quot;</span><span class=\"p\">:</span> <span class=\"n\">isinside</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Enabled&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RestrictElem&quot;</span><span class=\"p\">:</span> <span class=\"n\">restrictel</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumMaxElem&quot;</span><span class=\"p\">:</span> <span class=\"n\">numel</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RestrictLength&quot;</span><span class=\"p\">:</span> <span class=\"n\">restrictlength</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxLength&quot;</span><span class=\"p\">:</span> <span class=\"n\">length</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LengthBased&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_skin_depth\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_skin_depth/#pyaedt.modules.Mesh.Mesh.assign_skin_depth\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_skin_depth</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">skindepth</span><span class=\"p\">,</span> <span class=\"n\">maxelements</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">triangulation_max_length</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">numlayers</span><span class=\"o\">=</span><span class=\"s2\">&quot;2&quot;</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a skin depth for the mesh refinement.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">           List of the object names or face IDs.</span>\n<span class=\"sd\">        skindepth : bool</span>\n<span class=\"sd\">            Whether the length mesh is inside the selection. The default is ``True``.</span>\n<span class=\"sd\">        maxelements : int, optional</span>\n<span class=\"sd\">            Maximum number of elements. The default is ``None``, which means this parameter is disabled.</span>\n<span class=\"sd\">        triangulation_max_length : str, optional</span>\n<span class=\"sd\">            Maximum surface triangulation length with units. The default is ``&quot;0.1mm&quot;``.</span>\n<span class=\"sd\">        numlayers : str, optional</span>\n<span class=\"sd\">            Number of layers. The default is ``&quot;2&quot;``.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignSkinDepthOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;HFSS&quot;</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">MethodNotSupportedError</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;SkinDepth&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">maxelements</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">restrictlength</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">maxelements</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1000&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">restrictlength</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Faces&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">seltype</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error in Assignment&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SkinDepthBased&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Enabled&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RestrictElem&quot;</span><span class=\"p\">:</span> <span class=\"n\">restrictlength</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumMaxElem&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">maxelements</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;SkinDepth&quot;</span><span class=\"p\">:</span> <span class=\"n\">skindepth</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SurfTriMaxLength&quot;</span><span class=\"p\">:</span> <span class=\"n\">triangulation_max_length</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumLayers&quot;</span><span class=\"p\">:</span> <span class=\"n\">numlayers</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SkinDepthBased&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_curvilinear_elements\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_curvilinear_elements/#pyaedt.modules.Mesh.Mesh.assign_curvilinear_elements\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_curvilinear_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign curvilinear elements.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            List of objects or faces.</span>\n<span class=\"sd\">        enable : bool, optional</span>\n<span class=\"sd\">            Whether to apply curvilinear elements. The default is ``True``.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignApplyCurvlinearElementsOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;HFSS&quot;</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">MethodNotSupportedError</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;CurvilinearElements&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Faces&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">seltype</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error in Assignment&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Curvilinear&quot;</span><span class=\"p\">,</span> <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Apply&quot;</span><span class=\"p\">:</span> <span class=\"n\">enable</span><span class=\"p\">})</span>\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Curvilinear&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_curvature_extraction\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_curvature_extraction/#pyaedt.modules.Mesh.Mesh.assign_curvature_extraction\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_curvature_extraction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">disable_for_faceted_surf</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign curvature extraction.</span>\n\n<span class=\"sd\">         Parameters</span>\n<span class=\"sd\">         ----------</span>\n<span class=\"sd\">         names : list</span>\n<span class=\"sd\">            List of objects or faces.</span>\n<span class=\"sd\">         disable_for_faceted_surf : bool, optional</span>\n<span class=\"sd\">            Whether curvature extraction is enabled for faceted surfaces.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n<span class=\"sd\">         meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">         Returns</span>\n<span class=\"sd\">         -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignCurvatureExtractionOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;SBR+&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">MethodNotSupportedError</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;CurvilinearElements&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Faces&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">seltype</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error in Assignment&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;CurvatureExtraction&quot;</span><span class=\"p\">,</span> <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DisableForFacetedSurfaces&quot;</span><span class=\"p\">:</span> <span class=\"n\">disable_for_faceted_surf</span><span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CurvatureExtraction&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_rotational_layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_rotational_layer/#pyaedt.modules.Mesh.Mesh.assign_rotational_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_rotational_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">num_layers</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">total_thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a rotational layer mesh.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            List of objects.</span>\n<span class=\"sd\">        num_layers : int, optional</span>\n<span class=\"sd\">            Number of layers to create in the radial direction, starting from</span>\n<span class=\"sd\">            the faces most adjacent to the band. The default is ``3``, which is the maximum.</span>\n<span class=\"sd\">        total_thickness : str, optional</span>\n<span class=\"sd\">            Total thickness of all layers with units. The default is ``&quot;1mm&quot;``.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignRotationalLayerOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">MethodNotSupportedError</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;RotationalLayer&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;RotationalLayerMesh&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Number of Layers&quot;</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">num_layers</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;Total Layer Thickenss&quot;</span><span class=\"p\">:</span> <span class=\"n\">total_thickness</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RotationalLayerMesh&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_edge_cut\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_edge_cut/#pyaedt.modules.Mesh.Mesh.assign_edge_cut\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_edge_cut</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">layer_thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign an edge cut layer mesh.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            List of objects.</span>\n<span class=\"sd\">        layer_thickness :</span>\n<span class=\"sd\">            Thickness of the layer with units. The default is ``&quot;1mm&quot;``.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignRotationalLayerOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">MethodNotSupportedError</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;EdgeCut&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;RotationalLayerMesh&quot;</span><span class=\"p\">,</span> <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Layer Thickenss&quot;</span><span class=\"p\">:</span> <span class=\"n\">layer_thickness</span><span class=\"p\">})</span>\n\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RotationalLayerMesh&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div>\n\n<div class=\"viewcode-block\" id=\"Mesh.assign_density_control\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.Mesh.Mesh.assign_density_control/#pyaedt.modules.Mesh.Mesh.assign_density_control\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_density_control</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"n\">refine_inside</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">maxelementlength</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">layerNum</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign density control.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        names : list</span>\n<span class=\"sd\">            List of objects.</span>\n<span class=\"sd\">        refine_inside : bool, optional</span>\n<span class=\"sd\">            Whether to refine inside objects. The default is ``True``.</span>\n<span class=\"sd\">        maxelementlength : str, optional</span>\n<span class=\"sd\">            Maximum element length with units. The default is ``None``,</span>\n<span class=\"sd\">            which disables this parameter.</span>\n<span class=\"sd\">        layerNum : int, optional</span>\n<span class=\"sd\">            Number of layers. The default is ``None``, which disables</span>\n<span class=\"sd\">            this parameter.</span>\n<span class=\"sd\">        meshop_name : str, optional</span>\n<span class=\"sd\">            Name of the mesh operation. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.MeshOperation`</span>\n<span class=\"sd\">            Mesh operation object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignDensityControlOp</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Maxwell 3D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">MethodNotSupportedError</span>\n        <span class=\"k\">if</span> <span class=\"n\">meshop_name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">meshop_name</span> <span class=\"o\">==</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">meshop_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">meshop_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;CloneMeshDensity&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">seltype</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Objects&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">maxelementlength</span><span class=\"p\">:</span>\n            <span class=\"n\">restr</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">restrval</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0mm&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">restr</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">restrval</span> <span class=\"o\">=</span> <span class=\"n\">maxelementlength</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">layerNum</span><span class=\"p\">:</span>\n            <span class=\"n\">restrlay</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">restrlaynum</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">restrlay</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">restrlaynum</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">layerNum</span><span class=\"p\">)</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DensityControlBased&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RefineInside&quot;</span><span class=\"p\">:</span> <span class=\"n\">refine_inside</span><span class=\"p\">,</span>\n                <span class=\"n\">seltype</span><span class=\"p\">:</span> <span class=\"n\">names</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RestrictMaxElemLength&quot;</span><span class=\"p\">:</span> <span class=\"n\">restr</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxElemLength&quot;</span><span class=\"p\">:</span> <span class=\"n\">restrval</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RestrictLayersNum&quot;</span><span class=\"p\">:</span> <span class=\"n\">restrlay</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;LayersNum&quot;</span><span class=\"p\">:</span> <span class=\"n\">restrlaynum</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">mop</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DensityControlBased&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshoperations</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mop</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modules/Mesh", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}