{"parents": [{"link": "../../", "title": "API reference"}, {"link": "../../CoreEdb/", "title": "EDB editor"}, {"link": "../pyaedt.edb_core.hfss.EdbHfss/", "title": "pyaedt.edb_core.hfss.EdbHfss"}], "prev": {"link": "../pyaedt.edb_core.hfss.EdbHfss.create_edge_port_horizontal/", "title": "create_edge_port_horizontal"}, "next": {"link": "../pyaedt.edb_core.hfss.EdbHfss.create_edge_port_vertical/", "title": "create_edge_port_vertical"}, "title": "create_edge_port_on_polygon", "meta": {}, "body": "<section id=\"create-edge-port-on-polygon\">\n<h1>create_edge_port_on_polygon<a class=\"headerlink\" href=\"#create-edge-port-on-polygon\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb_core.hfss.EdbHfss.create_edge_port_on_polygon\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">EdbHfss.</span></span><span class=\"sig-name descname\"><span class=\"pre\">create_edge_port_on_polygon</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">polygon</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference_polygon</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">terminal_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reference_layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">port_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">port_impedance</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50.0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force_circuit_port</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb_core/hfss/#EdbHfss.create_edge_port_on_polygon\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb_core.hfss.EdbHfss.create_edge_port_on_polygon\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Create lumped port between two edges from two different polygons. Can also create a vertical port when\nthe reference layer name is only provided. When a port is created between two edge from two polygons which don\u2019t\nbelong to the same layer, a circuit port will be automatically created instead of lumped. To enforce the circuit\nport instead of lumped,use the boolean force_circuit_port.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>polygon</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">The</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDB</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">polygon</span></code> <a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#object\" title=\"(in Python v3.12)\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">object</span></code></a> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">used</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">assign</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> port.</span></dt><dd><p>Edb.Cell.Primitive.Polygon object.</p>\n</dd>\n<dt><strong>reference_polygon</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">The</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EDB</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">polygon</span></code> <a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#object\" title=\"(in Python v3.12)\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">object</span></code></a> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">used</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">define</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">port</span></code> reference.</span></dt><dd><p>Edb.Cell.Primitive.Polygon object.</p>\n</dd>\n<dt><strong>terminal_point</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">The</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">coordinate</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">of</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">point</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">define</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">edge</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">terminal</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">of</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> port. <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">This</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">point</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">must</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">be</span></code></span></dt><dd></dd>\n<dt><strong>located on the edge of the polygon where the port has to be placed. For instance taking the middle point</strong></dt><dd></dd>\n<dt><strong>of an edge is a good practice but any point of the edge should be valid. Taking a corner might cause unwanted</strong></dt><dd></dd>\n<dt><strong>port location.</strong></dt><dd><p>list[float, float] with values provided in meter.</p>\n</dd>\n<dt><strong>reference_point</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">same</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">as</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">terminal_point</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">but</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">used</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">for</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">defining</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reference</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">location</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">on</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> edge.</span></dt><dd><p>list[float, float] with values provided in meter.</p>\n</dd>\n<dt><strong>reference_layer</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Name</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">used</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">to</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">define</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">port</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">reference</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">for</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">vertical</span></code> ports.</span></dt><dd><p>str the layer name.</p>\n</dd>\n<dt><strong>port_name</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Name</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">of</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">the</span></code> port.</span></dt><dd><p>str.</p>\n</dd>\n<dt><strong>port_impedance</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">port</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">impedance</span></code> value. <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Default</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">value</span></code> <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is</span></code> 50 Ohms.</span></dt><dd><p>float, impedance value.</p>\n</dd>\n<dt><strong>force_circuit_port ; used to force circuit port creation instead of lumped. Works for vertical and coplanar</strong></dt><dd></dd>\n<dt><strong>ports.</strong></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["API/_autosummary/pyaedt.edb_core.hfss.EdbHfss.create_edge_port_vertical", "create_edge_port_vertical", "N", "next"], ["API/_autosummary/pyaedt.edb_core.hfss.EdbHfss.create_edge_port_horizontal", "create_edge_port_horizontal", "P", "previous"]], "sourcename": "API/_autosummary/pyaedt.edb_core.hfss.EdbHfss.create_edge_port_on_polygon.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">create_edge_port_on_polygon</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb_core.hfss.EdbHfss.create_edge_port_on_polygon\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EdbHfss.create_edge_port_on_polygon()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "API/_autosummary/pyaedt.edb_core.hfss.EdbHfss.create_edge_port_on_polygon", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}