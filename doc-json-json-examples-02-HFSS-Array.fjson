{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "HFSS examples"}], "prev": {"link": "../Advanced_Far_Field/", "title": "HFSS: advanced far field postprocessing"}, "next": {"link": "../Flex_CPWG/", "title": "HFSS: flex cable CPWG"}, "title": "HFSS: component antenna array", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-02-hfss-array-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"hfss-component-antenna-array\">\n<span id=\"sphx-glr-examples-02-hfss-array-py\"></span><h1>HFSS: component antenna array<a class=\"headerlink\" href=\"#hfss-component-antenna-array\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use PyAEDT to create an example using a 3D component file. It sets up\nthe analysis, solves it, and uses postprocessing functions to create plots using Matplotlib and\nPyVista without opening the HFSS user interface. This examples runs only on Windows using CPython.</p>\n<section id=\"perform-required-imports\">\n<h2>Perform required imports<a class=\"headerlink\" href=\"#perform-required-imports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyaedt</span>\n</pre></div>\n</div>\n</section>\n<section id=\"set-non-graphical-mode\">\n<h2>Set non-graphical mode<a class=\"headerlink\" href=\"#set-non-graphical-mode\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set non-graphical mode. <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span></code> is needed to generate\ndocumentation only.\nYou can set <code class=\"docutils literal notranslate\"><span class=\"pre\">non_graphical</span></code> either to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;t&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"download-3d-component\">\n<h2>Download 3D component<a class=\"headerlink\" href=\"#download-3d-component\" title=\"Permalink to this heading\">#</a></h2>\n<p>Download the 3D component that is needed to run the example.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">example_path</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">downloads</span><span class=\"o\">.</span><span class=\"n\">download_3dcomponent</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</section>\n<section id=\"launch-hfss-and-save-project\">\n<h2>Launch HFSS and save project<a class=\"headerlink\" href=\"#launch-hfss-and-save-project\" title=\"Permalink to this heading\">#</a></h2>\n<p>Launch HFSS and save the project.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">project_name</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">generate_unique_project_name</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;array&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">hfss</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">Hfss</span><span class=\"p\">(</span><span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"n\">project_name</span><span class=\"p\">,</span>\n                   <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">,</span>\n                   <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Array_Simple&quot;</span><span class=\"p\">,</span>\n                   <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n                   <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Project name &quot;</span> <span class=\"o\">+</span> <span class=\"n\">project_name</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Project name D:\\Temp\\pyaedt_prj_LH1\\array.aedt\n</pre></div>\n</div>\n</section>\n<section id=\"read-array-definition-from-json-file\">\n<h2>Read array definition from JSON file<a class=\"headerlink\" href=\"#read-array-definition-from-json-file\" title=\"Permalink to this heading\">#</a></h2>\n<p>Read the array definition from a JSON file. A JSON file\ncan contain all information needed to import and set up a\nfull array in HFSS.</p>\n<p>If a 3D component is not available in the design, it is loaded\ninto the dictionary from the path that you specify. The following\ncode edits the dictionary to point to the location of the A3DCOMP file.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dict_in</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">data_handler</span><span class=\"o\">.</span><span class=\"n\">json_to_dict</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">example_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;array_simple.json&quot;</span><span class=\"p\">))</span>\n<span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"s2\">&quot;Circ_Patch_5GHz1&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">example_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Circ_Patch_5GHz.a3dcomp&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"s2\">&quot;cells&quot;</span><span class=\"p\">][(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Circ_Patch_5GHz1&quot;</span><span class=\"p\">}</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">add_3d_component_array_from_json</span><span class=\"p\">(</span><span class=\"n\">dict_in</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"set-up-simulation\">\n<h2>Set up simulation<a class=\"headerlink\" href=\"#set-up-simulation\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set up a simulation and analyze it.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_setup</span><span class=\"p\">()</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;5GHz&quot;</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaximumPasses&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">analyze_nominal</span><span class=\"p\">(</span><span class=\"n\">num_cores</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"get-far-field-data\">\n<h2>Get far field data<a class=\"headerlink\" href=\"#get-far-field-data\" title=\"Permalink to this heading\">#</a></h2>\n<p>Get far field data. After the simulation completes, the far\nfield data is generated port by port and stored in a data class.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ffdata</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">get_antenna_ffd_solution_data</span><span class=\"p\">(</span><span class=\"n\">sphere_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Infinite Sphere1&quot;</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">nominal_adaptive</span><span class=\"p\">,</span>\n                                            <span class=\"n\">frequencies</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">5e9</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</section>\n<section id=\"generate-contour-plot\">\n<h2>Generate contour plot<a class=\"headerlink\" href=\"#generate-contour-plot\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate a contour plot. You can define the Theta scan\nand Phi scan.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">plot_farfield_contour</span><span class=\"p\">(</span><span class=\"n\">qty_str</span><span class=\"o\">=</span><span class=\"s1\">&#39;RealizedGain&#39;</span><span class=\"p\">,</span> <span class=\"n\">convert_to_db</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                             <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Contour at </span><span class=\"si\">{}</span><span class=\"s1\">Hz&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">frequency</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_Array_001.png\" srcset=\"../../_images/sphx_glr_Array_001.png\" alt=\"Contour at 5000000000.0Hz\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;module &#39;matplotlib.pyplot&#39; from &#39;c:\\\\actions-runner\\\\_work\\\\pyaedt\\\\pyaedt\\\\jsondoc\\\\lib\\\\site-packages\\\\matplotlib\\\\pyplot.py&#39;&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"generate-2d-cutout-plots\">\n<h2>Generate 2D cutout plots<a class=\"headerlink\" href=\"#generate-2d-cutout-plots\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate 2D cutout plots. You can define the Theta scan\nand Phi scan.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">plot_2d_cut</span><span class=\"p\">(</span><span class=\"n\">primary_sweep</span><span class=\"o\">=</span><span class=\"s1\">&#39;theta&#39;</span><span class=\"p\">,</span> <span class=\"n\">secondary_sweep_value</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">75</span><span class=\"p\">,</span> <span class=\"mi\">75</span><span class=\"p\">],</span>\n                   <span class=\"n\">qty_str</span><span class=\"o\">=</span><span class=\"s1\">&#39;RealizedGain&#39;</span><span class=\"p\">,</span>\n                   <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Azimuth at </span><span class=\"si\">{}</span><span class=\"s1\">Hz&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">frequency</span><span class=\"p\">),</span>\n                   <span class=\"n\">convert_to_db</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">plot_2d_cut</span><span class=\"p\">(</span><span class=\"n\">primary_sweep</span><span class=\"o\">=</span><span class=\"s2\">&quot;phi&quot;</span><span class=\"p\">,</span> <span class=\"n\">secondary_sweep_value</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span>\n                   <span class=\"n\">qty_str</span><span class=\"o\">=</span><span class=\"s1\">&#39;RealizedGain&#39;</span><span class=\"p\">,</span>\n                   <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Elevation&#39;</span><span class=\"p\">,</span>\n                   <span class=\"n\">convert_to_db</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_Array_002.png\" srcset=\"../../_images/sphx_glr_Array_002.png\" alt=\"Azimuth at 5000000000.0Hz\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_Array_003.png\" srcset=\"../../_images/sphx_glr_Array_003.png\" alt=\"Elevation\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 2000x1000 with 1 Axes&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"generate-3d-polar-plots-in-matplotlib\">\n<h2>Generate 3D polar plots in Matplotlib<a class=\"headerlink\" href=\"#generate-3d-polar-plots-in-matplotlib\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate 3D polar plots in Matplotlib. You can define\nthe Theta scan and Phi scan.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">polar_plot_3d</span><span class=\"p\">(</span><span class=\"n\">qty_str</span><span class=\"o\">=</span><span class=\"s1\">&#39;RealizedGain&#39;</span><span class=\"p\">,</span>\n                     <span class=\"n\">convert_to_db</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_Array_004.png\" srcset=\"../../_images/sphx_glr_Array_004.png\" alt=\"3D Plot\" class = \"sphx-glr-single-img\"/></section>\n<section id=\"generate-3d-plots-in-pyvista\">\n<h2>Generate 3D plots in PyVista<a class=\"headerlink\" href=\"#generate-3d-plots-in-pyvista\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate 3D plots in PyVista. You can define the Theta and Phi\nscan angles. You can change the easy-to-use interactive plot\nthat is generated on the fly.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ffdata</span><span class=\"o\">.</span><span class=\"n\">polar_plot_3d_pyvista</span><span class=\"p\">(</span><span class=\"n\">qty_str</span><span class=\"o\">=</span><span class=\"s1\">&#39;RealizedGain&#39;</span><span class=\"p\">,</span>\n                             <span class=\"n\">convert_to_db</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                             <span class=\"n\">export_image_path</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;picture.jpg&quot;</span><span class=\"p\">),</span>\n                             <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<ul class=\"sphx-glr-horizontal\">\n<li><img src=\"../../_images/sphx_glr_Array_005.png\" srcset=\"../../_images/sphx_glr_Array_005.png\" alt=\"Array\" class = \"sphx-glr-multi-img\"/></li>\n<li><img src=\"../../_images/sphx_glr_Array_006.png\" srcset=\"../../_images/sphx_glr_Array_006.png\" alt=\"Array\" class = \"sphx-glr-multi-img\"/></li>\n</ul>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>c:\\actions-runner\\_work\\pyaedt\\pyaedt\\jsondoc\\lib\\site-packages\\pyvista\\core\\dataset.py:2013: PyVistaDeprecationWarning: Use of `DataSet.overwrite` is deprecated. Use `DataSet.copy_from` instead.\n  warnings.warn(\n\n&lt;pyvista.plotting.plotting.Plotter object at 0x000001BCAC567F10&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"release-aedt\">\n<h2>Release AEDT<a class=\"headerlink\" href=\"#release-aedt\" title=\"Permalink to this heading\">#</a></h2>\n<p>Release AEDT.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  57.662 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-02-hfss-array-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/8aad02f3076ae7758fe8beb2f726f4b3/Array.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">Array.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/451353af6a31fd5dcd9f398c42ae93d4/Array.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">Array.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/02-HFSS/Flex_CPWG", "HFSS: flex cable CPWG", "N", "next"], ["examples/02-HFSS/Advanced_Far_Field", "HFSS: advanced far field postprocessing", "P", "previous"]], "sourcename": "examples/02-HFSS/Array.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">HFSS: component antenna array</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-imports\">Perform required imports</a></li>\n<li><a class=\"reference internal\" href=\"#set-non-graphical-mode\">Set non-graphical mode</a></li>\n<li><a class=\"reference internal\" href=\"#download-3d-component\">Download 3D component</a></li>\n<li><a class=\"reference internal\" href=\"#launch-hfss-and-save-project\">Launch HFSS and save project</a></li>\n<li><a class=\"reference internal\" href=\"#read-array-definition-from-json-file\">Read array definition from JSON file</a></li>\n<li><a class=\"reference internal\" href=\"#set-up-simulation\">Set up simulation</a></li>\n<li><a class=\"reference internal\" href=\"#get-far-field-data\">Get far field data</a></li>\n<li><a class=\"reference internal\" href=\"#generate-contour-plot\">Generate contour plot</a></li>\n<li><a class=\"reference internal\" href=\"#generate-2d-cutout-plots\">Generate 2D cutout plots</a></li>\n<li><a class=\"reference internal\" href=\"#generate-3d-polar-plots-in-matplotlib\">Generate 3D polar plots in Matplotlib</a></li>\n<li><a class=\"reference internal\" href=\"#generate-3d-plots-in-pyvista\">Generate 3D plots in PyVista</a></li>\n<li><a class=\"reference internal\" href=\"#release-aedt\">Release AEDT</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/02-HFSS/Array", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}