{"parents": [{"link": "../../", "title": "Module code"}], "title": "pyaedt.mechanical", "body": "<h1>Source code for pyaedt.mechanical</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;This module contains the ``Mechanical`` class.&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Analysis3D</span> <span class=\"kn\">import</span> <span class=\"n\">FieldAnalysis3D</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Boundary</span> <span class=\"kn\">import</span> <span class=\"n\">BoundaryObject</span>\n\n\n<div class=\"viewcode-block\" id=\"Mechanical\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical/#pyaedt.Mechanical\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Mechanical</span><span class=\"p\">(</span><span class=\"n\">FieldAnalysis3D</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Provides the Mechanical application interface.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    projectname : str, optional</span>\n<span class=\"sd\">        Name of the project to select or the full path to the project</span>\n<span class=\"sd\">        or AEDTZ archive to open.  The default is ``None``, in which</span>\n<span class=\"sd\">        case an attempt is made to get an active project. If no</span>\n<span class=\"sd\">        projects are present, an empty project is created.</span>\n<span class=\"sd\">    designname : str, optional</span>\n<span class=\"sd\">        Name of the design to select. The default is ``None``, in</span>\n<span class=\"sd\">        which case an attempt is made to get an active design. If no</span>\n<span class=\"sd\">        designs are present, an empty design is created.</span>\n<span class=\"sd\">    solution_type : str, optional</span>\n<span class=\"sd\">        Solution type to apply to the design. The default is</span>\n<span class=\"sd\">        ``None``, in which case the default type is applied.</span>\n<span class=\"sd\">    setup_name : str, optional</span>\n<span class=\"sd\">        Name of the setup to use as the nominal. The default is</span>\n<span class=\"sd\">        ``None``, in which case the active setup is used or</span>\n<span class=\"sd\">        nothing is used.</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``, in which case</span>\n<span class=\"sd\">        the active version or latest installed version is used.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    non_graphical : bool, optional</span>\n<span class=\"sd\">        Whether to launch AEDT in the non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT is launched in the graphical mode.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the</span>\n<span class=\"sd\">        machine. The default is ``True``. This parameter is ignored when</span>\n<span class=\"sd\">        a script is launched within AEDT.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to release AEDT on exit. The default is ``False``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to open the AEDT student version. The default is ``False``.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    machine : str, optional</span>\n<span class=\"sd\">        Machine name to connect the oDesktop session to. Works only in 2022R2 and</span>\n<span class=\"sd\">        later. The remote server must be up and running with the command</span>\n<span class=\"sd\">        `&quot;ansysedt.exe -grpcsrv portnum&quot;`. If the machine is `&quot;localhost&quot;`,</span>\n<span class=\"sd\">        the server also starts if not present.</span>\n<span class=\"sd\">    port : int, optional</span>\n<span class=\"sd\">        Port number on which to start the oDesktop communication on an already existing server.</span>\n<span class=\"sd\">        This parameter is ignored when creating a new server. It works only in 2022 R2 or</span>\n<span class=\"sd\">        later. The remote server must be up and running with the command `&quot;ansysedt.exe -grpcsrv portnum&quot;`.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Process ID for the instance of AEDT to point PyAEDT at. The default is</span>\n<span class=\"sd\">        ``None``. This parameter is only used when ``new_desktop_session = False``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Create an instance of Mechanical and connect to an existing</span>\n<span class=\"sd\">    HFSS design or create a new HFSS design if one does not exist.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Mechanical</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Mechanical()</span>\n\n<span class=\"sd\">    Create an instance of Mechanical and link to a project named</span>\n<span class=\"sd\">    ``&quot;projectname&quot;``. If this project does not exist, create one with</span>\n<span class=\"sd\">    this name.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Mechanical(projectname)</span>\n\n<span class=\"sd\">    Create an instance of Mechanical and link to a design named</span>\n<span class=\"sd\">    ``&quot;designname&quot;`` in a project named ``&quot;projectname&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Mechanical(projectname,designame)</span>\n\n<span class=\"sd\">    Create an instance of Mechanical and open the specified</span>\n<span class=\"sd\">    project, which is named ``&quot;myfile.aedt&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Mechanical(&quot;myfile.aedt&quot;)</span>\n\n<span class=\"sd\">    Create a ``Desktop on 2021R2`` object and then create an</span>\n<span class=\"sd\">    ``Mechanical`` object and open the specified project, which is</span>\n<span class=\"sd\">    named ``&quot;myfile.aedt&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Mechanical(specified_version=&quot;2021.2&quot;, projectname=&quot;myfile.aedt&quot;)</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n\n        <span class=\"n\">FieldAnalysis3D</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Mechanical&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">projectname</span><span class=\"p\">,</span>\n            <span class=\"n\">designname</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_type</span><span class=\"p\">,</span>\n            <span class=\"n\">setup_name</span><span class=\"p\">,</span>\n            <span class=\"n\">specified_version</span><span class=\"p\">,</span>\n            <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n            <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n            <span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n            <span class=\"n\">student_version</span><span class=\"p\">,</span>\n            <span class=\"n\">machine</span><span class=\"p\">,</span>\n            <span class=\"n\">port</span><span class=\"p\">,</span>\n            <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n<div class=\"viewcode-block\" id=\"Mechanical.assign_em_losses\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical.assign_em_losses/#pyaedt.Mechanical.assign_em_losses\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_em_losses</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"s2\">&quot;HFSSDesign1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Setup1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">sweepname</span><span class=\"o\">=</span><span class=\"s2\">&quot;LastAdaptive&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">map_frequency</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_objects</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">source_project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">paramlist</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">object_list</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Map EM losses to a Mechanical design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        designname : str, optional</span>\n<span class=\"sd\">            Name of the design of the source mapping. The default is ``&quot;HFSSDesign1&quot;``.</span>\n<span class=\"sd\">        setupname : str, optional</span>\n<span class=\"sd\">            Name of the EM setup. The default is ``&quot;Setup1&quot;``.</span>\n<span class=\"sd\">        sweepname : str, optional</span>\n<span class=\"sd\">            Name of the EM sweep to use for the mapping. The default is ``&quot;LastAdaptive&quot;``.</span>\n<span class=\"sd\">        map_frequency : str, optional</span>\n<span class=\"sd\">            Frequency to map. The default is ``None``. The value must be ``None`` for</span>\n<span class=\"sd\">            Eigenmode analysis.</span>\n<span class=\"sd\">        surface_objects : list, optional</span>\n<span class=\"sd\">            List objects in the source that are metals. The default is ``[]``.</span>\n<span class=\"sd\">        source_project_name : str, optional</span>\n<span class=\"sd\">            Name of the source project. The default is ``None``, in which case</span>\n<span class=\"sd\">            the source from the same project is used.</span>\n<span class=\"sd\">        paramlist : list, optional</span>\n<span class=\"sd\">            List of all parameters in the EM to map. The default is ``[]``.</span>\n<span class=\"sd\">        object_list : list, optional</span>\n<span class=\"sd\">             The default is ``[]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Boundary.BoundaryObject`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignEMLoss</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">assert</span> <span class=\"s2\">&quot;Thermal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This method works only in a Mechanical Thermal analysis.&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mapping HFSS EM Lossess&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">oName</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span>\n        <span class=\"k\">if</span> <span class=\"n\">oName</span> <span class=\"o\">==</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">or</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">projname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;This Project*&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">projname</span> <span class=\"o\">=</span> <span class=\"n\">source_project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># Generate a list of model objects from the lists made previously and use to map the HFSS losses into Icepak.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">object_list</span><span class=\"p\">:</span>\n            <span class=\"n\">allObjects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">allObjects</span> <span class=\"o\">=</span> <span class=\"n\">object_list</span><span class=\"p\">[:]</span>\n        <span class=\"n\">surfaces</span> <span class=\"o\">=</span> <span class=\"n\">surface_objects</span>\n        <span class=\"k\">if</span> <span class=\"n\">map_frequency</span><span class=\"p\">:</span>\n            <span class=\"n\">intr</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">map_frequency</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">intr</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">argparam</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"p\">:</span>\n            <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">paramlist</span><span class=\"p\">:</span>\n            <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">allObjects</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;allObjects&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">:</span> <span class=\"n\">projname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;projname&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ElectronicsDesktop&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Design&quot;</span><span class=\"p\">:</span> <span class=\"n\">designname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Soln&quot;</span><span class=\"p\">:</span> <span class=\"n\">setupname</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; : &quot;</span> <span class=\"o\">+</span> <span class=\"n\">sweepname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Params&quot;</span><span class=\"p\">:</span> <span class=\"n\">argparam</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ForceSourceToSolve&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PreservePartnerSoln&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PathRelativeTo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;TargetProject&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">intr</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Intrinsics&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">intr</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SurfaceOnly&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">surfaces</span>\n\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;EMLoss&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EMLoss&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;EM losses mapped from design </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">designname</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Mechanical.assign_thermal_map\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical.assign_thermal_map/#pyaedt.Mechanical.assign_thermal_map\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_thermal_map</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">object_list</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"s2\">&quot;IcepakDesign1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Setup1&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">sweepname</span><span class=\"o\">=</span><span class=\"s2\">&quot;SteadyState&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">source_project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">paramlist</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Map thermal losses to a Mechanical design.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           This method works in 2021 R2 only when coupled with Icepak.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_list : list</span>\n\n<span class=\"sd\">        designname : str, optional</span>\n<span class=\"sd\">            Name of the design with the source mapping. The default is ``&quot;IcepakDesign1&quot;``.</span>\n<span class=\"sd\">        setupname : str, optional</span>\n<span class=\"sd\">            Name of the EM setup. The default is ``&quot;Setup1&quot;``.</span>\n<span class=\"sd\">        sweepname :str, optional</span>\n<span class=\"sd\">            Name of the EM sweep to use for the mapping. The default is ``&quot;SteadyState&quot;``.</span>\n<span class=\"sd\">        source_project_name : str, optional</span>\n<span class=\"sd\">            Name of the source project. The default is ``None``, in which case the</span>\n<span class=\"sd\">            source from the same project is used.</span>\n<span class=\"sd\">        paramlist : list, optional</span>\n<span class=\"sd\">            List of all parameters in the EM to map. The default is ``[]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`aedt.modules.Boundary.Boundary object`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignThermalCondition</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">assert</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Structural&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This method works only in a Mechanical Structural analysis.&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Mapping HFSS EM Lossess&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">oName</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span>\n        <span class=\"k\">if</span> <span class=\"n\">oName</span> <span class=\"o\">==</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">or</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">projname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;This Project*&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">projname</span> <span class=\"o\">=</span> <span class=\"n\">source_project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># Generate a list of model objects from the lists made previously and use to map the HFSS losses into Icepak.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"n\">object_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">object_list</span><span class=\"p\">:</span>\n            <span class=\"n\">allObjects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">allObjects</span> <span class=\"o\">=</span> <span class=\"n\">object_list</span><span class=\"p\">[:]</span>\n        <span class=\"n\">argparam</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"p\">:</span>\n            <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">available_variations</span><span class=\"o\">.</span><span class=\"n\">nominal_w_values_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">paramlist</span><span class=\"p\">:</span>\n            <span class=\"n\">argparam</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">:</span> <span class=\"n\">allObjects</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Uniform&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">:</span> <span class=\"n\">projname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Product&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ElectronicsDesktop&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Design&quot;</span><span class=\"p\">:</span> <span class=\"n\">designname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Soln&quot;</span><span class=\"p\">:</span> <span class=\"n\">setupname</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; : &quot;</span> <span class=\"o\">+</span> <span class=\"n\">sweepname</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Params&quot;</span><span class=\"p\">:</span> <span class=\"n\">argparam</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ForceSourceToSolve&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PreservePartnerSoln&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PathRelativeTo&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;TargetProject&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;ThermalLink&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ThermalCondition&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Thermal conditions are mapped from design </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">designname</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Mechanical.assign_uniform_convection\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical.assign_uniform_convection/#pyaedt.Mechanical.assign_uniform_convection\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_uniform_convection</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"n\">convection_value</span><span class=\"p\">,</span> <span class=\"n\">convection_unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;w_per_m2kel&quot;</span><span class=\"p\">,</span> <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a uniform convection to the face list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objects_list : list</span>\n<span class=\"sd\">            List of objects, faces, or both.</span>\n<span class=\"sd\">        convection_value : float</span>\n<span class=\"sd\">            Convection value.</span>\n<span class=\"sd\">        convection_unit : str, optional</span>\n<span class=\"sd\">            Units for the convection value. The default is ``&quot;w_per_m2kel&quot;``.</span>\n<span class=\"sd\">        temperature : str, optional</span>\n<span class=\"sd\">            Temperature. The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        boundary_name : str, optional</span>\n<span class=\"sd\">            Name of the boundary. The default is ``&quot;&quot;``, in which case the default</span>\n<span class=\"sd\">            name is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`aedt.modules.Boundary.Boundary object`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignConvection</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">assert</span> <span class=\"s2\">&quot;Thermal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This method works only in a Mechanical Thermal analysis.&quot;</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">objects_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">temperature</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Uniform&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;FilmCoeff&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">convection_value</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">convection_unit</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">boundary_name</span><span class=\"p\">:</span>\n            <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Convection&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Convection&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Mechanical.assign_uniform_temperature\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical.assign_uniform_temperature/#pyaedt.Mechanical.assign_uniform_temperature\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_uniform_temperature</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"s2\">&quot;AmbientTemp&quot;</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a uniform temperature boundary.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            This method works only in a Mechanical Thermal analysis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objects_list : list</span>\n<span class=\"sd\">            List of objects, faces, or both.</span>\n<span class=\"sd\">        temperature : str, optional.</span>\n<span class=\"sd\">            Type of the temperature. The default is ``&quot;AmbientTemp&quot;``.</span>\n<span class=\"sd\">        boundary_name : str, optional</span>\n<span class=\"sd\">            Name of the boundary. The default is ``&quot;&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`aedt.modules.Boundary.Boundary object`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignTemperature</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">assert</span> <span class=\"s2\">&quot;Thermal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;This method works only in a Mechanical Thermal analysis.&quot;</span>\n\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">objects_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n\n        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">temperature</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">boundary_name</span><span class=\"p\">:</span>\n            <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Temp&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Temperature&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Mechanical.assign_frictionless_support\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical.assign_frictionless_support/#pyaedt.Mechanical.assign_frictionless_support\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_frictionless_support</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a Mechanical frictionless support.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">            This method works only in a Mechanical Structural analysis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objects_list : list</span>\n<span class=\"sd\">            List of faces to apply to the frictionless support.</span>\n<span class=\"sd\">        boundary_name : str, optional</span>\n<span class=\"sd\">            Name of the boundary. The default is ``&quot;&quot;``, in which case the</span>\n<span class=\"sd\">            default name is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`aedt.modules.Boundary.Boundary object`</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignFrictionlessSupport</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Structural&quot;</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;Modal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;This method works only in Mechanical Structural analysis.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">objects_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Objects&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">boundary_name</span><span class=\"p\">:</span>\n            <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Temp&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Frictionless&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Mechanical.assign_fixed_support\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Mechanical.assign_fixed_support/#pyaedt.Mechanical.assign_fixed_support\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_fixed_support</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a Mechanical fixed support.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           This method works only in a Mechanical Structural analysis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objects_list : list</span>\n<span class=\"sd\">            List of faces to apply to the fixed support.</span>\n<span class=\"sd\">        boundary_name : str, optional</span>\n<span class=\"sd\">            Name of the boundary. The default is ``&quot;&quot;``, in which case</span>\n<span class=\"sd\">            the default name is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        aedt.modules.Boundary.Boundary</span>\n<span class=\"sd\">            Boundary object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.AssignFixedSupport</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Structural&quot;</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;Modal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solution_type</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;This method works only in a Mechanical Structural analysis.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">objects_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">objects_list</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Faces&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">objects_list</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">boundary_name</span><span class=\"p\">:</span>\n            <span class=\"n\">boundary_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Temp&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">bound</span> <span class=\"o\">=</span> <span class=\"n\">BoundaryObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">boundary_name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FixedSupport&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">bound</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">bound</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">bound</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">existing_analysis_sweeps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Existing analysis sweeps in the design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of existing analysis sweeps.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.GetSetups</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">setup_list</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">existing_analysis_setups</span>\n        <span class=\"n\">sweep_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">setup_list</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; : Solution&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sweep_list</span></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/mechanical", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}