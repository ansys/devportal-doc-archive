{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.modeler2d", "body": "<h1>Source code for pyaedt.modeler.modeler2d</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">from</span> <span class=\"nn\">warnings</span> <span class=\"kn\">import</span> <span class=\"n\">warn</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.cad.Modeler</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryModeler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.cad.Modeler</span> <span class=\"kn\">import</span> <span class=\"n\">Modeler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.cad.Primitives2D</span> <span class=\"kn\">import</span> <span class=\"n\">Primitives2D</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelerRMxprt</span><span class=\"p\">(</span><span class=\"n\">Modeler</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Provides the Modeler RMxprt application interface.</span>\n\n<span class=\"sd\">    This class is inherited in the caller application and is accessible through the modeler variable</span>\n<span class=\"sd\">    object( eg. ``rmxprt.modeler``).</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"n\">Modeler</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oeditor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;oEditor Module.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor = oDesign.SetActiveEditor(&quot;Machine&quot;)&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n\n\n<div class=\"viewcode-block\" id=\"Modeler2D\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.modeler2d.Modeler2D/#pyaedt.modeler.modeler2d.Modeler2D\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Modeler2D</span><span class=\"p\">(</span><span class=\"n\">GeometryModeler</span><span class=\"p\">,</span> <span class=\"n\">Primitives2D</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Provides the Modeler 2D application interface.</span>\n\n<span class=\"sd\">    This class is inherited in the caller application and is accessible through the modeler variable</span>\n<span class=\"sd\">    object( eg. ``maxwell2d.modeler``).</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    application : :class:`pyaedt.application.Analysis2D.FieldAnalysis2D`</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Maxwell2d</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Maxwell2d()</span>\n<span class=\"sd\">    &gt;&gt;&gt; my_modeler = app.modeler</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">application</span><span class=\"p\">):</span>\n        <span class=\"n\">GeometryModeler</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">application</span><span class=\"p\">,</span> <span class=\"n\">is3d</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">Primitives2D</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span> <span class=\"o\">=</span> <span class=\"bp\">self</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__get__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">instance</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">primitives</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Primitives.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.15</span>\n<span class=\"sd\">            No need to use primitives anymore. You can instantiate primitives methods directly from modeler instead.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Primitives2D.Primitives2D`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">mess</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;`primitives` is deprecated.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n        <span class=\"n\">mess</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot; Use `app.modeler` directly to instantiate primitives methods.&quot;</span>\n        <span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"n\">mess</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span>\n\n<div class=\"viewcode-block\" id=\"Modeler2D.calculate_radius_2D\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.modeler2d.Modeler2D.calculate_radius_2D/#pyaedt.modeler.modeler2d.Modeler2D.calculate_radius_2D\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">calculate_radius_2D</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">inner</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Calculate the extremity of an object in the radial direction.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_name : str</span>\n<span class=\"sd\">            name of the object from which to calculate the radius.</span>\n<span class=\"sd\">        inner : bool, optional</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Radius value.</span>\n\n<span class=\"sd\">            .. note::</span>\n<span class=\"sd\">                If ``inner=True``, then the maximum is returned; otherwise,</span>\n<span class=\"sd\">                the minimum is returned.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">oVertexIDs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">vertices</span>\n        <span class=\"k\">if</span> <span class=\"n\">oVertexIDs</span><span class=\"p\">:</span>\n            <span class=\"n\">vert_id_int</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">oVertexIDs</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">inner</span><span class=\"p\">:</span>\n                <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"mf\">1e9</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">vertex</span> <span class=\"ow\">in</span> <span class=\"n\">vert_id_int</span><span class=\"p\">:</span>\n                <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetVertexPosition</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"p\">)</span>\n                <span class=\"n\">vertex_radius</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">inner</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">vertex_radius</span> <span class=\"o\">&gt;</span> <span class=\"n\">radius</span><span class=\"p\">:</span>\n                        <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">vertex_radius</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">vertex_radius</span> <span class=\"o\">&lt;</span> <span class=\"n\">radius</span><span class=\"p\">:</span>\n                        <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"n\">vertex_radius</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">object_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">radius</span></div>\n\n<div class=\"viewcode-block\" id=\"Modeler2D.radial_split_2D\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.modeler2d.Modeler2D.radial_split_2D/#pyaedt.modeler.modeler2d.Modeler2D.radial_split_2D\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">radial_split_2D</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Split the stator and rotor for mesh refinement.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        radius : float</span>\n<span class=\"sd\">            Radius of the circle.</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the circle.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">cir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_split&quot;</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;vacuum&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">])</span>\n        <span class=\"n\">objects</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n        <span class=\"n\">name1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">objects</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">intersect</span><span class=\"p\">([</span><span class=\"n\">name1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">cir</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span> <span class=\"n\">keep_originals</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">name1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Modeler2D.objects_in_bounding_box\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.modeler2d.Modeler2D.objects_in_bounding_box/#pyaedt.modeler.modeler2d.Modeler2D.objects_in_bounding_box\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">objects_in_bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">bounding_box</span><span class=\"p\">,</span> <span class=\"n\">check_lines</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">check_sheets</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Given a 2D bounding box, check if sheets and lines are inside it.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        bounding_box : list.</span>\n<span class=\"sd\">            List of either the 4 or 6 coordinates of the bounding box vertices.</span>\n<span class=\"sd\">        check_lines : bool, optional.</span>\n<span class=\"sd\">            Whether to check line objects. The default is ``True``.</span>\n<span class=\"sd\">        check_sheets : bool, optional.</span>\n<span class=\"sd\">            Whether to check sheet objects. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.object3d`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">4</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Bounding box must be a list of 4 or 6 elements.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">bounding_box</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2D Extractor&quot;</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">xy_plane</span><span class=\"p\">:</span>\n                <span class=\"n\">bounding_box</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">bounding_box</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]]</span>\n\n        <span class=\"n\">objects_2d</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">check_lines</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">line_objects</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span>\n                    <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">objects_2d</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">check_sheets</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">sheet_objects</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span>\n                    <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"ow\">and</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">objects_2d</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">objects_2d</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/modeler2d", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}