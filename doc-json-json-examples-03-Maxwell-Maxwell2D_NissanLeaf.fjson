{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "Maxwell examples"}], "prev": {"link": "../", "title": "Maxwell examples"}, "next": {"link": "../Maxwell2D_Transient/", "title": "Maxwell 2D: transient winding analysis"}, "title": "Maxwell 2D: PM synchronous motor transient analysis", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-03-maxwell-maxwell2d-nissanleaf-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"maxwell-2d-pm-synchronous-motor-transient-analysis\">\n<span id=\"sphx-glr-examples-03-maxwell-maxwell2d-nissanleaf-py\"></span><h1>Maxwell 2D: PM synchronous motor transient analysis<a class=\"headerlink\" href=\"#maxwell-2d-pm-synchronous-motor-transient-analysis\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use PyAEDT to create a Maxwell 2D transient analysis for\nan interior permanent magnet electric motor.</p>\n<section id=\"perform-required-imports\">\n<h2>Perform required imports<a class=\"headerlink\" href=\"#perform-required-imports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">sqrt</span> <span class=\"k\">as</span> <span class=\"n\">mysqrt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">csv</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyaedt</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-maxwell-2d\">\n<h2>Initialize Maxwell 2D<a class=\"headerlink\" href=\"#initialize-maxwell-2d\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize Maxwell 2D, providing the version, path to the project, and the design\nname and type.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">desktopVersion</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2022.2&quot;</span>\n\n<span class=\"n\">sName</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;MySetupAuto&quot;</span>\n<span class=\"n\">sType</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;TransientXY&quot;</span>\n\n<span class=\"n\">pName</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">generate_unique_project_name</span><span class=\"p\">()</span>\n<span class=\"n\">dName</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Sinusoidal&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-dictionaries\">\n<h2>Initialize dictionaries<a class=\"headerlink\" href=\"#initialize-dictionaries\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize dictionaries that contain all the definitions for the design\nvariables and output variables.</p>\n</section>\n<section id=\"initialize-definitions-for-stator-rotor-and-shaft\">\n<h2>Initialize definitions for stator, rotor, and shaft<a class=\"headerlink\" href=\"#initialize-definitions-for-stator-rotor-and-shaft\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize geometry parameter definitions for the stator, rotor, and shaft.\nThe naming refers to RMxprt primitives.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">geom_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;DiaGap&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;132mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DiaStatorYoke&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;198mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DiaStatorInner&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;132mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DiaRotorLam&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;130mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DiaShaft&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;44.45mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DiaOuter&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;198mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Airgap&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SlotNumber&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;48&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SlotType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-definitions-for-stator-windings\">\n<h2>Initialize definitions for stator windings<a class=\"headerlink\" href=\"#initialize-definitions-for-stator-windings\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize geometry parameter definitions for the stator windings. The naming\nrefers to RMxprt primitives.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">wind_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Layers&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;ParallelPaths&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;R_Phase&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;7.5mOhm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;WdgExt_F&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;5mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SpanExt&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;30mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SegAngle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.25&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;CoilPitch&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;5&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># coil pitch in slots</span>\n    <span class=\"s2\">&quot;Coil_SetBack&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.605732823mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SlotWidth&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2.814mm&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># RMxprt Bs0</span>\n    <span class=\"s2\">&quot;Coil_Edge_Short&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.769235435mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Coil_Edge_Long&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;15.37828521mm&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-definitions-for-model-setup\">\n<h2>Initialize definitions for model setup<a class=\"headerlink\" href=\"#initialize-definitions-for-model-setup\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize geometry parameter definitions for the model setup.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mod_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;NumPoles&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;8&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Model_Length&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;80mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SymmetryFactor&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;8&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Magnetic_Axial_Length&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;150mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Stator_Lam_Length&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;StatorSkewAngle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;NumTorquePointsPerCycle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;30&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;mapping_angle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.125*4deg&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;num_m&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;16&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Section_Angle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;360deg/SymmetryFactor&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-definitions-for-operational-machine\">\n<h2>Initialize definitions for operational machine<a class=\"headerlink\" href=\"#initialize-definitions-for-operational-machine\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize geometry parameter definitions for the operational machine. This\nidentifies the operating point for the transient setup.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">oper_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;InitialPositionMD&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;180deg/4&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;IPeak&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;480A&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;MachineRPM&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3000rpm&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;ElectricFrequency&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MachineRPM/60rpm*NumPoles/2*1Hz&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;ElectricPeriod&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1/ElectricFrequency&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;BandTicksinModel&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;360deg/NumPoles/mapping_angle&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;TimeStep&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ElectricPeriod/(2*BandTicksinModel)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;StopTime&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ElectricPeriod&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Theta_i&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;135deg&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"set-non-graphical-mode\">\n<h2>Set non-graphical mode<a class=\"headerlink\" href=\"#set-non-graphical-mode\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set non-graphical mode. <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span></code> is needed to\ngenerate documentation only.\nYou can set <code class=\"docutils literal notranslate\"><span class=\"pre\">non_graphical</span></code> either to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;t&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"launch-maxwell-2d\">\n<h2>Launch Maxwell 2D<a class=\"headerlink\" href=\"#launch-maxwell-2d\" title=\"Permalink to this heading\">#</a></h2>\n<p>Launch Maxwell 2D and save the project.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">Maxwell2d</span><span class=\"p\">(</span><span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"n\">pName</span><span class=\"p\">,</span>\n                       <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"n\">desktopVersion</span><span class=\"p\">,</span>\n                       <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"n\">dName</span><span class=\"p\">,</span>\n                       <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"n\">sType</span><span class=\"p\">,</span>\n                       <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                       <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">non_graphical</span>\n                       <span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-object-to-access-2d-modeler\">\n<h2>Create object to access 2D modeler<a class=\"headerlink\" href=\"#create-object-to-access-2d-modeler\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the object <code class=\"docutils literal notranslate\"><span class=\"pre\">mod2D</span></code> to access the 2D modeler easily.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mod2D</span> <span class=\"o\">=</span> <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">modeler</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">model_units</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;mm&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"define-variables-from-dictionaries\">\n<h2>Define variables from dictionaries<a class=\"headerlink\" href=\"#define-variables-from-dictionaries\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define design variables from the created dictionaries.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">geom_params</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">wind_params</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">mod_params</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">oper_params</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n</pre></div>\n</div>\n</section>\n<section id=\"define-path-for-non-linear-material-properties\">\n<h2>Define path for non-linear material properties<a class=\"headerlink\" href=\"#define-path-for-non-linear-material-properties\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define the path for non-linear material properties.\nMaterials are stored in text files.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">filename_lam</span><span class=\"p\">,</span> <span class=\"n\">filename_PM</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">downloads</span><span class=\"o\">.</span><span class=\"n\">download_leaf</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-first-material\">\n<h2>Create first material<a class=\"headerlink\" href=\"#create-first-material\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the material <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Copper</span> <span class=\"pre\">(Annealed)_65C&quot;</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mat_coils</span> <span class=\"o\">=</span> <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">add_material</span><span class=\"p\">(</span><span class=\"s2\">&quot;Copper (Annealed)_65C&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mat_coils</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"n\">mat_coils</span><span class=\"o\">.</span><span class=\"n\">conductivity</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;49288048.9198&quot;</span>\n<span class=\"n\">mat_coils</span><span class=\"o\">.</span><span class=\"n\">permeability</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-second-material\">\n<h2>Create second material<a class=\"headerlink\" href=\"#create-second-material\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the material <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Arnold_Magnetics_N30UH_80C&quot;</span></code>.\nThe BH curve is read from a tabbed CSV file, and a list (<code class=\"docutils literal notranslate\"><span class=\"pre\">BH_List_PM</span></code>)\nis created. This list is passed to the <code class=\"docutils literal notranslate\"><span class=\"pre\">mat_PM.permeability.set_non_linear</span></code>\nmethod.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mat_PM</span> <span class=\"o\">=</span> <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">add_material</span><span class=\"p\">(</span><span class=\"s2\">&quot;Arnold_Magnetics_N30UH_80C_new&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mat_PM</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"n\">mat_PM</span><span class=\"o\">.</span><span class=\"n\">conductivity</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;555555.5556&quot;</span>\n<span class=\"n\">mat_PM</span><span class=\"o\">.</span><span class=\"n\">set_magnetic_coercitivity</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">800146.66287534</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">mat_PM</span><span class=\"o\">.</span><span class=\"n\">mass_density</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;7500&quot;</span>\n<span class=\"n\">BH_List_PM</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename_PM</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n        <span class=\"n\">BH_List_PM</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])])</span>\n<span class=\"n\">mat_PM</span><span class=\"o\">.</span><span class=\"n\">permeability</span><span class=\"o\">.</span><span class=\"n\">set_non_linear</span><span class=\"p\">(</span><span class=\"n\">BH_List_PM</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-third-material\">\n<h2>Create third material<a class=\"headerlink\" href=\"#create-third-material\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the laminated material <code class=\"docutils literal notranslate\"><span class=\"pre\">30DH_20C_smooth</span></code>.\nThis material has a BH curve and a core loss model,\nwhich is set to electrical steel.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mat_lam</span> <span class=\"o\">=</span> <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">add_material</span><span class=\"p\">(</span><span class=\"s2\">&quot;30DH_20C_smooth&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mat_lam</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"n\">mat_lam</span><span class=\"o\">.</span><span class=\"n\">conductivity</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1694915.25424&quot;</span>\n<span class=\"n\">kh</span> <span class=\"o\">=</span> <span class=\"mf\">71.7180985413</span>\n<span class=\"n\">kc</span> <span class=\"o\">=</span> <span class=\"mf\">0.25092214579</span>\n<span class=\"n\">ke</span> <span class=\"o\">=</span> <span class=\"mf\">12.1625774023</span>\n<span class=\"n\">kdc</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>\n<span class=\"n\">eq_depth</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>\n<span class=\"n\">mat_lam</span><span class=\"o\">.</span><span class=\"n\">set_electrical_steel_coreloss</span><span class=\"p\">(</span><span class=\"n\">kh</span><span class=\"p\">,</span> <span class=\"n\">kc</span><span class=\"p\">,</span> <span class=\"n\">ke</span><span class=\"p\">,</span> <span class=\"n\">kdc</span><span class=\"p\">,</span> <span class=\"n\">eq_depth</span><span class=\"p\">)</span>\n<span class=\"n\">mat_lam</span><span class=\"o\">.</span><span class=\"n\">mass_density</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;7650&quot;</span>\n<span class=\"n\">BH_List_lam</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename_lam</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"se\">\\t</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n    <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n        <span class=\"n\">BH_List_lam</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])])</span>\n<span class=\"n\">mat_lam</span><span class=\"o\">.</span><span class=\"n\">permeability</span><span class=\"o\">.</span><span class=\"n\">set_non_linear</span><span class=\"p\">(</span><span class=\"n\">BH_List_lam</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-geometry-for-stator\">\n<h2>Create geometry for stator<a class=\"headerlink\" href=\"#create-geometry-for-stator\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the geometry for the stator. It is created via\nthe RMxprt user-defined primitive. A list of lists is\ncreated with the proper UDP paramters.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">udp_par_list_stator</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"s2\">&quot;DiaGap&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DiaGap&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;DiaYoke&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DiaStatorYoke&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Stator_Lam_Length&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;Skew&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;StatorSkewAngle&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Slots&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SlotNumber&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;SlotType&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SlotType&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;Hs0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1.2mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Hs01&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Hs1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.4834227384999mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;Hs2&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;17.287669825502mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;Bs0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2.814mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Bs1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;4.71154109036mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Bs2&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;6.9777285790998mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Rs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;FilletType&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HalfSlot&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;VentHoles&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HoleDiaIn&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;HoleDiaOut&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;HoleLocIn&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HoleLocOut&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;VentDucts&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;DuctWidth&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;DuctPitch&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">],</span>\n                       <span class=\"p\">[</span><span class=\"s2\">&quot;SegAngle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;LenRegion&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model_Length&quot;</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;InfoCore&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">]]</span>\n\n<span class=\"n\">stator_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_udp</span><span class=\"p\">(</span><span class=\"n\">udp_dll_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;RMxprt/VentSlotCore.dll&quot;</span><span class=\"p\">,</span>\n                             <span class=\"n\">udp_parameters_list</span><span class=\"o\">=</span><span class=\"n\">udp_par_list_stator</span><span class=\"p\">,</span> <span class=\"n\">upd_library</span><span class=\"o\">=</span><span class=\"s1\">&#39;syslib&#39;</span><span class=\"p\">,</span>\n                             <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;my_stator&#39;</span><span class=\"p\">)</span>  <span class=\"c1\"># name not taken</span>\n</pre></div>\n</div>\n</section>\n<section id=\"assign-properties-to-stator\">\n<h2>Assign properties to stator<a class=\"headerlink\" href=\"#assign-properties-to-stator\" title=\"Permalink to this heading\">#</a></h2>\n<p>Assign properties to the stator. The following code assigns\nthe material, name, color, and  <code class=\"docutils literal notranslate\"><span class=\"pre\">solve_inside</span></code> properties.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_material</span><span class=\"p\">(</span><span class=\"n\">stator_id</span><span class=\"p\">,</span> <span class=\"s2\">&quot;30DH_20C_smooth&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">stator_id</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Stator&quot;</span>\n<span class=\"n\">stator_id</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>  <span class=\"c1\"># rgb</span>\n<span class=\"n\">stator_id</span><span class=\"o\">.</span><span class=\"n\">solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># to be reassigned: M2D.assign material puts False if not dielectric</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-geometry-for-pms\">\n<h2>Create geometry for PMs<a class=\"headerlink\" href=\"#create-geometry-for-pms\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the geometry for the PMs (permanent magnets). In Maxwell 2D, you assign\nmagnetization via the coordinate system. Because each PM needs to have a coordinate\nsystem in the face center, auxiliary functions are created. Here, you use the auxiliary\nfunction <code class=\"docutils literal notranslate\"><span class=\"pre\">find_elements(lst1,</span> <span class=\"pre\">lst2)</span></code> to find the elements in list <code class=\"docutils literal notranslate\"><span class=\"pre\">lst1</span></code> with indexes\nin list <code class=\"docutils literal notranslate\"><span class=\"pre\">lst2</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">find_elements</span><span class=\"p\">(</span><span class=\"n\">lst1</span><span class=\"p\">,</span> <span class=\"n\">lst2</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">lst1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">lst2</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"find-largest-elements-in-list\">\n<h2>Find largest elements in list<a class=\"headerlink\" href=\"#find-largest-elements-in-list\" title=\"Permalink to this heading\">#</a></h2>\n<p>Use the auxiliary function <code class=\"docutils literal notranslate\"><span class=\"pre\">find_n_largest</span> <span class=\"pre\">(input_len_list,</span> <span class=\"pre\">n_largest_edges)</span></code>\nto find the <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> largest elements in the list <code class=\"docutils literal notranslate\"><span class=\"pre\">input_len_list</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">find_n_largest</span><span class=\"p\">(</span><span class=\"n\">input_len_list</span><span class=\"p\">,</span> <span class=\"n\">n_largest_edges</span><span class=\"p\">):</span>\n    <span class=\"n\">tmp</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">input_len_list</span><span class=\"p\">)</span>\n    <span class=\"n\">copied</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">input_len_list</span><span class=\"p\">)</span>\n    <span class=\"n\">copied</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>  <span class=\"c1\"># sort list so that largest elements are on the far right</span>\n    <span class=\"n\">index_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n_largest_edges</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">):</span>  <span class=\"c1\"># get index of the nth largest element</span>\n        <span class=\"n\">index_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">copied</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"p\">]))</span>\n        <span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"n\">tmp</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">copied</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">n</span><span class=\"p\">])]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>  <span class=\"c1\"># index can only get the first occurrence that solves the problem</span>\n    <span class=\"k\">return</span> <span class=\"n\">index_list</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-coordinate-system-for-pms\">\n<h2>Create coordinate system for PMs<a class=\"headerlink\" href=\"#create-coordinate-system-for-pms\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the coordinate system for the PMs. The inputs are the object name, coordinate\nsystem name, and inner or outer magnetization. Find the two longest edges of the magnets\nand get the midpoint of the outer edge. You must have this point to create the face\ncoordinate systems in case of outer magnetization.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">create_cs_magnets</span><span class=\"p\">(</span><span class=\"n\">pm_id</span><span class=\"p\">,</span> <span class=\"n\">cs_name</span><span class=\"p\">,</span> <span class=\"n\">point_direction</span><span class=\"p\">):</span>\n    <span class=\"n\">pm_face_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_object_faces</span><span class=\"p\">(</span><span class=\"n\">pm_id</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>  <span class=\"c1\"># works with name only</span>\n    <span class=\"n\">pm_edges</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_object_edges</span><span class=\"p\">(</span><span class=\"n\">pm_id</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>  <span class=\"c1\"># gets the edges of the PM object</span>\n    <span class=\"n\">edge_len_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span>\n        <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_edge_length</span><span class=\"p\">,</span> <span class=\"n\">pm_edges</span><span class=\"p\">))</span>  <span class=\"c1\"># apply method get_edge_length to all elements of list pm_edges</span>\n    <span class=\"n\">index_2_longest</span> <span class=\"o\">=</span> <span class=\"n\">find_n_largest</span><span class=\"p\">(</span><span class=\"n\">edge_len_list</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># find the 2 longest edges of the PM</span>\n    <span class=\"n\">longest_edge_list</span> <span class=\"o\">=</span> <span class=\"n\">find_elements</span><span class=\"p\">(</span><span class=\"n\">pm_edges</span><span class=\"p\">,</span> <span class=\"n\">index_2_longest</span><span class=\"p\">)</span>\n    <span class=\"n\">edge_center_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_edge_midpoint</span><span class=\"p\">,</span>\n                                <span class=\"n\">longest_edge_list</span><span class=\"p\">))</span>  <span class=\"c1\"># apply method get_edge_midpoint to all elements of list longest_edge_list</span>\n\n    <span class=\"n\">rad</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">mysqrt</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"n\">index_largest_r</span> <span class=\"o\">=</span> <span class=\"n\">find_n_largest</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">rad</span><span class=\"p\">,</span> <span class=\"n\">edge_center_list</span><span class=\"p\">)),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">longest_edge_list2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">longest_edge_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">index_largest_r</span><span class=\"p\">]</span>  <span class=\"c1\"># reorder: outer first element of the list</span>\n    <span class=\"k\">if</span> <span class=\"n\">point_direction</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;outer&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">my_axis_pos</span> <span class=\"o\">=</span> <span class=\"n\">longest_edge_list2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">elif</span> <span class=\"n\">point_direction</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;inner&#39;</span><span class=\"p\">:</span>\n        <span class=\"n\">my_axis_pos</span> <span class=\"o\">=</span> <span class=\"n\">longest_edge_list2</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_face_coordinate_system</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">=</span><span class=\"n\">pm_face_id</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"n\">pm_face_id</span><span class=\"p\">,</span> <span class=\"n\">axis_position</span><span class=\"o\">=</span><span class=\"n\">my_axis_pos</span><span class=\"p\">,</span>\n                                        <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">cs_name</span><span class=\"p\">)</span>\n    <span class=\"n\">pm_id</span><span class=\"o\">.</span><span class=\"n\">part_coordinate_system</span> <span class=\"o\">=</span> <span class=\"n\">cs_name</span>\n    <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"s1\">&#39;Global&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-outer-and-inner-pms\">\n<h2>Create outer and inner PMs<a class=\"headerlink\" href=\"#create-outer-and-inner-pms\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the outter and inner PMs and assign color to them.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">IM1_points</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mf\">56.70957112</span><span class=\"p\">,</span> <span class=\"mf\">3.104886585</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">40.25081875</span><span class=\"p\">,</span> <span class=\"mf\">16.67243502</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">38.59701538</span><span class=\"p\">,</span> <span class=\"mf\">14.66621111</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n              <span class=\"p\">[</span><span class=\"mf\">55.05576774</span><span class=\"p\">,</span> <span class=\"mf\">1.098662669</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"n\">OM1_points</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mf\">54.37758185</span><span class=\"p\">,</span> <span class=\"mf\">22.52393189</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">59.69688156</span><span class=\"p\">,</span> <span class=\"mf\">9.68200639</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">63.26490432</span><span class=\"p\">,</span> <span class=\"mf\">11.15992981</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n              <span class=\"p\">[</span><span class=\"mf\">57.94560461</span><span class=\"p\">,</span> <span class=\"mf\">24.00185531</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"n\">IPM1_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">IM1_points</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;PM_I1&quot;</span><span class=\"p\">,</span>\n                                <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Arnold_Magnetics_N30UH_80C_new&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">IPM1_id</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n<span class=\"n\">OPM1_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">OM1_points</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;PM_O1&quot;</span><span class=\"p\">,</span>\n                                <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Arnold_Magnetics_N30UH_80C_new&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">OPM1_id</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-coordinate-system-for-pms-in-face-center\">\n<h2>Create coordinate system for PMs in face center<a class=\"headerlink\" href=\"#create-coordinate-system-for-pms-in-face-center\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the coordinate system for PMs in the face center.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">create_cs_magnets</span><span class=\"p\">(</span><span class=\"n\">IPM1_id</span><span class=\"p\">,</span> <span class=\"s1\">&#39;CS_&#39;</span> <span class=\"o\">+</span> <span class=\"n\">IPM1_id</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s1\">&#39;outer&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">create_cs_magnets</span><span class=\"p\">(</span><span class=\"n\">OPM1_id</span><span class=\"p\">,</span> <span class=\"s1\">&#39;CS_&#39;</span> <span class=\"o\">+</span> <span class=\"n\">OPM1_id</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s1\">&#39;outer&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"duplicate-and-mirror-pms\">\n<h2>Duplicate and mirror PMs<a class=\"headerlink\" href=\"#duplicate-and-mirror-pms\" title=\"Permalink to this heading\">#</a></h2>\n<p>Duplicate and mirror the PMs along with the local coordinate system.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">duplicate_and_mirror</span><span class=\"p\">([</span><span class=\"n\">IPM1_id</span><span class=\"p\">,</span> <span class=\"n\">OPM1_id</span><span class=\"p\">],</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                           <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;cos((360deg/SymmetryFactor/2)+90deg)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sin((360deg/SymmetryFactor/2)+90deg)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">id_PMs</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_objects_w_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;PM&quot;</span><span class=\"p\">,</span> <span class=\"n\">case_sensitive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-coils\">\n<h2>Create coils<a class=\"headerlink\" href=\"#create-coils\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the coils.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">coil_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_rectangle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;DiaRotorLam/2+Airgap+Coil_SetBack&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-Coil_Edge_Short/2&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                 <span class=\"n\">dimension_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;Coil_Edge_Long&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Coil_Edge_Short&#39;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                 <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Coil&#39;</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Copper (Annealed)_65C&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">coil_id</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">objid</span><span class=\"o\">=</span><span class=\"n\">coil_id</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"o\">=</span><span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"s2\">&quot;360deg/SlotNumber/2&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">coil_id</span><span class=\"o\">.</span><span class=\"n\">duplicate_around_axis</span><span class=\"p\">(</span><span class=\"n\">cs_axis</span><span class=\"o\">=</span><span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"s2\">&quot;360deg/SlotNumber&quot;</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"s1\">&#39;CoilPitch+1&#39;</span><span class=\"p\">,</span>\n                              <span class=\"n\">create_new_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">id_coils</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_objects_w_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;Coil&quot;</span><span class=\"p\">,</span> <span class=\"n\">case_sensitive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-shaft-and-region\">\n<h2>Create shaft and region<a class=\"headerlink\" href=\"#create-shaft-and-region\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the shaft and region.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">region_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;DiaOuter/2&#39;</span><span class=\"p\">,</span>\n                                <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"s1\">&#39;SegAngle&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Region&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">shaft_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;DiaShaft/2&#39;</span><span class=\"p\">,</span>\n                               <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"s1\">&#39;SegAngle&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Shaft&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-bands\">\n<h2>Create bands<a class=\"headerlink\" href=\"#create-bands\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the inner band, band, and outer band.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">bandIN_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;(DiaGap - (1.5 * Airgap))/2&#39;</span><span class=\"p\">,</span>\n                                <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"s1\">&#39;mapping_angle&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Inner_Band&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">bandMID_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;(DiaGap - (1.0 * Airgap))/2&#39;</span><span class=\"p\">,</span>\n                                 <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"s1\">&#39;mapping_angle&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Band&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">bandOUT_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;(DiaGap - (0.5 * Airgap))/2&#39;</span><span class=\"p\">,</span>\n                                 <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"s1\">&#39;mapping_angle&#39;</span><span class=\"p\">,</span> <span class=\"n\">is_covered</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Outer_Band&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"assign-motion-setup-to-object\">\n<h2>Assign motion setup to object<a class=\"headerlink\" href=\"#assign-motion-setup-to-object\" title=\"Permalink to this heading\">#</a></h2>\n<p>Assign a motion setup to a <code class=\"docutils literal notranslate\"><span class=\"pre\">Band</span></code> object named <code class=\"docutils literal notranslate\"><span class=\"pre\">RotatingBand_mid</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_rotate_motion</span><span class=\"p\">(</span><span class=\"s1\">&#39;Band&#39;</span><span class=\"p\">,</span> <span class=\"n\">coordinate_system</span><span class=\"o\">=</span><span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">,</span> <span class=\"n\">positive_movement</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                         <span class=\"n\">start_position</span><span class=\"o\">=</span><span class=\"s2\">&quot;InitialPositionMD&quot;</span><span class=\"p\">,</span> <span class=\"n\">angular_velocity</span><span class=\"o\">=</span><span class=\"s2\">&quot;MachineRPM&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x000001EF85FDC430&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-list-of-vacuum-objects\">\n<h2>Create list of vacuum objects<a class=\"headerlink\" href=\"#create-list-of-vacuum-objects\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a list of vaccum objects and assign color.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">vacuum_obj_id</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">shaft_id</span><span class=\"p\">,</span> <span class=\"n\">region_id</span><span class=\"p\">,</span> <span class=\"n\">bandIN_id</span><span class=\"p\">,</span> <span class=\"n\">bandMID_id</span><span class=\"p\">,</span> <span class=\"n\">bandOUT_id</span><span class=\"p\">]</span>  <span class=\"c1\"># put shaft first</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">vacuum_obj_id</span><span class=\"p\">:</span>\n    <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-rotor\">\n<h2>Create rotor<a class=\"headerlink\" href=\"#create-rotor\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the rotor. Holes are specific to the lamination.\nAllocated PMs are created.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">rotor_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;DiaRotorLam/2&#39;</span><span class=\"p\">,</span>\n                               <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rotor&quot;</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;30DH_20C_smooth&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">rotor_id</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">rotor_id</span><span class=\"p\">,</span> <span class=\"n\">shaft_id</span><span class=\"p\">,</span> <span class=\"n\">keep_originals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">void_small_1_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">62</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.55mm&quot;</span><span class=\"p\">,</span>\n                                      <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;void1&quot;</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;vacuum&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_around_axis</span><span class=\"p\">(</span><span class=\"n\">void_small_1_id</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"o\">=</span><span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"s2\">&quot;360deg/SymmetryFactor&quot;</span><span class=\"p\">,</span>\n                                  <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">create_new_objects</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">void_big_1_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_circle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">29.5643</span><span class=\"p\">,</span> <span class=\"mf\">12.234389332712</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s1\">&#39;9.88mm/2&#39;</span><span class=\"p\">,</span>\n                                    <span class=\"n\">num_sides</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;void_big&quot;</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;vacuum&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">rotor_id</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">void_small_1_id</span><span class=\"p\">,</span> <span class=\"n\">void_big_1_id</span><span class=\"p\">],</span> <span class=\"n\">keep_originals</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">slot_IM1_points</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mf\">37.5302872</span><span class=\"p\">,</span> <span class=\"mf\">15.54555396</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">55.05576774</span><span class=\"p\">,</span> <span class=\"mf\">1.098662669</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">57.33637589</span><span class=\"p\">,</span> <span class=\"mf\">1.25</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">57.28982158</span><span class=\"p\">,</span> <span class=\"mf\">2.626565019</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">40.25081875</span><span class=\"p\">,</span> <span class=\"mf\">16.67243502</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"n\">slot_OM1_points</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mf\">54.37758185</span><span class=\"p\">,</span> <span class=\"mf\">22.52393189</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">59.69688156</span><span class=\"p\">,</span> <span class=\"mf\">9.68200639</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">63.53825619</span><span class=\"p\">,</span> <span class=\"mf\">10.5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                   <span class=\"p\">[</span><span class=\"mf\">57.94560461</span><span class=\"p\">,</span> <span class=\"mf\">24.00185531</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n<span class=\"n\">slot_IM_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">slot_IM1_points</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;slot_IM1&quot;</span><span class=\"p\">,</span>\n                                   <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;vacuum&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">slot_OM_id</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">slot_OM1_points</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;slot_OM1&quot;</span><span class=\"p\">,</span>\n                                   <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;vacuum&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_and_mirror</span><span class=\"p\">([</span><span class=\"n\">slot_IM_id</span><span class=\"p\">,</span> <span class=\"n\">slot_OM_id</span><span class=\"p\">],</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                                 <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;cos((360deg/SymmetryFactor/2)+90deg)&quot;</span><span class=\"p\">,</span>\n                                         <span class=\"s2\">&quot;sin((360deg/SymmetryFactor/2)+90deg)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"n\">id_holes</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_objects_w_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;slot_&quot;</span><span class=\"p\">,</span> <span class=\"n\">case_sensitive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"n\">rotor_id</span><span class=\"p\">,</span> <span class=\"n\">id_holes</span><span class=\"p\">,</span> <span class=\"n\">keep_originals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-section-of-machine\">\n<h2>Create section of machine<a class=\"headerlink\" href=\"#create-section-of-machine\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a section of the machine. This allows you to take\nadvantage of symmetries.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">object_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">stator_id</span><span class=\"p\">,</span> <span class=\"n\">rotor_id</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">vacuum_obj_id</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span><span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                               <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">,</span>\n                               <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Section&quot;</span><span class=\"p\">,</span>\n                               <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;axis&quot;</span><span class=\"p\">,</span>\n                               <span class=\"n\">x_pointing</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;cos(360deg/SymmetryFactor)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sin(360deg/SymmetryFactor)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                               <span class=\"n\">y_pointing</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;-sin(360deg/SymmetryFactor)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cos(360deg/SymmetryFactor)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"s2\">&quot;Section&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ZX&quot;</span><span class=\"p\">,</span> <span class=\"n\">sides</span><span class=\"o\">=</span><span class=\"s2\">&quot;NegativeOnly&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ZX&quot;</span><span class=\"p\">,</span> <span class=\"n\">sides</span><span class=\"o\">=</span><span class=\"s2\">&quot;PositiveOnly&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;Stator,Rotor,Shaft,Region,Inner_Band,Band,Outer_Band&#39;]\n</pre></div>\n</div>\n</section>\n<section id=\"create-boundary-conditions\">\n<h2>Create boundary conditions<a class=\"headerlink\" href=\"#create-boundary-conditions\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create independent and dependent boundary conditions.\nEdges for assignment are picked by position.\nThe points for edge picking are in the airgap.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pos_1</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;((DiaGap - (1.0 * Airgap))/4)&quot;</span>\n<span class=\"n\">id_bc_1</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_edgeid_from_position</span><span class=\"p\">([</span><span class=\"n\">pos_1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">obj_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Region&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">id_bc_2</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_edgeid_from_position</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span><span class=\"n\">pos_1</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*cos((360deg/SymmetryFactor))&quot;</span><span class=\"p\">,</span> <span class=\"n\">pos_1</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*sin((360deg/SymmetryFactor))&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n    <span class=\"n\">obj_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Region&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_master_slave</span><span class=\"p\">(</span><span class=\"n\">master_edge</span><span class=\"o\">=</span><span class=\"n\">id_bc_1</span><span class=\"p\">,</span> <span class=\"n\">slave_edge</span><span class=\"o\">=</span><span class=\"n\">id_bc_2</span><span class=\"p\">,</span>\n                        <span class=\"n\">reverse_master</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"n\">reverse_slave</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">same_as_master</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"n\">bound_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Matching&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>(&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x000001EF85FE83D0&gt;, &lt;pyaedt.modules.Boundary.BoundaryObject object at 0x000001EF85FD3940&gt;)\n</pre></div>\n</div>\n</section>\n<section id=\"assign-vector-potential\">\n<h2>Assign vector potential<a class=\"headerlink\" href=\"#assign-vector-potential\" title=\"Permalink to this heading\">#</a></h2>\n<p>Assign a vector potential of <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> to the second position.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pos_2</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(DiaOuter/2)&quot;</span>\n<span class=\"n\">id_bc_az</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_edgeid_from_position</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span><span class=\"n\">pos_2</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*cos((360deg/SymmetryFactor/2))&quot;</span><span class=\"p\">,</span> <span class=\"n\">pos_2</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*sin((360deg/SymmetryFactor)/2)&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n    <span class=\"n\">obj_name</span><span class=\"o\">=</span><span class=\"s1\">&#39;Region&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_vector_potential</span><span class=\"p\">(</span><span class=\"n\">id_bc_az</span><span class=\"p\">,</span> <span class=\"n\">vectorvalue</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">bound_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;VectorPotentialZero&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x000001EF85FDC640&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-excitations\">\n<h2>Create excitations<a class=\"headerlink\" href=\"#create-excitations\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create excitations, defining phase currents for the windings.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">PhA_current</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;IPeak * cos(2*pi*ElectricFrequency*time+Theta_i)&quot;</span>\n<span class=\"n\">PhB_current</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;IPeak * cos(2*pi * ElectricFrequency*time - 120deg+Theta_i)&quot;</span>\n<span class=\"n\">PhC_current</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;IPeak * cos(2*pi * ElectricFrequency*time - 240deg+Theta_i)&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"define-windings-in-phase-a\">\n<h2>Define windings in phase A<a class=\"headerlink\" href=\"#define-windings-in-phase-a\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define windings in phase A.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_coil</span><span class=\"p\">([</span><span class=\"s2\">&quot;Coil&quot;</span><span class=\"p\">],</span> <span class=\"n\">conductor_number</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">polarity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Positive&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CT_Ph1_P2_C1_Go&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_coil</span><span class=\"p\">([</span><span class=\"s2\">&quot;Coil_5&quot;</span><span class=\"p\">],</span> <span class=\"n\">conductor_number</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">polarity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Negative&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CT_Ph1_P2_C1_Ret&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_winding</span><span class=\"p\">(</span><span class=\"n\">coil_terminals</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">winding_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Current&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_solid</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                   <span class=\"n\">current_value</span><span class=\"o\">=</span><span class=\"n\">PhA_current</span><span class=\"p\">,</span> <span class=\"n\">parallel_branches</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Phase_A&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">add_winding_coils</span><span class=\"p\">(</span><span class=\"s2\">&quot;Phase_A&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;CT_Ph1_P2_C1_Go&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CT_Ph1_P2_C1_Ret&quot;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"define-windings-in-phase-b\">\n<h2>Define windings in phase B<a class=\"headerlink\" href=\"#define-windings-in-phase-b\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define windings in phase B.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_coil</span><span class=\"p\">(</span><span class=\"s2\">&quot;Coil_3&quot;</span><span class=\"p\">,</span> <span class=\"n\">conductor_number</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">polarity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Positive&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CT_Ph3_P1_C2_Go&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_coil</span><span class=\"p\">(</span><span class=\"s2\">&quot;Coil_4&quot;</span><span class=\"p\">,</span> <span class=\"n\">conductor_number</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">polarity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Positive&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CT_Ph3_P1_C1_Go&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_winding</span><span class=\"p\">(</span><span class=\"n\">coil_terminals</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">winding_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Current&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_solid</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                   <span class=\"n\">current_value</span><span class=\"o\">=</span><span class=\"n\">PhB_current</span><span class=\"p\">,</span> <span class=\"n\">parallel_branches</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                   <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Phase_B&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">add_winding_coils</span><span class=\"p\">(</span><span class=\"s2\">&quot;Phase_B&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;CT_Ph3_P1_C2_Go&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CT_Ph3_P1_C1_Go&quot;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"define-windings-in-phase-c\">\n<h2>Define windings in phase C<a class=\"headerlink\" href=\"#define-windings-in-phase-c\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define windings in phase C.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_coil</span><span class=\"p\">(</span><span class=\"s2\">&quot;Coil_1&quot;</span><span class=\"p\">,</span> <span class=\"n\">conductor_number</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">polarity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Negative&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CT_Ph2_P2_C2_Ret&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_coil</span><span class=\"p\">(</span><span class=\"s2\">&quot;Coil_2&quot;</span><span class=\"p\">,</span> <span class=\"n\">conductor_number</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">polarity</span><span class=\"o\">=</span><span class=\"s2\">&quot;Negative&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;CT_Ph2_P2_C1_Ret&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_winding</span><span class=\"p\">(</span><span class=\"n\">coil_terminals</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">winding_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Current&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_solid</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                   <span class=\"n\">current_value</span><span class=\"o\">=</span><span class=\"n\">PhC_current</span><span class=\"p\">,</span> <span class=\"n\">parallel_branches</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                   <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Phase_C&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">add_winding_coils</span><span class=\"p\">(</span><span class=\"s2\">&quot;Phase_C&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;CT_Ph2_P2_C2_Ret&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CT_Ph2_P2_C1_Ret&quot;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"assign-total-current-on-pms\">\n<h2>Assign total current on PMs<a class=\"headerlink\" href=\"#assign-total-current-on-pms\" title=\"Permalink to this heading\">#</a></h2>\n<p>Assign a total current of <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> on the PMs.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">PM_list</span> <span class=\"o\">=</span> <span class=\"n\">id_PMs</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">PM_list</span><span class=\"p\">:</span>\n    <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">assign_current</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"n\">amplitude</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">solid</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">item</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_I0&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-mesh-operations\">\n<h2>Create mesh operations<a class=\"headerlink\" href=\"#create-mesh-operations\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the mesh operations.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">assign_length_mesh</span><span class=\"p\">(</span><span class=\"n\">id_coils</span><span class=\"p\">,</span> <span class=\"n\">isinside</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">maxlength</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">maxel</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;coils&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">assign_length_mesh</span><span class=\"p\">(</span><span class=\"n\">stator_id</span><span class=\"p\">,</span> <span class=\"n\">isinside</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">maxlength</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">maxel</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;stator&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">assign_length_mesh</span><span class=\"p\">(</span><span class=\"n\">rotor_id</span><span class=\"p\">,</span> <span class=\"n\">isinside</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">maxlength</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">maxel</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">meshop_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;rotor&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Mesh.MeshOperation object at 0x000001EF85FE8700&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"turn-on-eddy-effects\">\n<h2>Turn on eddy effects<a class=\"headerlink\" href=\"#turn-on-eddy-effects\" title=\"Permalink to this heading\">#</a></h2>\n<p>Turn on eddy effects.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># M2D.eddy_effects_on(eddy_effects_list,activate_eddy_effects=True, activate_displacement_current=False)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"turn-on-core-loss\">\n<h2>Turn on core loss<a class=\"headerlink\" href=\"#turn-on-core-loss\" title=\"Permalink to this heading\">#</a></h2>\n<p>Turn on core loss.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">core_loss_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;Rotor&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Stator&#39;</span><span class=\"p\">]</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">set_core_losses</span><span class=\"p\">(</span><span class=\"n\">core_loss_list</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"compute-transient-inductance\">\n<h2>Compute transient inductance<a class=\"headerlink\" href=\"#compute-transient-inductance\" title=\"Permalink to this heading\">#</a></h2>\n<p>Compute the transient inducatance.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">change_inductance_computation</span><span class=\"p\">(</span><span class=\"n\">compute_transient_inductance</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">incremental_matrix</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"set-model-depth\">\n<h2>Set model depth<a class=\"headerlink\" href=\"#set-model-depth\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set the model depth.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">model_depth</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Magnetic_Axial_Length&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"set-symmetry-factor\">\n<h2>Set symmetry factor<a class=\"headerlink\" href=\"#set-symmetry-factor\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set the symmetry factor.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">change_symmetry_multiplier</span><span class=\"p\">(</span><span class=\"s2\">&quot;SymmetryFactor&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-setup-and-validate\">\n<h2>Create setup and validate<a class=\"headerlink\" href=\"#create-setup-and-validate\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the setup and validate it.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">create_setup</span><span class=\"p\">(</span><span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"n\">sName</span><span class=\"p\">)</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;StopTime&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;StopTime&quot;</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;TimeStep&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;TimeStep&quot;</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SaveFieldsType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;None&quot;</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;OutputPerObjectCoreLoss&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;OutputPerObjectSolidLoss&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;OutputError&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">validate_simple</span><span class=\"p\">()</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Image.jpg&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_Maxwell2D_NissanLeaf_001.png\" srcset=\"../../_images/sphx_glr_Maxwell2D_NissanLeaf_001.png\" alt=\"Maxwell2D NissanLeaf\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-definitions-for-output-variables\">\n<h2>Initialize definitions for output variables<a class=\"headerlink\" href=\"#initialize-definitions-for-output-variables\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize the definitions for the needed output variables. You use these\noutput variables later to generate reports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">output_vars</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Current_A&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;InputCurrent(Phase_A)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Current_B&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;InputCurrent(Phase_B)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Current_C&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;InputCurrent(Phase_C)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Flux_A&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FluxLinkage(Phase_A)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Flux_B&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FluxLinkage(Phase_B)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Flux_C&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FluxLinkage(Phase_C)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;pos&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;(Moving1.Position -InitialPositionMD) *NumPoles/2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;cos0&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cos(pos)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;cos1&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cos(pos-2*PI/3)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;cos2&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cos(pos-4*PI/3)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;sin0&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sin(pos)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;sin1&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sin(pos-2*PI/3)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;sin2&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sin(pos-4*PI/3)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Flux_d&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2/3*(Flux_A*cos0+Flux_B*cos1+Flux_C*cos2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Flux_q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;-2/3*(Flux_A*sin0+Flux_B*sin1+Flux_C*sin2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;I_d&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2/3*(Current_A*cos0 + Current_B*cos1 + Current_C*cos2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;I_q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;-2/3*(Current_A*sin0 + Current_B*sin1 + Current_C*sin2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Irms&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sqrt(I_d^2+I_q^2)/sqrt(2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;ArmatureOhmicLoss_DC&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Irms^2*R_phase&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Lad&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;L(Phase_A,Phase_A)*cos0 + L(Phase_A,Phase_B)*cos1 + L(Phase_A,Phase_C)*cos2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Laq&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;L(Phase_A,Phase_A)*sin0 + L(Phase_A,Phase_B)*sin1 + L(Phase_A,Phase_C)*sin2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Lbd&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;L(Phase_B,Phase_A)*cos0 + L(Phase_B,Phase_B)*cos1 + L(Phase_B,Phase_C)*cos2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Lbq&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;L(Phase_B,Phase_A)*sin0 + L(Phase_B,Phase_B)*sin1 + L(Phase_B,Phase_C)*sin2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Lcd&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;L(Phase_C,Phase_A)*cos0 + L(Phase_C,Phase_B)*cos1 + L(Phase_C,Phase_C)*cos2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Lcq&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;L(Phase_C,Phase_A)*sin0 + L(Phase_C,Phase_B)*sin1 + L(Phase_C,Phase_C)*sin2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;L_d&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;(Lad*cos0 + Lbd*cos1 + Lcd*cos2) * 2/3&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;L_q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;(Laq*sin0 + Lbq*sin1 + Lcq*sin2) * 2/3&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;OutputPower&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Moving1.Speed*Moving1.Torque&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Ui_A&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;InducedVoltage(Phase_A)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Ui_B&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;InducedVoltage(Phase_B)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Ui_C&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;InducedVoltage(Phase_C)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Ui_d&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2/3*(Ui_A*cos0 + Ui_B*cos1 + Ui_C*cos2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Ui_q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;-2/3*(Ui_A*sin0 + Ui_B*sin1 + Ui_C*sin2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;U_A&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Ui_A+R_Phase*Current_A&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;U_B&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Ui_B+R_Phase*Current_B&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;U_C&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Ui_C+R_Phase*Current_C&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;U_d&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2/3*(U_A*cos0 + U_B*cos1 + U_C*cos2)&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;U_q&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;-2/3*(U_A*sin0 + U_B*sin1 + U_C*sin2)&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-output-variables-for-postprocessing\">\n<h2>Create output variables for postprocessing<a class=\"headerlink\" href=\"#create-output-variables-for-postprocessing\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create output variables for postprocessing.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">output_vars</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">create_output_variable</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-definition-for-postprocessing-plots\">\n<h2>Initialize definition for postprocessing plots<a class=\"headerlink\" href=\"#initialize-definition-for-postprocessing-plots\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize the definition for postprocessing plots.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">post_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Moving1.Torque&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;TorquePlots&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"initialize-definition-for-postprocessing-multiplots\">\n<h2>Initialize definition for postprocessing multiplots<a class=\"headerlink\" href=\"#initialize-definition-for-postprocessing-multiplots\" title=\"Permalink to this heading\">#</a></h2>\n<p>Initialize the definition for postprocessing multiplots.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">post_params_multiplot</span> <span class=\"o\">=</span> <span class=\"p\">{</span>  <span class=\"c1\"># reports</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;U_A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;U_B&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;U_C&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Ui_A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Ui_B&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Ui_C&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;PhaseVoltages&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;CoreLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SolidLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ArmatureOhmicLoss_DC&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;Losses&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;InputCurrent(Phase_A)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;InputCurrent(Phase_B)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;InputCurrent(Phase_C)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;PhaseCurrents&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;FluxLinkage(Phase_A)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FluxLinkage(Phase_B)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FluxLinkage(Phase_C)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;PhaseFluxes&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;I_d&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;I_q&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;Currents_dq&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;Flux_d&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flux_q&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;Fluxes_dq&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;Ui_d&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Ui_q&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;InducedVoltages_dq&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;U_d&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;U_q&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;Voltages_dq&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;L(Phase_A,Phase_A)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;L(Phase_B,Phase_B)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;L(Phase_C,Phase_C)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;L(Phase_A,Phase_B)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;L(Phase_A,Phase_C)&quot;</span><span class=\"p\">,</span>\n     <span class=\"s2\">&quot;L(Phase_B,Phase_C)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;PhaseInductances&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;L_d&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;L_q&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;Inductances_dq&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;CoreLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CoreLoss(Stator)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CoreLoss(Rotor)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;CoreLosses&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;EddyCurrentLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EddyCurrentLoss(Stator)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EddyCurrentLoss(Rotor)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;EddyCurrentLosses (Core)&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;ExcessLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ExcessLoss(Stator)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ExcessLoss(Rotor)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;ExcessLosses (Core)&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;HysteresisLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HysteresisLoss(Stator)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HysteresisLoss(Rotor)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;HysteresisLosses (Core)&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">&quot;SolidLoss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SolidLoss(IPM1)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SolidLoss(IPM1_1)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SolidLoss(OPM1)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SolidLoss(OPM1_1)&quot;</span><span class=\"p\">):</span> <span class=\"s2\">&quot;SolidLoss&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-report\">\n<h2>Create report<a class=\"headerlink\" href=\"#create-report\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a report.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">post_params</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">create_report</span><span class=\"p\">(</span><span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">setup_sweep_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">,</span> <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">primary_sweep_variable</span><span class=\"o\">=</span><span class=\"s2\">&quot;Time&quot;</span><span class=\"p\">,</span> <span class=\"n\">secondary_sweep_variable</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">report_category</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">plot_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rectangular Plot&quot;</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span> <span class=\"n\">plotname</span><span class=\"o\">=</span><span class=\"n\">v</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-multiplot-report\">\n<h2>Create multiplot report<a class=\"headerlink\" href=\"#create-multiplot-report\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a multiplot report.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">post_params_multiplot</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">create_report</span><span class=\"p\">(</span><span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">),</span> <span class=\"n\">setup_sweep_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">,</span> <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">primary_sweep_variable</span><span class=\"o\">=</span><span class=\"s2\">&quot;Time&quot;</span><span class=\"p\">,</span> <span class=\"n\">secondary_sweep_variable</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">report_category</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">plot_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rectangular Plot&quot;</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                           <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span> <span class=\"n\">plotname</span><span class=\"o\">=</span><span class=\"n\">v</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-flux-lines-plot-on-region\">\n<h2>Create flux lines plot on region<a class=\"headerlink\" href=\"#create-flux-lines-plot-on-region\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a flux lines plot on a region. The <code class=\"docutils literal notranslate\"><span class=\"pre\">object_list</span></code> is\nformerly created when the section is applied.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">faces_reg</span> <span class=\"o\">=</span> <span class=\"n\">mod2D</span><span class=\"o\">.</span><span class=\"n\">get_object_faces</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>  <span class=\"c1\"># Region</span>\n<span class=\"c1\"># Maxwell Transient needs time specified in a dictionary</span>\n<span class=\"c1\"># &quot;IntrinsicVar:=&quot;  , &quot;Time=\\&#39;0\\&#39;&quot;,</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">create_fieldplot_surface</span><span class=\"p\">(</span><span class=\"n\">faces_reg</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Flux_Lines&#39;</span><span class=\"p\">,</span> <span class=\"n\">intrinsincDict</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;Time&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;0.000&quot;</span><span class=\"p\">},</span> <span class=\"n\">plot_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Flux_Lines&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.solutions.FieldPlot object at 0x000001EF860D64C0&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"analyze-and-save-project\">\n<h2>Analyze and save project<a class=\"headerlink\" href=\"#analyze-and-save-project\" title=\"Permalink to this heading\">#</a></h2>\n<p>Analyze and save the project.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">()</span>\n<span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">analyze_setup</span><span class=\"p\">(</span><span class=\"n\">sName</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"close-aedt\">\n<h2>Close AEDT<a class=\"headerlink\" href=\"#close-aedt\" title=\"Permalink to this heading\">#</a></h2>\n<p>Close AEDT.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">M2D</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 2 minutes  28.982 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-03-maxwell-maxwell2d-nissanleaf-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/f19681ed04b8eb18fe205d53191d34a9/Maxwell2D_NissanLeaf.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">Maxwell2D_NissanLeaf.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/4cfab5b2be526475008d189c12aff31b/Maxwell2D_NissanLeaf.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">Maxwell2D_NissanLeaf.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/03-Maxwell/Maxwell2D_Transient", "Maxwell 2D: transient winding analysis", "N", "next"], ["examples/03-Maxwell/index", "Maxwell examples", "P", "previous"]], "sourcename": "examples/03-Maxwell/Maxwell2D_NissanLeaf.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Maxwell 2D: PM synchronous motor transient analysis</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-imports\">Perform required imports</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-maxwell-2d\">Initialize Maxwell 2D</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-dictionaries\">Initialize dictionaries</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definitions-for-stator-rotor-and-shaft\">Initialize definitions for stator, rotor, and shaft</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definitions-for-stator-windings\">Initialize definitions for stator windings</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definitions-for-model-setup\">Initialize definitions for model setup</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definitions-for-operational-machine\">Initialize definitions for operational machine</a></li>\n<li><a class=\"reference internal\" href=\"#set-non-graphical-mode\">Set non-graphical mode</a></li>\n<li><a class=\"reference internal\" href=\"#launch-maxwell-2d\">Launch Maxwell 2D</a></li>\n<li><a class=\"reference internal\" href=\"#create-object-to-access-2d-modeler\">Create object to access 2D modeler</a></li>\n<li><a class=\"reference internal\" href=\"#define-variables-from-dictionaries\">Define variables from dictionaries</a></li>\n<li><a class=\"reference internal\" href=\"#define-path-for-non-linear-material-properties\">Define path for non-linear material properties</a></li>\n<li><a class=\"reference internal\" href=\"#create-first-material\">Create first material</a></li>\n<li><a class=\"reference internal\" href=\"#create-second-material\">Create second material</a></li>\n<li><a class=\"reference internal\" href=\"#create-third-material\">Create third material</a></li>\n<li><a class=\"reference internal\" href=\"#create-geometry-for-stator\">Create geometry for stator</a></li>\n<li><a class=\"reference internal\" href=\"#assign-properties-to-stator\">Assign properties to stator</a></li>\n<li><a class=\"reference internal\" href=\"#create-geometry-for-pms\">Create geometry for PMs</a></li>\n<li><a class=\"reference internal\" href=\"#find-largest-elements-in-list\">Find largest elements in list</a></li>\n<li><a class=\"reference internal\" href=\"#create-coordinate-system-for-pms\">Create coordinate system for PMs</a></li>\n<li><a class=\"reference internal\" href=\"#create-outer-and-inner-pms\">Create outer and inner PMs</a></li>\n<li><a class=\"reference internal\" href=\"#create-coordinate-system-for-pms-in-face-center\">Create coordinate system for PMs in face center</a></li>\n<li><a class=\"reference internal\" href=\"#duplicate-and-mirror-pms\">Duplicate and mirror PMs</a></li>\n<li><a class=\"reference internal\" href=\"#create-coils\">Create coils</a></li>\n<li><a class=\"reference internal\" href=\"#create-shaft-and-region\">Create shaft and region</a></li>\n<li><a class=\"reference internal\" href=\"#create-bands\">Create bands</a></li>\n<li><a class=\"reference internal\" href=\"#assign-motion-setup-to-object\">Assign motion setup to object</a></li>\n<li><a class=\"reference internal\" href=\"#create-list-of-vacuum-objects\">Create list of vacuum objects</a></li>\n<li><a class=\"reference internal\" href=\"#create-rotor\">Create rotor</a></li>\n<li><a class=\"reference internal\" href=\"#create-section-of-machine\">Create section of machine</a></li>\n<li><a class=\"reference internal\" href=\"#create-boundary-conditions\">Create boundary conditions</a></li>\n<li><a class=\"reference internal\" href=\"#assign-vector-potential\">Assign vector potential</a></li>\n<li><a class=\"reference internal\" href=\"#create-excitations\">Create excitations</a></li>\n<li><a class=\"reference internal\" href=\"#define-windings-in-phase-a\">Define windings in phase A</a></li>\n<li><a class=\"reference internal\" href=\"#define-windings-in-phase-b\">Define windings in phase B</a></li>\n<li><a class=\"reference internal\" href=\"#define-windings-in-phase-c\">Define windings in phase C</a></li>\n<li><a class=\"reference internal\" href=\"#assign-total-current-on-pms\">Assign total current on PMs</a></li>\n<li><a class=\"reference internal\" href=\"#create-mesh-operations\">Create mesh operations</a></li>\n<li><a class=\"reference internal\" href=\"#turn-on-eddy-effects\">Turn on eddy effects</a></li>\n<li><a class=\"reference internal\" href=\"#turn-on-core-loss\">Turn on core loss</a></li>\n<li><a class=\"reference internal\" href=\"#compute-transient-inductance\">Compute transient inductance</a></li>\n<li><a class=\"reference internal\" href=\"#set-model-depth\">Set model depth</a></li>\n<li><a class=\"reference internal\" href=\"#set-symmetry-factor\">Set symmetry factor</a></li>\n<li><a class=\"reference internal\" href=\"#create-setup-and-validate\">Create setup and validate</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definitions-for-output-variables\">Initialize definitions for output variables</a></li>\n<li><a class=\"reference internal\" href=\"#create-output-variables-for-postprocessing\">Create output variables for postprocessing</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definition-for-postprocessing-plots\">Initialize definition for postprocessing plots</a></li>\n<li><a class=\"reference internal\" href=\"#initialize-definition-for-postprocessing-multiplots\">Initialize definition for postprocessing multiplots</a></li>\n<li><a class=\"reference internal\" href=\"#create-report\">Create report</a></li>\n<li><a class=\"reference internal\" href=\"#create-multiplot-report\">Create multiplot report</a></li>\n<li><a class=\"reference internal\" href=\"#create-flux-lines-plot-on-region\">Create flux lines plot on region</a></li>\n<li><a class=\"reference internal\" href=\"#analyze-and-save-project\">Analyze and save project</a></li>\n<li><a class=\"reference internal\" href=\"#close-aedt\">Close AEDT</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/03-Maxwell/Maxwell2D_NissanLeaf", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}