{"parents": [{"link": "../../", "title": "API EDB reference"}, {"link": "../../CoreEdb/", "title": "EDB manager"}, {"link": "../pyaedt.edb_core.nets.EdbNets/", "title": "pyaedt.edb_core.nets.EdbNets"}], "prev": {"link": "../pyaedt.edb_core.nets.EdbNets.delete_nets/", "title": "delete_nets"}, "next": {"link": "../pyaedt.edb_core.nets.EdbNets.find_or_create_net/", "title": "find_or_create_net"}, "title": "find_and_fix_disjoint_nets", "meta": {}, "body": "<section id=\"find-and-fix-disjoint-nets\">\n<h1>find_and_fix_disjoint_nets<a class=\"headerlink\" href=\"#find-and-fix-disjoint-nets\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb_core.nets.EdbNets.find_and_fix_disjoint_nets\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">EdbNets.</span></span><span class=\"sig-name descname\"><span class=\"pre\">find_and_fix_disjoint_nets</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">net_list</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">keep_only_main_net</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">clean_disjoints_less_than</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.0</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb_core/nets/#EdbNets.find_and_fix_disjoint_nets\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb_core.nets.EdbNets.find_and_fix_disjoint_nets\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Find and fix disjoint nets from a given netlist.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>net_list</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#list\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>List of nets on which check disjoints. If <cite>None</cite> is provided then the algorithm will loop on all nets.</p>\n</dd>\n<dt><strong>keep_only_main_net</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Remove all secondary nets other than principal one (the one with more objects in it). Default is <cite>False</cite>.</p>\n</dd>\n<dt><strong>clean_disjoints_less_than</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Clean all disjoint nets with area less than specified area in square meters. Default is <cite>0.0</cite> to disable it.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">List</span></code></dt><dd><p>New nets created.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">renamed_nets</span> <span class=\"o\">=</span> <span class=\"n\">edb_core</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">find_and_fix_disjoint_nets</span><span class=\"p\">([</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Net2&quot;</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["EDBAPI/_autosummary/pyaedt.edb_core.nets.EdbNets.find_or_create_net", "find_or_create_net", "N", "next"], ["EDBAPI/_autosummary/pyaedt.edb_core.nets.EdbNets.delete_nets", "delete_nets", "P", "previous"]], "sourcename": "EDBAPI/_autosummary/pyaedt.edb_core.nets.EdbNets.find_and_fix_disjoint_nets.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">find_and_fix_disjoint_nets</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb_core.nets.EdbNets.find_and_fix_disjoint_nets\"><code class=\"docutils literal notranslate\"><span class=\"pre\">find_and_fix_disjoint_nets()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "EDBAPI/_autosummary/pyaedt.edb_core.nets.EdbNets.find_and_fix_disjoint_nets", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}