{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.edb_core.padstack", "body": "<h1>Source code for pyaedt.edb_core.padstack</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains the `EdbPadstacks` class.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.edb_core.edb_data.padstacks_data</span> <span class=\"kn\">import</span> <span class=\"n\">EDBPadstack</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.edb_core.edb_data.padstacks_data</span> <span class=\"kn\">import</span> <span class=\"n\">EDBPadstackInstance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.edb_core.general</span> <span class=\"kn\">import</span> <span class=\"n\">convert_py_list_to_net_list</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">Array</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks/#pyaedt.edb_core.padstack.EdbPadstacks\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EdbPadstacks</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for nets management accessible from `Edb.core_padstack` property.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">    &gt;&gt;&gt; edbapp = Edb(&quot;myaedbfolder&quot;, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb_padstacks = edbapp.core_padstack</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">p_edb</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span> <span class=\"o\">=</span> <span class=\"n\">p_edb</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_builder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">builder</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edb</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_active_layout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">active_layout</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">db</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Db object.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">db</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">stackup_layers</span>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.int_to_pad_type\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.int_to_pad_type/#pyaedt.edb_core.padstack.EdbPadstacks.int_to_pad_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Convert an integer to an EDB.PadGeometryType.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        val : int</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        object</span>\n<span class=\"sd\">            EDB.PadType enumerator value.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">ThermalPad</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">Hole</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">UnknownGeomType</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.int_to_geometry_type\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.int_to_geometry_type/#pyaedt.edb_core.padstack.EdbPadstacks.int_to_geometry_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Convert an integer to an EDB.PadGeometryType.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        val : int</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        object</span>\n<span class=\"sd\">            EDB.PadGeometryType enumerator value.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">NoGeometry</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Square</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Oval</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Bullet</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">NSidedPolygon</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">7</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Polygon</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">8</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Round45</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">9</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Round90</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Square45</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">11</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Square90</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"mi\">12</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">InvalidGeometry</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">padstacks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Padstacks via padstack definitions.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict[str, :class:`pyaedt.edb_core.edb_data.EdbPadstack`]</span>\n<span class=\"sd\">            List of padstacks via padstack definitions.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">_padstacks</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">padstackdef</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">PadstackDefs</span><span class=\"p\">:</span>\n            <span class=\"n\">PadStackData</span> <span class=\"o\">=</span> <span class=\"n\">padstackdef</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">PadStackData</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">())</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">_padstacks</span><span class=\"p\">[</span><span class=\"n\">padstackdef</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">EDBPadstack</span><span class=\"p\">(</span><span class=\"n\">padstackdef</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">_padstacks</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">padstack_instances</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of padstack instances.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict[str, :class:`pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance`]</span>\n<span class=\"sd\">            List of padstack instances.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">padstack_instances</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">edb_padstack_inst_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">PadstackInstances</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">edb_padstack_instance</span> <span class=\"ow\">in</span> <span class=\"n\">edb_padstack_inst_list</span><span class=\"p\">:</span>\n            <span class=\"n\">padstack_instances</span><span class=\"p\">[</span><span class=\"n\">edb_padstack_instance</span><span class=\"o\">.</span><span class=\"n\">GetId</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">EDBPadstackInstance</span><span class=\"p\">(</span><span class=\"n\">edb_padstack_instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">padstack_instances</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pingroups</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All Layout Pin groups.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of all layout pin groups.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">pingroups</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">PinGroups</span><span class=\"p\">:</span>\n            <span class=\"n\">pingroups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">pingroups</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return a PadType Enumerator.&quot;&quot;&quot;</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">PadType</span><span class=\"p\">:</span>\n            <span class=\"p\">(</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span> <span class=\"n\">AntiPad</span><span class=\"p\">,</span> <span class=\"n\">ThermalPad</span><span class=\"p\">,</span> <span class=\"n\">Hole</span><span class=\"p\">,</span> <span class=\"n\">UnknownGeomType</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">ThermalPad</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">Hole</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">UnknownGeomType</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">PadType</span>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.create_circular_padstack\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.create_circular_padstack/#pyaedt.edb_core.padstack.EdbPadstacks.create_circular_padstack\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_circular_padstack</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">padstackname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">holediam</span><span class=\"o\">=</span><span class=\"s2\">&quot;300um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">paddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;400um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">antipaddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;600um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">startlayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">endlayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a circular padstack.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        padstackname : str, optional</span>\n<span class=\"sd\">            Name of the padstack. The default is ``None``.</span>\n<span class=\"sd\">        holediam : str, optional</span>\n<span class=\"sd\">            Diameter of the hole with units. The default is ``&quot;300um&quot;``.</span>\n<span class=\"sd\">        paddiam : str, optional</span>\n<span class=\"sd\">            Diameter of the pad with units. The default is ``&quot;400um&quot;``.</span>\n<span class=\"sd\">        antipaddiam : str, optional</span>\n<span class=\"sd\">            Diameter of the antipad with units. The default is ``&quot;600um&quot;``.</span>\n<span class=\"sd\">        startlayer : str, optional</span>\n<span class=\"sd\">            Starting layer. The default is ``None``, in which case the top</span>\n<span class=\"sd\">            is the starting layer.</span>\n<span class=\"sd\">        endlayer : str, optional</span>\n<span class=\"sd\">            Ending layer. The default is ``None``, in which case the bottom</span>\n<span class=\"sd\">            is the ending layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the padstack if the operation is successful.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">PadStack</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDef</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetCell</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetDatabase</span><span class=\"p\">(),</span> <span class=\"n\">padstackname</span><span class=\"p\">)</span>\n        <span class=\"n\">new_PadStackData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">()</span>\n        <span class=\"n\">list_values</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">holediam</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">paddiam</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipaddiam</span><span class=\"p\">)]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">value0</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n        <span class=\"n\">new_PadStackData</span><span class=\"o\">.</span><span class=\"n\">SetHoleParameters</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"p\">,</span>\n            <span class=\"n\">list_values</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">new_PadStackData</span><span class=\"o\">.</span><span class=\"n\">SetHoleRange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackHoleRange</span><span class=\"o\">.</span><span class=\"n\">UpperPadToLowerPad</span><span class=\"p\">)</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">startlayer</span><span class=\"p\">:</span>\n            <span class=\"n\">startlayer</span> <span class=\"o\">=</span> <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">endlayer</span><span class=\"p\">:</span>\n            <span class=\"n\">endlayer</span> <span class=\"o\">=</span> <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n\n        <span class=\"n\">antipad_shape</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span>\n        <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">new_PadStackData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"p\">,</span>\n            <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">paddiam</span><span class=\"p\">)]),</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">new_PadStackData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span><span class=\"p\">,</span>\n            <span class=\"n\">antipad_shape</span><span class=\"p\">,</span>\n            <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipaddiam</span><span class=\"p\">)]),</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n            <span class=\"n\">value0</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">layer</span> <span class=\"o\">==</span> <span class=\"n\">startlayer</span><span class=\"p\">:</span>\n                <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"n\">layer</span> <span class=\"o\">==</span> <span class=\"n\">endlayer</span><span class=\"p\">:</span>\n                <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">if</span> <span class=\"n\">started</span><span class=\"p\">:</span>\n                <span class=\"n\">new_PadStackData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                    <span class=\"n\">layer</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"p\">,</span>\n                    <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">paddiam</span><span class=\"p\">)]),</span>\n                    <span class=\"n\">value0</span><span class=\"p\">,</span>\n                    <span class=\"n\">value0</span><span class=\"p\">,</span>\n                    <span class=\"n\">value0</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">new_PadStackData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                    <span class=\"n\">layer</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span><span class=\"p\">,</span>\n                    <span class=\"n\">antipad_shape</span><span class=\"p\">,</span>\n                    <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipaddiam</span><span class=\"p\">)]),</span>\n                    <span class=\"n\">value0</span><span class=\"p\">,</span>\n                    <span class=\"n\">value0</span><span class=\"p\">,</span>\n                    <span class=\"n\">value0</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n        <span class=\"n\">PadStack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">new_PadStackData</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.delete_padstack_instances\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.delete_padstack_instances/#pyaedt.edb_core.padstack.EdbPadstacks.delete_padstack_instances\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_padstack_instances</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">net_names</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete padstack instances by net names.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        net_names : str, list</span>\n<span class=\"sd\">            Names of the nets to delete.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; Edb.core_padstack.delete_padstack_instances(net_names=[&quot;GND&quot;])</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">net_names</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">net_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">net_names</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">p_id</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">net_names</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">():</span>  <span class=\"c1\"># pragma: no cover</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.set_solderball\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.set_solderball/#pyaedt.edb_core.padstack.EdbPadstacks.set_solderball\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_solderball</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">padstackInst</span><span class=\"p\">,</span> <span class=\"n\">sballLayer_name</span><span class=\"p\">,</span> <span class=\"n\">isTopPlaced</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">ballDiam</span><span class=\"o\">=</span><span class=\"mf\">100e-6</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set solderball for the given PadstackInstance.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        padstackInst : Edb.Cell.Primitive.PadstackInstance or int</span>\n<span class=\"sd\">            Padstack instance id or object.</span>\n<span class=\"sd\">        sballLayer_name : str,</span>\n<span class=\"sd\">            Name of the layer where the solder ball is placed. No default values.</span>\n<span class=\"sd\">        isTopPlaced : bool, optional.</span>\n<span class=\"sd\">            Bollean triggering is the solder ball is placed on Top or Bottom of the layer stackup.</span>\n<span class=\"sd\">        ballDiam : double, optional,</span>\n<span class=\"sd\">            Solder ball diameter value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">padstackInst</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">psdef</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"p\">[</span><span class=\"n\">padstackInst</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">padstack_definition</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span>\n            <span class=\"n\">padstackInst</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"p\">[</span><span class=\"n\">padstackInst</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">psdef</span> <span class=\"o\">=</span> <span class=\"n\">padstackInst</span><span class=\"o\">.</span><span class=\"n\">GetPadstackDef</span><span class=\"p\">()</span>\n        <span class=\"n\">newdefdata</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">psdef</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">())</span>\n        <span class=\"n\">newdefdata</span><span class=\"o\">.</span><span class=\"n\">SetSolderBallShape</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">SolderballShape</span><span class=\"o\">.</span><span class=\"n\">Cylinder</span><span class=\"p\">)</span>\n        <span class=\"n\">newdefdata</span><span class=\"o\">.</span><span class=\"n\">SetSolderBallParameter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">ballDiam</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">ballDiam</span><span class=\"p\">))</span>\n        <span class=\"n\">sball_placement</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">SolderballPlacement</span><span class=\"o\">.</span><span class=\"n\">AbovePadstack</span>\n            <span class=\"k\">if</span> <span class=\"n\">isTopPlaced</span>\n            <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">SolderballPlacement</span><span class=\"o\">.</span><span class=\"n\">BelowPadstack</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">newdefdata</span><span class=\"o\">.</span><span class=\"n\">SetSolderBallPlacement</span><span class=\"p\">(</span><span class=\"n\">sball_placement</span><span class=\"p\">)</span>\n        <span class=\"n\">psdef</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">newdefdata</span><span class=\"p\">)</span>\n        <span class=\"n\">sball_layer</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span> <span class=\"k\">for</span> <span class=\"n\">lay</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layers</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span> <span class=\"k\">if</span> <span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">sballLayer_name</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">sball_layer</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">padstackInst</span><span class=\"o\">.</span><span class=\"n\">SetSolderBallLayer</span><span class=\"p\">(</span><span class=\"n\">sball_layer</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.create_coax_port\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.create_coax_port/#pyaedt.edb_core.padstack.EdbPadstacks.create_coax_port\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_coax_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">padstackinstance</span><span class=\"p\">,</span> <span class=\"n\">use_dot_separator</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create HFSS 3Dlayout coaxial lumped port on a pastack</span>\n<span class=\"sd\">        Requires to have solder ball defined before calling this method.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        padstackinstance : `Edb.Cell.Primitive.PadstackInstance` or int</span>\n<span class=\"sd\">            Padstack instance object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        string</span>\n<span class=\"sd\">            terminal name.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">padstackinstance</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"n\">padstackinstance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"p\">[</span><span class=\"n\">padstackinstance</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">padstackinstance</span><span class=\"p\">,</span> <span class=\"n\">EDBPadstackInstance</span><span class=\"p\">):</span>\n            <span class=\"n\">padstackinstance</span> <span class=\"o\">=</span> <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span>\n        <span class=\"n\">cmp_name</span> <span class=\"o\">=</span> <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetComponent</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">cmp_name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">cmp_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;no_comp&quot;</span>\n\n        <span class=\"n\">net_name</span> <span class=\"o\">=</span> <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">net_name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">net_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;no_net&quot;</span>\n\n        <span class=\"n\">pin_name</span> <span class=\"o\">=</span> <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">pin_name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">pin_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;no_pin_name&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">use_dot_separator</span><span class=\"p\">:</span>\n            <span class=\"n\">port_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0}</span><span class=\"s2\">.</span><span class=\"si\">{1}</span><span class=\"s2\">.</span><span class=\"si\">{2}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cmp_name</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"p\">,</span> <span class=\"n\">pin_name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">port_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0}</span><span class=\"s2\">_</span><span class=\"si\">{1}</span><span class=\"s2\">_</span><span class=\"si\">{2}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cmp_name</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"p\">,</span> <span class=\"n\">pin_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">IsLayoutPin</span><span class=\"p\">():</span>\n            <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetIsLayoutPin</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetLayerRange</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Terminal</span><span class=\"o\">.</span><span class=\"n\">PadstackInstanceTerminal</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"p\">,</span>\n            <span class=\"n\">padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n            <span class=\"n\">port_name</span><span class=\"p\">,</span>\n            <span class=\"n\">padstackinstance</span><span class=\"p\">,</span>\n            <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">port_name</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.get_pinlist_from_component_and_net\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net/#pyaedt.edb_core.padstack.EdbPadstacks.get_pinlist_from_component_and_net\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_pinlist_from_component_and_net</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">refdes</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">netname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve pins given a component&#39;s reference designator and net name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        refdes : str, optional</span>\n<span class=\"sd\">            Reference designator of the component. The default is ``None``.</span>\n<span class=\"sd\">        netname : str optional</span>\n<span class=\"sd\">            Name of the net. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of pins if the operation is successful.</span>\n<span class=\"sd\">            ``False`` is returned if the net does not belong to the component.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">pinlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">refdes</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">refdes</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">netname</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">refdes</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                        <span class=\"k\">if</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">net_name</span> <span class=\"o\">==</span> <span class=\"n\">netname</span><span class=\"p\">:</span>\n                            <span class=\"n\">pinlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">refdes</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n                        <span class=\"n\">pinlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">netname</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">net_name</span> <span class=\"o\">==</span> <span class=\"n\">netname</span><span class=\"p\">:</span>\n                        <span class=\"n\">pinlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;At least a component or a net name has to be provided&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">pinlist</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.get_pad_parameters\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.get_pad_parameters/#pyaedt.edb_core.padstack.EdbPadstacks.get_pad_parameters\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_pad_parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">layername</span><span class=\"p\">,</span> <span class=\"n\">pad_type</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get Padstack Parameters from Pin or Padstack Definition.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        pin : Edb.Definition.PadstackDef or Edb.Definition.PadstackInstance</span>\n<span class=\"sd\">            Pin or PadstackDef on which get values.</span>\n<span class=\"sd\">        layername : str</span>\n<span class=\"sd\">            Layer on which get properties.</span>\n<span class=\"sd\">        pad_type : int</span>\n<span class=\"sd\">            Pad Type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">            Tuple of (GeometryType, ParameterList, OffsetX, OffsetY, Rot)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;PadstackDef&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">)):</span>\n            <span class=\"n\">padparams</span> <span class=\"o\">=</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span><span class=\"n\">layername</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pad_type</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">padparams</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">GetPadstackDef</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                <span class=\"n\">layername</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">geom_type</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">padparams</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">padparams</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n        <span class=\"n\">offset_x</span> <span class=\"o\">=</span> <span class=\"n\">padparams</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n        <span class=\"n\">offset_y</span> <span class=\"o\">=</span> <span class=\"n\">padparams</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n        <span class=\"n\">rot</span> <span class=\"o\">=</span> <span class=\"n\">padparams</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">geom_type</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">offset_x</span><span class=\"p\">,</span> <span class=\"n\">offset_y</span><span class=\"p\">,</span> <span class=\"n\">rot</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.set_all_antipad_value\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.set_all_antipad_value/#pyaedt.edb_core.padstack.EdbPadstacks.set_all_antipad_value\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_all_antipad_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set all anti-pads from all pad-stack definition to the given value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : float, str</span>\n<span class=\"sd\">            anti-pad value</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when all succeed. ``False`` if one of anti-pads value failed to be assigned.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">padstack</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n                <span class=\"n\">cloned_padstack_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">())</span>\n                <span class=\"n\">layers_name</span> <span class=\"o\">=</span> <span class=\"n\">cloned_padstack_data</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">()</span>\n                <span class=\"n\">all_succeed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"n\">layers_name</span><span class=\"p\">:</span>\n                    <span class=\"n\">geom_type</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">offset_x</span><span class=\"p\">,</span> <span class=\"n\">offset_y</span><span class=\"p\">,</span> <span class=\"n\">rot</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_pad_parameters</span><span class=\"p\">(</span>\n                        <span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma no cover</span>\n                        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">(</span>\n                            <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">parameters</span><span class=\"p\">)</span>\n                        <span class=\"p\">)</span>  <span class=\"c1\"># pragma no cover</span>\n                        <span class=\"n\">geom</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span>\n                        <span class=\"n\">offset_x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">offset_x</span><span class=\"p\">)</span>\n                        <span class=\"n\">offset_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">offset_y</span><span class=\"p\">)</span>\n                        <span class=\"n\">rot</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">rot</span><span class=\"p\">)</span>\n                        <span class=\"n\">antipad</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span>\n                        <span class=\"k\">if</span> <span class=\"n\">cloned_padstack_data</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                            <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">antipad</span><span class=\"p\">,</span> <span class=\"n\">geom</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">offset_x</span><span class=\"p\">,</span> <span class=\"n\">offset_y</span><span class=\"p\">,</span> <span class=\"n\">rot</span>\n                        <span class=\"p\">):</span>  <span class=\"c1\"># pragma no cover</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                                <span class=\"s2\">&quot;Pad-stack definition </span><span class=\"si\">{}</span><span class=\"s2\">, anti-pad on layer </span><span class=\"si\">{}</span><span class=\"s2\">, has been set to </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                                    <span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                                <span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma no cover</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                                <span class=\"s2\">&quot;Failed to reassign anti-pad value </span><span class=\"si\">{}</span><span class=\"s2\"> on Pads-stack definition </span><span class=\"si\">{}</span><span class=\"s2\">,&quot;</span>\n                                <span class=\"s2\">&quot; layer</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">),</span> <span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">layer</span><span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                            <span class=\"n\">all_succeed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">cloned_padstack_data</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">all_succeed</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.get_via_instance_from_net\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.get_via_instance_from_net/#pyaedt.edb_core.padstack.EdbPadstacks.get_via_instance_from_net\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_via_instance_from_net</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">net_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the list for Edb vias from net name list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        net_list : str or list</span>\n<span class=\"sd\">            The list of the net name to be used for filtering vias. If no net is provided the command will</span>\n<span class=\"sd\">            return an all vias list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of Edb.Cell.Primitive.PadstackInstance</span>\n<span class=\"sd\">            list of EDB vias.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">net_list</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">net_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">net_list</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">net_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">net_list</span><span class=\"p\">]</span>\n        <span class=\"n\">layout_lobj_collection</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">PadstackInstances</span><span class=\"p\">)</span>\n        <span class=\"n\">via_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">lobj</span> <span class=\"ow\">in</span> <span class=\"n\">layout_lobj_collection</span><span class=\"p\">:</span>\n            <span class=\"n\">pad_layers_name</span> <span class=\"o\">=</span> <span class=\"n\">lobj</span><span class=\"o\">.</span><span class=\"n\">GetPadstackDef</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pad_layers_name</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">net_list</span><span class=\"p\">:</span>\n                    <span class=\"n\">via_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lobj</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">lobj</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"n\">net_list</span><span class=\"p\">:</span>\n                    <span class=\"n\">via_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lobj</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">via_list</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.create_padstack\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.create_padstack/#pyaedt.edb_core.padstack.EdbPadstacks.create_padstack\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_padstack</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">padstackname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">holediam</span><span class=\"o\">=</span><span class=\"s2\">&quot;300um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">paddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;400um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">antipaddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;600um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">startlayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">endlayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_shape</span><span class=\"o\">=</span><span class=\"s2\">&quot;Circle&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">x_size</span><span class=\"o\">=</span><span class=\"s2\">&quot;600um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">y_size</span><span class=\"o\">=</span><span class=\"s2\">&quot;600um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">corner_radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;300um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">offset_x</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">offset_y</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">has_hole</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_offset_x</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_offset_y</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_rotation</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a padstack.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        padstackname : str, optional</span>\n<span class=\"sd\">            Name of the padstack. The default is ``None``.</span>\n<span class=\"sd\">        holediam : str, optional</span>\n<span class=\"sd\">            Diameter of the hole with units. The default is ``&quot;300um&quot;``.</span>\n<span class=\"sd\">        paddiam : str, optional</span>\n<span class=\"sd\">            Diameter of the pad with units. The default is ``&quot;400um&quot;``.</span>\n<span class=\"sd\">        antipaddiam : str, optional</span>\n<span class=\"sd\">            Diameter of the antipad with units. The default is ``&quot;600um&quot;``.</span>\n<span class=\"sd\">        startlayer : str, optional</span>\n<span class=\"sd\">            Starting layer. The default is ``None``, in which case the top</span>\n<span class=\"sd\">            is the starting layer.</span>\n<span class=\"sd\">        endlayer : str, optional</span>\n<span class=\"sd\">            Ending layer. The default is ``None``, in which case the bottom</span>\n<span class=\"sd\">            is the ending layer.</span>\n<span class=\"sd\">        antipad_shape : str, optional</span>\n<span class=\"sd\">            Shape of the antipad. The default is ``&quot;Circle&quot;``. Options are ``&quot;Circle&quot;`` and ``&quot;Bullet&quot;``.</span>\n<span class=\"sd\">        x_size : str, optional</span>\n<span class=\"sd\">            Only applicable to bullet shape. The default is ``&quot;600um&quot;``.</span>\n<span class=\"sd\">        y_size : str, optional</span>\n<span class=\"sd\">            Only applicable to bullet shape. The default is ``&quot;600um&quot;``.</span>\n<span class=\"sd\">        corner_radius :</span>\n<span class=\"sd\">            Only applicable to bullet shape. The default is ``&quot;300um&quot;``.</span>\n<span class=\"sd\">        offset_x : str, optional</span>\n<span class=\"sd\">            X offset of antipad. The default is ``&quot;0.0&quot;``.</span>\n<span class=\"sd\">        offset_y : str, optional</span>\n<span class=\"sd\">            Y offset of antipad. The default is ``&quot;0.0&quot;``.</span>\n<span class=\"sd\">        rotation : str, optional</span>\n<span class=\"sd\">            rotation of antipad. The default is ``&quot;0.0&quot;``.</span>\n<span class=\"sd\">        has_hole : bool, optional</span>\n<span class=\"sd\">            Whether this padstack has a hole.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the padstack if the operation is successful.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">holediam</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">holediam</span><span class=\"p\">)</span>\n        <span class=\"n\">paddiam</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">paddiam</span><span class=\"p\">)</span>\n        <span class=\"n\">antipaddiam</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipaddiam</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">padstackname</span><span class=\"p\">:</span>\n            <span class=\"n\">padstackname</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;VIA&quot;</span><span class=\"p\">)</span>\n        <span class=\"c1\"># assert not self.isreadonly, &quot;Write Functions are not available within AEDT&quot;</span>\n        <span class=\"n\">padstackData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">has_hole</span><span class=\"p\">:</span>\n            <span class=\"n\">ptype</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">ptype</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">NoGeometry</span>\n        <span class=\"n\">holparam</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">holediam</span><span class=\"p\">)]([</span><span class=\"n\">holediam</span><span class=\"p\">])</span>\n        <span class=\"n\">value0</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"s2\">&quot;0.0&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">x_size</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">x_size</span><span class=\"p\">)</span>\n        <span class=\"n\">y_size</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">y_size</span><span class=\"p\">)</span>\n        <span class=\"n\">corner_radius</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">corner_radius</span><span class=\"p\">)</span>\n        <span class=\"n\">offset_x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">offset_x</span><span class=\"p\">)</span>\n        <span class=\"n\">offset_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">offset_y</span><span class=\"p\">)</span>\n        <span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">)</span>\n\n        <span class=\"n\">pad_offset_x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pad_offset_x</span><span class=\"p\">)</span>\n        <span class=\"n\">pad_offset_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pad_offset_y</span><span class=\"p\">)</span>\n        <span class=\"n\">pad_rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pad_rotation</span><span class=\"p\">)</span>\n\n        <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">SetHoleParameters</span><span class=\"p\">(</span><span class=\"n\">ptype</span><span class=\"p\">,</span> <span class=\"n\">holparam</span><span class=\"p\">,</span> <span class=\"n\">value0</span><span class=\"p\">,</span> <span class=\"n\">value0</span><span class=\"p\">,</span> <span class=\"n\">value0</span><span class=\"p\">)</span>\n\n        <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">SetHolePlatingPercentage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mf\">20.0</span><span class=\"p\">))</span>\n        <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">SetHoleRange</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackHoleRange</span><span class=\"o\">.</span><span class=\"n\">UpperPadToLowerPad</span><span class=\"p\">)</span>\n        <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">SetMaterial</span><span class=\"p\">(</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">startlayer</span><span class=\"p\">:</span>\n            <span class=\"n\">startlayer</span> <span class=\"o\">=</span> <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">endlayer</span><span class=\"p\">:</span>\n            <span class=\"n\">endlayer</span> <span class=\"o\">=</span> <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">antipad_shape</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Bullet&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">antipad_array</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">x_size</span><span class=\"p\">)]([</span><span class=\"n\">x_size</span><span class=\"p\">,</span> <span class=\"n\">y_size</span><span class=\"p\">,</span> <span class=\"n\">corner_radius</span><span class=\"p\">])</span>\n            <span class=\"n\">antipad_shape</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Bullet</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">antipad_array</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">antipaddiam</span><span class=\"p\">)]([</span><span class=\"n\">antipaddiam</span><span class=\"p\">])</span>\n            <span class=\"n\">antipad_shape</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"n\">padparam_array</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">paddiam</span><span class=\"p\">)]([</span><span class=\"n\">paddiam</span><span class=\"p\">])</span>\n            <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                <span class=\"n\">layer</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"p\">,</span>\n                <span class=\"n\">padparam_array</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_offset_x</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_offset_y</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_rotation</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                <span class=\"n\">layer</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_shape</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_array</span><span class=\"p\">,</span>\n                <span class=\"n\">offset_x</span><span class=\"p\">,</span>\n                <span class=\"n\">offset_y</span><span class=\"p\">,</span>\n                <span class=\"n\">rotation</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">padstackLayerIdMap</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">(),</span> <span class=\"n\">padstackData</span><span class=\"o\">.</span><span class=\"n\">GetLayerIds</span><span class=\"p\">())}</span>\n        <span class=\"n\">padstackLayerMap</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Utility</span><span class=\"o\">.</span><span class=\"n\">LayerMap</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Utility</span><span class=\"o\">.</span><span class=\"n\">UniqueDirection</span><span class=\"o\">.</span><span class=\"n\">ForwardUnique</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">padstackLayerName</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">SignalLayerSet</span><span class=\"p\">),</span>\n            <span class=\"p\">[</span><span class=\"n\">startlayer</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"n\">endlayer</span><span class=\"p\">],</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">padstackLayerMap</span><span class=\"o\">.</span><span class=\"n\">SetMapping</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">GetLayerId</span><span class=\"p\">(),</span> <span class=\"n\">padstackLayerIdMap</span><span class=\"p\">[</span><span class=\"n\">padstackLayerName</span><span class=\"p\">])</span>\n        <span class=\"n\">padstackDefinition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDef</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">padstackname</span><span class=\"p\">)</span>\n        <span class=\"n\">padstackDefinition</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">padstackData</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Padstack </span><span class=\"si\">%s</span><span class=\"s2\"> create correctly&quot;</span><span class=\"p\">,</span> <span class=\"n\">padstackname</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">padstackname</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_pin_layer_range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">):</span>\n\n        <span class=\"n\">res</span><span class=\"p\">,</span> <span class=\"n\">fromlayer</span><span class=\"p\">,</span> <span class=\"n\">tolayer</span> <span class=\"o\">=</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">GetLayerRange</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">fromlayer</span><span class=\"p\">,</span> <span class=\"n\">tolayer</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.duplicate_padstack\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.duplicate_padstack/#pyaedt.edb_core.padstack.EdbPadstacks.duplicate_padstack\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_padstack</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">target_padstack_name</span><span class=\"p\">,</span> <span class=\"n\">new_padstack_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Duplicate a padstack.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        target_padstack_name : str</span>\n<span class=\"sd\">            Name of the padstack to be duplicated.</span>\n<span class=\"sd\">        new_padstack_name : str, optional</span>\n<span class=\"sd\">            Name of the new padstack.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the new padstack.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">target_padstack_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">new_padstack_definition_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">new_padstack_name</span><span class=\"p\">:</span>\n            <span class=\"n\">new_padstack_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">target_padstack_name</span><span class=\"p\">)</span>\n\n        <span class=\"n\">padstack_definition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDef</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">new_padstack_name</span><span class=\"p\">)</span>\n        <span class=\"n\">padstack_definition</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">new_padstack_definition_data</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">new_padstack_name</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.place_padstack\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.place_padstack/#pyaedt.edb_core.padstack.EdbPadstacks.place_padstack\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">place_padstack</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">position</span><span class=\"p\">,</span>\n        <span class=\"n\">definition_name</span><span class=\"p\">,</span>\n        <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">via_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span>\n        <span class=\"n\">fromlayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tolayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solderlayer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">is_pin</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Place the padstack.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : list</span>\n<span class=\"sd\">            List of float values for the [x,y] positions where the via is to be placed.</span>\n<span class=\"sd\">        definition_name : str</span>\n<span class=\"sd\">            Name of the padstack definition.</span>\n<span class=\"sd\">        net_name : str, optional</span>\n<span class=\"sd\">            Name of the net. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        via_name : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        rotation : float, optional</span>\n<span class=\"sd\">            Rotation of the padstack in degrees. The default</span>\n<span class=\"sd\">            is ``0``.</span>\n<span class=\"sd\">        fromlayer :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        tolayer :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        solderlayer :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">padstack</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">pad</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">pad</span> <span class=\"o\">==</span> <span class=\"n\">definition_name</span><span class=\"p\">:</span>\n                <span class=\"n\">padstack</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">pad</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span>\n        <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"o\">.</span><span class=\"n\">PointData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n        <span class=\"n\">net</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">find_or_create_net</span><span class=\"p\">(</span><span class=\"n\">net_name</span><span class=\"p\">)</span>\n        <span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">rotation</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span><span class=\"p\">)</span>\n        <span class=\"n\">sign_layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">fromlayer</span><span class=\"p\">:</span>\n            <span class=\"n\">fromlayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">sign_layers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">fromlayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">fromlayer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">tolayer</span><span class=\"p\">:</span>\n            <span class=\"n\">tolayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">sign_layers</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">tolayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">tolayer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"k\">if</span> <span class=\"n\">solderlayer</span><span class=\"p\">:</span>\n            <span class=\"n\">solderlayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">solderlayer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"k\">if</span> <span class=\"n\">padstack</span><span class=\"p\">:</span>\n            <span class=\"n\">padstack_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">PadstackInstance</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"p\">,</span>\n                <span class=\"n\">net</span><span class=\"p\">,</span>\n                <span class=\"n\">via_name</span><span class=\"p\">,</span>\n                <span class=\"n\">padstack</span><span class=\"p\">,</span>\n                <span class=\"n\">position</span><span class=\"p\">,</span>\n                <span class=\"n\">rotation</span><span class=\"p\">,</span>\n                <span class=\"n\">fromlayer</span><span class=\"p\">,</span>\n                <span class=\"n\">tolayer</span><span class=\"p\">,</span>\n                <span class=\"n\">solderlayer</span><span class=\"p\">,</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">padstack_instance</span><span class=\"o\">.</span><span class=\"n\">SetIsLayoutPin</span><span class=\"p\">(</span><span class=\"n\">is_pin</span><span class=\"p\">)</span>\n            <span class=\"n\">py_padstack_instance</span> <span class=\"o\">=</span> <span class=\"n\">EDBPadstackInstance</span><span class=\"p\">(</span><span class=\"n\">padstack_instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">py_padstack_instance</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.remove_pads_from_padstack\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack/#pyaedt.edb_core.padstack.EdbPadstacks.remove_pads_from_padstack\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove_pads_from_padstack</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">padstack_name</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Remove the Pad from a padstack on a specific layer by setting it as a 0 thickness circle.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        padstack_name : str</span>\n<span class=\"sd\">            padstack name</span>\n<span class=\"sd\">        layer_name : str, optional</span>\n<span class=\"sd\">            Layer name on which remove the PadParameters. If None, all layers will be taken.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if successful.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">pad_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span>\n        <span class=\"n\">pad_geo</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span>\n        <span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)])</span>\n        <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">padstack_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">newPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">layer_name</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">lay</span> <span class=\"ow\">in</span> <span class=\"n\">layer_name</span><span class=\"p\">:</span>\n            <span class=\"n\">newPadstackDefinitionData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span><span class=\"n\">lay</span><span class=\"p\">,</span> <span class=\"n\">pad_type</span><span class=\"p\">,</span> <span class=\"n\">pad_geo</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">,</span> <span class=\"n\">vals</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">padstack_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">newPadstackDefinitionData</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.set_pad_property\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.set_pad_property/#pyaedt.edb_core.padstack.EdbPadstacks.set_pad_property\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_pad_property</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">padstack_name</span><span class=\"p\">,</span>\n        <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_shape</span><span class=\"o\">=</span><span class=\"s2\">&quot;Circle&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_params</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_x_offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_y_offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_rotation</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_shape</span><span class=\"o\">=</span><span class=\"s2\">&quot;Circle&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_params</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_x_offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_y_offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_rotation</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set pad and antipad properties of the padstack.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        padstack_name : str</span>\n<span class=\"sd\">            Name of the padstack.</span>\n<span class=\"sd\">        layer_name : str, optional</span>\n<span class=\"sd\">            Name of the layer. If None, all layers will be taken.</span>\n<span class=\"sd\">        pad_shape : str, optional</span>\n<span class=\"sd\">            Shape of the pad. The default is ``&quot;Circle&quot;``. Options are ``&quot;Circle&quot;``,  ``&quot;Square&quot;``, ``&quot;Rectangle&quot;``,</span>\n<span class=\"sd\">            ``&quot;Oval&quot;`` and ``&quot;Bullet&quot;``.</span>\n<span class=\"sd\">        pad_params : str, optional</span>\n<span class=\"sd\">            Dimension of the pad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        pad_x_offset : str, optional</span>\n<span class=\"sd\">            X offset of the pad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        pad_y_offset : str, optional</span>\n<span class=\"sd\">            Y offset of the pad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        pad_rotation : str, optional</span>\n<span class=\"sd\">            Rotation of the pad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        antipad_shape : str, optional</span>\n<span class=\"sd\">            Shape of the antipad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        antipad_params : str, optional</span>\n<span class=\"sd\">            Dimension of the antipad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        antipad_x_offset : str, optional</span>\n<span class=\"sd\">            X offset of the antipad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        antipad_y_offset : str, optional</span>\n<span class=\"sd\">            Y offset of the antipad. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">        antipad_rotation : str, optional</span>\n<span class=\"sd\">            Rotation of the antipad. The default is ``&quot;0&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if successful.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">shape_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;Circle&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Square&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Square</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Rectangle&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Oval&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Oval</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Bullet&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadGeometryType</span><span class=\"o\">.</span><span class=\"n\">Bullet</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">pad_shape</span> <span class=\"o\">=</span> <span class=\"n\">shape_dict</span><span class=\"p\">[</span><span class=\"n\">pad_shape</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">pad_params</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">pad_params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">pad_params</span><span class=\"p\">]</span>\n        <span class=\"n\">pad_params</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">pad_params</span><span class=\"p\">])</span>\n        <span class=\"n\">pad_x_offset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pad_x_offset</span><span class=\"p\">)</span>\n        <span class=\"n\">pad_y_offset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pad_y_offset</span><span class=\"p\">)</span>\n        <span class=\"n\">pad_rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pad_rotation</span><span class=\"p\">)</span>\n\n        <span class=\"n\">antipad_shape</span> <span class=\"o\">=</span> <span class=\"n\">shape_dict</span><span class=\"p\">[</span><span class=\"n\">antipad_shape</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">antipad_params</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">antipad_params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">antipad_params</span><span class=\"p\">]</span>\n        <span class=\"n\">antipad_params</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">antipad_params</span><span class=\"p\">])</span>\n        <span class=\"n\">antipad_x_offset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipad_x_offset</span><span class=\"p\">)</span>\n        <span class=\"n\">antipad_y_offset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipad_y_offset</span><span class=\"p\">)</span>\n        <span class=\"n\">antipad_rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">antipad_rotation</span><span class=\"p\">)</span>\n\n        <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">padstack_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">new_padstack_def</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">layer_name</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"n\">layer_name</span><span class=\"p\">:</span>\n            <span class=\"n\">new_padstack_def</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                <span class=\"n\">layer</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_shape</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_params</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_x_offset</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_y_offset</span><span class=\"p\">,</span>\n                <span class=\"n\">pad_rotation</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">new_padstack_def</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                <span class=\"n\">layer</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_shape</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_params</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_x_offset</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_y_offset</span><span class=\"p\">,</span>\n                <span class=\"n\">antipad_rotation</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">padstack_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">new_padstack_def</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbPadstacks.get_padstack_instance_by_net_name\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name/#pyaedt.edb_core.padstack.EdbPadstacks.get_padstack_instance_by_net_name\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_padstack_instance_by_net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get a list of padstack instances by net name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        net_name : str</span>\n<span class=\"sd\">            The net name to be used for filtering padstack instances.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of Edb.Cell.Primitive.PadstackInstance</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">padstack_instances</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">inst_id</span><span class=\"p\">,</span> <span class=\"n\">inst</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">net_name</span> <span class=\"o\">==</span> <span class=\"n\">net_name</span><span class=\"p\">:</span>\n                <span class=\"n\">padstack_instances</span><span class=\"p\">[</span><span class=\"n\">inst_id</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">inst</span>\n        <span class=\"k\">return</span> <span class=\"n\">padstack_instances</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/edb_core/padstack", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}