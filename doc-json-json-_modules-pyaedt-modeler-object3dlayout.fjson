{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.object3dlayout", "body": "<h1>Source code for pyaedt.modeler.object3dlayout</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module provides methods and data structures for managing all properties of</span>\n<span class=\"sd\">objects (points, lines, sheeets, and solids) within the AEDT 3D Layout Modeler.</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">unit_converter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.GeometryOperators</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryOperators</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Objec3DLayout</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages properties of objects in HFSS 3D Layout.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    -----------</span>\n<span class=\"sd\">    primitives : :class:`pyaedt.modeler.Model3DLayout.Modeler3dLayout`</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">prim_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span> <span class=\"o\">=</span> <span class=\"n\">primitives</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"o\">=</span> <span class=\"n\">prim_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">object_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Object units.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">property_val</span><span class=\"p\">,</span> <span class=\"n\">names_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Modify a property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        property_val : list</span>\n\n<span class=\"sd\">        names_list : list, optional</span>\n<span class=\"sd\">             The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vChangedProps</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"n\">property_val</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">names_list</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">names_list</span><span class=\"p\">:</span>\n                <span class=\"n\">vPropServers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"n\">vGeo3dlayout</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"n\">vPropServers</span><span class=\"p\">,</span> <span class=\"n\">vChangedProps</span><span class=\"p\">]</span>\n        <span class=\"n\">vOut</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span> <span class=\"n\">vGeo3dlayout</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span><span class=\"n\">vOut</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_property_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set a property value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        property_name : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        property_value :</span>\n<span class=\"sd\">            Value of the property.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vProp</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vProp</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Angle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">absolute_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the absolute angle location for 2 pins components.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mf\">0.0</span>\n        <span class=\"n\">comp_pins</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">comp_pins</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">pin_1_name</span> <span class=\"o\">=</span> <span class=\"n\">comp_pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">pin_2_name</span> <span class=\"o\">=</span> <span class=\"n\">comp_pins</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">pin1_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">pin_1_name</span><span class=\"p\">)</span>\n            <span class=\"n\">pin2_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">pin_2_name</span><span class=\"p\">)</span>\n            <span class=\"n\">pin1_x</span> <span class=\"o\">=</span> <span class=\"n\">pin1_info</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">pin1_y</span> <span class=\"o\">=</span> <span class=\"n\">pin1_info</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">pin2_x</span> <span class=\"o\">=</span> <span class=\"n\">pin2_info</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">pin2_y</span> <span class=\"o\">=</span> <span class=\"n\">pin2_info</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">p1x</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">pin1_x</span><span class=\"p\">)</span>\n            <span class=\"n\">p1y</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">pin1_y</span><span class=\"p\">)</span>\n            <span class=\"n\">p2x</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">pin2_x</span><span class=\"p\">)</span>\n            <span class=\"n\">p2y</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">pin2_y</span><span class=\"p\">)</span>\n            <span class=\"n\">dy</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">p2y</span> <span class=\"o\">-</span> <span class=\"n\">p1y</span><span class=\"p\">)</span>\n            <span class=\"n\">dx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">p2x</span> <span class=\"o\">-</span> <span class=\"n\">p1x</span><span class=\"p\">)</span>\n            <span class=\"n\">angle_deg</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">atan2</span><span class=\"p\">(</span><span class=\"n\">dy</span><span class=\"p\">,</span> <span class=\"n\">dx</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">180.0</span> <span class=\"o\">/</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n            <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">angle_deg</span> <span class=\"o\">-</span> <span class=\"mf\">90.0</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">angle_deg</span> <span class=\"o\">=</span> <span class=\"mf\">90.0</span>\n            <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">angle_deg</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">angle_deg</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n            <span class=\"k\">return</span> <span class=\"n\">angle_deg</span>\n        <span class=\"k\">return</span> <span class=\"mf\">0.0</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the net name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the net.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Net&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@net_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">netname</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Net&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">netname</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">placement_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the placement layer of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;pin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PlacementLayer&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@placement_layer</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">placement_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;pin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PlacementLayer&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get component bounding box.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            [BB_lower_left_X, BB_lower_left_Y, BB_upper_right_X, BB_upper_right_Y].</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;BBoxLLx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxLLy&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxURx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxURy&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">unit_converter</span><span class=\"p\">(</span><span class=\"n\">bbllx</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">),</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n        <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">unit_converter</span><span class=\"p\">(</span><span class=\"n\">bblly</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">),</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n        <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">unit_converter</span><span class=\"p\">(</span><span class=\"n\">bburx</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">),</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n        <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">unit_converter</span><span class=\"p\">(</span><span class=\"n\">bbury</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">),</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">bbllx</span><span class=\"p\">,</span> <span class=\"n\">bblly</span><span class=\"p\">,</span> <span class=\"n\">bburx</span><span class=\"p\">,</span> <span class=\"n\">bbury</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_clearance_on_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extra_soldermask_clearance</span><span class=\"o\">=</span><span class=\"mf\">5e-3</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a Clearance on Soldermask layer by drawing a rectangle.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        extra_soldermask_clearance : float, optional</span>\n<span class=\"sd\">            Extra Soldermask value in model units to be applied on component bounding box.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">            bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Clearance applies only to components.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">bbox</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span>\n        <span class=\"n\">start_points</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">bbox</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">extra_soldermask_clearance</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">extra_soldermask_clearance</span><span class=\"p\">]</span>\n\n        <span class=\"n\">dims</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">bbox</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">bbox</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">extra_soldermask_clearance</span><span class=\"p\">,</span> <span class=\"n\">bbox</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">bbox</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">extra_soldermask_clearance</span><span class=\"p\">]</span>\n        <span class=\"n\">drawings</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">placement_layer</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">all_signal_layers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">lay</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">stackup_layers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">placement_layer</span><span class=\"p\">:</span>\n                    <span class=\"n\">drawings</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">lay</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">stackup_layers</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">placement_layer</span><span class=\"p\">:</span>\n                    <span class=\"n\">drawings</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lay</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n        <span class=\"k\">for</span> <span class=\"n\">layername</span> <span class=\"ow\">in</span> <span class=\"n\">drawings</span><span class=\"p\">:</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">create_rectangle</span><span class=\"p\">(</span>\n                <span class=\"n\">layername</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">start_points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">start_points</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])],</span>\n                <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])],</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">rectangles</span><span class=\"p\">[</span><span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">negative</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve/Set the absolute location in model units.</span>\n<span class=\"sd\">        Location is computed with combination of 3d Layout location and model center.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">           List of ``(x, y)`` coordinates for the component location.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;BBoxLLx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxLLy&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxURx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxURy&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">loc_x</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">bburx</span> <span class=\"o\">+</span> <span class=\"n\">bbllx</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n            <span class=\"n\">loc_y</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">bbury</span> <span class=\"o\">+</span> <span class=\"n\">bblly</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n            <span class=\"n\">loc_x</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">unit_converter</span><span class=\"p\">(</span><span class=\"n\">loc_x</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">),</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n            <span class=\"n\">loc_y</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">unit_converter</span><span class=\"p\">(</span><span class=\"n\">loc_y</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">),</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">loc_x</span><span class=\"p\">,</span> <span class=\"n\">loc_y</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;pin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Location&quot;</span>\n            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">locs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">location</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">locs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n                <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n                    <span class=\"n\">locs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">locs</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@location</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;BBoxLLx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bbllx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxLLy&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bblly</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxURx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bburx</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;BBoxURy&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                    <span class=\"n\">bbury</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">unit_converter</span><span class=\"p\">((</span><span class=\"n\">bburx</span> <span class=\"o\">+</span> <span class=\"n\">bbllx</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">)</span>\n            <span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">unit_converter</span><span class=\"p\">((</span><span class=\"n\">bbury</span> <span class=\"o\">+</span> <span class=\"n\">bblly</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">output_units</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Location&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n            <span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lock_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the lock position.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        lock_position : bool, optional</span>\n<span class=\"sd\">            The default value is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LockPosition&quot;</span><span class=\"p\">)</span>\n            <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;true&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span> <span class=\"kc\">False</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@lock_position</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lock_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">lock_position</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:LockPosition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">lock_position</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelInfoRlc</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_comp</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rlc_model_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_comp</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_comp</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;ComponentProp=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"p\">:</span>\n                <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">p</span>\n                <span class=\"k\">break</span>\n        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;.+rlc\\(r=&#39;(.+?)&#39;, re=(.+?), l=&#39;(.+?)&#39;, le=(.+?), c=&#39;(.+?)&#39;, ce=(.+?), p=(.+?), lyr=(.+?)&quot;</span>\n        <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n        <span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;false&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">vals</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;true&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">vals</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">vals</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">vals</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">res</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cap</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">ind</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_parallel</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rlc_model_type</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"Components3DLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Components3DLayout/#pyaedt.modeler.object3dlayout.Components3DLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Components3DLayout</span><span class=\"p\">(</span><span class=\"n\">Objec3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains components in HFSS 3D Layout.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">edb_object</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">Objec3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_object</span> <span class=\"o\">=</span> <span class=\"n\">edb_object</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">part</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the component part.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Component part.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Part&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">part_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the component part type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Component part type.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Part Type&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_part_type_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">parts</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;Other&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Resistor&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Inductor&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Capacitor&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IC&quot;</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IO&quot;</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">part_type</span> <span class=\"ow\">in</span> <span class=\"n\">parts</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">part_type</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable or Disable the RLC Component.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        status : bool, optional</span>\n<span class=\"sd\">            Set the RLC Component to Enable or Disable state.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if succeeded.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comp_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">comp_info</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;ComponentProp=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">el</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;CompPropEnabled=false&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;ComponentProp=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">el</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;CompPropEnabled=true&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@enabled</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">EnableComponents</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Components&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span> <span class=\"n\">status</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solderball_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if solderball is enabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">component_info</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;sbsh=Cyl&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_info</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;sbsh=Sph&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_info</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">die_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if the die is enabled. This method is valid for integrated circuits only.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">component_info</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;dt=1&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_info</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;dt=2&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_info</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">die_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Die type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">component_info</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;dt=1&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_info</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;FlipChip&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"s2\">&quot;dt=2&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">component_info</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;WireBond&quot;</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<div class=\"viewcode-block\" id=\"Components3DLayout.set_die_type\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Components3DLayout.set_die_type/#pyaedt.modeler.object3dlayout.Components3DLayout.set_die_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_die_type</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">die_type</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">orientation</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">reference_offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">auto_reference</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">reference_x</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">reference_y</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1mm&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the die type.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        die_type : int, optional</span>\n<span class=\"sd\">            Die type. The default is ``1``. Options are ``0`` for None, ``1`` for FlipChip, and</span>\n<span class=\"sd\">            ``2`` for WireBond.</span>\n<span class=\"sd\">        orientation : int, optional</span>\n<span class=\"sd\">            Die orientation. The default is ``0``. Options are ``0`` for Chip Top and ``1`` for</span>\n<span class=\"sd\">            Chip Bottom.</span>\n<span class=\"sd\">        height : float, optional</span>\n<span class=\"sd\">            Die height valid for port setup. The default is ``0``.</span>\n<span class=\"sd\">        reference_offset : str, float, optional</span>\n<span class=\"sd\">            Port reference offset. The default is ``0``.</span>\n<span class=\"sd\">        auto_reference : bool, optional</span>\n<span class=\"sd\">            Whether to automatically compute reference size. The default is ``True``.</span>\n<span class=\"sd\">        reference_x : str, float, optional</span>\n<span class=\"sd\">            Reference x size for when ``auto_reference=False``.</span>\n<span class=\"sd\">        reference_y : str, float, optional</span>\n<span class=\"sd\">            Reference y size for when ``auto_reference=False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">auto_reference</span><span class=\"p\">:</span>\n            <span class=\"n\">reference_x</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">reference_y</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"n\">prop_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ICProp:=&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">prop_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;IOProp:=&quot;</span>\n        <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:Model Info&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">prop_name</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;DieProp:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span><span class=\"s2\">&quot;dt:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">die_type</span><span class=\"p\">,</span> <span class=\"s2\">&quot;do:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">orientation</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dh:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">height</span><span class=\"p\">),</span> <span class=\"s2\">&quot;lid:=&quot;</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">100</span><span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;PortProp:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;rh:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">reference_offset</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;rsa:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">auto_reference</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;rsx:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">reference_x</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;rsy:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">reference_y</span><span class=\"p\">,</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">&quot;CompType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">4</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Components3DLayout.set_solderball\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Components3DLayout.set_solderball/#pyaedt.modeler.object3dlayout.Components3DLayout.set_solderball\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_solderball</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">solderball_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Cyl&quot;</span><span class=\"p\">,</span> <span class=\"n\">diameter</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">mid_diameter</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.2mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;solder&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set solderball on the active component.</span>\n\n<span class=\"sd\">        The method applies to these component types: ``Other``, ``IC`` and ``IO``.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        solderball_type : str, optional</span>\n<span class=\"sd\">            Solderball type. The default is ``&quot;Cyl&quot;``. Options are ``&quot;None&quot;``, ``&quot;Cyl&quot;``,</span>\n<span class=\"sd\">            and ``&quot;Sph&quot;``.</span>\n<span class=\"sd\">        diameter : str, optional</span>\n<span class=\"sd\">            Ball diameter. The default is ``&quot;0.1mm&quot;``.</span>\n<span class=\"sd\">        mid_diameter : str, optional</span>\n<span class=\"sd\">            Ball mid diameter. The default is ``&quot;0.1mm&quot;``.</span>\n<span class=\"sd\">        height : str, optional</span>\n<span class=\"sd\">            Ball height. The default is height=&quot;0.2mm&quot;.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Ball material. The default is ``&quot;solder&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed or the wrong component type.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"n\">prop_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ICProp:=&quot;</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">die_enabled</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_die_type</span><span class=\"p\">()</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;PortProp(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"p\">:</span>\n                    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">p</span>\n                    <span class=\"k\">break</span>\n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;.+PortProp\\(rh=&#39;(.+?)&#39;, rsa=(.+?), rsx=&#39;(.+?)&#39;, rsy=&#39;(.+?)&#39;\\)&quot;</span>\n            <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n            <span class=\"n\">rh</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">rsx</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">rsy</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">rsa</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n                <span class=\"n\">rh</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                <span class=\"n\">rsx</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n                <span class=\"n\">rsy</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;false&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">rsa</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;.+DieProp\\(dt=(.+?), do=(.+?), dh=&#39;(.+?)&#39;, lid=(.+?)\\)&quot;</span>\n            <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n            <span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">do</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">dh</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">lid</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">100</span>\n            <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n                <span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n                <span class=\"n\">do</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n                <span class=\"n\">dh</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n                <span class=\"n\">lid</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Model Info&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">prop_name</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;SolderBallProp:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;sbsh:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">solderball_type</span><span class=\"p\">),</span>\n                            <span class=\"s2\">&quot;sbh:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">height</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;sbr:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">diameter</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;sb2:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">mid_diameter</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;sbn:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">material</span><span class=\"p\">,</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;DieProp:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;dt:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"s2\">&quot;do:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">do</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dh:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">dh</span><span class=\"p\">,</span> <span class=\"s2\">&quot;lid:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">lid</span><span class=\"p\">],</span>\n                        <span class=\"s2\">&quot;PortProp:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;rh:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">rh</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rsa:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">rsa</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rsx:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">rsx</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rsy:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">rsy</span><span class=\"p\">],</span>\n                    <span class=\"p\">],</span>\n                    <span class=\"s2\">&quot;CompType:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">4</span><span class=\"p\">,</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">prop_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;IOProp:=&quot;</span>\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Model Info&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">prop_name</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;SolderBallProp:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;sbsh:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">solderball_type</span><span class=\"p\">),</span>\n                            <span class=\"s2\">&quot;sbh:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">height</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;sbr:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">diameter</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;sb2:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">mid_diameter</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;sbn:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"n\">material</span><span class=\"p\">,</span>\n                        <span class=\"p\">],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Component pins.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;RLC model if available.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.object3dlayout.ModelInfoRlc`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_type_id</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">ModelInfoRlc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Nets3DLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Nets3DLayout/#pyaedt.modeler.object3dlayout.Nets3DLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Nets3DLayout</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains Nets in HFSS 3D Layout.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span> <span class=\"o\">=</span> <span class=\"n\">primitives</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">components</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Components that belongs to the Nets.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.object3dlayout.Components3DLayout`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comps</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">FilterObjectList</span><span class=\"p\">(</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">FindObjects</span><span class=\"p\">(</span><span class=\"s2\">&quot;Net&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)):</span>\n            <span class=\"n\">comps</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">comps</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Pins3DLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Pins3DLayout/#pyaedt.modeler.object3dlayout.Pins3DLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Pins3DLayout</span><span class=\"p\">(</span><span class=\"n\">Objec3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains the pins in HFSS 3D Layout.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">is_pin</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">Objec3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pin&quot;</span> <span class=\"k\">if</span> <span class=\"n\">is_pin</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;via&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">componentname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">)[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">component_name</span> <span class=\"k\">else</span> <span class=\"n\">component_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_pin</span> <span class=\"o\">=</span> <span class=\"n\">is_pin</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the starting layer of the pin.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the starting layer of the pin.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Start Layer&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stop_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the starting layer of the pin.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the stopping layer of the pin.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Stop Layer&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">holediam</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the hole diameter of the pin.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">           Hole diameter of the pin.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HoleDiameter&quot;</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Geometries3DLayout</span><span class=\"p\">(</span><span class=\"n\">Objec3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains geometries in HFSS 3D Layout.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">prim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;poly&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">Objec3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">prim_type</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_void</span> <span class=\"o\">=</span> <span class=\"n\">is_void</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_closed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Either if the Geometry is closed or not.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">points</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Provide the polygon points. For Lines it returns the center line.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modeler.object3dlayout.Points3dLayout`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPolygon</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">oo</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">GetPoints</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Points3dLayout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"p\">,</span> <span class=\"n\">oo</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edges</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Edges list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPolygonInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Poly:=&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pt:=&quot;</span><span class=\"p\">:</span>\n                        <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">source</span><span class=\"p\">[</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n                        <span class=\"k\">break</span>\n        <span class=\"n\">xpoints</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n        <span class=\"n\">ypoints</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">::</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;rect&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;line&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">xt</span><span class=\"p\">,</span> <span class=\"n\">yt</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">orient_polygon</span><span class=\"p\">(</span><span class=\"n\">xpoints</span><span class=\"p\">,</span> <span class=\"n\">ypoints</span><span class=\"p\">,</span> <span class=\"n\">clockwise</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">xt</span><span class=\"p\">,</span> <span class=\"n\">yt</span> <span class=\"o\">=</span> <span class=\"n\">xpoints</span><span class=\"p\">,</span> <span class=\"n\">ypoints</span>\n        <span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">xt</span><span class=\"p\">,</span> <span class=\"n\">yt</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"mf\">1e100</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">p1</span><span class=\"p\">:</span>\n                    <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]</span>\n                <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">p2</span><span class=\"p\">:</span>\n                    <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">p2</span><span class=\"p\">])</span>\n                    <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">p2</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]])</span>\n                    <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;rect&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n        <span class=\"k\">return</span> <span class=\"n\">edges</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edge_by_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">point</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the closest edge to specified point.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        point : list</span>\n<span class=\"sd\">            List of [x,y] values.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Edge id.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">index_i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">v_dist</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">edge_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_norm</span><span class=\"p\">(</span><span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">distance_vector</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">,</span> <span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">v_dist</span> <span class=\"ow\">or</span> <span class=\"n\">v</span> <span class=\"o\">&lt;</span> <span class=\"n\">v_dist</span><span class=\"p\">:</span>\n                <span class=\"n\">v_dist</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n                <span class=\"n\">edge_id</span> <span class=\"o\">=</span> <span class=\"n\">index_i</span>\n            <span class=\"n\">index_i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">return</span> <span class=\"n\">edge_id</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Compute the lower edge in the layout on x direction.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Edge number.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Compute the upper edge in the layout on x direction.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Edge number.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Compute the lower edge in the layout on y direction.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Edge number.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Compute the upper edge in the layout on y direction.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Edge number.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">edge</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_property_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">propertyname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve a property value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        propertyname : str</span>\n<span class=\"sd\">            Name of the property</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Value of the property.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">propertyname</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">negative</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the negative.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        negative : bool, optional</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_void</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Negative&quot;</span><span class=\"p\">)</span>\n            <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;true&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span> <span class=\"kc\">False</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@negative</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">negative</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">negative</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_void</span><span class=\"p\">:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Negative&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">negative</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the net name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the net.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_void</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Net&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@net_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">netname</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_void</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prim_type</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;component&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Net&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">netname</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Polygons3DLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Polygons3DLayout/#pyaedt.modeler.object3dlayout.Polygons3DLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Polygons3DLayout</span><span class=\"p\">(</span><span class=\"n\">Geometries3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class for Hfss 3D Layout polygons management.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">prim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;poly&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">Geometries3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">prim_type</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_closed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Either if the Geometry is closed or not.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPolygon</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">IsClosed</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">polygon_voids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;All Polygon Voids.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of polygon voids.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">voids</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPolygonVoids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n        <span class=\"n\">pvoids</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">void</span> <span class=\"ow\">in</span> <span class=\"n\">voids</span><span class=\"p\">:</span>\n            <span class=\"n\">pvoids</span><span class=\"p\">[</span><span class=\"n\">void</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Polygons3DLayout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"p\">,</span> <span class=\"n\">void</span><span class=\"p\">,</span> <span class=\"s2\">&quot;poly&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">pvoids</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Circle3dLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Circle3dLayout/#pyaedt.modeler.object3dlayout.Circle3dLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Circle3dLayout</span><span class=\"p\">(</span><span class=\"n\">Geometries3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class for Hfss 3D Layout circles management.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">Geometries3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;circle&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">center</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle center.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">cent</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Center&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">cent</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">cent</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@center</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">center</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Center&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Radius&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@radius</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Radius&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Rect3dLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Rect3dLayout/#pyaedt.modeler.object3dlayout.Rect3dLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Rect3dLayout</span><span class=\"p\">(</span><span class=\"n\">Geometries3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class for Hfss 3D Layout rectangles management.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">Geometries3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rect&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">corner_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CornerRadius&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@corner_radius</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">corner_radius</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:CornerRadius&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">two_point_description</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2 pt Description&quot;</span><span class=\"p\">)</span>\n            <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;true&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span> <span class=\"kc\">False</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@two_point_description</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">two_point_description</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:2 pt Description&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">center</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the rectangle center.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">cent</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Center&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">cent</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">cent</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@center</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">center</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Center&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">width</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Width&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@width</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">width</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Width&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">height</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the circle radius.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            placement layer.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Height&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@height</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">height</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Height&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">point_a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the Point A value if 2Point Description is enabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List</span>\n<span class=\"sd\">            Point A coordinates.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">pa</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Pt A&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">pa</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@point_a</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">point_a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Pt A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">point_b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the Point A value if 2Point Description is enabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List</span>\n<span class=\"sd\">            Point B coordinates</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">pa</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Pt B&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">pa</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">pa</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@point_b</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">point_b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">two_point_description</span><span class=\"p\">:</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Pt B&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Line3dLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Line3dLayout/#pyaedt.modeler.object3dlayout.Line3dLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Line3dLayout</span><span class=\"p\">(</span><span class=\"n\">Geometries3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class for Hfss 3D Layout lines management.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"n\">Geometries3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;line&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_points</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bend_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the line bend type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Bend Type.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BendType&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@bend_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bend_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:BendType&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_cap_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the line start type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Start Cap Type.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;StartCapType&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@start_cap_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_cap_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:StartCap Type&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">end_cap_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the line end type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            End Cap Type.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;EndCapType&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@end_cap_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">end_cap_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:EndCap Type&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">width</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the line width.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Line Width.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LineWidth&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@width</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">width</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:LineWidth&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the line length.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Line length.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_n</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;TotalLength&quot;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Points3dLayout\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Points3dLayout/#pyaedt.modeler.object3dlayout.Points3dLayout\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Points3dLayout</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class for Hfss 3D Layout Points management.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">point</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span> <span class=\"o\">=</span> <span class=\"n\">primitives</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">point</span> <span class=\"o\">=</span> <span class=\"n\">point</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_arc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Either if the Point is an arc or not.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">IsArc</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Points x and y coordinate.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_arc</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">GetX</span><span class=\"p\">()]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">GetX</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">GetY</span><span class=\"p\">()]</span>\n\n<div class=\"viewcode-block\" id=\"Points3dLayout.move\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.object3dlayout.Points3dLayout.move/#pyaedt.modeler.object3dlayout.Points3dLayout.move\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_position</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Move actual point to new location.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        new_position : List</span>\n<span class=\"sd\">            New point location.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">Move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">Point</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">(</span><span class=\"n\">new_position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">new_position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ComponentsSubCircuit3DLayout</span><span class=\"p\">(</span><span class=\"n\">Objec3DLayout</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains 3d Components in HFSS 3D Layout.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    parent :</span>\n\n<span class=\"sd\">    name : string, optional</span>\n<span class=\"sd\">        The default is ``&quot;&quot;``.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">Objec3DLayout</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"s2\">&quot;component&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">component_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve all component info.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">component_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the component name.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">component_info</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">IndexError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve/Set the component angle.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Component angle.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_3d_placement</span><span class=\"p\">:</span>\n            <span class=\"n\">ang</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Rotation Angle&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">ang</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">ang</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">ang</span>\n\n    <span class=\"nd\">@angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">angle_val</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">angle_val</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">)):</span>\n            <span class=\"n\">angle_val</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">deg&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">angle_val</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_3d_placement</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Angle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle_val</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Rotation Angle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle_val</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_3d_placement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve if the component has 3d placement.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3D Placement&quot;</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;True&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/object3dlayout", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}