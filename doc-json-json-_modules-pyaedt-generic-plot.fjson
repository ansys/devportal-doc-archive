{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.generic.plot", "body": "<h1>Source code for pyaedt.generic.plot</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">ast</span>\n<span class=\"kn\">import</span> <span class=\"nn\">csv</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">AEDT_UNITS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">CSS4_COLORS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The NumPy module is required to run some functionalities of PostProcess.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n            <span class=\"s2\">&quot;Install with </span><span class=\"se\">\\n\\n</span><span class=\"s2\">pip install numpy</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Requires CPython.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">pyvista</span> <span class=\"k\">as</span> <span class=\"nn\">pv</span>\n\n        <span class=\"n\">pyvista_available</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The PyVista module is required to run some functionalities of PostProcess.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n            <span class=\"s2\">&quot;Install with </span><span class=\"se\">\\n\\n</span><span class=\"s2\">pip install pyvista</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Requires CPython.&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">matplotlib.patches</span> <span class=\"kn\">import</span> <span class=\"n\">PathPatch</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">matplotlib.path</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n    <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;The Matplotlib module is required to run some functionalities of PostProcess.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n            <span class=\"s2\">&quot;Install with </span><span class=\"se\">\\n\\n</span><span class=\"s2\">pip install matplotlib</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Requires CPython.&quot;</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_structured_mesh</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">phi</span><span class=\"p\">,</span> <span class=\"n\">ff_data</span><span class=\"p\">):</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">ff_data</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">ff_data_renorm</span> <span class=\"o\">=</span> <span class=\"n\">ff_data</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">ff_data</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">())</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">ff_data_renorm</span> <span class=\"o\">=</span> <span class=\"n\">ff_data</span>\n    <span class=\"n\">phi_grid</span><span class=\"p\">,</span> <span class=\"n\">theta_grid</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">,</span> <span class=\"n\">theta</span><span class=\"p\">)</span>\n    <span class=\"n\">r_no_renorm</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">ff_data</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">)))</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">(</span><span class=\"n\">ff_data_renorm</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">phi</span><span class=\"p\">)))</span>\n\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta_grid</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">phi_grid</span><span class=\"p\">)</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta_grid</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">phi_grid</span><span class=\"p\">)</span>\n    <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta_grid</span><span class=\"p\">)</span>\n\n    <span class=\"n\">mag</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">(</span><span class=\"n\">r_no_renorm</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s2\">&quot;F&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">ff_mesh</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">StructuredGrid</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n    <span class=\"n\">ff_mesh</span><span class=\"p\">[</span><span class=\"s2\">&quot;FarFieldData&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mag</span>\n    <span class=\"k\">return</span> <span class=\"n\">ff_mesh</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">is_notebook</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;Check if pyaedt is running in Jupyter or not.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    bool</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">shell</span> <span class=\"o\">=</span> <span class=\"n\">get_ipython</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n        <span class=\"k\">if</span> <span class=\"n\">shell</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ZMQInteractiveShell&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Jupyter notebook or qtconsole</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n    <span class=\"k\">except</span> <span class=\"ne\">NameError</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>  <span class=\"c1\"># Probably standard Python interpreter</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">is_float</span><span class=\"p\">(</span><span class=\"n\">istring</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Convert a string to a float.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    istring : str</span>\n<span class=\"sd\">        String to convert to a float.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    float</span>\n<span class=\"sd\">        Converted float when successful, ``0`` when when failed.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">istring</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_triangle_vertex</span><span class=\"p\">(</span><span class=\"n\">elements_nodes</span><span class=\"p\">,</span> <span class=\"n\">num_nodes_per_element</span><span class=\"p\">,</span> <span class=\"n\">take_all_nodes</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"n\">trg_vertex</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">if</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">==</span> <span class=\"mi\">10</span> <span class=\"ow\">and</span> <span class=\"n\">take_all_nodes</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">elements_nodes</span><span class=\"p\">:</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">==</span> <span class=\"mi\">10</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">take_all_nodes</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">elements_nodes</span><span class=\"p\">:</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">==</span> <span class=\"mi\">6</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">take_all_nodes</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">elements_nodes</span><span class=\"p\">:</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">==</span> <span class=\"mi\">6</span> <span class=\"ow\">and</span> <span class=\"n\">take_all_nodes</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">elements_nodes</span><span class=\"p\">:</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]])</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">==</span> <span class=\"mi\">4</span> <span class=\"ow\">and</span> <span class=\"n\">take_all_nodes</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">elements_nodes</span><span class=\"p\">:</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]])</span>\n            <span class=\"n\">trg_vertex</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]])</span>\n\n    <span class=\"k\">elif</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n        <span class=\"n\">trg_vertex</span> <span class=\"o\">=</span> <span class=\"n\">elements_nodes</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">trg_vertex</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_parse_aedtplt</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">):</span>\n    <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">scalars</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">drawing_found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;$begin Drawing&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                <span class=\"n\">drawing_found</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"n\">l_tmp</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;$end Drawing&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                <span class=\"n\">lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">l_tmp</span><span class=\"p\">)</span>\n                <span class=\"n\">drawing_found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"n\">drawing_found</span><span class=\"p\">:</span>\n                <span class=\"n\">l_tmp</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n                <span class=\"k\">continue</span>\n    <span class=\"k\">for</span> <span class=\"n\">drawing_lines</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n        <span class=\"n\">bounding</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">nodes_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"n\">drawing_lines</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;BoundingBox(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">l</span><span class=\"p\">:</span>\n                <span class=\"n\">bounding</span> <span class=\"o\">=</span> <span class=\"n\">l</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;(&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">bounding</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">bounding</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;Elements(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">l</span><span class=\"p\">:</span>\n                <span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"n\">l</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;(&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">elements</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;Nodes(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">l</span><span class=\"p\">:</span>\n                <span class=\"n\">nodes_list</span> <span class=\"o\">=</span> <span class=\"n\">l</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;(&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">nodes_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">nodes_list</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;ElemSolution(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">l</span><span class=\"p\">:</span>\n                <span class=\"c1\"># convert list of strings to list of floats</span>\n                <span class=\"n\">sols</span> <span class=\"o\">=</span> <span class=\"n\">l</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;(&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">sols</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">is_float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">sols</span><span class=\"p\">]</span>\n                <span class=\"c1\"># sols = [float(i.strip()) for i in sols]</span>\n                <span class=\"n\">num_solution_per_element</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sols</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                <span class=\"n\">num_elements</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                <span class=\"n\">num_nodes</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n                <span class=\"n\">sols</span> <span class=\"o\">=</span> <span class=\"n\">sols</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:]</span>\n                <span class=\"k\">if</span> <span class=\"n\">num_nodes</span> <span class=\"o\">==</span> <span class=\"n\">num_solution_per_element</span> <span class=\"ow\">or</span> <span class=\"n\">num_solution_per_element</span> <span class=\"o\">//</span> <span class=\"n\">num_nodes</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                    <span class=\"n\">sols</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                        <span class=\"n\">sols</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">num_solution_per_element</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sols</span><span class=\"p\">),</span> <span class=\"n\">num_solution_per_element</span><span class=\"p\">)</span>\n                    <span class=\"p\">]</span>\n                    <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">num_solution_per_element</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">sols</span><span class=\"p\">]</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">sols</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                        <span class=\"n\">sols</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">num_solution_per_element</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sols</span><span class=\"p\">),</span> <span class=\"n\">num_solution_per_element</span><span class=\"p\">)</span>\n                    <span class=\"p\">]</span>\n                    <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                        <span class=\"p\">[</span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[::</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"n\">num_solution_per_element</span> <span class=\"o\">*</span> <span class=\"mi\">3</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">sols</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"n\">num_solution_per_element</span> <span class=\"o\">*</span> <span class=\"mi\">3</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">sols</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">::</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"n\">num_solution_per_element</span> <span class=\"o\">*</span> <span class=\"mi\">3</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">sols</span><span class=\"p\">],</span>\n                    <span class=\"p\">]</span>\n\n        <span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">nodes_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">nodes_list</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">nodes_list</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">]]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nodes_list</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">)]</span>\n        <span class=\"n\">num_nodes</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">num_elements</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">elements</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n        <span class=\"n\">element_type</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">=</span> <span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n        <span class=\"n\">header_length</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n        <span class=\"n\">elements_nodes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">elements</span><span class=\"p\">),</span> <span class=\"n\">num_nodes_per_element</span> <span class=\"o\">+</span> <span class=\"n\">header_length</span><span class=\"p\">):</span>\n            <span class=\"n\">elements_nodes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">elements</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">header_length</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_nodes_per_element</span><span class=\"p\">)])</span>\n        <span class=\"k\">if</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n            <span class=\"n\">take_all_nodes</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># solution case</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">take_all_nodes</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>  <span class=\"c1\"># mesh case</span>\n        <span class=\"n\">trg_vertex</span> <span class=\"o\">=</span> <span class=\"n\">_triangle_vertex</span><span class=\"p\">(</span><span class=\"n\">elements_nodes</span><span class=\"p\">,</span> <span class=\"n\">num_nodes_per_element</span><span class=\"p\">,</span> <span class=\"n\">take_all_nodes</span><span class=\"p\">)</span>\n        <span class=\"c1\"># remove duplicates</span>\n        <span class=\"n\">nodup_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">([</span><span class=\"nb\">frozenset</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">trg_vertex</span><span class=\"p\">]))]</span>\n        <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">if</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">solution</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                <span class=\"n\">temps</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"k\">for</span> <span class=\"n\">sol</span> <span class=\"ow\">in</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n                    <span class=\"n\">sv</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n                    <span class=\"n\">sv_i</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n                    <span class=\"n\">sv</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sv</span><span class=\"p\">)</span>\n                    <span class=\"n\">sv_i</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sv_i</span><span class=\"p\">)</span>\n                    <span class=\"k\">for</span> <span class=\"n\">els</span><span class=\"p\">,</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">elements_nodes</span><span class=\"p\">,</span> <span class=\"n\">sol</span><span class=\"p\">):</span>\n                        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">els</span><span class=\"p\">:</span>\n                            <span class=\"n\">sv</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">sv</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sv_i</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n                            <span class=\"n\">sv_i</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n                    <span class=\"n\">temps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">sv</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">sv</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">sv</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n                <span class=\"n\">sv_i</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n                <span class=\"n\">sv</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sv</span><span class=\"p\">)</span>\n                <span class=\"n\">sv_i</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sv_i</span><span class=\"p\">)</span>\n\n                <span class=\"k\">for</span> <span class=\"n\">els</span><span class=\"p\">,</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">elements_nodes</span><span class=\"p\">,</span> <span class=\"n\">solution</span><span class=\"p\">):</span>\n                    <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">els</span><span class=\"p\">:</span>\n                        <span class=\"n\">sv</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">sv</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sv_i</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n                        <span class=\"n\">sv_i</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n                <span class=\"n\">temps</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">sv</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">sv</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())])</span>\n            <span class=\"n\">scalars</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">temps</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">temps</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">array</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">nodup_list</span><span class=\"p\">]</span>\n\n        <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">hstack</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">))</span>\n        <span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">nodes</span><span class=\"p\">))</span>\n        <span class=\"c1\"># surf = pv.PolyData(vertices, faces)</span>\n\n        <span class=\"c1\"># surf.point_data[field.label] = temps</span>\n    <span class=\"c1\"># field.log = log</span>\n    <span class=\"c1\"># field._cached_polydata = surf</span>\n    <span class=\"k\">return</span> <span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">faces</span><span class=\"p\">,</span> <span class=\"n\">scalars</span><span class=\"p\">,</span> <span class=\"n\">log</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_parse_streamline</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">):</span>\n    <span class=\"n\">streamlines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n        <span class=\"n\">new_line</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">streamline</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;Streamline: &quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                <span class=\"n\">new_line</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"k\">if</span> <span class=\"n\">streamline</span><span class=\"p\">:</span>\n                    <span class=\"n\">streamlines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">streamline</span><span class=\"p\">)</span>\n                    <span class=\"n\">streamline</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n            <span class=\"k\">elif</span> <span class=\"n\">new_line</span><span class=\"p\">:</span>\n                <span class=\"n\">streamline</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"n\">streamlines</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">plot_polar_chart</span><span class=\"p\">(</span>\n    <span class=\"n\">plot_data</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">),</span> <span class=\"n\">show_legend</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">snapshot_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n<span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create a matplotlib polar plot based on a list of data.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    plot_data : list of list</span>\n<span class=\"sd\">        List of plot data. Every item has to be in the following format</span>\n<span class=\"sd\">        `[x points, y points, label]`.</span>\n<span class=\"sd\">    size : tuple, optional</span>\n<span class=\"sd\">        Image size in pixel (width, height).</span>\n<span class=\"sd\">    show_legend : bool</span>\n<span class=\"sd\">        Either to show legend or not.</span>\n<span class=\"sd\">    xlabel : str</span>\n<span class=\"sd\">        Plot X label.</span>\n<span class=\"sd\">    ylabel : str</span>\n<span class=\"sd\">        Plot Y label.</span>\n<span class=\"sd\">    title : str</span>\n<span class=\"sd\">        Plot Title label.</span>\n<span class=\"sd\">    snapshot_path : str</span>\n<span class=\"sd\">        Full path to image file if a snapshot is needed.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mf\">100.0</span>\n\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">111</span><span class=\"p\">,</span> <span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s2\">&quot;polar&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">label_id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">legend</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"nb\">object</span> <span class=\"ow\">in</span> <span class=\"n\">plot_data</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"nb\">object</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Trace &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">label_id</span><span class=\"p\">)</span>\n        <span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_theta_zero_location</span><span class=\"p\">(</span><span class=\"s2\">&quot;N&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_theta_direction</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">legend</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">)</span>\n        <span class=\"n\">label_id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"n\">xlabel</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"n\">ylabel</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">show_legend</span><span class=\"p\">:</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">legend</span><span class=\"p\">)</span>\n\n    <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gcf</span><span class=\"p\">()</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">snapshot_path</span><span class=\"p\">:</span>\n        <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">snapshot_path</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">fig</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">plot_3d_chart</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">),</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">snapshot_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create a matplotlib 3D plot based on a list of data.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    plot_data : list of list</span>\n<span class=\"sd\">        List of plot data. Every item has to be in the following format</span>\n<span class=\"sd\">        `[x points, y points, z points, label]`.</span>\n<span class=\"sd\">    size : tuple, optional</span>\n<span class=\"sd\">        Image size in pixel (width, height).</span>\n<span class=\"sd\">    xlabel : str</span>\n<span class=\"sd\">        Plot X label.</span>\n<span class=\"sd\">    ylabel : str</span>\n<span class=\"sd\">        Plot Y label.</span>\n<span class=\"sd\">    title : str</span>\n<span class=\"sd\">        Plot Title label.</span>\n<span class=\"sd\">    snapshot_path : str</span>\n<span class=\"sd\">        Full path to image file if a snapshot is needed.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    :class:`matplotlib.plt`</span>\n<span class=\"sd\">        Matplotlib fig object.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mf\">100.0</span>\n\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">111</span><span class=\"p\">,</span> <span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"s2\">&quot;3d&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">theta_grid</span><span class=\"p\">,</span> <span class=\"n\">phi_grid</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">plot_data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta_grid</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">phi_grid</span><span class=\"p\">)</span>\n        <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">theta_grid</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">phi_grid</span><span class=\"p\">)</span>\n        <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">theta_grid</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"n\">xlabel</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"n\">ylabel</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot_surface</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">rstride</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cstride</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">get_cmap</span><span class=\"p\">(</span><span class=\"s2\">&quot;jet&quot;</span><span class=\"p\">),</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">antialiased</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.8</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gcf</span><span class=\"p\">()</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">snapshot_path</span><span class=\"p\">:</span>\n        <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">snapshot_path</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">fig</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">plot_2d_chart</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">),</span> <span class=\"n\">show_legend</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">snapshot_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create a matplotlib plot based on a list of data.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    plot_data : list of list</span>\n<span class=\"sd\">        List of plot data. Every item has to be in the following format</span>\n<span class=\"sd\">        `[x points, y points, label]`.</span>\n<span class=\"sd\">    size : tuple, optional</span>\n<span class=\"sd\">        Image size in pixel (width, height).</span>\n<span class=\"sd\">    show_legend : bool, optional</span>\n<span class=\"sd\">        Either to show legend or not. The default value is ``True``.</span>\n<span class=\"sd\">    xlabel : str, optional</span>\n<span class=\"sd\">        Plot X label. The default value is ``&quot;&quot;``.</span>\n<span class=\"sd\">    ylabel : str, optional</span>\n<span class=\"sd\">        Plot Y label. The default value is ``&quot;&quot;``.</span>\n<span class=\"sd\">    title : str, optional</span>\n<span class=\"sd\">        Plot Title label. The default value is ``&quot;&quot;``.</span>\n<span class=\"sd\">    snapshot_path : str, optional</span>\n<span class=\"sd\">        Full path to image file if a snapshot is needed.</span>\n<span class=\"sd\">        The default value is ``None``.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    :class:`matplotlib.plt`</span>\n<span class=\"sd\">        Matplotlib fig object.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mf\">100.0</span>\n    <span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figsize</span><span class=\"p\">)</span>\n    <span class=\"n\">label_id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">for</span> <span class=\"n\">plo_obj</span> <span class=\"ow\">in</span> <span class=\"n\">plot_data</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">plo_obj</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Trace &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">label_id</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"k\">if</span> <span class=\"n\">j</span><span class=\"p\">])</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">plo_obj</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"p\">])</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">label</span><span class=\"p\">)</span>\n        <span class=\"n\">label_id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"n\">xlabel</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"n\">ylabel</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">show_legend</span><span class=\"p\">:</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">snapshot_path</span><span class=\"p\">:</span>\n        <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">snapshot_path</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">fig</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">plot_matplotlib</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">),</span> <span class=\"n\">show_legend</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">snapshot_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create a matplotlib plot based on a list of data.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    plot_data : list of list</span>\n<span class=\"sd\">        List of plot data. Every item has to be in the following format</span>\n<span class=\"sd\">        For type ``fill``: `[x points, y points, color, label, alpha, type==&quot;fill&quot;]`.</span>\n<span class=\"sd\">        For type ``path``: `[vertices, codes, color, label, alpha, type==&quot;path&quot;]`.</span>\n<span class=\"sd\">        For type ``contour``: `[vertices, codes, color, label, alpha, line_width, type==&quot;contour&quot;]`.</span>\n<span class=\"sd\">    size : tuple, optional</span>\n<span class=\"sd\">        Image size in pixel (width, height).</span>\n<span class=\"sd\">    show_legend : bool</span>\n<span class=\"sd\">        Either to show legend or not.</span>\n<span class=\"sd\">    xlabel : str</span>\n<span class=\"sd\">        Plot X label.</span>\n<span class=\"sd\">    ylabel : str</span>\n<span class=\"sd\">        Plot Y label.</span>\n<span class=\"sd\">    title : str</span>\n<span class=\"sd\">        Plot Title label.</span>\n<span class=\"sd\">    snapshot_path : str</span>\n<span class=\"sd\">        Full path to image file if a snapshot is needed.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    :class:`matplotlib.plt`</span>\n<span class=\"sd\">        Matplotlib fig object.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mf\">100.0</span>\n    <span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figsize</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">plot_data</span> <span class=\"o\">=</span> <span class=\"n\">ast</span><span class=\"o\">.</span><span class=\"n\">literal_eval</span><span class=\"p\">(</span><span class=\"n\">plot_data</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">points</span> <span class=\"ow\">in</span> <span class=\"n\">plot_data</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;fill&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">fill</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;path&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">patch</span> <span class=\"o\">=</span> <span class=\"n\">PathPatch</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n            <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">patch</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;contour&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">patch</span> <span class=\"o\">=</span> <span class=\"n\">PathPatch</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n            <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">patch</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"n\">xlabel</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"n\">ylabel</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">show_legend</span><span class=\"p\">:</span>\n        <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">()</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">(</span><span class=\"s2\">&quot;equal&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">snapshot_path</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">snapshot_path</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">plt</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">plot_contour</span><span class=\"p\">(</span><span class=\"n\">qty_to_plot</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1600</span><span class=\"p\">),</span> <span class=\"n\">xlabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">snapshot_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create a matplotlib contour plot.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    qty_to_plot : :class:`numpy.ndarray`</span>\n<span class=\"sd\">        Quantity to plot.</span>\n<span class=\"sd\">    x : :class:`numpy.ndarray`</span>\n<span class=\"sd\">        X axis quantity.</span>\n<span class=\"sd\">    y : :class:`numpy.ndarray`</span>\n<span class=\"sd\">        Y axis quantity.</span>\n<span class=\"sd\">    size : tuple, list, optional</span>\n<span class=\"sd\">        Window Size. Default is `(2000,1600)`.</span>\n<span class=\"sd\">    xlabel : str, optional</span>\n<span class=\"sd\">        X Label. Default is `&quot;&quot;`.</span>\n<span class=\"sd\">    ylabel : str, optional</span>\n<span class=\"sd\">        Y Label. Default is `&quot;&quot;`.</span>\n<span class=\"sd\">    title : str, optional</span>\n<span class=\"sd\">        Plot Title Label. Default is `&quot;&quot;`.</span>\n<span class=\"sd\">    levels : int, optional</span>\n<span class=\"sd\">        Colormap levels. Default is `64`.</span>\n<span class=\"sd\">    snapshot_path : str, optional</span>\n<span class=\"sd\">        Full path to image to save. Default is None.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    :class:`matplotlib.plt`</span>\n<span class=\"sd\">        Matplotlib fig object.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">dpi</span> <span class=\"o\">=</span> <span class=\"mf\">100.0</span>\n    <span class=\"n\">figsize</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dpi</span><span class=\"p\">)</span>\n    <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"n\">figsize</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">title</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">xlabel</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"n\">xlabel</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">ylabel</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"n\">ylabel</span><span class=\"p\">)</span>\n\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">contourf</span><span class=\"p\">(</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span>\n        <span class=\"n\">y</span><span class=\"p\">,</span>\n        <span class=\"n\">qty_to_plot</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">,</span>\n        <span class=\"n\">levels</span><span class=\"o\">=</span><span class=\"n\">levels</span><span class=\"p\">,</span>\n        <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s2\">&quot;jet&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">snapshot_path</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"n\">snapshot_path</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">plt</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ObjClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages mesh files to be plotted in pyvista.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    path : str</span>\n<span class=\"sd\">        Full path to the file.</span>\n<span class=\"sd\">    color : str or tuple</span>\n<span class=\"sd\">        Can be a string with color name or a tuple with (r,g,b) values.</span>\n<span class=\"sd\">    opacity : float</span>\n<span class=\"sd\">        Value between 0 to 1 of opacity.</span>\n<span class=\"sd\">    units : str</span>\n<span class=\"sd\">        Model units.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">color</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opacity</span> <span class=\"o\">=</span> <span class=\"n\">opacity</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span>\n\n    <span class=\"nd\">@color</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">CSS4_COLORS</span><span class=\"p\">:</span>\n            <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">CSS4_COLORS</span><span class=\"p\">[</span><span class=\"n\">value</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s2\">&quot;#&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FieldClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class to manage Field data to be plotted in pyvista.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    path : str</span>\n<span class=\"sd\">        Full path to the file.</span>\n<span class=\"sd\">    log_scale : bool, optional</span>\n<span class=\"sd\">        Either if the field has to be plotted log or not. The default value is ``True``.</span>\n<span class=\"sd\">    coordinate_units : str, optional</span>\n<span class=\"sd\">        Fields coordinates units. The default value is ``&quot;meter&quot;``.</span>\n<span class=\"sd\">    opacity : float, optional</span>\n<span class=\"sd\">        Value between 0 to 1 of opacity. The default value is ``1``.</span>\n<span class=\"sd\">    color_map : str, optional</span>\n<span class=\"sd\">        Color map of field plot. The default value is ``&quot;rainbow&quot;``.</span>\n<span class=\"sd\">    label : str, optional</span>\n<span class=\"sd\">        Name of the field. The default value is ``&quot;Field&quot;``.</span>\n<span class=\"sd\">    tolerance : float, optional</span>\n<span class=\"sd\">        Delauny tolerance value used for interpolating points. The default value is ``1e-3``.</span>\n<span class=\"sd\">    headers : int, optional</span>\n<span class=\"sd\">        Number of lines to of the file containing header info that has to be removed.</span>\n<span class=\"sd\">        The default value is ``2``.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">path</span><span class=\"p\">,</span>\n        <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">coordinate_units</span><span class=\"o\">=</span><span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">color_map</span><span class=\"o\">=</span><span class=\"s2\">&quot;jet&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;Field&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span>\n        <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">show_edge</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_scale</span> <span class=\"o\">=</span> <span class=\"n\">log_scale</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">coordinate_units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opacity</span> <span class=\"o\">=</span> <span class=\"n\">opacity</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color_map</span> <span class=\"o\">=</span> <span class=\"n\">color_map</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"n\">label</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">surface_mapping_tolerance</span> <span class=\"o\">=</span> <span class=\"n\">tolerance</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">header_lines</span> <span class=\"o\">=</span> <span class=\"n\">headers</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_edge</span> <span class=\"o\">=</span> <span class=\"n\">show_edge</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_frame</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vector_scale</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\n\n<div class=\"viewcode-block\" id=\"ModelPlotter\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ModelPlotter</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages the data to be plotted with ``pyvista``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    This Class can be instantiated within Pyaedt (with plot_model_object or different field plots</span>\n<span class=\"sd\">    and standalone).</span>\n<span class=\"sd\">    Here an example of standalone project</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; model = ModelPlotter()</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.add_object(r&#39;D:\\Simulation\\antenna.obj&#39;, (200,20,255), 0.6, &quot;in&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.add_object(r&#39;D:\\Simulation\\helix.obj&#39;, (0,255,0), 0.5, &quot;in&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.add_field_from_file(r&#39;D:\\Simulation\\helic_antenna.csv&#39;, True, &quot;meter&quot;, 1)</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.background_color = (0,0,0)</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.plot()</span>\n\n<span class=\"sd\">    And here an example of animation:</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; model = ModelPlotter()</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.add_object(r&#39;D:\\Simulation\\antenna.obj&#39;, (200,20,255), 0.6, &quot;in&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.add_object(r&#39;D:\\Simulation\\helix.obj&#39;, (0,255,0), 0.5, &quot;in&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; frames = [r&#39;D:\\Simulation\\helic_antenna.csv&#39;, r&#39;D:\\Simulation\\helic_antenna_10.fld&#39;,</span>\n<span class=\"sd\">    ...           r&#39;D:\\Simulation\\helic_antenna_20.fld&#39;, r&#39;D:\\Simulation\\helic_antenna_30.fld&#39;,</span>\n<span class=\"sd\">    ...           r&#39;D:\\Simulation\\helic_antenna_40.fld&#39;]</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.gif_file = r&quot;D:\\Simulation\\animation.gif&quot;</span>\n<span class=\"sd\">    &gt;&gt;&gt; model.animate()</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_objects</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_frames</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_axes</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_legend</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_grid</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span> <span class=\"o\">=</span> <span class=\"n\">is_notebook</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gif_file</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_image</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">windows_size</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">600</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">windows_size</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">768</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_orientation</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;xy&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;meter&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frame_per_seconds</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_plot_meshes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_min</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_max</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_file</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_camera_position</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;yz&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_view_up</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_focal_point</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll_angle</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_azimuth_angle</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_elevation_angle</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zoom</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_isometric_view</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color_bar</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">array_coordinates</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x_scale</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_y_scale</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_z_scale</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_fields_in_db</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">convert_fields_in_db</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Either if convert the fields before plotting in dB10. Log scale will be disabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_fields_in_db</span>\n\n    <span class=\"nd\">@convert_fields_in_db</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">convert_fields_in_db</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_convert_fields_in_db</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">x_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Scale plot on X.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x_scale</span>\n\n    <span class=\"nd\">@x_scale</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">x_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x_scale</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">y_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Scale plot on Y.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_y_scale</span>\n\n    <span class=\"nd\">@y_scale</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">y_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_y_scale</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">z_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Scale plot on Z.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_z_scale</span>\n\n    <span class=\"nd\">@z_scale</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">z_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_z_scale</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">isometric_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable or disable the default iso view.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : bool</span>\n<span class=\"sd\">            Either if iso view is enabled or disabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_isometric_view</span>\n\n    <span class=\"nd\">@isometric_view</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">isometric_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_isometric_view</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">view_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the camera view axis. It disables the default iso view.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : tuple</span>\n<span class=\"sd\">            Value of camera view position.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_view_up</span>\n\n    <span class=\"nd\">@view_up</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">view_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_view_up</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_view_up</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">focal_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the camera focal point value. It disables the default iso view.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : tuple</span>\n<span class=\"sd\">            Value of focal point position.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_focal_point</span>\n\n    <span class=\"nd\">@focal_point</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">focal_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_focal_point</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_focal_point</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">camera_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get or set the camera position value. This parameter disables the default iso view.</span>\n<span class=\"sd\">        Value for the camera position. The value is for ``&quot;xy&quot;``, ``&quot;xz&quot;`` or ``&quot;yz&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_camera_position</span>\n\n    <span class=\"nd\">@camera_position</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">camera_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_camera_position</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_camera_position</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the roll angle value. It disables the default iso view.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : float</span>\n<span class=\"sd\">            Value of roll angle in degrees.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll_angle</span>\n\n    <span class=\"nd\">@roll_angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll_angle</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">azimuth_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the azimuth angle value. It disables the default iso view.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : float</span>\n<span class=\"sd\">            Value of azimuth angle in degrees.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_azimuth_angle</span>\n\n    <span class=\"nd\">@azimuth_angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">azimuth_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_azimuth_angle</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_default_iso_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">elevation_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the elevation angle value. It disables the default iso view.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : float</span>\n<span class=\"sd\">            Value of elevation angle in degrees.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_elevation_angle</span>\n\n    <span class=\"nd\">@elevation_angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">elevation_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_elevation_angle</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_default_iso_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">zoom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the zoom value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        value : float</span>\n<span class=\"sd\">            Value of zoom in degrees.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zoom</span>\n\n    <span class=\"nd\">@zoom</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">zoom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_zoom</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.set_orientation\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.set_orientation/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.set_orientation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_orientation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">camera_position</span><span class=\"o\">=</span><span class=\"s2\">&quot;xy&quot;</span><span class=\"p\">,</span> <span class=\"n\">roll_angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">azimuth_angle</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"n\">elevation_angle</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Change the plot default orientation.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        camera_position : str</span>\n<span class=\"sd\">            Camera view. Default is `&quot;xy&quot;`. Options are `&quot;xz&quot;` and `&quot;yz&quot;`.</span>\n<span class=\"sd\">        roll_angle : int, float</span>\n<span class=\"sd\">            Roll camera angle on the specified the camera_position.</span>\n<span class=\"sd\">        azimuth_angle : int, float</span>\n<span class=\"sd\">            Azimuth angle of camera on the specified the camera_position.</span>\n<span class=\"sd\">        elevation_angle : int, float</span>\n<span class=\"sd\">            Elevation camera angle on the specified the camera_position.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">camera_position</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;xy&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;yz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;xz&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span> <span class=\"o\">=</span> <span class=\"n\">camera_position</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;Plane has to be one of xy, xz, yz.&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_angle</span> <span class=\"o\">=</span> <span class=\"n\">roll_angle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">azimuth_angle</span> <span class=\"o\">=</span> <span class=\"n\">azimuth_angle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">elevation_angle</span> <span class=\"o\">=</span> <span class=\"n\">elevation_angle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_default_iso_view</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">background_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Background color.</span>\n<span class=\"sd\">        It can be a tuple of (r,g,b)  or color name.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_color</span>\n\n    <span class=\"nd\">@background_color</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">background_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_color</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">CSS4_COLORS</span><span class=\"p\">:</span>\n            <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">CSS4_COLORS</span><span class=\"p\">[</span><span class=\"n\">value</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s2\">&quot;#&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_color</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">background_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Background image.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_image</span>\n\n    <span class=\"nd\">@background_image</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">background_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_background_image</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of fields object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modules.AdvancedPostProcessing.FieldClass`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">frames</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Frames list for animation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modules.AdvancedPostProcessing.FieldClass`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_frames</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of class objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modules.AdvancedPostProcessing.ObjClass`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_objects</span>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.add_object\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_object/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_object\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cad_path</span><span class=\"p\">,</span> <span class=\"n\">cad_color</span><span class=\"o\">=</span><span class=\"s2\">&quot;dodgerblue&quot;</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add an mesh file to the scenario. It can be obj or any of pyvista supported files.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cad_path : str</span>\n<span class=\"sd\">            Full path to the file.</span>\n<span class=\"sd\">        cad_color : str or tuple</span>\n<span class=\"sd\">            Can be a string with color name or a tuple with (r,g,b) values.</span>\n<span class=\"sd\">            The default value is ``&quot;dodgerblue&quot;``.</span>\n<span class=\"sd\">        opacity : float</span>\n<span class=\"sd\">            Value between 0 to 1 of opacity. The default value is ``1``.</span>\n<span class=\"sd\">        units : str</span>\n<span class=\"sd\">            Model units. The default value is ``&quot;mm&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_objects</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">ObjClass</span><span class=\"p\">(</span><span class=\"n\">cad_path</span><span class=\"p\">,</span> <span class=\"n\">cad_color</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.add_field_from_file\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_field_from_file/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_field_from_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_field_from_file</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">field_path</span><span class=\"p\">,</span>\n        <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">coordinate_units</span><span class=\"o\">=</span><span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">color_map</span><span class=\"o\">=</span><span class=\"s2\">&quot;jet&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">label_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Field&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_mapping_tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span>\n        <span class=\"n\">header_lines</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">show_edges</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a field file to the scenario.</span>\n<span class=\"sd\">        It can be aedtplt, fld or csv file or any txt file with 4 column [x,y,z,field].</span>\n<span class=\"sd\">        If text file they have to be space separated column.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        field_path : str</span>\n<span class=\"sd\">            Full path to the file.</span>\n<span class=\"sd\">        log_scale : bool</span>\n<span class=\"sd\">            Either if the field has to be plotted log or not.</span>\n<span class=\"sd\">        coordinate_units : str</span>\n<span class=\"sd\">            Fields coordinates units.</span>\n<span class=\"sd\">        opacity : float</span>\n<span class=\"sd\">            Value between 0 to 1 of opacity.</span>\n<span class=\"sd\">        color_map : str</span>\n<span class=\"sd\">            Color map of field plot. Default rainbow.</span>\n<span class=\"sd\">        label_name : str, optional</span>\n<span class=\"sd\">            Name of the field.</span>\n<span class=\"sd\">        surface_mapping_tolerance : float, optional</span>\n<span class=\"sd\">            Delauny tolerance value used for interpolating points.</span>\n<span class=\"sd\">        header_lines : int</span>\n<span class=\"sd\">            Number of lines to of the file containing header info that has to be removed.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"n\">FieldClass</span><span class=\"p\">(</span>\n                <span class=\"n\">field_path</span><span class=\"p\">,</span>\n                <span class=\"n\">log_scale</span><span class=\"p\">,</span>\n                <span class=\"n\">coordinate_units</span><span class=\"p\">,</span>\n                <span class=\"n\">opacity</span><span class=\"p\">,</span>\n                <span class=\"n\">color_map</span><span class=\"p\">,</span>\n                <span class=\"n\">label_name</span><span class=\"p\">,</span>\n                <span class=\"n\">surface_mapping_tolerance</span><span class=\"p\">,</span>\n                <span class=\"n\">header_lines</span><span class=\"p\">,</span>\n                <span class=\"n\">show_edges</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.add_frames_from_file\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_frames_from_file/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_frames_from_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_frames_from_file</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">field_files</span><span class=\"p\">,</span>\n        <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">coordinate_units</span><span class=\"o\">=</span><span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">color_map</span><span class=\"o\">=</span><span class=\"s2\">&quot;jet&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">label_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Field&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_mapping_tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span>\n        <span class=\"n\">header_lines</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a field file to the scenario. It can be aedtplt, fld or csv file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        field_files : list</span>\n<span class=\"sd\">            List of full path to frame file.</span>\n<span class=\"sd\">        log_scale : bool</span>\n<span class=\"sd\">            Either if the field has to be plotted log or not.</span>\n<span class=\"sd\">        coordinate_units : str</span>\n<span class=\"sd\">            Fields coordinates units.</span>\n<span class=\"sd\">        opacity : float</span>\n<span class=\"sd\">            Value between 0 to 1 of opacity.</span>\n<span class=\"sd\">        color_map : str</span>\n<span class=\"sd\">            Color map of field plot. Default rainbow.</span>\n<span class=\"sd\">        label_name : str, optional</span>\n<span class=\"sd\">            Name of the field.</span>\n<span class=\"sd\">        surface_mapping_tolerance : float, optional</span>\n<span class=\"sd\">            Delauny tolerance value used for interpolating points.</span>\n<span class=\"sd\">        header_lines : int</span>\n<span class=\"sd\">            Number of lines to of the file containing header info that has to be removed.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">field_files</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_frames</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"n\">FieldClass</span><span class=\"p\">(</span>\n                    <span class=\"n\">field</span><span class=\"p\">,</span>\n                    <span class=\"n\">log_scale</span><span class=\"p\">,</span>\n                    <span class=\"n\">coordinate_units</span><span class=\"p\">,</span>\n                    <span class=\"n\">opacity</span><span class=\"p\">,</span>\n                    <span class=\"n\">color_map</span><span class=\"p\">,</span>\n                    <span class=\"n\">label_name</span><span class=\"p\">,</span>\n                    <span class=\"n\">surface_mapping_tolerance</span><span class=\"p\">,</span>\n                    <span class=\"n\">header_lines</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_frames</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_is_frame</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.add_field_from_data\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_field_from_data/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.add_field_from_data\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_field_from_data</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">coordinates</span><span class=\"p\">,</span>\n        <span class=\"n\">fields_data</span><span class=\"p\">,</span>\n        <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">coordinate_units</span><span class=\"o\">=</span><span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">color_map</span><span class=\"o\">=</span><span class=\"s2\">&quot;jet&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">label_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Field&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_mapping_tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">,</span>\n        <span class=\"n\">show_edges</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add field data to the scenario.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        coordinates : list of list</span>\n<span class=\"sd\">            List of list [x,y,z] coordinates.</span>\n<span class=\"sd\">        fields_data : list</span>\n<span class=\"sd\">            List of list Fields Value.</span>\n<span class=\"sd\">        log_scale : bool</span>\n<span class=\"sd\">            Either if the field has to be plotted log or not.</span>\n<span class=\"sd\">        coordinate_units : str</span>\n<span class=\"sd\">            Fields coordinates units.</span>\n<span class=\"sd\">        opacity : float</span>\n<span class=\"sd\">            Value between 0 to 1 of opacity.</span>\n<span class=\"sd\">        color_map : str</span>\n<span class=\"sd\">            Color map of field plot. Default rainbow.</span>\n<span class=\"sd\">        label_name : str, optional</span>\n<span class=\"sd\">            Name of the field.</span>\n<span class=\"sd\">        surface_mapping_tolerance : float, optional</span>\n<span class=\"sd\">            Delauny tolerance value used for interpolating points.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"n\">FieldClass</span><span class=\"p\">(</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">log_scale</span><span class=\"p\">,</span> <span class=\"n\">coordinate_units</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"p\">,</span> <span class=\"n\">color_map</span><span class=\"p\">,</span> <span class=\"n\">label_name</span><span class=\"p\">,</span> <span class=\"n\">surface_mapping_tolerance</span><span class=\"p\">,</span> <span class=\"n\">show_edges</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">coordinates</span><span class=\"p\">)</span>\n        <span class=\"n\">filedata</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">PolyData</span><span class=\"p\">(</span><span class=\"n\">vertices</span><span class=\"p\">)</span>\n        <span class=\"n\">filedata</span> <span class=\"o\">=</span> <span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">delaunay_2d</span><span class=\"p\">(</span><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"n\">surface_mapping_tolerance</span><span class=\"p\">)</span>\n        <span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">fields_data</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"n\">filedata</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_read_mesh_files</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">read_frames</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">cad</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">:</span>\n                <span class=\"n\">filedata</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"n\">filedata</span>\n            <span class=\"n\">color_cad</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">255</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">]</span>\n            <span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_mesh</span><span class=\"p\">(</span><span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">color_cad</span><span class=\"p\">,</span> <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span> <span class=\"o\">+=</span> <span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span> <span class=\"o\">=</span> <span class=\"n\">cad</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span>\n        <span class=\"n\">obj_to_iterate</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">read_frames</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">:</span>\n                <span class=\"n\">obj_to_iterate</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">obj_to_iterate</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;.aedtplt&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">:</span>\n                    <span class=\"n\">vertices</span><span class=\"p\">,</span> <span class=\"n\">faces</span><span class=\"p\">,</span> <span class=\"n\">scalars</span><span class=\"p\">,</span> <span class=\"n\">log1</span> <span class=\"o\">=</span> <span class=\"n\">_parse_aedtplt</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span><span class=\"p\">:</span>\n                        <span class=\"n\">scalars</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">multiply</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log10</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">scalars</span><span class=\"p\">]</span>\n                    <span class=\"n\">fields_vals</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">PolyData</span><span class=\"p\">(</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">faces</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                    <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"n\">fields_vals</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">scalars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                        <span class=\"n\">vector_scale</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">fields_vals</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">fields_vals</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"p\">(</span>\n                            <span class=\"mi\">50</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">scalars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">scalars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">())</span>\n                        <span class=\"p\">)</span>\n\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">[</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">scalars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">T</span> <span class=\"o\">*</span> <span class=\"n\">vector_scale</span>\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Vector &quot;</span> <span class=\"o\">+</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span>\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span>\n                            <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">scalars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">T</span><span class=\"p\">]</span>\n                        <span class=\"p\">)</span>\n\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">scalars</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">log1</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                    <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                    <span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                        <span class=\"k\">try</span><span class=\"p\">:</span>\n                            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">header_lines</span> <span class=\"p\">:]</span>\n                            <span class=\"k\">if</span> <span class=\"s2\">&quot;.csv&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">:</span>\n                                <span class=\"n\">sniffer</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">Sniffer</span><span class=\"p\">()</span>\n                                <span class=\"n\">delimiter</span> <span class=\"o\">=</span> <span class=\"n\">sniffer</span><span class=\"o\">.</span><span class=\"n\">sniff</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">delimiter</span>\n                            <span class=\"k\">else</span><span class=\"p\">:</span>\n                                <span class=\"n\">delimiter</span> <span class=\"o\">=</span> <span class=\"s2\">&quot; &quot;</span>\n                            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2000</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_is_frame</span><span class=\"p\">:</span>\n                                <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"n\">fromkeys</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">))</span>\n                                <span class=\"c1\"># decimate = 2</span>\n                                <span class=\"c1\"># del lines[decimate - 1 :: decimate]</span>\n                        <span class=\"k\">except</span><span class=\"p\">:</span>\n                            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n                            <span class=\"n\">tmp</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">delimiter</span><span class=\"p\">)</span>\n                            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n                                <span class=\"k\">continue</span>\n                            <span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])])</span>\n                            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n                                <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])])</span>\n                                <span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                            <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">9</span><span class=\"p\">:</span>\n                                <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]),</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">])])</span>\n                                <span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                            <span class=\"k\">else</span><span class=\"p\">:</span>\n                                <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">tmp</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]))</span>\n                    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                            <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">log10</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">]</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">log10</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">value</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span> <span class=\"n\">nodes</span><span class=\"p\">:</span>\n                        <span class=\"k\">try</span><span class=\"p\">:</span>\n                            <span class=\"n\">conv</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">]</span>\n                        <span class=\"k\">except</span><span class=\"p\">:</span>\n                            <span class=\"n\">conv</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                        <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">nodes</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">conv</span>\n                        <span class=\"n\">filedata</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">PolyData</span><span class=\"p\">(</span><span class=\"n\">vertices</span><span class=\"p\">)</span>\n                        <span class=\"k\">if</span> <span class=\"n\">is_vector</span><span class=\"p\">:</span>\n                            <span class=\"n\">vector_scale</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">bounds</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"p\">(</span>\n                                <span class=\"mi\">20</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">())</span>\n                            <span class=\"p\">)</span>\n                            <span class=\"n\">filedata</span><span class=\"p\">[</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">vector_scale</span>\n                            <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Vector &quot;</span> <span class=\"o\">+</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span>\n                            <span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)])</span>\n                            <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">is_vector</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">filedata</span> <span class=\"o\">=</span> <span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">delaunay_2d</span><span class=\"p\">(</span><span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">surface_mapping_tolerance</span><span class=\"p\">)</span>\n                            <span class=\"n\">filedata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">)</span>\n                        <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"n\">filedata</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_buttons</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">40</span><span class=\"p\">)</span>\n        <span class=\"n\">startpos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">size</span>\n        <span class=\"n\">endpos</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n        <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">background_color</span>\n        <span class=\"n\">axes_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">0.5</span> <span class=\"k\">else</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">color</span><span class=\"p\">]</span>\n        <span class=\"n\">buttons</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">texts</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">max_elements</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">startpos</span> <span class=\"o\">-</span> <span class=\"n\">endpos</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">size</span> <span class=\"o\">//</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">SetVisibilityCallback</span><span class=\"p\">:</span>\n            <span class=\"sd\">&quot;&quot;&quot;Helper callback to keep a reference to the actor being modified.&quot;&quot;&quot;</span>\n\n            <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">actor</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actor</span> <span class=\"o\">=</span> <span class=\"n\">actor</span>\n\n            <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span><span class=\"o\">.</span><span class=\"n\">SetVisibility</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actor</span><span class=\"o\">.</span><span class=\"n\">SetVisibility</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">ChangePageCallback</span><span class=\"p\">:</span>\n            <span class=\"sd\">&quot;&quot;&quot;Helper callback to keep a reference to the actor being modified.&quot;&quot;&quot;</span>\n\n            <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">plot</span><span class=\"p\">,</span> <span class=\"n\">actor</span><span class=\"p\">,</span> <span class=\"n\">axes_color</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span> <span class=\"o\">=</span> <span class=\"n\">plot</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span> <span class=\"o\">=</span> <span class=\"n\">actor</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">endpos</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">40</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">startpos</span> <span class=\"o\">=</span> <span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_elements</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">startpos</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">endpos</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">//</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_elements</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axes_color</span> <span class=\"o\">=</span> <span class=\"n\">axes_color</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n            <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                <span class=\"n\">startpos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">startpos</span>\n                <span class=\"k\">while</span> <span class=\"n\">k</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_elements</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">k</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">remove_actor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">])</span>\n                    <span class=\"n\">k</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n                <span class=\"k\">while</span> <span class=\"n\">k</span> <span class=\"o\">&lt;</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_elements</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span><span class=\"p\">)):</span>\n                    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span><span class=\"p\">):</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                    <span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">SetVisibilityCallback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">])</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">add_checkbox_button_widget</span><span class=\"p\">(</span>\n                        <span class=\"n\">callback</span><span class=\"p\">,</span>\n                        <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span><span class=\"o\">.</span><span class=\"n\">GetVisibility</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"n\">startpos</span><span class=\"p\">),</span>\n                        <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">,</span>\n                        <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"n\">color_on</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">255</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">],</span>\n                        <span class=\"n\">color_off</span><span class=\"o\">=</span><span class=\"s2\">&quot;grey&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">background_color</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">add_text</span><span class=\"p\">(</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actors</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                            <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">25.0</span><span class=\"p\">,</span> <span class=\"n\">startpos</span><span class=\"p\">),</span>\n                            <span class=\"n\">font_size</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">//</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n                            <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axes_color</span><span class=\"p\">,</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">startpos</span> <span class=\"o\">=</span> <span class=\"n\">startpos</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">//</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n                    <span class=\"n\">k</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n            <span class=\"n\">actors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_objects</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">actors</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_objects</span>\n        <span class=\"c1\"># if texts and len(texts) &lt; len(actors):</span>\n        <span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">ChangePageCallback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"p\">,</span> <span class=\"n\">actors</span><span class=\"p\">,</span> <span class=\"n\">axes_color</span><span class=\"p\">)</span>\n\n        <span class=\"n\">callback</span><span class=\"o\">.</span><span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">callback</span><span class=\"o\">.</span><span class=\"n\">max_elements</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">actors</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_checkbox_button_widget</span><span class=\"p\">(</span>\n                <span class=\"n\">callback</span><span class=\"p\">,</span>\n                <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">5.0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n                <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mf\">1.5</span> <span class=\"o\">*</span> <span class=\"n\">size</span><span class=\"p\">),</span>\n                <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"n\">color_on</span><span class=\"o\">=</span><span class=\"n\">axes_color</span><span class=\"p\">,</span>\n                <span class=\"n\">color_off</span><span class=\"o\">=</span><span class=\"n\">axes_color</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_text</span><span class=\"p\">(</span><span class=\"s2\">&quot;Next&quot;</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">50.0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">window_size</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">font_size</span><span class=\"o\">=</span><span class=\"n\">size</span> <span class=\"o\">//</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">&quot;grey&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">button_widgets</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n            <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.plot\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.plot/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.plot\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">export_image_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Plot the current available Data. With `s` key a screenshot is saved in export_image_path or in tempdir.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        export_image_path : str</span>\n<span class=\"sd\">            Path to image to save.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Plotter</span><span class=\"p\">(</span><span class=\"n\">notebook</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">,</span> <span class=\"n\">off_screen</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">windows_size</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_image</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_background_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_image</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">background_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">255</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_color</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_read_mesh_files</span><span class=\"p\">()</span>\n        <span class=\"n\">axes_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">128</span> <span class=\"k\">else</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_color</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color_bar</span><span class=\"p\">:</span>\n            <span class=\"n\">sargs</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n                <span class=\"n\">title_font_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"n\">label_font_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"n\">shadow</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">n_labels</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span>\n                <span class=\"n\">italic</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"si\">%.1f</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">font_family</span><span class=\"o\">=</span><span class=\"s2\">&quot;arial&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">interactive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">axes_color</span><span class=\"p\">,</span>\n                <span class=\"n\">vertical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">sargs</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n                <span class=\"n\">position_x</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"n\">position_y</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">is_vector</span><span class=\"p\">:</span>\n                <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">set_active_vectors</span><span class=\"p\">(</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">[</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">[</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">vector_scale</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_mesh</span><span class=\"p\">(</span>\n                    <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">arrows</span><span class=\"p\">,</span>\n                    <span class=\"n\">scalars</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span>\n                    <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">False</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span> <span class=\"k\">else</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">log_scale</span><span class=\"p\">,</span>\n                    <span class=\"n\">scalar_bar_args</span><span class=\"o\">=</span><span class=\"n\">sargs</span><span class=\"p\">,</span>\n                    <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">color_map</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">[</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">[</span><span class=\"s2\">&quot;vectors&quot;</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">vector_scale</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_max</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_min</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_mesh</span><span class=\"p\">(</span>\n                    <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">,</span>\n                    <span class=\"n\">scalars</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span>\n                    <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">False</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span> <span class=\"k\">else</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">log_scale</span><span class=\"p\">,</span>\n                    <span class=\"n\">scalar_bar_args</span><span class=\"o\">=</span><span class=\"n\">sargs</span><span class=\"p\">,</span>\n                    <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">color_map</span><span class=\"p\">,</span>\n                    <span class=\"n\">clim</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_min</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_max</span><span class=\"p\">],</span>\n                    <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">,</span>\n                    <span class=\"n\">show_edges</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">show_edge</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_mesh</span><span class=\"p\">(</span>\n                    <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">,</span>\n                    <span class=\"n\">scalars</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span>\n                    <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">False</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span> <span class=\"k\">else</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">log_scale</span><span class=\"p\">,</span>\n                    <span class=\"n\">scalar_bar_args</span><span class=\"o\">=</span><span class=\"n\">sargs</span><span class=\"p\">,</span>\n                    <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">color_map</span><span class=\"p\">,</span>\n                    <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">,</span>\n                    <span class=\"n\">show_edges</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">show_edge</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x_scale</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y_scale</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">z_scale</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_legend</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_buttons</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_axes</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show_axes</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_grid</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show_grid</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">axes_color</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_bounding_box</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">axes_color</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_focus</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">focal_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">focal_point</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">viewup</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">view_up</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera_position</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">focal_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">focal_point</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">azimuth</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">azimuth_angle</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">roll</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_angle</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">elevation</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">elevation_angle</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">zoom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zoom</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">export_image_path</span><span class=\"p\">:</span>\n            <span class=\"n\">path_image</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">export_image_path</span><span class=\"p\">)</span>\n            <span class=\"n\">root_name</span><span class=\"p\">,</span> <span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">export_image_path</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">path_image</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">gettempdir</span><span class=\"p\">()</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"nb\">format</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;.png&quot;</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">root_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Image&quot;</span>  <span class=\"c1\"># pragma: no cover</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">s_callback</span><span class=\"p\">():</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"sd\">&quot;&quot;&quot;save screenshots&quot;&quot;&quot;</span>\n            <span class=\"n\">exp</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                <span class=\"n\">path_image</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}{}{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">root_name</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">&quot;%Y_%M_</span><span class=\"si\">%d</span><span class=\"s2\">_%H-%M-%S&quot;</span><span class=\"p\">),</span> <span class=\"nb\">format</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">screenshot</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">,</span> <span class=\"n\">return_img</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_key_event</span><span class=\"p\">(</span><span class=\"s2\">&quot;s&quot;</span><span class=\"p\">,</span> <span class=\"n\">s_callback</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">export_image_path</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">screenshot</span><span class=\"o\">=</span><span class=\"n\">export_image_path</span><span class=\"p\">,</span> <span class=\"n\">full_screen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>  <span class=\"c1\"># pragma: no cover</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">full_screen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># pragma: no cover</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">image_file</span> <span class=\"o\">=</span> <span class=\"n\">export_image_path</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.clean_cache_and_files\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.clean_cache_and_files/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.clean_cache_and_files\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">clean_cache_and_files</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">remove_objs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">remove_fields</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">clean_cache</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Clean downloaded files, and, on demand, also the cached meshes.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        remove_objs : bool</span>\n<span class=\"sd\">        remove_fields : bool</span>\n<span class=\"sd\">        clean_cache : bool</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">remove_objs</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">):</span>\n                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">clean_cache</span><span class=\"p\">:</span>\n                    <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                    <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">remove_fields</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">):</span>\n                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">clean_cache</span><span class=\"p\">:</span>\n                    <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                    <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.animate\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.animate/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.animate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">animate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Animate the current field plot.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Number of Fields have to be greater than 1 to do an animation.&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Plotter</span><span class=\"p\">(</span><span class=\"n\">notebook</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">,</span> <span class=\"n\">off_screen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">windows_size</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Plotter</span><span class=\"p\">(</span><span class=\"n\">notebook</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">,</span> <span class=\"n\">off_screen</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">windows_size</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_image</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_background_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_image</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">background_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">255</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_color</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_read_mesh_files</span><span class=\"p\">(</span><span class=\"n\">read_frames</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"n\">axes_color</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">128</span> <span class=\"k\">else</span> <span class=\"mi\">1</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">background_color</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x_scale</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y_scale</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">z_scale</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_axes</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show_axes</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_grid</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show_grid</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">axes_color</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_bounding_box</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">axes_color</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">show_legend</span><span class=\"p\">:</span>\n            <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">:</span>\n                <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">255</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">]])</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">:</span>\n                <span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;red&quot;</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_legend</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">bcolor</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">face</span><span class=\"o\">=</span><span class=\"s2\">&quot;circle&quot;</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">0.15</span><span class=\"p\">,</span> <span class=\"mf\">0.15</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">focal_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">focal_point</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">up</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">view_up</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera_position</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">camera_position</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">azimuth</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">azimuth_angle</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">roll</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_angle</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">elevation</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">elevation_angle</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">isometric_view</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">zoom</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zoom</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_animating</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gif_file</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">open_gif</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gif_file</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">q_callback</span><span class=\"p\">():</span>\n            <span class=\"sd\">&quot;&quot;&quot;exit when user wants to leave&quot;&quot;&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_animating</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pause</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">p_callback</span><span class=\"p\">():</span>\n            <span class=\"sd\">&quot;&quot;&quot;exit when user wants to leave&quot;&quot;&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pause</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pause</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_text</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Press p for Play/Pause, Press q to exit &quot;</span><span class=\"p\">,</span> <span class=\"n\">font_size</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"s2\">&quot;upper_left&quot;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">axes_color</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_text</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"n\">font_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">axes_color</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_key_event</span><span class=\"p\">(</span><span class=\"s2\">&quot;q&quot;</span><span class=\"p\">,</span> <span class=\"n\">q_callback</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_key_event</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">p_callback</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color_bar</span><span class=\"p\">:</span>\n            <span class=\"n\">sargs</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n                <span class=\"n\">title_font_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"n\">label_font_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"n\">shadow</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">n_labels</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span>\n                <span class=\"n\">italic</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">fmt</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"si\">%.1f</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">font_family</span><span class=\"o\">=</span><span class=\"s2\">&quot;arial&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">sargs</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n                <span class=\"n\">position_x</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"n\">position_y</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fields</span><span class=\"p\">:</span>\n            <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_mesh</span><span class=\"p\">(</span>\n                <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">,</span>\n                <span class=\"n\">scalars</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span>\n                <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">False</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span> <span class=\"k\">else</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">log_scale</span><span class=\"p\">,</span>\n                <span class=\"n\">scalar_bar_args</span><span class=\"o\">=</span><span class=\"n\">sargs</span><span class=\"p\">,</span>\n                <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">color_map</span><span class=\"p\">,</span>\n                <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"c1\"># run until q is pressed</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">set_focus</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">)</span>\n\n        <span class=\"n\">cpos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">(</span><span class=\"n\">interactive</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">auto_close</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">interactive_update</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_min</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_max</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">mins</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_min</span>\n            <span class=\"n\">maxs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_max</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">mins</span> <span class=\"o\">=</span> <span class=\"mf\">1e20</span>\n            <span class=\"n\">maxs</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1e20</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">mins</span><span class=\"p\">:</span>\n                    <span class=\"n\">mins</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"n\">maxs</span><span class=\"p\">:</span>\n                    <span class=\"n\">maxs</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">])</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_cached_mesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">add_mesh</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"p\">,</span>\n            <span class=\"n\">scalars</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span>\n            <span class=\"n\">log_scale</span><span class=\"o\">=</span><span class=\"kc\">False</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">convert_fields_in_db</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">log_scale</span><span class=\"p\">,</span>\n            <span class=\"n\">scalar_bar_args</span><span class=\"o\">=</span><span class=\"n\">sargs</span><span class=\"p\">,</span>\n            <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">color_map</span><span class=\"p\">,</span>\n            <span class=\"n\">clim</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">mins</span><span class=\"p\">,</span> <span class=\"n\">maxs</span><span class=\"p\">],</span>\n            <span class=\"n\">show_edges</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"n\">pickable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">smooth_shading</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;FieldPlot&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">opacity</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">opacity</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">force_redraw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gif_file</span><span class=\"p\">:</span>\n            <span class=\"n\">first_loop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">write_frame</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">first_loop</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">while</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_animating</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pause</span><span class=\"p\">:</span>\n                <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">force_redraw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">continue</span>\n            <span class=\"c1\"># p.remove_actor(&quot;FieldPlot&quot;)</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n                <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                <span class=\"n\">first_loop</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">scalars</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_cached_polydata</span><span class=\"o\">.</span><span class=\"n\">point_data</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">update_scalars</span><span class=\"p\">(</span><span class=\"n\">scalars</span><span class=\"p\">,</span> <span class=\"n\">render</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ren_win&quot;</span><span class=\"p\">):</span>\n                <span class=\"k\">break</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frame_per_seconds</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">)))</span>\n            <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">force_redraw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">first_loop</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">write_frame</span><span class=\"p\">()</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gif_file</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gif_file</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelPlotter.generate_geometry_mesh\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.AdvancedPostProcessing.ModelPlotter.generate_geometry_mesh/#pyaedt.modules.AdvancedPostProcessing.ModelPlotter.generate_geometry_mesh\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">generate_geometry_mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Generate mesh for objects only.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        Mesh</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pv</span> <span class=\"o\">=</span> <span class=\"n\">pv</span><span class=\"o\">.</span><span class=\"n\">Plotter</span><span class=\"p\">(</span><span class=\"n\">notebook</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_notebook</span><span class=\"p\">,</span> <span class=\"n\">off_screen</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">off_screen</span><span class=\"p\">,</span> <span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">windows_size</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_read_mesh_files</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">array_coordinates</span><span class=\"p\">:</span>\n            <span class=\"n\">duplicate_mesh</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">offset_xyz</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">array_coordinates</span><span class=\"p\">:</span>\n                <span class=\"n\">translated_mesh</span> <span class=\"o\">=</span> <span class=\"n\">duplicate_mesh</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n                <span class=\"n\">translated_mesh</span><span class=\"o\">.</span><span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"n\">offset_xyz</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span> <span class=\"o\">+=</span> <span class=\"n\">translated_mesh</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">meshes</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/generic/plot", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}