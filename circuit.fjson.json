{"parents": [{"link": "../../", "title": "Module code"}], "title": "pyaedt.circuit", "body": "<h1>Source code for pyaedt.circuit</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;This module contains the ``Circuit`` class.&quot;&quot;&quot;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">glob</span>\n<span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.AnalysisNexxim</span> <span class=\"kn\">import</span> <span class=\"n\">FieldAnalysisCircuit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic</span> <span class=\"kn\">import</span> <span class=\"n\">ibis_reader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">from_rkm_to_aedt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n\n\n<div class=\"viewcode-block\" id=\"Circuit\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit/#pyaedt.Circuit\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Circuit</span><span class=\"p\">(</span><span class=\"n\">FieldAnalysisCircuit</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Provides the Circuit application interface.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    projectname : str, optional</span>\n<span class=\"sd\">        Name of the project to select or the full path to the project</span>\n<span class=\"sd\">        or AEDTZ archive to open.  The default is ``None``, in which</span>\n<span class=\"sd\">        case an attempt is made to get an active project. If no</span>\n<span class=\"sd\">        projects are present, an empty project is created.</span>\n<span class=\"sd\">    designname : str, optional</span>\n<span class=\"sd\">        Name of the design to select. The default is ``None``, in</span>\n<span class=\"sd\">        which case an attempt is made to get an active design. If no</span>\n<span class=\"sd\">        designs are present, an empty design is created.</span>\n<span class=\"sd\">    solution_type : str, optional</span>\n<span class=\"sd\">        Solution type to apply to the design. The default is</span>\n<span class=\"sd\">        ``None``, in which case the default type is applied.</span>\n<span class=\"sd\">    setup_name : str, optional</span>\n<span class=\"sd\">        Name of the setup to use as the nominal. The default is</span>\n<span class=\"sd\">        ``None``, in which case the active setup is used or</span>\n<span class=\"sd\">        nothing is used.</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``, in which case</span>\n<span class=\"sd\">        the active version or latest installed version is  used.</span>\n<span class=\"sd\">        This parameter is ignored when Script is launched within AEDT.</span>\n<span class=\"sd\">    non_graphical : bool, optional</span>\n<span class=\"sd\">        Whether to run AEDT in non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT is launched in graphical mode.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the</span>\n<span class=\"sd\">        machine.  The default is ``True``. This parameter is ignored when</span>\n<span class=\"sd\">        a script is launched within AEDT.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to release AEDT on exit. The default is ``False``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to open the AEDT student version. The default is ``False``.</span>\n<span class=\"sd\">        This parameter is ignored when Script is launched within AEDT.</span>\n<span class=\"sd\">    machine : str, optional</span>\n<span class=\"sd\">        Machine name to which connect the oDesktop Session. Works only in 2022 R2</span>\n<span class=\"sd\">        or later. The remote server must be up and running with the command</span>\n<span class=\"sd\">        `&quot;ansysedt.exe -grpcsrv portnum&quot;`. If a machine is `&quot;localhost&quot;`, the</span>\n<span class=\"sd\">        server also starts if not present.</span>\n<span class=\"sd\">    port : int, optional</span>\n<span class=\"sd\">        Port number on which to start the oDesktop communication on an already existing server.</span>\n<span class=\"sd\">        This parameter is ignored when creating a new server. It works only in 2022 R2 or</span>\n<span class=\"sd\">        later. The remote server must be up and running with the command</span>\n<span class=\"sd\">        `&quot;ansysedt.exe -grpcsrv portnum&quot;`.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Process ID for the instance of AEDT to point PyAEDT at. The default is</span>\n<span class=\"sd\">        ``None``. This parameter is only used when ``new_desktop_session = False``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Create an instance of Circuit and connect to an existing HFSS</span>\n<span class=\"sd\">    design or create a new HFSS design if one does not exist.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Circuit</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit()</span>\n\n<span class=\"sd\">    Create an instance of Circuit and link to a project named</span>\n<span class=\"sd\">    ``&quot;projectname&quot;``. If this project does not exist, create one with</span>\n<span class=\"sd\">    this name.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit(projectname)</span>\n\n<span class=\"sd\">    Create an instance of Circuit and link to a design named</span>\n<span class=\"sd\">    ``&quot;designname&quot;`` in a project named ``&quot;projectname&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit(projectname,designame)</span>\n\n<span class=\"sd\">    Create an instance of Circuit and open the specified project,</span>\n<span class=\"sd\">    which is ``&quot;myfie.aedt&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit(&quot;myfile.aedt&quot;)</span>\n\n<span class=\"sd\">    Create an instance of Circuit using the 2021 R1 version and</span>\n<span class=\"sd\">    open the specified project, which is ``&quot;myfile.aedt&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit(specified_version=&quot;2021.2&quot;, projectname=&quot;myfile.aedt&quot;)</span>\n\n<span class=\"sd\">    Create an instance of Circuit using the 2021 R2 student version and open</span>\n<span class=\"sd\">    the specified project, which is named ``&quot;myfile.aedt&quot;``.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; hfss = Circuit(specified_version=&quot;2021.2&quot;, projectname=&quot;myfile.aedt&quot;, student_version=True)</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">FieldAnalysisCircuit</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">projectname</span><span class=\"p\">,</span>\n            <span class=\"n\">designname</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_type</span><span class=\"p\">,</span>\n            <span class=\"n\">setup_name</span><span class=\"p\">,</span>\n            <span class=\"n\">specified_version</span><span class=\"p\">,</span>\n            <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n            <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n            <span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n            <span class=\"n\">student_version</span><span class=\"p\">,</span>\n            <span class=\"n\">machine</span><span class=\"p\">,</span>\n            <span class=\"n\">port</span><span class=\"p\">,</span>\n            <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">onetwork_data_explorer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">GetTool</span><span class=\"p\">(</span><span class=\"s2\">&quot;NdExplorer&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">stringval</span><span class=\"p\">):</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">stringval</span><span class=\"p\">[</span><span class=\"n\">stringval</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;{&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;}&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">from_rkm_to_aedt</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Circuit.create_schematic_from_netlist\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.create_schematic_from_netlist/#pyaedt.Circuit.create_schematic_from_netlist\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_schematic_from_netlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_to_import</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a circuit schematic from an HSpice netlist.</span>\n\n<span class=\"sd\">        Supported currently are:</span>\n\n<span class=\"sd\">        * R</span>\n<span class=\"sd\">        * L</span>\n<span class=\"sd\">        * C</span>\n<span class=\"sd\">        * Diodes</span>\n<span class=\"sd\">        * Bjts</span>\n<span class=\"sd\">        * Discrete components with syntax ``Uxxx net1 net2 ... netn modname``</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        file_to_import : str</span>\n<span class=\"sd\">            Full path to the HSpice file to import.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">xpos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"mf\">0.0508</span>\n        <span class=\"n\">use_instance</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">CloseAllWindows</span><span class=\"p\">()</span>\n        <span class=\"n\">autosave</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">GetAutoSaveEnabled</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">EnableAutoSave</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"n\">autosave</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">file_to_import</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;.param&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">[:</span><span class=\"mi\">7</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">():</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">ppar</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                        <span class=\"n\">pval</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">ppar</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pval</span>\n                        <span class=\"n\">xpos</span> <span class=\"o\">=</span> <span class=\"mf\">0.0254</span>\n                    <span class=\"k\">except</span><span class=\"p\">:</span>\n                        <span class=\"k\">pass</span>\n                <span class=\"k\">elif</span> <span class=\"s2\">&quot;.model&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">[:</span><span class=\"mi\">7</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;.lib&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">():</span>\n                    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">model</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_symbol</span><span class=\"p\">(</span><span class=\"s2\">&quot;Models_Netlist&quot;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_new_component_from_symbol</span><span class=\"p\">(</span><span class=\"s2\">&quot;Models_Netlist&quot;</span><span class=\"p\">,</span> <span class=\"p\">[],</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Models_Netlist&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                <span class=\"n\">global_netlist_list</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">disable_data_netlist</span><span class=\"p\">(</span><span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Models_Netlist&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">xpos</span> <span class=\"o\">+=</span> <span class=\"mf\">0.0254</span>\n        <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">file_to_import</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;{&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"k\">elif</span> <span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;/&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n                        <span class=\"ow\">and</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                        <span class=\"ow\">and</span> <span class=\"s2\">&quot;&#39;&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                        <span class=\"ow\">and</span> <span class=\"s2\">&quot;{&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"p\">):</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_resistor</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;L&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">4</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;=&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span>\n                        <span class=\"k\">try</span><span class=\"p\">:</span>\n                            <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n                        <span class=\"k\">except</span><span class=\"p\">:</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                                <span class=\"s2\">&quot;Component </span><span class=\"si\">{}</span><span class=\"s2\"> was not imported. Check it and manually import&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                            <span class=\"k\">continue</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;{&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"k\">elif</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;&#39;&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_inductor</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;C&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;{&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"k\">elif</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;&#39;&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_capacitor</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Q&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;U&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">4</span> <span class=\"ow\">and</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Q&quot;</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                        <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_npn</span><span class=\"p\">(</span>\n                            <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">numpins</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">2</span>\n                        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                        <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                        <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">numpins</span><span class=\"p\">:</span>\n                            <span class=\"n\">pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Pin&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n                            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                        <span class=\"n\">parameter</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                        <span class=\"k\">if</span> <span class=\"s2\">&quot;=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">parameter</span><span class=\"p\">:</span>\n                            <span class=\"n\">parameter_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">[:</span> <span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n                            <span class=\"n\">parameter_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]]</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">parameter_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;MOD&quot;</span><span class=\"p\">]</span>\n                            <span class=\"n\">parameter_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">]</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_symbol</span><span class=\"p\">(</span><span class=\"n\">parameter</span><span class=\"p\">,</span> <span class=\"n\">pins</span><span class=\"p\">)</span>\n                        <span class=\"n\">already_exist</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n                            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">parameter</span><span class=\"p\">:</span>\n                                <span class=\"n\">already_exist</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">already_exist</span><span class=\"p\">:</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_new_component_from_symbol</span><span class=\"p\">(</span>\n                                <span class=\"n\">parameter</span><span class=\"p\">,</span>\n                                <span class=\"n\">pins</span><span class=\"p\">,</span>\n                                <span class=\"n\">refbase</span><span class=\"o\">=</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                                <span class=\"n\">parameter_list</span><span class=\"o\">=</span><span class=\"n\">parameter_list</span><span class=\"p\">,</span>\n                                <span class=\"n\">parameter_value</span><span class=\"o\">=</span><span class=\"n\">parameter_value</span><span class=\"p\">,</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n                            <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"n\">parameter</span><span class=\"p\">,</span>\n                            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span>\n                            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span><span class=\"p\">,</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;J&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">numpins</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n                    <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                    <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                    <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">numpins</span><span class=\"p\">:</span>\n                        <span class=\"n\">pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Pin&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n                        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                    <span class=\"n\">parameter</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">parameter</span><span class=\"p\">:</span>\n                        <span class=\"n\">parameter_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">[:</span> <span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]]</span>\n                        <span class=\"n\">parameter_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]]</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">parameter_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;MOD&quot;</span><span class=\"p\">]</span>\n                        <span class=\"n\">parameter_value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_symbol</span><span class=\"p\">(</span><span class=\"n\">parameter</span><span class=\"p\">,</span> <span class=\"n\">pins</span><span class=\"p\">)</span>\n                    <span class=\"n\">already_exist</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                    <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">parameter</span><span class=\"p\">:</span>\n                            <span class=\"n\">already_exist</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">already_exist</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_new_component_from_symbol</span><span class=\"p\">(</span>\n                            <span class=\"n\">parameter</span><span class=\"p\">,</span>\n                            <span class=\"n\">pins</span><span class=\"p\">,</span>\n                            <span class=\"n\">refbase</span><span class=\"o\">=</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"n\">parameter_list</span><span class=\"o\">=</span><span class=\"n\">parameter_list</span><span class=\"p\">,</span>\n                            <span class=\"n\">parameter_value</span><span class=\"o\">=</span><span class=\"n\">parameter_value</span><span class=\"p\">,</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n                        <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                        <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"n\">parameter</span><span class=\"p\">,</span>\n                        <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span>\n                        <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_diode</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;V&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;PULSE&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                        <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_voltage_dc</span><span class=\"p\">(</span>\n                            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">&quot;PULSE&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">6</span> <span class=\"p\">:</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">&quot;)&quot;</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;{&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;}&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n                        <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_voltage_pulse</span><span class=\"p\">(</span>\n                            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                        <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;K&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                    <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_coupling_inductors</span><span class=\"p\">(</span>\n                        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;I&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;PULSE&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_from_string</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n                        <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_current_dc</span><span class=\"p\">(</span>\n                            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">&quot;PULSE&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">6</span> <span class=\"p\">:</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">&quot;)&quot;</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;{&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;}&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n                        <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_current_pulse</span><span class=\"p\">(</span>\n                            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                        <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">mycomp</span><span class=\"p\">:</span>\n                    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                    <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">mycomp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">:</span>\n                        <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">location</span>\n                        <span class=\"k\">if</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">xpos</span><span class=\"p\">:</span>\n                            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">angle</span><span class=\"p\">)</span>\n                        <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                    <span class=\"n\">ypos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                    <span class=\"k\">if</span> <span class=\"n\">ypos</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.254</span><span class=\"p\">:</span>\n                        <span class=\"n\">xpos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                        <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n                    <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                    <span class=\"k\">if</span> <span class=\"n\">counter</span> <span class=\"o\">&gt;</span> <span class=\"mi\">59</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreatePage</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;Page Title&gt;&quot;</span><span class=\"p\">)</span>\n                        <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"n\">autosave</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">EnableAutoSave</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Netlist was correctly imported into </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.get_ibis_model_from_file\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.get_ibis_model_from_file/#pyaedt.Circuit.get_ibis_model_from_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_ibis_model_from_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an IBIS model based on the data contained in an IBIS file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        path : str</span>\n<span class=\"sd\">            Path of the IBIS file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        :class:`pyaedt.generic.ibis_reader.Ibis`</span>\n<span class=\"sd\">            IBIS object exposing all data from the IBIS file.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">ibis_reader</span><span class=\"o\">.</span><span class=\"n\">IbisReader</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">parse_ibis_file</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">ibis_model</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.create_schematic_from_mentor_netlist\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.create_schematic_from_mentor_netlist/#pyaedt.Circuit.create_schematic_from_mentor_netlist\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_schematic_from_mentor_netlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_to_import</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a circuit schematic from a Mentor netlist.</span>\n\n<span class=\"sd\">        Supported currently are:</span>\n\n<span class=\"sd\">        * R</span>\n<span class=\"sd\">        * L</span>\n<span class=\"sd\">        * C</span>\n<span class=\"sd\">        * Diodes</span>\n<span class=\"sd\">        * Bjts</span>\n<span class=\"sd\">        * Discrete components with syntax ``Uxxx net1 net2get_source_pin_names ... netn modname``</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        file_to_import : str</span>\n<span class=\"sd\">            Full path to the HSpice file to import.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">xpos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"mf\">0.0508</span>\n        <span class=\"n\">use_instance</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">my_netlist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">file_to_import</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">my_netlist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">nets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">my_netlist</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;NET&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">comps</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">my_netlist</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;COMP:&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">my_netlist</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;COMP:&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">my_netlist</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n                <span class=\"n\">finished</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">finished</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_netlist</span><span class=\"p\">):</span>\n                    <span class=\"k\">if</span> <span class=\"n\">my_netlist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Property:&quot;</span><span class=\"p\">:</span>\n                        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">my_netlist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"k\">elif</span> <span class=\"s2\">&quot;Pin:&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">my_netlist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                        <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">my_netlist</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">finished</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"n\">column_number</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">comps</span><span class=\"p\">)))</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">comps</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>  <span class=\"c1\"># Remove carriage return.</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>  <span class=\"c1\"># Remove quotes.</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                <span class=\"n\">comptype</span> <span class=\"o\">=</span> <span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">comptype</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">retrieve_mentor_comp</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;required&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Value=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">prop</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n\n            <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;resistor:RES.&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">comptype</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_resistor</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;inductor:COIL.&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">comptype</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_inductor</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;capacitor:CAP.&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">comptype</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_capacitor</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;transistor:NPN&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">comptype</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_npn</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;transistor:PNP&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">comptype</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_pnp</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"s2\">&quot;diode:&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">comptype</span><span class=\"p\">:</span>\n                <span class=\"n\">mycomp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_diode</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance</span>\n                <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">mycomp</span><span class=\"p\">:</span>\n                <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">mycomp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">:</span>\n                    <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"n\">pin</span><span class=\"o\">.</span><span class=\"n\">location</span>\n                    <span class=\"k\">if</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">xpos</span><span class=\"p\">:</span>\n                        <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n                    <span class=\"n\">netname</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                    <span class=\"k\">for</span> <span class=\"n\">net</span> <span class=\"ow\">in</span> <span class=\"n\">nets</span><span class=\"p\">:</span>\n                        <span class=\"n\">net</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">net</span><span class=\"p\">]</span>\n                        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;-&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">))</span> <span class=\"ow\">in</span> <span class=\"n\">net</span><span class=\"p\">:</span>\n                            <span class=\"n\">fullnetname</span> <span class=\"o\">=</span> <span class=\"n\">net</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                            <span class=\"n\">netnames</span> <span class=\"o\">=</span> <span class=\"n\">fullnetname</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span>\n                            <span class=\"n\">netname</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                                <span class=\"n\">netnames</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">netnames</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                            <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">netname</span><span class=\"p\">:</span>\n                        <span class=\"n\">prop</span> <span class=\"o\">=</span> <span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n                        <span class=\"k\">if</span> <span class=\"s2\">&quot;Pin:&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">prop</span> <span class=\"ow\">and</span> <span class=\"nb\">id</span> <span class=\"ow\">in</span> <span class=\"n\">prop</span><span class=\"p\">:</span>\n                            <span class=\"n\">netname</span> <span class=\"o\">=</span> <span class=\"n\">prop</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                            <span class=\"n\">netname</span> <span class=\"o\">=</span> <span class=\"n\">netname</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n\n                    <span class=\"k\">if</span> <span class=\"n\">netname</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span><span class=\"n\">netname</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">angle</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Page port was not created.&quot;</span><span class=\"p\">)</span>\n                    <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"n\">ypos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                <span class=\"k\">if</span> <span class=\"n\">ypos</span> <span class=\"o\">&gt;</span> <span class=\"n\">delta</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">column_number</span><span class=\"p\">):</span>\n                    <span class=\"n\">xpos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                    <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">nets</span><span class=\"p\">:</span>\n            <span class=\"n\">netname</span> <span class=\"o\">=</span> <span class=\"n\">el</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">netname</span> <span class=\"o\">=</span> <span class=\"n\">netname</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;GND&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">netname</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_gnd</span><span class=\"p\">([</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">])</span>\n                <span class=\"n\">page_pos</span> <span class=\"o\">=</span> <span class=\"n\">ypos</span> <span class=\"o\">+</span> <span class=\"mf\">0.00254</span>\n                <span class=\"n\">mod1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span><span class=\"n\">netname</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">],</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n                <span class=\"n\">mod1</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">xpos</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">page_pos</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">ypos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                <span class=\"k\">if</span> <span class=\"n\">ypos</span> <span class=\"o\">&gt;</span> <span class=\"n\">delta</span> <span class=\"o\">*</span> <span class=\"n\">column_number</span><span class=\"p\">:</span>\n                    <span class=\"n\">xpos</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>\n                    <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Netlist was correctly imported into </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.retrieve_mentor_comp\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.retrieve_mentor_comp/#pyaedt.Circuit.retrieve_mentor_comp\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">retrieve_mentor_comp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">refid</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the type of the Mentor netlist component for a given reference ID.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        refid : int</span>\n<span class=\"sd\">            Reference ID.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Type of the Mentor netlist component.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">refid</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;R&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;resistor:RES.&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">refid</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;C&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;capacitor:CAP.&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">refid</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;L&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;inductor:COIL.&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">refid</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;diode&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">refid</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Q&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;transistor:NPN&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.get_source_pin_names\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.get_source_pin_names/#pyaedt.Circuit.get_source_pin_names\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_source_pin_names</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">source_design_name</span><span class=\"p\">,</span> <span class=\"n\">source_project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">source_project_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">port_selector</span><span class=\"o\">=</span><span class=\"mi\">3</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve pin names.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        source_design_name : str</span>\n<span class=\"sd\">            Name of the source design.</span>\n<span class=\"sd\">        source_project_name :str, optional</span>\n<span class=\"sd\">            Name of the source project. The default is ``None``.</span>\n<span class=\"sd\">        source_project_path : str, optional</span>\n<span class=\"sd\">            Path to the source project if different than the existing path. The default is ``None``.</span>\n<span class=\"sd\">        port_selector : int, optional</span>\n<span class=\"sd\">            Type of the port. Options are ``1``, ``2``, and ``3``, corresponding respectively to ``&quot;Wave Port&quot;``,</span>\n<span class=\"sd\">            ``&quot;Terminal&quot;``, or ``&quot;Circuit Port&quot;``. The default is ``3``, which is a circuit port.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of pin names.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.GetExcitationsOfType</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">!=</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">source_project_path</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;If the source project is different from the current one, `source_project_path` must also be provided.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">source_project_path</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">source_project_name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;When `source_project_path` is specified, `source_project_name` must also be provided.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">source_project_name</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">==</span> <span class=\"n\">source_project_name</span><span class=\"p\">:</span>\n            <span class=\"n\">oSrcProject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">OpenProject</span><span class=\"p\">(</span><span class=\"n\">source_project_path</span><span class=\"p\">)</span>\n            <span class=\"n\">oSrcProject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_desktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">source_project_name</span><span class=\"p\">)</span>\n        <span class=\"n\">oDesign</span> <span class=\"o\">=</span> <span class=\"n\">oSrcProject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">source_design_name</span><span class=\"p\">)</span>\n        <span class=\"n\">tmp_oModule</span> <span class=\"o\">=</span> <span class=\"n\">oDesign</span><span class=\"o\">.</span><span class=\"n\">GetModule</span><span class=\"p\">(</span><span class=\"s2\">&quot;BoundarySetup&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">port_selector</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Wave Port&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">port_selector</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Terminal&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">port_selector</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Circuit Port&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">port</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">tmp_oModule</span><span class=\"o\">.</span><span class=\"n\">GetExcitationsOfType</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> Excitations Pins found.&quot;</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pins</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">pins</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.import_touchstone_solution\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.import_touchstone_solution/#pyaedt.Circuit.import_touchstone_solution\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_touchstone_solution</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Imported_Data&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Import a Touchstone file as the solution.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Name of the Touchstone file.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution. The default is ``&quot;Imported_Data&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of ports.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ImportData</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">filename</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ts&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n                <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;[Number of Ports]&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                        <span class=\"n\">ports</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;]&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:])</span>\n                <span class=\"n\">portnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; = &quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;! Port&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">[:</span><span class=\"mi\">9</span><span class=\"p\">]]</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">portnames</span><span class=\"p\">:</span>\n                    <span class=\"n\">portnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Port</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ports</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">re_filename</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;\\.s(?P&lt;ports&gt;\\d+)+p&quot;</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">I</span><span class=\"p\">)</span>\n            <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re_filename</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n            <span class=\"n\">ports</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;ports&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">portnames</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n                <span class=\"n\">portnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; = &quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;Port[&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">portnames</span><span class=\"p\">:</span>\n                <span class=\"n\">portnames</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Port</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ports</span><span class=\"p\">)]</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:NPortData&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ImageFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SymbolPinConfiguration:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortInfoBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortOrderBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;filename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">filename</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;numberofports:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">ports</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;sssfilename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;sssmodel:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;PortNames:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">portnames</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;domain:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;datamode:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Link&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;devicename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;displayformat:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;MagnitudePhase&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;datatype:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SMatrix&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:DesignerCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:HSpiceCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;NoiseModelOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;External&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ImportData</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Touchstone file was correctly imported into </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">portnames</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.export_touchstone\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.export_touchstone/#pyaedt.Circuit.export_touchstone\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_touchstone</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sweep_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">variations_value</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export the Touchstone file to a local folder.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution that has been solved.</span>\n<span class=\"sd\">        sweep_name : str, optional</span>\n<span class=\"sd\">            Name of the sweep that has been solved.</span>\n<span class=\"sd\">        file_name : str, optional</span>\n<span class=\"sd\">            Full path and name for the Touchstone file.</span>\n<span class=\"sd\">            The default is ``None``, in which case the file is exported to the working directory.</span>\n<span class=\"sd\">        variations : list, optional</span>\n<span class=\"sd\">            List of all parameter variations. For example, ``[&quot;$AmbientTemp&quot;, &quot;$PowerIn&quot;]``.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        variations_value : list, optional</span>\n<span class=\"sd\">            List of all parameter variation values. For example, ``[&quot;22cel&quot;, &quot;100&quot;]``.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ExportNetworkData</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_export_touchstone</span><span class=\"p\">(</span>\n            <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"n\">solution_name</span><span class=\"p\">,</span>\n            <span class=\"n\">sweep_name</span><span class=\"o\">=</span><span class=\"n\">sweep_name</span><span class=\"p\">,</span>\n            <span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"n\">file_name</span><span class=\"p\">,</span>\n            <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"n\">variations</span><span class=\"p\">,</span>\n            <span class=\"n\">variations_value</span><span class=\"o\">=</span><span class=\"n\">variations_value</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.export_fullwave_spice\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.export_fullwave_spice/#pyaedt.Circuit.export_fullwave_spice\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_fullwave_spice</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">is_solution_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">passivity</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">causality</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">renormalize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">impedance</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n        <span class=\"n\">error</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span>\n        <span class=\"n\">poles</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Export a full wave HSpice file using NDE.</span>\n\n<span class=\"sd\">        .. warning::</span>\n<span class=\"sd\">          This method doesn&#39;t work.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        designname : str, optional</span>\n<span class=\"sd\">            Name of the design or the full path to the solution file if it is an imported file.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        setupname : str, optional</span>\n<span class=\"sd\">            Name of the setup if it is a design. The default is ``None``.</span>\n<span class=\"sd\">        is_solution_file : bool, optional</span>\n<span class=\"sd\">            Whether it is an imported solution file. The default is ``False``.</span>\n<span class=\"sd\">        filename : str, optional</span>\n<span class=\"sd\">            Full path and name for exporting the HSpice file.</span>\n<span class=\"sd\">            The default is ``None``, in which case the file is exported to the working directory.</span>\n<span class=\"sd\">        passivity : bool, optional</span>\n<span class=\"sd\">            Whether to compute the passivity. The default is ``False``.</span>\n<span class=\"sd\">        causality : bool, optional</span>\n<span class=\"sd\">            Whether to compute the causality. The default is ``False``.</span>\n<span class=\"sd\">        renormalize : bool, optional</span>\n<span class=\"sd\">            Whether to renormalize the S-matrix to a specific port impedance.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        impedance : float, optional</span>\n<span class=\"sd\">            Impedance value if ``renormalize=True``. The default is ``50``.</span>\n<span class=\"sd\">        error : float, optional</span>\n<span class=\"sd\">            Fitting error. The default is ``0.5``.</span>\n<span class=\"sd\">        poles : int, optional</span>\n<span class=\"sd\">            Number of fitting poles. The default is ``10000``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the HSpice file if the export is successful.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ExportFullWaveSpice</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">designname</span><span class=\"p\">:</span>\n            <span class=\"n\">designname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">filename</span><span class=\"p\">:</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.sp&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_solution_file</span><span class=\"p\">:</span>\n            <span class=\"n\">setupname</span> <span class=\"o\">=</span> <span class=\"n\">designname</span>\n            <span class=\"n\">designname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">setupname</span><span class=\"p\">:</span>\n                <span class=\"n\">setupname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">onetwork_data_explorer</span><span class=\"o\">.</span><span class=\"n\">ExportFullWaveSpice</span><span class=\"p\">(</span>\n            <span class=\"n\">designname</span><span class=\"p\">,</span>\n            <span class=\"n\">is_solution_file</span><span class=\"p\">,</span>\n            <span class=\"n\">setupname</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:SpiceData&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SpiceType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HSpice&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EnforcePassivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">passivity</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EnforceCausality:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">causality</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;UseCommonGround:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ShowGammaComments:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Renormalize:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">renormalize</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RenormImpedance:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">impedance</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FittingError:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">error</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MaxPoles:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">poles</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;PassivityType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IteratedFittingOfPV&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ColumnFittingType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Matrix&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SSFittingType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;FastFit&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;RelativeErrorToleranc:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;EnsureAccurateZfit:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;TouchstoneFormat:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MA&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;TouchstoneUnits:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;GHz&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;TouchStonePrecision:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">15</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SubcircuitName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SYZDataInAutoMode:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExportDirectory:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExportSpiceFileName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;FullwaveSpiceFileName:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;UseMultipleCores:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumberOfCores:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">20</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;FullWaveSpice correctly exported to </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">filename</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.create_touchstone_report\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.create_touchstone_report/#pyaedt.Circuit.create_touchstone_report\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_touchstone_report</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">plot_name</span><span class=\"p\">,</span>\n        <span class=\"n\">curvenames</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variation_dict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">differential_pairs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Create a Touchstone plot.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        plot_name : str</span>\n<span class=\"sd\">            Name of the plot.</span>\n<span class=\"sd\">        curvenames : list</span>\n<span class=\"sd\">            List of names for the curves to plot.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution. The default value is ``None``.</span>\n<span class=\"sd\">        variation_dict : dict, optional</span>\n<span class=\"sd\">            Dictionary of variation names. The default value is ``None``.</span>\n<span class=\"sd\">        differential_pairs : bool, optional</span>\n<span class=\"sd\">            Specify if the plot is on differential pairs traces. The default value is ``False``.</span>\n<span class=\"sd\">        subdesign_id : int, optional</span>\n<span class=\"sd\">            Specify a subdesign ID to export a Touchstone file of this subdesign. The default value is ``None``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">           ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.CreateReport</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution_name</span><span class=\"p\">:</span>\n            <span class=\"n\">solution_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">variations</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;Freq&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;All&quot;</span><span class=\"p\">]}</span>\n        <span class=\"k\">if</span> <span class=\"n\">variation_dict</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">variation_dict</span><span class=\"p\">:</span>\n                <span class=\"n\">variations</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">variation_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]]</span>\n        <span class=\"n\">dif</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">differential_pairs</span><span class=\"p\">:</span>\n            <span class=\"n\">dif</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Differential Pairs&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">create_report</span><span class=\"p\">(</span>\n            <span class=\"n\">curvenames</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"p\">,</span> <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"n\">variations</span><span class=\"p\">,</span> <span class=\"n\">plotname</span><span class=\"o\">=</span><span class=\"n\">plot_name</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">dif</span><span class=\"p\">,</span> <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"n\">subdesign_id</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.get_touchstone_data\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.get_touchstone_data/#pyaedt.Circuit.get_touchstone_data\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_touchstone_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">curvenames</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">variation_dict</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Return a Touchstone data plot.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        curvenames : list</span>\n<span class=\"sd\">            List of the curves to plot.</span>\n<span class=\"sd\">        solution_name : str, optional</span>\n<span class=\"sd\">            Name of the solution. The default value is ``None``.</span>\n<span class=\"sd\">        variation_dict : dict, optional</span>\n<span class=\"sd\">            Dictionary of variation names. The default value is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.solutions.SolutionData`</span>\n<span class=\"sd\">           Class containing all requested data.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.GetSolutionDataPerVariation</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution_name</span><span class=\"p\">:</span>\n            <span class=\"n\">solution_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">variations</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;Freq&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;All&quot;</span><span class=\"p\">]}</span>\n        <span class=\"k\">if</span> <span class=\"n\">variation_dict</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">variation_dict</span><span class=\"p\">:</span>\n                <span class=\"n\">variations</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">variation_dict</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]]</span>\n        <span class=\"n\">ctxt</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Context&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SimValueContext:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">get_solution_data_per_variation</span><span class=\"p\">(</span><span class=\"s2\">&quot;Standard&quot;</span><span class=\"p\">,</span> <span class=\"n\">solution_name</span><span class=\"p\">,</span> <span class=\"n\">ctxt</span><span class=\"p\">,</span> <span class=\"n\">variations</span><span class=\"p\">,</span> <span class=\"n\">curvenames</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.push_excitations\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.push_excitations/#pyaedt.Circuit.push_excitations\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">push_excitations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance_name</span><span class=\"p\">,</span> <span class=\"n\">thevenin_calculation</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearFrequency&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Push excitations.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        instance_name : str</span>\n<span class=\"sd\">            Name of the instance.</span>\n<span class=\"sd\">        thevenin_calculation : bool, optional</span>\n<span class=\"sd\">            Whether to perform the Thevenin equivalent calculation. The default is ``False``.</span>\n<span class=\"sd\">        setup_name : str, optional</span>\n<span class=\"sd\">            Name of the solution setup to push. The default is ``&quot;LinearFrequency&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.PushExcitations</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:options&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CalcThevenin:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">thevenin_calculation</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Sol:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">PushExcitations</span><span class=\"p\">(</span><span class=\"n\">instance_name</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.assign_voltage_sinusoidal_excitation_to_ports\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.assign_voltage_sinusoidal_excitation_to_ports/#pyaedt.Circuit.assign_voltage_sinusoidal_excitation_to_ports\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_voltage_sinusoidal_excitation_to_ports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a voltage sinusoidal excitation to circuit ports.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        ports : list</span>\n<span class=\"sd\">            List of circuit ports to assign to the sinusoidal excitation.</span>\n<span class=\"sd\">        settings : list</span>\n<span class=\"sd\">            List of parameter values to use to create the voltage sinusoidal excitation.</span>\n<span class=\"sd\">            All settings must be provided as strings. An empty string (``&quot;&quot;``) sets the</span>\n<span class=\"sd\">            parameter to its default.</span>\n\n<span class=\"sd\">            Values are given in this order:</span>\n\n<span class=\"sd\">            * 0: AC magnitude for small-signal analysis. For example, ``&quot;33V&quot;``. The default is ``&quot;nan V&quot;``.</span>\n<span class=\"sd\">            * 1: AC phase for small-signal analysis. For example, ``&quot;44deg&quot;``. The default is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">            * 2: DC voltage. For example, ``&quot;1V&quot;``. The default is ``&quot;0V&quot;``.</span>\n<span class=\"sd\">            * 3: Voltage offset from zero. For example, ``&quot;1V&quot;``. The default is ``&quot;0V&quot;``.</span>\n<span class=\"sd\">            * 4: Voltage amplitude. For example, ``&quot;3V&quot;``. The default is ``&quot;0V&quot;``.</span>\n<span class=\"sd\">            * 5: Frequency. For example, ``&quot;15GHz&quot;``. The default is ``&quot;1GHz&quot;``.</span>\n<span class=\"sd\">            * 6: Delay to start of sine wave. For example, ``&quot;16s&quot;``. The default is ``&quot;0s&quot;``.</span>\n<span class=\"sd\">            * 7: Damping factor (1/seconds). For example, ``&quot;2&quot;``. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">            * 8: Phase delay. For example, ``&quot;18deg&quot;``. The default is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">            * 9: Frequency to use for harmonic balance analysis. For example, ``&quot;20Hz&quot;``. The default is ``&quot;0Hz&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.UpdateSources</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># setting the defaults if no value is provided</span>\n        <span class=\"n\">defaults</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;nan V&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0V&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0V&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0V&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1GHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0s&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0Hz&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">defaults</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Data&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:VoltageSinusoidal&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;DataId:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Source&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Output:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;NumPins:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Netlist:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">(</span>\n                            <span class=\"s2\">&quot;V@ID </span><span class=\"si\">%0 %</span><span class=\"s2\">1 *DC(DC=@DC) SIN(?VO(@VO) ?VA(@VA) ?FREQ(@FREQ) ?TD(@TD) ?ALPHA(@ALPHA) &quot;</span>\n                            <span class=\"s2\">&quot;?THETA(@THETA)) *TONE(TONE=@TONE) *ACMAG(AC @ACMAG @ACPHASE)&quot;</span>\n                        <span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;CompName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Nexxim Circuit Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Independent Sources:V_SIN&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;FDSFileName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;NAME:Properties&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;LabelID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Property string for netlist ID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V@ID&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ACMAG&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC magnitude for small-signal analysis (Volts)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ACPHASE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC phase for small-signal analysis&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;DC&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DC voltage (Volts)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;VO&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Voltage offset from zero (Volts)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;VA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Voltage amplitude (Volts)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;FREQ&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Frequency (Hz)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;TD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Delay to start of sine wave (seconds)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ALPHA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Damping factor (1/seconds)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;THETA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Phase delay&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span>\n                                <span class=\"s2\">&quot;TONE&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span>\n                                <span class=\"p\">(</span>\n                                    <span class=\"s2\">&quot;Frequency (Hz) to use for harmonic balance analysis, should be a submultiple of &quot;</span>\n                                    <span class=\"s2\">&quot;(or equal to) the driving frequency and should also be included in the &quot;</span>\n                                    <span class=\"s2\">&quot;HB analysis setup&quot;</span>\n                                <span class=\"p\">),</span>\n                                <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span>\n                                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ModelName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SHD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V_SIN&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]],</span>\n                        <span class=\"p\">],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:EnabledPorts&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;VoltageSinusoidal&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">]]</span>\n\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">UpdateSources</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Voltage Source updated correctly.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.assign_current_sinusoidal_excitation_to_ports\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.assign_current_sinusoidal_excitation_to_ports/#pyaedt.Circuit.assign_current_sinusoidal_excitation_to_ports\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_current_sinusoidal_excitation_to_ports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a current sinusoidal excitation to circuit ports.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        ports : list</span>\n<span class=\"sd\">            List of circuit ports to assign to the sinusoidal excitation.</span>\n<span class=\"sd\">        settings : list</span>\n<span class=\"sd\">            List of parameter values to use to create the voltage sinusoidal excitation.</span>\n<span class=\"sd\">            All settings must be provided as strings. An empty string (``&quot;&quot;``) sets the</span>\n<span class=\"sd\">            parameter to its default.</span>\n\n<span class=\"sd\">            Values are given in this order:</span>\n\n<span class=\"sd\">            * 0: AC magnitude for small-signal analysis. For example, ``&quot;33A&quot;``. The default is ``&quot;nan A&quot;``.</span>\n<span class=\"sd\">            * 1: AC phase for small-signal analysis. For example, ``&quot;44deg&quot;``. The default is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">            * 2: DC voltage. For example, ``&quot;1A&quot;``. The default is ``&quot;0A&quot;``.</span>\n<span class=\"sd\">            * 3: Current offset from zero. For example, ``&quot;1A&quot;``. The default is ``&quot;0A&quot;``.</span>\n<span class=\"sd\">            * 4: Current amplitude. For example, ``&quot;3A&quot;``. The default is ``&quot;0A&quot;``.</span>\n<span class=\"sd\">            * 5: Frequency. For example, ``&quot;15GHz&quot;``. The default is ``&quot;1GHz&quot;``.</span>\n<span class=\"sd\">            * 6: Delay to start of sine wave. For example, ``&quot;16s&quot;``. The default is ``&quot;0s&quot;``.</span>\n<span class=\"sd\">            * 7: Damping factor (1/seconds). For example, ``&quot;2&quot;``. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">            * 8: Phase delay. For example, ``&quot;18deg&quot;``. The default is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">            * 9: Multiplier for simulating multiple parallel current sources. For example, ``&quot;4&quot;``.</span>\n<span class=\"sd\">              The default is ``&quot;1&quot;``.</span>\n<span class=\"sd\">            * 10: Frequency to use for harmonic balance analysis. For example, ``&quot;20Hz&quot;``.</span>\n<span class=\"sd\">              The default is ``&quot;0Hz&quot;.``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.UpdateSources</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># setting the defaults if no value is provided</span>\n        <span class=\"n\">defaults</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;nan A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1GHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0s&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0Hz&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">defaults</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Data&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:CurrentSinusoidal&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;DataId:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Source&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Output:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;NumPins:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Netlist:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">(</span>\n                            <span class=\"s2\">&quot;I@ID </span><span class=\"si\">%0 %</span><span class=\"s2\">1 *DC(DC=@DC) SIN(?VO(@VO) ?VA(@VA) ?FREQ(@FREQ) ?TD(@TD) ?ALPHA(@ALPHA) &quot;</span>\n                            <span class=\"s2\">&quot;?THETA(@THETA) *M(M=@M)) *TONE(TONE=@TONE) *ACMAG(AC @ACMAG @ACPHASE)&quot;</span>\n                        <span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;CompName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Nexxim Circuit Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Independent Sources:I_SIN&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;FDSFileName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;NAME:Properties&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;LabelID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Property string for netlist ID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;I@ID&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ACMAG&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC magnitude for small-signal analysis (Amps)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ACPHASE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC phase for small-signal analysis&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;DC&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DC current (Amps)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;VO&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Current offset (Amps)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;VA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Current amplitude (Amps)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;FREQ&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Frequency (Hz)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;TD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Delay to start of sine wave (seconds)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ALPHA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Damping factor (1/seconds)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;THETA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Phase delay&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;M&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Multiplier for simulating multiple parallel current sources&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span>\n                                <span class=\"s2\">&quot;TONE&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Frequency (Hz) to use for harmonic balance analysis, should be a submultiple of &quot;</span>\n                                <span class=\"s2\">&quot;(or equal to) the driving frequency and should also be included in the &quot;</span>\n                                <span class=\"s2\">&quot;HB analysis setup&quot;</span><span class=\"p\">,</span>\n                                <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">],</span>\n                                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ModelName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SHD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;I_SIN&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]],</span>\n                        <span class=\"p\">],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:EnabledPorts&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CurrentSinusoidal&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">]]</span>\n\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">UpdateSources</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Current Source updated correctly.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.assign_power_sinusoidal_excitation_to_ports\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.assign_power_sinusoidal_excitation_to_ports/#pyaedt.Circuit.assign_power_sinusoidal_excitation_to_ports\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_power_sinusoidal_excitation_to_ports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a power sinusoidal excitation to circuit ports.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        ports : list</span>\n<span class=\"sd\">            List of circuit ports to assign to the sinusoidal excitation.</span>\n<span class=\"sd\">        settings : list</span>\n<span class=\"sd\">            List of parameter values to use to create the power sinusoidal excitation.</span>\n<span class=\"sd\">            All settings must be provided as strings. An empty string (``&quot;&quot;``) sets the</span>\n<span class=\"sd\">            parameter to its default.</span>\n\n<span class=\"sd\">            Values are given in this order:</span>\n\n<span class=\"sd\">            * 0: AC magnitude for small-signal analysis. For example, ``&quot;33V&quot;``. The default is ``&quot;nan V&quot;``.</span>\n<span class=\"sd\">            * 1: AC phase for small-signal analysis. For example, ``&quot;44deg&quot;``. The default is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">            * 2: DC voltage. For example, ``&quot;1V&quot;``. The default is ``&quot;0V&quot;``.</span>\n<span class=\"sd\">            * 3: Power offset from zero watts. For example, ``&quot;1W&quot;``. The default is ``&quot;0W&quot;``.</span>\n<span class=\"sd\">            * 4: Available power of the source above VO. For example, ``&quot;3W&quot;``. The default is ``&quot;0W&quot;``.</span>\n<span class=\"sd\">            * 5: Frequency. For example, ``&quot;15GHz&quot;``. The default is ``&quot;1GHz&quot;``.</span>\n<span class=\"sd\">            * 6: Delay to start of sine wave. For example, ``&quot;16s&quot;``. The default is ``&quot;0s&quot;``.</span>\n<span class=\"sd\">            * 7: Damping factor (1/seconds). For example, ``&quot;2&quot;``. The default is ``&quot;0&quot;``.</span>\n<span class=\"sd\">            * 8: Phase delay. For example, ``&quot;18deg&quot;``. The default is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">            * 9: Frequency to use for harmonic balance analysis. For example, ``&quot;20Hz&quot;``. The default is ``&quot;0Hz&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.UpdateSources</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># setting the defaults if no value is provided</span>\n        <span class=\"n\">defaults</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;nan V&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0V&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0W&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0W&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1GHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0s&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0Hz&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">defaults</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Data&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:PowerSinusoidal&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;DataId:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Source&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Output:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;NumPins:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Netlist:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">(</span>\n                            <span class=\"s2\">&quot;V@ID </span><span class=\"si\">%0 %</span><span class=\"s2\">1 *DC(DC=@DC) POWER SIN(?VO(@VO) ?POWER(@POWER) ?FREQ(@FREQ) ?TD(@TD) &quot;</span>\n                            <span class=\"s2\">&quot;?ALPHA(@ALPHA) ?THETA(@THETA)) *TONE(TONE=@TONE) *ACMAG(AC @ACMAG @ACPHASE)&quot;</span>\n                        <span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;CompName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Nexxim Circuit Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Independent Sources:P_SIN&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;FDSFileName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;NAME:Properties&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;LabelID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Property string for netlist ID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V@ID&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ACMAG&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC magnitude for small-signal analysis (Volts)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ACPHASE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC phase for small-signal analysis&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;DC&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DC voltage (Volts)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;VO&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Power offset from zero watts&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;W&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;POWER&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Available power of the source above VO&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;FREQ&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Frequency (Hz)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;TD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Delay to start of sine wave (seconds)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ALPHA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Damping factor (1/seconds)&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValuePropNU:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;THETA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Phase delay&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ValueProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span>\n                                <span class=\"s2\">&quot;TONE&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span>\n                                <span class=\"p\">(</span>\n                                    <span class=\"s2\">&quot;Frequency (Hz) to use for harmonic balance analysis, should be a submultiple of &quot;</span>\n                                    <span class=\"s2\">&quot;(or equal to) the driving frequency and should also be included in the &quot;</span>\n                                    <span class=\"s2\">&quot;HB analysis setup&quot;</span>\n                                <span class=\"p\">),</span>\n                                <span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">],</span>\n                                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;ModelName&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SHD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;P_SIN&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]],</span>\n                            <span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"p\">],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:EnabledPorts&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PowerSinusoidal&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">]]</span>\n\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">UpdateSources</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Power Source updated correctly.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.assign_voltage_frequency_dependent_excitation_to_ports\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.assign_voltage_frequency_dependent_excitation_to_ports/#pyaedt.Circuit.assign_voltage_frequency_dependent_excitation_to_ports\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_voltage_frequency_dependent_excitation_to_ports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">,</span> <span class=\"n\">filepath</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a frequency dependent excitation to circuit ports from a frequency dependent source (.fds format).</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        ports : list</span>\n<span class=\"sd\">            List of circuit ports to assign to the frequency dependent excitation.</span>\n<span class=\"sd\">        filepath : str</span>\n<span class=\"sd\">            Path to the frequency dependent file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.UpdateSources</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;.fds&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Introduced file is not correct. Check path and format.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">elem</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">nets</span> <span class=\"k\">for</span> <span class=\"n\">elem</span> <span class=\"ow\">in</span> <span class=\"n\">ports</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Defined ports do not exist&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">schematic</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximSources&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Data&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:VoltageSourceFreq&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;DataId:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Source&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">17</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Output:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;NumPins:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"mi\">2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Netlist:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;V@ID </span><span class=\"si\">%0 %</span><span class=\"s2\">1 *FreqDependentSourceData(@FreqDependentSourceData)&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;CompName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Nexxim Circuit Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Independent Sources:V_PWL_F&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;FDSFileName:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s1\">&#39;voltage_source_file=&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">filepath</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;NAME:Properties&quot;</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;LabelID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Property string for netlist ID&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V@ID&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span>\n                                <span class=\"s2\">&quot;FreqDependentSourceData&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;OD&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Frequency Dependent Source Data&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s1\">&#39;voltage_source_file=&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">filepath</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span>\n                                <span class=\"s1\">&#39;voltage_source_file=&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">filepath</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span>\n                                <span class=\"mi\">7</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span>\n                                <span class=\"p\">[],</span>\n                            <span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;TextProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;COMPONENT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;RHD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;vsource_freq&quot;</span><span class=\"p\">],</span>\n                            <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SOD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]],</span>\n                            <span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">[</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                        <span class=\"p\">],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentConfigurationData&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:EnabledPorts&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;VoltageSourceFreq&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ports</span><span class=\"p\">]]</span>\n\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">UpdateSources</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Voltage Source not updated, incorrect file.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.set_differential_pair\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.set_differential_pair/#pyaedt.Circuit.set_differential_pair\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_differential_pair</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">positive_terminal</span><span class=\"p\">,</span>\n        <span class=\"n\">negative_terminal</span><span class=\"p\">,</span>\n        <span class=\"n\">common_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">diff_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">common_ref_z</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span>\n        <span class=\"n\">diff_ref_z</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n        <span class=\"n\">active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a differential pair definition.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        positive_terminal : str</span>\n<span class=\"sd\">            Name of the terminal to use as the positive terminal.</span>\n<span class=\"sd\">        negative_terminal : str</span>\n<span class=\"sd\">            Name of the terminal to use as the negative terminal.</span>\n<span class=\"sd\">        common_name : str, optional</span>\n<span class=\"sd\">            Name for the common mode. Default is ``None`` in which case a unique name is chosen.</span>\n<span class=\"sd\">        diff_name : str, optional</span>\n<span class=\"sd\">            Name for the differential mode. Default is ``None`` in which case a unique name is chosen.</span>\n<span class=\"sd\">        common_ref_z : float, optional</span>\n<span class=\"sd\">            Reference impedance for the common mode. Units are Ohm. Default is ``25``.</span>\n<span class=\"sd\">        diff_ref_z : float, optional</span>\n<span class=\"sd\">            Reference impedance for the differential mode. Units are Ohm. Default is ``100``.</span>\n<span class=\"sd\">        active : bool, optional</span>\n<span class=\"sd\">            Set the differential pair as active. Default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SetDiffPairs</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">diff_name</span><span class=\"p\">:</span>\n            <span class=\"n\">diff_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Diff&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">common_name</span><span class=\"p\">:</span>\n            <span class=\"n\">common_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Comm&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;Pos:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">positive_terminal</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Neg:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">negative_terminal</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;On:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">active</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;matched:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Dif:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">diff_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;DfZ:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">diff_ref_z</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;Com:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">common_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;CmZ:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">common_ref_z</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:DiffPairs&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Pair:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">)</span>\n\n        <span class=\"n\">tmpfile1</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;tmp&quot;</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">SaveDiffPairsToFile</span><span class=\"p\">(</span><span class=\"n\">tmpfile1</span><span class=\"p\">)</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">tmpfile1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n            <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"n\">fh</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n        <span class=\"n\">num_diffs_before</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n        <span class=\"n\">old_arg</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">lines</span><span class=\"p\">:</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">data_arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;Pos:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;Neg:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;On:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;matched:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Dif:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;DfZ:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]),</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;Com:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;CmZ:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]),</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n            <span class=\"n\">old_arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">data_arg</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">arg2</span> <span class=\"ow\">in</span> <span class=\"n\">old_arg</span><span class=\"p\">:</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Pair:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg2</span><span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">tmpfile1</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;ERROR: Cannot remove temp files.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">SetDiffPairs</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.load_diff_pairs_from_file\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.load_diff_pairs_from_file/#pyaedt.Circuit.load_diff_pairs_from_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">load_diff_pairs_from_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Load differtential pairs definition from a file.</span>\n\n<span class=\"sd\">        You can use the the ``save_diff_pairs_to_file`` method to obtain the file format.</span>\n<span class=\"sd\">        New definitions are added only if they are compatible with the existing definitions in the project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full qualified name of the file containing the differential pairs definition.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.LoadDiffPairsFromFile</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">: The specified file could not be found.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">))</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">new_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">),</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;temp&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.txt&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n                <span class=\"n\">filedata</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n            <span class=\"k\">with</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">new_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">,</span> <span class=\"n\">newline</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">filedata</span><span class=\"p\">:</span>\n                    <span class=\"n\">fh</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">line</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">LoadDiffPairsFromFile</span><span class=\"p\">(</span><span class=\"n\">new_file</span><span class=\"p\">)</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">new_file</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.save_diff_pairs_to_file\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.save_diff_pairs_to_file/#pyaedt.Circuit.save_diff_pairs_to_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_diff_pairs_to_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Save differtential pairs definition to file.</span>\n\n<span class=\"sd\">        If the file that is specified already exists, it is overwritten.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full qualified name of the file containing the differential pairs definition.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.SaveDiffPairsToFile</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">SaveDiffPairsToFile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.add_netlist_datablock\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.add_netlist_datablock/#pyaedt.Circuit.add_netlist_datablock\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_netlist_datablock</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">netlist_file</span><span class=\"p\">,</span> <span class=\"n\">datablock_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a new netlist data block to the circuit schematic.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        netlist_file : str</span>\n<span class=\"sd\">            Path to the netlist file.</span>\n<span class=\"sd\">        datablock_name : str, optional</span>\n<span class=\"sd\">            Name of the data block.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if successfully created, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">netlist_file</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Netlist File doesn&#39;t exists&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">datablock_name</span><span class=\"p\">:</span>\n            <span class=\"n\">datablock_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Inc&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">tmp_oModule</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetModule</span><span class=\"p\">(</span><span class=\"s2\">&quot;DataBlock&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">tmp_oModule</span><span class=\"o\">.</span><span class=\"n\">AddNetlistDataBlock</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:DataBlock&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">datablock_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;filename:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">netlist_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;filelocation:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Circuit.browse_log_file\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.Circuit.browse_log_file/#pyaedt.Circuit.browse_log_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">browse_log_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Save most recent log file into a new directory.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filepath : str, optional</span>\n<span class=\"sd\">            New log file path. The default is the pyaedt folder.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            File Path</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">filepath</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Path does not exist.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">filepath</span><span class=\"p\">:</span>\n            <span class=\"n\">filepath</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">),</span> <span class=\"s2\">&quot;logfile&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">):</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">)</span>\n\n        <span class=\"n\">results_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">results_directory</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"n\">results_temp_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">results_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;temp&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Check if .log exist in temp folder</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">results_temp_path</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">results_temp_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.log&quot;</span><span class=\"p\">)):</span>\n            <span class=\"c1\"># Check the most recent</span>\n            <span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">results_temp_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.log&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">latest_file</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">getctime</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">results_path</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">results_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.log&quot;</span><span class=\"p\">)):</span>\n            <span class=\"c1\"># Check the most recent</span>\n            <span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">results_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.log&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">latest_file</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">getctime</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Design not solved&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">latest_file</span><span class=\"p\">,</span> <span class=\"n\">filepath</span><span class=\"p\">)</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">latest_file</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/circuit", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}