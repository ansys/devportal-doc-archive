{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "pyaedt.modeler.circuits.object3dcircuit", "body": "<h1>Source code for pyaedt.modeler.circuits.object3dcircuit</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Variables</span> <span class=\"kn\">import</span> <span class=\"n\">decompose_variable_value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">AEDT_UNITS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_arg2dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_dim_arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.cad.elements3d</span> <span class=\"kn\">import</span> <span class=\"n\">_dict2arg</span>\n\n\n<div class=\"viewcode-block\" id=\"CircuitPins\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitPins/#pyaedt.modeler.circuits.object3dcircuit.CircuitPins\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CircuitPins</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages circuit component pins.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">circuit_comp</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span> <span class=\"o\">=</span> <span class=\"n\">circuit_comp</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">pinname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"n\">circuit_comp</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Length units.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Pin Position in [x,y] format.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.GetComponentPinLocation</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n            <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">30</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Component Location&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">pos1</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"n\">pos1</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"mf\">0.0000254</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">pos1</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;GPort&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                    <span class=\"n\">pos1</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mf\">0.00254</span>\n                <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">],</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">pos1</span><span class=\"p\">]</span>\n                <span class=\"k\">return</span> <span class=\"n\">pos1</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"nb\">round</span><span class=\"p\">(</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                    <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n                <span class=\"p\">)</span>\n                <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">],</span>\n                <span class=\"mi\">8</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n            <span class=\"nb\">round</span><span class=\"p\">(</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                    <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"kc\">False</span>\n                <span class=\"p\">)</span>\n                <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">],</span>\n                <span class=\"mi\">8</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get pin net.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;PagePort@&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">net</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"p\">:</span>\n            <span class=\"n\">conns</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetNetConnections</span><span class=\"p\">(</span><span class=\"n\">net</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">conn</span> <span class=\"ow\">in</span> <span class=\"n\">conns</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;;</span><span class=\"si\">{}</span><span class=\"s2\">;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">conn</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;;</span><span class=\"si\">{}</span><span class=\"s2\"> &quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">conn</span>\n                <span class=\"p\">):</span>\n                    <span class=\"k\">return</span> <span class=\"n\">net</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Pin angle.&quot;&quot;&quot;</span>\n        <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;Angle=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">:]))</span>\n        <span class=\"k\">return</span> <span class=\"mf\">0.0</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_is_inside_point</span><span class=\"p\">(</span><span class=\"n\">plist</span><span class=\"p\">,</span> <span class=\"n\">pa</span><span class=\"p\">,</span> <span class=\"n\">pb</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">plist</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">pa</span> <span class=\"o\">&lt;=</span> <span class=\"n\">p</span> <span class=\"o\">&lt;=</span> <span class=\"n\">pb</span> <span class=\"ow\">or</span> <span class=\"n\">pa</span> <span class=\"o\">&gt;=</span> <span class=\"n\">p</span> <span class=\"o\">&gt;=</span> <span class=\"n\">pb</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_add_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pins</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">orient</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">orient</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_inside_point</span><span class=\"p\">(</span><span class=\"n\">pins</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">target</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n            <span class=\"n\">orient</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_inside_point</span><span class=\"p\">(</span><span class=\"n\">pins</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">target</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">orient</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n            <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">deltay</span><span class=\"p\">])</span>\n            <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_deltas</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">point</span><span class=\"p\">,</span> <span class=\"n\">move_x</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">move_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">positive</span><span class=\"p\">:</span>\n            <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"o\">+</span><span class=\"n\">units</span> <span class=\"o\">*</span> <span class=\"mf\">0.00254</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">units</span> <span class=\"o\">*</span> <span class=\"mf\">0.00254</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">move_x</span><span class=\"p\">:</span>\n            <span class=\"n\">deltax</span> <span class=\"o\">=</span> <span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">delta</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">deltax</span> <span class=\"o\">=</span> <span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">move_y</span><span class=\"p\">:</span>\n            <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">delta</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span>\n\n<div class=\"viewcode-block\" id=\"CircuitPins.connect_to_component\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitPins.connect_to_component/#pyaedt.modeler.circuits.object3dcircuit.CircuitPins.connect_to_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connect_to_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_pin</span><span class=\"p\">,</span> <span class=\"n\">page_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">use_wire</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">clearance_units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Connect schematic components.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_pin : :class:`pyaedt.modeler.circuits.PrimitivesNexxim.CircuitPins`</span>\n<span class=\"sd\">           Component pin to attach.</span>\n<span class=\"sd\">        page_name : str, optional</span>\n<span class=\"sd\">            Page port name. The default value is ``None``, in which case</span>\n<span class=\"sd\">            a name is automatically generated.</span>\n<span class=\"sd\">        use_wire : bool, optional</span>\n<span class=\"sd\">            Whether to use wires or a page port to connect the pins.</span>\n<span class=\"sd\">            The default is ``False``, in which case a page port is used. Note</span>\n<span class=\"sd\">            that if wires are used but not well placed, shorts can result.</span>\n<span class=\"sd\">        clearance_units : int, optional</span>\n<span class=\"sd\">            Number of snap units (100mil each) around the object to overcome pins and wires.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.CreatePagePort</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">tol</span> <span class=\"o\">=</span> <span class=\"mf\">1e-8</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component_pin</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">component_pin</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">component_pin</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">use_wire</span><span class=\"p\">:</span>\n            <span class=\"n\">direction</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">180</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span>\n            <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">]</span>\n            <span class=\"n\">cangles</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span><span class=\"p\">]</span>\n            <span class=\"n\">negative</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span> <span class=\"o\">&gt;=</span> <span class=\"n\">direction</span> <span class=\"o\">&gt;=</span> <span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">cpin</span> <span class=\"ow\">in</span> <span class=\"n\">component_pin</span><span class=\"p\">:</span>\n                <span class=\"n\">prev</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n                <span class=\"n\">act</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">]</span>\n                <span class=\"n\">pins_x</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n                <span class=\"n\">pins_x</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n                <span class=\"n\">pins_y</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n                <span class=\"n\">pins_y</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span> <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n\n                <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span><span class=\"p\">:</span>\n                    <span class=\"n\">dx</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">((</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">move_y</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">negative</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_y</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"n\">act</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">act</span><span class=\"p\">)</span>\n\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">act</span><span class=\"p\">)</span>\n\n                <span class=\"k\">elif</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span><span class=\"p\">:</span>\n                    <span class=\"n\">dy</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">((</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dy</span><span class=\"p\">],</span> <span class=\"n\">move_x</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"ow\">not</span> <span class=\"n\">negative</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_x</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"n\">act</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">act</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">act</span><span class=\"p\">)</span>\n\n                <span class=\"k\">elif</span> <span class=\"n\">cangles</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">180.0</span><span class=\"p\">]:</span>\n                    <span class=\"n\">dx</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">((</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n                    <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">p2</span><span class=\"p\">],</span> <span class=\"n\">move_x</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">p2</span> <span class=\"o\">-</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span>\n                        <span class=\"n\">pins_y</span><span class=\"p\">,</span>\n                        <span class=\"n\">points</span><span class=\"p\">,</span>\n                        <span class=\"n\">deltax</span><span class=\"p\">,</span>\n                        <span class=\"n\">deltay</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">p2</span><span class=\"p\">],</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">p2</span><span class=\"p\">],</span> <span class=\"n\">move_y</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">dx</span> <span class=\"o\">-</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_x</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">p2</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">dx</span><span class=\"p\">:</span>\n                        <span class=\"n\">dx</span> <span class=\"o\">=</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"n\">act</span><span class=\"p\">,</span> <span class=\"n\">move_y</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">dx</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">p2</span> <span class=\"o\">==</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_x</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">p2</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">p2</span><span class=\"p\">])</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">act</span><span class=\"p\">)</span>\n\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n\n                    <span class=\"n\">dy</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">((</span><span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n                    <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"n\">move_y</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">p1</span> <span class=\"o\">-</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_y</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">dy</span><span class=\"p\">],</span> <span class=\"n\">move_x</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">dy</span> <span class=\"o\">-</span> <span class=\"n\">prev</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_x</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dy</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">dy</span><span class=\"p\">:</span>\n                        <span class=\"n\">dy</span> <span class=\"o\">=</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_deltas</span><span class=\"p\">(</span>\n                        <span class=\"n\">act</span><span class=\"p\">,</span> <span class=\"n\">move_x</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">positive</span><span class=\"o\">=</span><span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">dy</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">clearance_units</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">p1</span> <span class=\"o\">==</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_point</span><span class=\"p\">(</span><span class=\"n\">pins_x</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">deltax</span><span class=\"p\">,</span> <span class=\"n\">deltay</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">p1</span><span class=\"p\">,</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n                    <span class=\"k\">if</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">or</span> <span class=\"n\">points</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">act</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                        <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">act</span><span class=\"p\">)</span>\n\n                <span class=\"n\">cangles</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">cpin</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">create_wire</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"n\">comp_angle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">comp_angle</span> <span class=\"o\">+=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"k\">if</span> <span class=\"n\">page_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">page_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">_</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompInst@&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">page_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"n\">component_pin</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">page_name</span> <span class=\"o\">=</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span>\n                        <span class=\"k\">break</span>\n                    <span class=\"k\">except</span><span class=\"p\">:</span>\n                        <span class=\"k\">continue</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span>\n                <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">x_loc</span><span class=\"p\">:</span>\n            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">comp_angle</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">+</span> <span class=\"n\">comp_angle</span>\n        <span class=\"n\">ret1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span><span class=\"n\">page_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"n\">component_pin</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span>\n                    <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"n\">comp_pin_angle</span> <span class=\"o\">=</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                <span class=\"n\">comp_pin_angle</span> <span class=\"o\">+=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n            <span class=\"k\">if</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">x_loc</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">comp_pin_angle</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">+</span> <span class=\"n\">comp_pin_angle</span>\n            <span class=\"n\">ret2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span>\n                <span class=\"n\">page_name</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">ret1</span> <span class=\"ow\">and</span> <span class=\"n\">ret2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ComponentParameters</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tab</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)]],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Property </span><span class=\"si\">%s</span><span class=\"s2\"> has not been edited.Check if readonly&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">):</span>\n        <span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tab</span> <span class=\"o\">=</span> <span class=\"n\">tab</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelParameters</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the model properties.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span>\n            <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">EditWithComps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to update model </span><span class=\"si\">%s</span><span class=\"s2\"> &quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">props</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n\n<div class=\"viewcode-block\" id=\"CircuitComponent\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitComponent/#pyaedt.modeler.circuits.object3dcircuit.CircuitComponent\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CircuitComponent</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages circuit components.&quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">composed_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Composed names.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">circuit_components</span><span class=\"p\">,</span> <span class=\"n\">tabname</span><span class=\"o\">=</span><span class=\"s2\">&quot;PassedParameterTab&quot;</span><span class=\"p\">,</span> <span class=\"n\">custom_editor</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span> <span class=\"o\">=</span> <span class=\"n\">circuit_components</span>\n        <span class=\"k\">if</span> <span class=\"n\">custom_editor</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"n\">custom_editor</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modelName</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Active&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">component</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refdes</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">levels</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">usesymbolcolor</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"n\">tabname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">InstanceName</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Length units.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_property_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Property Data List.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return Model Name if present.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;ModelDefName:=&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">&quot;ModelDefName:=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the model data if the component has one.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.ModelParameters`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the model data if the component has one.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">:</span>\n            <span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"n\">_arg2dict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)),</span> <span class=\"n\">_parameters</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span> <span class=\"o\">=</span> <span class=\"n\">ModelParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">_parameters</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Circuit Parameters.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetProperties</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span>\n        <span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Maxwell Circuit&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Quantities&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">proparray</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">proparray</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">proparray</span><span class=\"p\">:</span>\n            <span class=\"n\">propval</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n            <span class=\"n\">_parameters</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">propval</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"n\">ComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"n\">_parameters</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">component_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Component parameters.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetProperties</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span>\n        <span class=\"n\">_component_info</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Component&quot;</span>\n        <span class=\"n\">proparray</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">proparray</span><span class=\"p\">:</span>\n            <span class=\"n\">propval</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n            <span class=\"n\">_component_info</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">propval</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span> <span class=\"o\">=</span> <span class=\"n\">ComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"n\">_component_info</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Component bounding box.&quot;&quot;&quot;</span>\n        <span class=\"n\">comp_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">comp_info</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">[</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mf\">0.00254</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">],</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"o\">+</span> <span class=\"mf\">0.00254</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">],</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">0.00254</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">],</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mf\">0.00254</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">cp</span> <span class=\"ow\">in</span> <span class=\"n\">comp_info</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;BBoxLLx&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">cp</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">bounding_box</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">comp_info</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">8</span><span class=\"p\">:]),</span>\n            <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">comp_info</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">8</span><span class=\"p\">:]),</span>\n            <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">comp_info</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"mi\">8</span><span class=\"p\">:]),</span>\n            <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">comp_info</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">8</span><span class=\"p\">:]),</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">schematic_units</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">bounding_box</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Pins of the component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.CircuitPins`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">pins</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">[]</span>\n            <span class=\"k\">elif</span> <span class=\"n\">pins</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">))</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span>\n            <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">pins</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Twin Builder&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">))</span>\n                <span class=\"k\">elif</span> <span class=\"n\">pin</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the part location.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">loc</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Component Location&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">loc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">loc</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()]</span>\n            <span class=\"n\">loc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">loc</span><span class=\"p\">]</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">],</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">loc</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span>\n\n    <span class=\"nd\">@location</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">location_xy</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set the part location.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        location_xy : list</span>\n<span class=\"sd\">            List of x and y coordinates. If float values are provided, the default units are used.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_convert_point_to_meter</span><span class=\"p\">(</span><span class=\"n\">location_xy</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">x_location</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">y_location</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Location&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">x_location</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">y_location</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the part angle.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comp_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentInfo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">if</span> <span class=\"n\">comp_info</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">info</span> <span class=\"ow\">in</span> <span class=\"n\">comp_info</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Angle=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">:])</span>\n                    <span class=\"k\">break</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span>\n\n    <span class=\"nd\">@angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set the part angle.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">angle</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;\u00b0&quot;</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u00b0&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Angle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Grpc doesn&#39;t support angle settings because special characters are not supported.&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the part mirror.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                    <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Component Mirror&quot;</span>\n                <span class=\"p\">)</span>\n                <span class=\"o\">==</span> <span class=\"s2\">&quot;true&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span>\n\n    <span class=\"nd\">@mirror</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mirror_value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Mirror part.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        mirror_value : bool</span>\n<span class=\"sd\">            Either to mirror the part. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Mirror&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">mirror_value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.set_use_symbol_color\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.set_use_symbol_color/#pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.set_use_symbol_color\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_use_symbol_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">symbol_color</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set symbol color usage.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        symbol_color : bool, optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">symbol_color</span><span class=\"p\">:</span>\n            <span class=\"n\">symbol_color</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">usesymbolcolor</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Use Symbol Color&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">symbol_color</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.set_color\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.set_color/#pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.set_color\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">R</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">G</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set symbol color.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        R : int, optional</span>\n<span class=\"sd\">            Red color value. The default is ``255``.</span>\n<span class=\"sd\">        G : int, optional</span>\n<span class=\"sd\">            Green color value. The default is ``128``.</span>\n<span class=\"sd\">        B : int, optional</span>\n<span class=\"sd\">            Blue color value. The default is ``0``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Color&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"s2\">&quot;G:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"s2\">&quot;B:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.set_property\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.set_property/#pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.set_property\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set a part property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        property_name : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        property_value :</span>\n<span class=\"sd\">            Value for the property.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">property_name</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n                <span class=\"n\">v_prop</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">v_prop</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">v_prop</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">v_prop</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">property_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">property_value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        property_name : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        property_value :</span>\n<span class=\"sd\">            Value for the property.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">property_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">property_value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.change_property\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.change_property/#pyaedt.modeler.circuits.object3dcircuit.CircuitComponent.change_property\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">change_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vPropChange</span><span class=\"p\">,</span> <span class=\"n\">names_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Modify a property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        vPropChange :</span>\n\n<span class=\"sd\">        names_list : list, optional</span>\n<span class=\"sd\">             The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vChangedProps</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"n\">vPropChange</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">names_list</span><span class=\"p\">:</span>\n            <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">names_list</span><span class=\"p\">:</span>\n                <span class=\"n\">vPropServers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">]</span>\n        <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">vPropChange</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tabname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">):</span>\n            <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tabname</span>\n        <span class=\"k\">elif</span> <span class=\"n\">vPropChange</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n            <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">vPropChange</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">):</span>\n            <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">tabname</span><span class=\"p\">:</span>\n            <span class=\"n\">vGeo3dlayout</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">tabname</span><span class=\"p\">,</span> <span class=\"n\">vPropServers</span><span class=\"p\">,</span> <span class=\"n\">vChangedProps</span><span class=\"p\">]</span>\n            <span class=\"n\">vOut</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span> <span class=\"n\">vGeo3dlayout</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;NAME:Component Location&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">vChangedProps</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;PagePort&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">,</span> <span class=\"n\">vOut</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">,</span> <span class=\"n\">vOut</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/circuits/object3dcircuit", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}