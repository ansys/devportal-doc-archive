{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "pyaedt.edb_core.edb_data.padstacks_data", "body": "<h1>Source code for pyaedt.edb_core.edb_data.padstacks_data</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.edb_core.general</span> <span class=\"kn\">import</span> <span class=\"n\">convert_py_list_to_net_list</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">String</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">_clr</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.geometry_operators</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryOperators</span>\n\n\n<div class=\"viewcode-block\" id=\"EDBPadProperties\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadProperties/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadProperties\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EDBPadProperties</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB functionalities for pad properties.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    edb_padstack :</span>\n\n<span class=\"sd\">    layer_name : str</span>\n<span class=\"sd\">        Name of the layer.</span>\n<span class=\"sd\">    pad_type :</span>\n<span class=\"sd\">        Type of the pad.</span>\n<span class=\"sd\">    pedbpadstack : str</span>\n<span class=\"sd\">        Inherited AEDT object.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb = Edb(myedb, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb_pad_properties = edb.core_padstack.padstacks[&quot;MyPad&quot;].pad_by_layer[&quot;TOP&quot;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edb_padstack</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pad_type</span><span class=\"p\">,</span> <span class=\"n\">p_edb_padstack</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span> <span class=\"o\">=</span> <span class=\"n\">edb_padstack</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span> <span class=\"o\">=</span> <span class=\"n\">p_edb_padstack</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"n\">layer_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span> <span class=\"o\">=</span> <span class=\"n\">pad_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters_values</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_padstack_methods</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_padstack_methods</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_stackup_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_stackup_layers</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_builder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_builder</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edb</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_edb</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">geometry_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Geometry type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Type of the geometry.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">padparams</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">padparams</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n    <span class=\"nd\">@geometry_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">geometry_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">geom_type</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;0, NoGeometry. 1, Circle. 2 Square. 3, Rectangle. 4, Oval. 5, Bullet. 6, N-sided polygon. 7, Polygonal</span>\n<span class=\"sd\">        shape.8, Round gap with 45 degree thermal ties. 9, Round gap with 90 degree thermal ties.10, Square gap</span>\n<span class=\"sd\">        with 45 degree thermal ties. 11, Square gap with 90 degree thermal ties.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">elif</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">geom_type</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_pad_parameters_parameters</span><span class=\"p\">(</span><span class=\"n\">geom_type</span><span class=\"o\">=</span><span class=\"n\">geom_type</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parameters_values</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Parameters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of parameters.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters_values</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">pad_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters_values</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">pad_values</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters_values</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">polygon_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Parameters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of parameters.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">pad_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPolygonalPadParameters</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">pad_values</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Parameters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of parameters.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">pad_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># pad_values = self._padstack_methods.GetPadParametersValue(self._edb_padstack, self.layer_name, self)</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">pad_values</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n\n    <span class=\"nd\">@parameters</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">propertylist</span><span class=\"p\">):</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">propertylist</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">propertylist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">propertylist</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">propertylist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">propertylist</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_pad_parameters_parameters</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">propertylist</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Offset for the X axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Offset for the X axis.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">pad_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">pad_values</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@offset_x</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset_value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_pad_parameters_parameters</span><span class=\"p\">(</span><span class=\"n\">offsetx</span><span class=\"o\">=</span><span class=\"n\">offset_value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Offset for the Y axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Offset for the Y axis.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">pad_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">pad_values</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@offset_y</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset_value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_pad_parameters_parameters</span><span class=\"p\">(</span><span class=\"n\">offsety</span><span class=\"o\">=</span><span class=\"n\">offset_value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rotation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Rotation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the rotation.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">pad_values</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">pad_values</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@rotation</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rotation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rotation_value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_pad_parameters_parameters</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"n\">rotation_value</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadProperties.int_to_pad_type\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_pad_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Convert an integer to an EDB.PadGeometryType.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        val : int</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        object</span>\n<span class=\"sd\">            EDB.PadType enumerator value.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBPadProperties.int_to_geometry_type\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadProperties.int_to_geometry_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Convert an integer to an EDB.PadGeometryType.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        val : int</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        object</span>\n<span class=\"sd\">            EDB.PadGeometryType enumerator value.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbpadstack</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_pad_parameters_parameters</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">geom_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">offsetx</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">offsety</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update padstack parameters.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layer_name : str, optional</span>\n<span class=\"sd\">            Name of the layer. The default is ``None``.</span>\n<span class=\"sd\">        pad_type : int, optional</span>\n<span class=\"sd\">            Type of the pad. The default is ``None``.</span>\n<span class=\"sd\">        geom_type : int, optional</span>\n<span class=\"sd\">            Type of the geometry. The default is ``None``.</span>\n<span class=\"sd\">        params : list, optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        offsetx : float, optional</span>\n<span class=\"sd\">            Offset value for the X axis. The default is ``None``.</span>\n<span class=\"sd\">        offsety :  float, optional</span>\n<span class=\"sd\">            Offset value for the Y axis. The default is ``None``.</span>\n<span class=\"sd\">        rotation : float, optional</span>\n<span class=\"sd\">            Rotation value. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">originalPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">newPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">originalPadstackDefinitionData</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">pad_type</span><span class=\"p\">:</span>\n            <span class=\"n\">pad_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_type</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">geom_type</span><span class=\"p\">:</span>\n            <span class=\"n\">geom_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">geometry_type</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">params</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">offsetx</span><span class=\"p\">:</span>\n            <span class=\"n\">offsetx</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_x</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">offsety</span><span class=\"p\">:</span>\n            <span class=\"n\">offsety</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_y</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">rotation</span><span class=\"p\">:</span>\n            <span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rotation</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">layer_name</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_name</span>\n\n        <span class=\"n\">newPadstackDefinitionData</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n            <span class=\"n\">layer_name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pad_type</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"n\">geom_type</span><span class=\"p\">),</span>\n            <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">offsetx</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">offsety</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">newPadstackDefinitionData</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"EDBPadstack\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstack/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstack\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EDBPadstack</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB functionalities for a padstack.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    edb_padstack :</span>\n\n<span class=\"sd\">    ppadstack : str</span>\n<span class=\"sd\">        Inherited AEDT object.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb = Edb(myedb, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb_padstack = edb.core_padstack.padstacks[&quot;MyPad&quot;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edb_padstack</span><span class=\"p\">,</span> <span class=\"n\">ppadstack</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span> <span class=\"o\">=</span> <span class=\"n\">edb_padstack</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span> <span class=\"o\">=</span> <span class=\"n\">ppadstack</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">antipad_by_layer</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thermalpad_by_layer</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_params</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_layers</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">EDBPadProperties</span><span class=\"p\">(</span><span class=\"n\">edb_padstack</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">antipad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">EDBPadProperties</span><span class=\"p\">(</span><span class=\"n\">edb_padstack</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thermalpad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">EDBPadProperties</span><span class=\"p\">(</span><span class=\"n\">edb_padstack</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Padstack Definition Name.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_padstack_methods</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_padstack_methods</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_stackup_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_stackup_layers</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_builder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_builder</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edb</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_edb</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_start_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Starting layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the starting layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_layers</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_stop_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Stopping layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the stopping layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_layers</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_params</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Via Hole parameters values.&quot;&quot;&quot;</span>\n\n        <span class=\"n\">viaData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_params</span> <span class=\"o\">=</span> <span class=\"n\">viaData</span><span class=\"o\">.</span><span class=\"n\">GetHoleParametersValue</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_params</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole parameters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of the hole parameters.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_parameters</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_params</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_parameters</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_hole_parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">hole_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">offsetx</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">offsety</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update hole parameters.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        hole_type : optional</span>\n<span class=\"sd\">            Type of the hole. The default is ``None``.</span>\n<span class=\"sd\">        params : optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        offsetx : float, optional</span>\n<span class=\"sd\">            Offset value for the X axis. The default is ``None``.</span>\n<span class=\"sd\">        offsety :  float, optional</span>\n<span class=\"sd\">            Offset value for the Y axis. The default is ``None``.</span>\n<span class=\"sd\">        rotation : float, optional</span>\n<span class=\"sd\">            Rotation value in degrees. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">originalPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">newPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">originalPadstackDefinitionData</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">hole_type</span><span class=\"p\">:</span>\n            <span class=\"n\">hole_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_type</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">params</span><span class=\"p\">:</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_parameters</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">offsetx</span><span class=\"p\">:</span>\n            <span class=\"n\">offsetx</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_offset_x</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">offsety</span><span class=\"p\">:</span>\n            <span class=\"n\">offsety</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_offset_y</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">rotation</span><span class=\"p\">:</span>\n            <span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_rotation</span>\n        <span class=\"n\">newPadstackDefinitionData</span><span class=\"o\">.</span><span class=\"n\">SetHoleParameters</span><span class=\"p\">(</span>\n            <span class=\"n\">hole_type</span><span class=\"p\">,</span>\n            <span class=\"n\">params</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">offsetx</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">offsety</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">newPadstackDefinitionData</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_properties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole properties.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of float values for hole properties.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_properties</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_params</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_properties</span>\n\n    <span class=\"nd\">@hole_properties</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_properties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">propertylist</span><span class=\"p\">):</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">propertylist</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">propertylist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">propertylist</span><span class=\"p\">)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">propertylist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">propertylist</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_hole_parameters</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">propertylist</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Type of the hole.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_params</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_type</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_offset_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole offset for the X axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Hole offset value for the X axis.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_offset_x</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_params</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_offset_x</span>\n\n    <span class=\"nd\">@hole_offset_x</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_offset_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_offset_x</span> <span class=\"o\">=</span> <span class=\"n\">offset</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_hole_parameters</span><span class=\"p\">(</span><span class=\"n\">offsetx</span><span class=\"o\">=</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_offset_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole offset for the Y axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Hole offset value for the Y axis.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_offset_y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_params</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_offset_y</span>\n\n    <span class=\"nd\">@hole_offset_y</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_offset_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_offset_y</span> <span class=\"o\">=</span> <span class=\"n\">offset</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_hole_parameters</span><span class=\"p\">(</span><span class=\"n\">offsety</span><span class=\"o\">=</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_rotation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole rotation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the hole rotation.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_params</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_rotation</span>\n\n    <span class=\"nd\">@hole_rotation</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_rotation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rotation</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hole_rotation</span> <span class=\"o\">=</span> <span class=\"n\">rotation</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_hole_parameters</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"n\">rotation</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_plating_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole plating ratio.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Percentage for the hole plating.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">GetHolePlatingPercentage</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@hole_plating_ratio</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_plating_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"p\">):</span>\n\n        <span class=\"n\">originalPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">newPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">originalPadstackDefinitionData</span><span class=\"p\">)</span>\n        <span class=\"n\">newPadstackDefinitionData</span><span class=\"o\">.</span><span class=\"n\">SetHolePlatingPercentage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">ratio</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">newPadstackDefinitionData</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_plating_thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole plating thickness.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Thickness of the hole plating if present.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_plating_ratio</span> <span class=\"o\">/</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n    <span class=\"nd\">@hole_plating_thickness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_plating_thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole plating thickness.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Thickness of the hole plating if present.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">hr</span> <span class=\"o\">=</span> <span class=\"mi\">200</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_plating_ratio</span> <span class=\"o\">=</span> <span class=\"n\">hr</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hole_finished_size</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Finished hole size.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Finished size of the hole (Total Size + PlatingThickess*2).</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_plating_thickness</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Hole material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Material of the hole.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetMaterial</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@material</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">materialname</span><span class=\"p\">):</span>\n\n        <span class=\"n\">originalPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">newPadstackDefinitionData</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"p\">(</span><span class=\"n\">originalPadstackDefinitionData</span><span class=\"p\">)</span>\n        <span class=\"n\">newPadstackDefinitionData</span><span class=\"o\">.</span><span class=\"n\">SetMaterial</span><span class=\"p\">(</span><span class=\"n\">materialname</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">newPadstackDefinitionData</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">padstack_instances</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n\n        <span class=\"sd\">&quot;&quot;&quot;Get all the vias that belongs to active Padstack definition.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">via</span> <span class=\"k\">for</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">via</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">padstack_definition</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"p\">}</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadstack.convert_to_3d_microvias\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstack.convert_to_3d_microvias\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">convert_to_3d_microvias</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">convert_only_signal_vias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">hole_wall_angle</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Convert actual padstack instance to microvias 3D Objects with a given aspect ratio.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        convert_only_signal_vias : bool, optional</span>\n<span class=\"sd\">            Either to convert only vias belonging to signal nets or all vias. Defaults is ``True``.</span>\n<span class=\"sd\">        hole_wall_angle : float, optional</span>\n<span class=\"sd\">            Angle of laser penetration in deg. It will define the bottom hole diameter with the following formula:</span>\n<span class=\"sd\">            HoleDiameter -2*tan(laser_angle* Hole depth). Hole depth is the height of the via (dielectric thickness).</span>\n<span class=\"sd\">            The default value is ``15``.</span>\n<span class=\"sd\">            The bottom hole will be ``0.75*HoleDepth/HoleDiam``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Microvias cannot be applied when Start and Stop Layers are the same.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span>\n        <span class=\"n\">layer_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">if</span> <span class=\"n\">convert_only_signal_vias</span><span class=\"p\">:</span>\n            <span class=\"n\">signal_nets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">signal_nets</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"n\">topl</span><span class=\"p\">,</span> <span class=\"n\">topz</span><span class=\"p\">,</span> <span class=\"n\">bottoml</span><span class=\"p\">,</span> <span class=\"n\">bottomz</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">stackup_limits</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">start_elevation</span> <span class=\"o\">=</span> <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower_elevation</span>\n        <span class=\"n\">diel_thick</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">start_elevation</span> <span class=\"o\">-</span> <span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper_elevation</span><span class=\"p\">)</span>\n        <span class=\"n\">rad1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"n\">rad2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_properties</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">tan</span><span class=\"p\">(</span><span class=\"n\">hole_wall_angle</span> <span class=\"o\">*</span> <span class=\"n\">diel_thick</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">start_elevation</span> <span class=\"o\">&lt;</span> <span class=\"p\">(</span><span class=\"n\">topz</span> <span class=\"o\">+</span> <span class=\"n\">bottomz</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">rad1</span><span class=\"p\">,</span> <span class=\"n\">rad2</span> <span class=\"o\">=</span> <span class=\"n\">rad2</span><span class=\"p\">,</span> <span class=\"n\">rad1</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">via</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">convert_only_signal_vias</span> <span class=\"ow\">and</span> <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">net_name</span> <span class=\"ow\">in</span> <span class=\"n\">signal_nets</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">convert_only_signal_vias</span><span class=\"p\">:</span>\n                <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">position</span>\n                <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">Polygon</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                        <span class=\"n\">layout</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">,</span>\n                        <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">polygon_data</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                        <span class=\"n\">layout</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">,</span>\n                        <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters_values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">Polygon</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                        <span class=\"n\">layout</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">,</span>\n                        <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">polygon_data</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                        <span class=\"n\">layout</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">,</span>\n                        <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parameters_values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">layer_name</span> <span class=\"ow\">in</span> <span class=\"n\">layer_names</span><span class=\"p\">:</span>\n                    <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n                    <span class=\"k\">if</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">start_layer</span> <span class=\"ow\">or</span> <span class=\"n\">started</span><span class=\"p\">:</span>\n                        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">layer_name</span>\n                        <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"n\">layer_names</span><span class=\"p\">[</span><span class=\"n\">layer_names</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"n\">cloned_circle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                            <span class=\"n\">layout</span><span class=\"p\">,</span>\n                            <span class=\"n\">start</span><span class=\"p\">,</span>\n                            <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">rad1</span><span class=\"p\">),</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">cloned_circle2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">Circle</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                            <span class=\"n\">layout</span><span class=\"p\">,</span>\n                            <span class=\"n\">stop</span><span class=\"p\">,</span>\n                            <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n                            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">rad2</span><span class=\"p\">),</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">s3d</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Hierarchy</span><span class=\"o\">.</span><span class=\"n\">Structure3D</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                            <span class=\"n\">layout</span><span class=\"p\">,</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;via3d_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">aedt_name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;via_&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">s3d</span><span class=\"o\">.</span><span class=\"n\">AddMember</span><span class=\"p\">(</span><span class=\"n\">cloned_circle</span><span class=\"p\">)</span>\n                        <span class=\"n\">s3d</span><span class=\"o\">.</span><span class=\"n\">AddMember</span><span class=\"p\">(</span><span class=\"n\">cloned_circle2</span><span class=\"p\">)</span>\n                        <span class=\"n\">s3d</span><span class=\"o\">.</span><span class=\"n\">SetMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"p\">)</span>\n                        <span class=\"n\">s3d</span><span class=\"o\">.</span><span class=\"n\">SetMeshClosureProp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Hierarchy</span><span class=\"o\">.</span><span class=\"n\">Structure3D</span><span class=\"o\">.</span><span class=\"n\">TClosure</span><span class=\"o\">.</span><span class=\"n\">EndsClosed</span><span class=\"p\">)</span>\n                        <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                        <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                    <span class=\"k\">if</span> <span class=\"n\">stop</span> <span class=\"o\">==</span> <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">stop_layer</span><span class=\"p\">:</span>\n                        <span class=\"k\">break</span>\n                <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\"> Converted successfully to 3D Objects.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBPadstack.split_to_microvias\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstack.split_to_microvias\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">split_to_microvias</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Convert actual padstack definition to multiple microvias definitions.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.edb_core.padstackEDBPadstack`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Microvias cannot be applied when Start and Stop Layers are the same.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">layout</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span>\n        <span class=\"n\">layer_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">layer_names</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">layer_names</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span><span class=\"p\">))</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Conversion can be applied only if Padstack definition is composed by more than 2 layers.&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span>\n        <span class=\"n\">new_instances</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer_name</span> <span class=\"ow\">in</span> <span class=\"n\">layer_names</span><span class=\"p\">:</span>\n            <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"k\">if</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span> <span class=\"ow\">or</span> <span class=\"n\">started</span><span class=\"p\">:</span>\n                <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">layer_name</span>\n                <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"n\">layer_names</span><span class=\"p\">[</span><span class=\"n\">layer_names</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n                <span class=\"n\">new_padstack_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;MV_</span><span class=\"si\">{}</span><span class=\"s2\">_</span><span class=\"si\">{}</span><span class=\"s2\">_</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">)</span>\n                <span class=\"n\">included</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">]</span>\n                <span class=\"n\">new_padstack_definition_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDefData</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">()</span>\n                <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">AddLayers</span><span class=\"p\">(</span><span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">(</span><span class=\"n\">included</span><span class=\"p\">))</span>\n                <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"n\">included</span><span class=\"p\">:</span>\n                    <span class=\"n\">pl</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span>\n                    <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                        <span class=\"n\">layer</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">RegularPad</span><span class=\"p\">,</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">geometry_type</span><span class=\"p\">),</span>\n                        <span class=\"nb\">list</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                                <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">3</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">4</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">5</span><span class=\"p\">],</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">pl</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">antipad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span>\n                    <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                        <span class=\"n\">layer</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">AntiPad</span><span class=\"p\">,</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">geometry_type</span><span class=\"p\">),</span>\n                        <span class=\"nb\">list</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                                <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">3</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">4</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">5</span><span class=\"p\">],</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">pl</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">thermalpad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span>\n                    <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">SetPadParameters</span><span class=\"p\">(</span>\n                        <span class=\"n\">layer</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadType</span><span class=\"o\">.</span><span class=\"n\">ThermalPad</span><span class=\"p\">,</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_geometry_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">geometry_type</span><span class=\"p\">),</span>\n                        <span class=\"nb\">list</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                                <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">3</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">4</span><span class=\"p\">],</span>\n                        <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">_edb_padstack</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPadParametersValue</span><span class=\"p\">(</span>\n                            <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">int_to_pad_type</span><span class=\"p\">(</span><span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">pad_type</span><span class=\"p\">)</span>\n                        <span class=\"p\">)[</span><span class=\"mi\">5</span><span class=\"p\">],</span>\n                    <span class=\"p\">)</span>\n                <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">SetHoleParameters</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_type</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_parameters</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_offset_x</span><span class=\"p\">),</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_offset_y</span><span class=\"p\">),</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_rotation</span><span class=\"p\">),</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">SetMaterial</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"p\">)</span>\n                <span class=\"n\">new_padstack_definition_data</span><span class=\"o\">.</span><span class=\"n\">SetHolePlatingPercentage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole_plating_ratio</span><span class=\"p\">))</span>\n                <span class=\"n\">padstack_definition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Definition</span><span class=\"o\">.</span><span class=\"n\">PadstackDef</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">new_padstack_name</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">padstack_definition</span><span class=\"o\">.</span><span class=\"n\">SetData</span><span class=\"p\">(</span><span class=\"n\">new_padstack_definition_data</span><span class=\"p\">)</span>\n                <span class=\"n\">new_instances</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">EDBPadstack</span><span class=\"p\">(</span><span class=\"n\">padstack_definition</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"p\">))</span>\n                <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">via_stop_layer</span> <span class=\"o\">==</span> <span class=\"n\">stop</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">via</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_instances</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n            <span class=\"k\">for</span> <span class=\"n\">inst</span> <span class=\"ow\">in</span> <span class=\"n\">new_instances</span><span class=\"p\">:</span>\n                <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">inst</span><span class=\"o\">.</span><span class=\"n\">edb_padstack</span>\n                <span class=\"n\">from_layer</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"n\">l</span>\n                    <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_list</span>\n                    <span class=\"k\">if</span> <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">to_layer</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"n\">l</span>\n                    <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_list</span>\n                    <span class=\"k\">if</span> <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLayerNames</span><span class=\"p\">())[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                <span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"n\">padstack_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Primitive</span><span class=\"o\">.</span><span class=\"n\">PadstackInstance</span><span class=\"o\">.</span><span class=\"n\">Create</span><span class=\"p\">(</span>\n                    <span class=\"n\">layout</span><span class=\"p\">,</span>\n                    <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">(),</span>\n                    <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()),</span>\n                    <span class=\"n\">instance</span><span class=\"p\">,</span>\n                    <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetPositionAndRotationValue</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                    <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetPositionAndRotationValue</span><span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n                    <span class=\"n\">from_layer</span><span class=\"p\">,</span>\n                    <span class=\"n\">to_layer</span><span class=\"p\">,</span>\n                    <span class=\"kc\">None</span><span class=\"p\">,</span>\n                    <span class=\"kc\">None</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">padstack_instance</span><span class=\"o\">.</span><span class=\"n\">SetIsLayoutPin</span><span class=\"p\">(</span><span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">is_pin</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">via</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ppadstack</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Created </span><span class=\"si\">{}</span><span class=\"s2\"> new microvias.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_instances</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EDBPadstackInstance</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB functionalities for a padstack.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    edb_padstackinstance :</span>\n\n<span class=\"sd\">    _pedb :</span>\n<span class=\"sd\">        Inherited AEDT object.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb = Edb(myedb, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb_padstack_instance = edb.core_padstack.padstack_instances[0]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getattr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Attribute not present&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edb_padstackinstance</span><span class=\"p\">,</span> <span class=\"n\">_pedb</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span> <span class=\"o\">=</span> <span class=\"n\">edb_padstackinstance</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span> <span class=\"o\">=</span> <span class=\"n\">_pedb</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_instance</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_position</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pdef</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">object_instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Edb Object Instance.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_instance</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_instance</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetLayout</span><span class=\"p\">()</span>\n                <span class=\"o\">.</span><span class=\"n\">GetLayoutInstance</span><span class=\"p\">()</span>\n                <span class=\"o\">.</span><span class=\"n\">GetLayoutObjInstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_instance</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get bounding box of the padstack instance.</span>\n<span class=\"sd\">        Because this method is slow, the bounding box is stored in a variable and reused.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box</span>\n        <span class=\"n\">bbox</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_instance</span><span class=\"o\">.</span><span class=\"n\">GetBBox</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"p\">[</span><span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">Item1</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">(),</span> <span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">Item1</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()],</span>\n            <span class=\"p\">[</span><span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">Item2</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">(),</span> <span class=\"n\">bbox</span><span class=\"o\">.</span><span class=\"n\">Item2</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()],</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.in_polygon\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_polygon\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">in_polygon</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">polygon_data</span><span class=\"p\">,</span> <span class=\"n\">include_partial</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">simple_check</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if padstack Instance is in given polygon data.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        polygon_data : PolygonData Object</span>\n<span class=\"sd\">        include_partial : bool, optional</span>\n<span class=\"sd\">            Whether to include partial intersecting instances. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">simple_check</span><span class=\"p\">:</span>\n            <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">]</span>\n            <span class=\"n\">int_val</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"mi\">1</span>\n                <span class=\"k\">if</span> <span class=\"n\">polygon_data</span><span class=\"o\">.</span><span class=\"n\">PointInPolygon</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"o\">.</span><span class=\"n\">PointData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">else</span> <span class=\"mi\">0</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">plane</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">Shape</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;rectangle&quot;</span><span class=\"p\">,</span> <span class=\"n\">pointA</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">pointB</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">rectangle_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">shape_to_polygon_data</span><span class=\"p\">(</span><span class=\"n\">plane</span><span class=\"p\">)</span>\n            <span class=\"n\">int_val</span> <span class=\"o\">=</span> <span class=\"n\">polygon_data</span><span class=\"o\">.</span><span class=\"n\">GetIntersectionType</span><span class=\"p\">(</span><span class=\"n\">rectangle_data</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Intersection type:</span>\n        <span class=\"c1\"># 0 = objects do not intersect</span>\n        <span class=\"c1\"># 1 = this object fully inside other (no common contour points)</span>\n        <span class=\"c1\"># 2 = other object fully inside this</span>\n        <span class=\"c1\"># 3 = common contour points 4 = undefined intersection</span>\n        <span class=\"k\">if</span> <span class=\"n\">int_val</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">elif</span> <span class=\"n\">include_partial</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">elif</span> <span class=\"n\">int_val</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get component this padstack belong to.&quot;&quot;&quot;</span>\n        <span class=\"n\">comp_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetComponent</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">comp_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">comp_name</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return Edb padstack object.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">padstack_definition</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Padstack definition.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the padstack definition.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pdef</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetPadstackDef</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pdef</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">backdrill_top</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Backdrill layer from top.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">            Tuple of the layer name and drill diameter.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">)</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">diameter</span> <span class=\"o\">=</span> <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">StrongBox</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)]()</span>\n            <span class=\"n\">drill_to_layer</span> <span class=\"o\">=</span> <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">StrongBox</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">ILayerReadOnly</span><span class=\"p\">]()</span>\n            <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetBackDrillParametersLayerValue</span><span class=\"p\">(</span><span class=\"n\">drill_to_layer</span><span class=\"p\">,</span> <span class=\"n\">diameter</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"p\">(</span>\n                <span class=\"n\">flag</span><span class=\"p\">,</span>\n                <span class=\"n\">drill_to_layer</span><span class=\"p\">,</span>\n                <span class=\"n\">diameter</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetBackDrillParametersLayerValue</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">flag</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">drill_to_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">diameter</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.set_backdrill_top\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_top\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_backdrill_top</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">drill_depth</span><span class=\"p\">,</span> <span class=\"n\">drill_diameter</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set backdrill from top.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        drill_depth : str</span>\n<span class=\"sd\">            Name of the drill to layer.</span>\n<span class=\"sd\">        drill_diameter : float, str</span>\n<span class=\"sd\">            Diameter of backdrill size.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            True if success, False otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">drill_depth</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">drill_diameter</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetBackDrillParameters</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">backdrill_bottom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Backdrill layer from bottom.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">            Tuple of the layer name and drill diameter.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">)</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">diameter</span> <span class=\"o\">=</span> <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">StrongBox</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)]()</span>\n            <span class=\"n\">drill_to_layer</span> <span class=\"o\">=</span> <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">StrongBox</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">ILayerReadOnly</span><span class=\"p\">]()</span>\n            <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetBackDrillParametersLayerValue</span><span class=\"p\">(</span><span class=\"n\">drill_to_layer</span><span class=\"p\">,</span> <span class=\"n\">diameter</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"p\">(</span>\n                <span class=\"n\">flag</span><span class=\"p\">,</span>\n                <span class=\"n\">drill_to_layer</span><span class=\"p\">,</span>\n                <span class=\"n\">diameter</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetBackDrillParametersLayerValue</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">flag</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">drill_to_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">(),</span> <span class=\"n\">diameter</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.set_backdrill_bottom\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.set_backdrill_bottom\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_backdrill_bottom</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">drill_depth</span><span class=\"p\">,</span> <span class=\"n\">drill_diameter</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set backdrill from bottom.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        drill_depth : str</span>\n<span class=\"sd\">            Name of the drill to layer.</span>\n<span class=\"sd\">        drill_diameter : float, str</span>\n<span class=\"sd\">            Diameter of backdrill size.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            True if success, False otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">drill_depth</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">drill_diameter</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetBackDrillParameters</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Starting layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the starting layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">)</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">start_layer</span><span class=\"p\">,</span> <span class=\"n\">stop_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetLayerRange</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">start_layer</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">start_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@start_layer</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">):</span>\n        <span class=\"n\">stop_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stop_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetLayerRange</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">stop_layer</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stop_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Stopping layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the stopping layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">)</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">start_layer</span><span class=\"p\">,</span> <span class=\"n\">stop_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetLayerRange</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">stop_layer</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">stop_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@stop_layer</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stop_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">):</span>\n        <span class=\"n\">start_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">start_layer</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetLayerRange</span><span class=\"p\">(</span><span class=\"n\">start_layer</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_range_names</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of all layers to which the padstack instance belongs.&quot;&quot;&quot;</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">start_layer</span><span class=\"p\">,</span> <span class=\"n\">stop_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetLayerRange</span><span class=\"p\">()</span>\n        <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">layer_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">start_layer_name</span> <span class=\"o\">=</span> <span class=\"n\">start_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"n\">stop_layer_name</span> <span class=\"o\">=</span> <span class=\"n\">stop_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer_name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">started</span><span class=\"p\">:</span>\n                <span class=\"n\">layer_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">stop_layer_name</span> <span class=\"ow\">or</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">start_layer_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">start_layer_name</span><span class=\"p\">:</span>\n                <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"n\">layer_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">stop_layer_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">stop_layer_name</span><span class=\"p\">:</span>\n                <span class=\"n\">started</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"n\">layer_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">layer_name</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">layer_name</span> <span class=\"o\">==</span> <span class=\"n\">start_layer_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n        <span class=\"k\">return</span> <span class=\"n\">layer_list</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Net name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the net.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetNet</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@net_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetNet</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Value inserted not found. Input has to be net name or net object.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"p\">:</span>\n            <span class=\"n\">net</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">net_object</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetNet</span><span class=\"p\">(</span><span class=\"n\">net</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Value inserted not found. Input has to be net name or net object.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_pin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Determines whether this padstack instance is a layout pin.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            True if this padstack type is a layout pin, False otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">IsLayoutPin</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@is_pin</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_pin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set padstack type</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        pin : bool</span>\n<span class=\"sd\">            True if set this padstack instance as pin, False otherwise</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetIsLayoutPin</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Padstack instance position.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of ``[x, y]``` coordinates for the padstack instance position.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_position</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetPositionAndRotationValue</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">IsLayoutPin</span><span class=\"p\">():</span>\n            <span class=\"n\">out2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetComponent</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetTransform</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">TransformPoint</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_position</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">out2</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">(),</span> <span class=\"n\">out2</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()]</span>\n        <span class=\"k\">if</span> <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_position</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">(),</span> <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_position</span>\n\n    <span class=\"nd\">@position</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)):</span>\n                <span class=\"n\">pos</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">pos</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n        <span class=\"n\">point_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"o\">.</span><span class=\"n\">PointData</span><span class=\"p\">(</span><span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">pos</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetPositionAndRotation</span><span class=\"p\">(</span><span class=\"n\">point_data</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rotation</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rotation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Padstack instance rotation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Rotatation value for the padstack instance.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">point_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"o\">.</span><span class=\"n\">PointData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">))</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetPositionAndRotationValue</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Id of this padstack instance.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Padstack instance id.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetId</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Padstack Instance Name. If it is a pin, the syntax will be like in AEDT ComponentName-PinName.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_pin</span><span class=\"p\">:</span>\n            <span class=\"n\">comp_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetComponent</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n            <span class=\"n\">pin_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;-&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">comp_name</span><span class=\"p\">,</span> <span class=\"n\">pin_name</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">SetProductProperty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">ProductId</span><span class=\"o\">.</span><span class=\"n\">Designer</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pin_number</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get pin number.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">aedt_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the pin name that is shown in AEDT.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           To obtain the EDB core pin name, use `pin.GetName()`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the pin in AEDT.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">        &gt;&gt;&gt; edbapp = Edb(&quot;myaedbfolder&quot;, &quot;project name&quot;, &quot;release version&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; edbapp.core_padstack.padstack_instances[111].get_aedt_pin_name()</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">Reference</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">]()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetProductProperty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">ProductId</span><span class=\"o\">.</span><span class=\"n\">Designer</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">String</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetProductProperty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">ProductId</span><span class=\"o\">.</span><span class=\"n\">Designer</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.parametrize_position\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.parametrize_position\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parametrize_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Parametrize the instance position.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        prefix : str, optional</span>\n<span class=\"sd\">            Prefix for the variable name.</span>\n<span class=\"sd\">            Example `&quot;MyVariableName&quot;` will create 2 Project variables $MyVariableNamesX and $MyVariableNamesY.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List</span>\n<span class=\"sd\">            Variables created</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">prefix</span><span class=\"p\">:</span>\n            <span class=\"n\">var_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;$</span><span class=\"si\">{}</span><span class=\"s2\">_pos&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">var_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;$</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"n\">var_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"n\">var_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">var_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">var_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">var_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">var_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.delete_padstack_instance\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete_padstack_instance/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete_padstack_instance\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_padstack_instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete this padstack instance.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.6.28</span>\n<span class=\"sd\">           Use :func:`delete` property instead.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;`delete_padstack_instance` is deprecated. Use `delete` instead.&quot;</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.delete\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete this padstack instance.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.in_voids\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.in_voids\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">in_voids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if this padstack instance is in any void.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        net_name : str</span>\n<span class=\"sd\">            Net name of the voids to be checked.</span>\n<span class=\"sd\">        layer_name : str</span>\n<span class=\"sd\">            Layer name of the voids to be checked.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of the voids includes this padstack instance.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">x_pos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">y_pos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"n\">point_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Geometry</span><span class=\"o\">.</span><span class=\"n\">PointData</span><span class=\"p\">(</span><span class=\"n\">x_pos</span><span class=\"p\">,</span> <span class=\"n\">y_pos</span><span class=\"p\">)</span>\n\n        <span class=\"n\">voids</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">prim</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">get_primitives</span><span class=\"p\">(</span><span class=\"n\">net_name</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">is_void</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">prim</span><span class=\"o\">.</span><span class=\"n\">primitive_object</span><span class=\"o\">.</span><span class=\"n\">GetPolygonData</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">PointInPolygon</span><span class=\"p\">(</span><span class=\"n\">point_data</span><span class=\"p\">):</span>\n                <span class=\"n\">voids</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">prim</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">voids</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pingroups</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pin groups that the pin belongs to.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of pin groups that the pin belongs to.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetPinGroups</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">placement_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Placement layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the placement layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetGroup</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPlacementLayer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lower_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Lower elevation of the placement layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Lower elavation of the placement layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetGroup</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPlacementLayer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLowerElevation</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">upper_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Upper elevation of the placement layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">           Upper elevation of the placement layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetGroup</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPlacementLayer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetUpperElevation</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_bottom_association</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top/bottom association of the placement layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Top/bottom association of the placement layer.</span>\n\n<span class=\"sd\">            * 0 Top associated.</span>\n<span class=\"sd\">            * 1 No association.</span>\n<span class=\"sd\">            * 2 Bottom associated.</span>\n<span class=\"sd\">            * 4 Number of top/bottom association type.</span>\n<span class=\"sd\">            * -1 Undefined.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetGroup</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetPlacementLayer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetTopBottomAssociation</span><span class=\"p\">())</span>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.create_rectangle_in_pad\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.create_rectangle_in_pad\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_rectangle_in_pad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">return_points</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a rectangle inscribed inside a padstack instance pad. The rectangle is fully inscribed in the</span>\n<span class=\"sd\">        pad and has the maximum area. It is necessary to specify the layer on which the rectangle will be created.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layer_name : str</span>\n<span class=\"sd\">            Name of the layer on which to create the polygon.</span>\n\n<span class=\"sd\">        return_points : bool, optional</span>\n<span class=\"sd\">            If `True` does not create the rectangle and just returns a list containing the rectangle vertices.</span>\n<span class=\"sd\">            Default is `False`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool, List,  :class:`pyaedt.edb_core.edb_data.primitives.EDBPrimitives`</span>\n<span class=\"sd\">            Polygon when successful, ``False`` when failed, list of list if `return_points=True`.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">        &gt;&gt;&gt; edbapp = Edb(&quot;myaedbfolder&quot;, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">        &gt;&gt;&gt; edb_layout = edbapp.core_primitives</span>\n<span class=\"sd\">        &gt;&gt;&gt; list_of_padstack_instances = list(edbapp.core_padstack.padstack_instances.values())</span>\n<span class=\"sd\">        &gt;&gt;&gt; padstack_inst = list_of_padstack_instances[0]</span>\n<span class=\"sd\">        &gt;&gt;&gt; padstack_inst.create_rectangle_in_pad(&quot;TOP&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">padstack_center</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span>\n        <span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rotation</span>  <span class=\"c1\"># in radians</span>\n        <span class=\"n\">padstack_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstack_definition</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">padstack</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">padstacks</span><span class=\"p\">[</span><span class=\"n\">padstack_name</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">padstack_pad</span> <span class=\"o\">=</span> <span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">padstack_pad</span> <span class=\"o\">=</span> <span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">pad_by_layer</span><span class=\"p\">[</span><span class=\"n\">padstack</span><span class=\"o\">.</span><span class=\"n\">via_start_layer</span><span class=\"p\">]</span>\n            <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"n\">pad_shape</span> <span class=\"o\">=</span> <span class=\"n\">padstack_pad</span><span class=\"o\">.</span><span class=\"n\">geometry_type</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">padstack_pad</span><span class=\"o\">.</span><span class=\"n\">parameters_values</span>\n        <span class=\"n\">polygon_data</span> <span class=\"o\">=</span> <span class=\"n\">padstack_pad</span><span class=\"o\">.</span><span class=\"n\">polygon_data</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">)</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">rotation</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_translate</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">padstack_center</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">padstack_center</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]</span>\n\n        <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Circle</span>\n            <span class=\"n\">diameter</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">diameter</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">]</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n            <span class=\"n\">p4</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">r</span><span class=\"p\">]</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">),</span> <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">),</span> <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">p3</span><span class=\"p\">),</span> <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">p4</span><span class=\"p\">)]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Square</span>\n            <span class=\"n\">square_size</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">s2</span> <span class=\"o\">=</span> <span class=\"n\">square_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">s2</span><span class=\"p\">,</span> <span class=\"n\">s2</span><span class=\"p\">]</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">s2</span><span class=\"p\">,</span> <span class=\"n\">s2</span><span class=\"p\">]</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">s2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">s2</span><span class=\"p\">]</span>\n            <span class=\"n\">p4</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">s2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">s2</span><span class=\"p\">]</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p3</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p4</span><span class=\"p\">)),</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Rectangle</span>\n            <span class=\"n\">x_size</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"n\">y_size</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"n\">sx2</span> <span class=\"o\">=</span> <span class=\"n\">x_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n            <span class=\"n\">sy2</span> <span class=\"o\">=</span> <span class=\"n\">y_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sx2</span><span class=\"p\">,</span> <span class=\"n\">sy2</span><span class=\"p\">]</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">sx2</span><span class=\"p\">,</span> <span class=\"n\">sy2</span><span class=\"p\">]</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">sx2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">sy2</span><span class=\"p\">]</span>\n            <span class=\"n\">p4</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sx2</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">sy2</span><span class=\"p\">]</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p3</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p4</span><span class=\"p\">)),</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Oval</span>\n            <span class=\"n\">x_size</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">y_size</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">corner_radius</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n            <span class=\"k\">if</span> <span class=\"n\">corner_radius</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_size</span><span class=\"p\">,</span> <span class=\"n\">y_size</span><span class=\"p\">):</span>\n                <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_size</span><span class=\"p\">,</span> <span class=\"n\">y_size</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">corner_radius</span>\n            <span class=\"n\">sx</span> <span class=\"o\">=</span> <span class=\"n\">x_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">-</span> <span class=\"n\">r</span>\n            <span class=\"n\">sy</span> <span class=\"o\">=</span> <span class=\"n\">y_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">-</span> <span class=\"n\">r</span>\n            <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">/</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sx</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">sy</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">sx</span> <span class=\"o\">-</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">sy</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">sx</span> <span class=\"o\">-</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">sy</span> <span class=\"o\">-</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">p4</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sx</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">sy</span> <span class=\"o\">-</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p3</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p4</span><span class=\"p\">)),</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Bullet</span>\n            <span class=\"n\">x_size</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">y_size</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">corner_radius</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">corner_radius</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_size</span><span class=\"p\">,</span> <span class=\"n\">y_size</span><span class=\"p\">):</span>\n                <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">x_size</span><span class=\"p\">,</span> <span class=\"n\">y_size</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">corner_radius</span>\n            <span class=\"n\">sx</span> <span class=\"o\">=</span> <span class=\"n\">x_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">-</span> <span class=\"n\">r</span>\n            <span class=\"n\">sy</span> <span class=\"o\">=</span> <span class=\"n\">y_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span> <span class=\"o\">-</span> <span class=\"n\">r</span>\n            <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">r</span> <span class=\"o\">/</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sx</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">sy</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">x_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">sy</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">x_size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">sy</span> <span class=\"o\">-</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">p4</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sx</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">sy</span> <span class=\"o\">-</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p3</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p4</span><span class=\"p\">)),</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n            <span class=\"c1\"># N-Sided Polygon</span>\n            <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">num_sides</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">ext_radius</span> <span class=\"o\">=</span> <span class=\"n\">size</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span>\n            <span class=\"n\">apothem</span> <span class=\"o\">=</span> <span class=\"n\">ext_radius</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"n\">num_sides</span><span class=\"p\">)</span>\n            <span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">apothem</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n            <span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">apothem</span><span class=\"p\">]</span>\n            <span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">apothem</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n            <span class=\"n\">p4</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">apothem</span><span class=\"p\">]</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p2</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p3</span><span class=\"p\">)),</span>\n                <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">p4</span><span class=\"p\">)),</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">pad_shape</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">polygon_data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Polygon</span>\n            <span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">polygon_data</span><span class=\"o\">.</span><span class=\"n\">Count</span><span class=\"p\">:</span>\n                <span class=\"n\">point</span> <span class=\"o\">=</span> <span class=\"n\">polygon_data</span><span class=\"o\">.</span><span class=\"n\">GetPoint</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">if</span> <span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">IsArc</span><span class=\"p\">():</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">points</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">(),</span> <span class=\"n\">point</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()])</span>\n            <span class=\"n\">xpoly</span><span class=\"p\">,</span> <span class=\"n\">ypoly</span> <span class=\"o\">=</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">points</span><span class=\"p\">)</span>\n            <span class=\"n\">polygon</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">xpoly</span><span class=\"p\">),</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">ypoly</span><span class=\"p\">)]</span>\n            <span class=\"n\">rectangles</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">find_largest_rectangle_inside_polygon</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"p\">)</span>\n            <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"n\">rectangles</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n                <span class=\"n\">rect</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">_rotate</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">rect</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rect</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">Shape</span><span class=\"p\">(</span><span class=\"s2\">&quot;polygon&quot;</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"o\">=</span><span class=\"n\">rect</span><span class=\"p\">)</span>\n        <span class=\"n\">pdata</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">shape_to_polygon_data</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n        <span class=\"n\">new_rect</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">pdata</span><span class=\"o\">.</span><span class=\"n\">Points</span><span class=\"p\">:</span>\n            <span class=\"n\">p_transf</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetComponent</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetTransform</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">TransformPoint</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">)</span>\n            <span class=\"n\">new_rect</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">p_transf</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">(),</span> <span class=\"n\">p_transf</span><span class=\"o\">.</span><span class=\"n\">Y</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()])</span>\n        <span class=\"k\">if</span> <span class=\"n\">return_points</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">new_rect</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">Shape</span><span class=\"p\">(</span><span class=\"s2\">&quot;polygon&quot;</span><span class=\"p\">,</span> <span class=\"n\">points</span><span class=\"o\">=</span><span class=\"n\">new_rect</span><span class=\"p\">)</span>\n            <span class=\"n\">created_polygon</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">create_polygon</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">layer_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">created_polygon</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBPadstackInstance.get_connected_object_id_set\"><a class=\"viewcode-back\" href=\"../../../../../EDBAPI/_autosummary/pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set/#pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance.get_connected_object_id_set\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_connected_object_id_set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Produce a list of all geometries physically connected to a given layout object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            Found connected objects IDs with Layout object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layoutInst</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_padstackinstance</span><span class=\"o\">.</span><span class=\"n\">GetLayout</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLayoutInstance</span><span class=\"p\">()</span>\n        <span class=\"n\">layoutObjInst</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_instance</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">loi</span><span class=\"o\">.</span><span class=\"n\">GetLayoutObj</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetId</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">loi</span> <span class=\"ow\">in</span> <span class=\"n\">layoutInst</span><span class=\"o\">.</span><span class=\"n\">GetConnectedObjects</span><span class=\"p\">(</span><span class=\"n\">layoutObjInst</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Items</span><span class=\"p\">]</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/edb_core/edb_data/padstacks_data", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}