{"parents": [{"link": "../../", "title": "API EDB reference"}, {"link": "../../CoreEdb/", "title": "EDB manager"}], "prev": {"link": "../pyaedt.edb_core.padstack.EdbPadstacks.pingroups/", "title": "pingroups"}, "next": {"link": "../pyaedt.edb_core.layout.EdbLayout.add_void/", "title": "add_void"}, "title": "pyaedt.edb_core.layout.EdbLayout", "meta": {}, "body": "<section id=\"pyaedt-edb-core-layout-edblayout\">\n<h1>pyaedt.edb_core.layout.EdbLayout<a class=\"headerlink\" href=\"#pyaedt-edb-core-layout-edblayout\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb_core.layout.EdbLayout\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">pyaedt.edb_core.layout.</span></span><span class=\"sig-name descname\"><span class=\"pre\">EdbLayout</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">p_edb</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb_core/layout/#EdbLayout\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb_core.layout.EdbLayout\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Manages EDB methods for primitives management accessible from <cite>Edb.core_primitives</cite> property.</p>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">Edb</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edbapp</span> <span class=\"o\">=</span> <span class=\"n\">Edb</span><span class=\"p\">(</span><span class=\"s2\">&quot;myaedbfolder&quot;</span><span class=\"p\">,</span> <span class=\"n\">edbversion</span><span class=\"o\">=</span><span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">edb_layout</span> <span class=\"o\">=</span> <span class=\"n\">edbapp</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.add_void/#pyaedt.edb_core.layout.EdbLayout.add_void\" title=\"pyaedt.edb_core.layout.EdbLayout.add_void\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.add_void</span></code></a>(shape,\u00a0void_shape)</p></td>\n<td><p>Add a void into a shape.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.create_circle/#pyaedt.edb_core.layout.EdbLayout.create_circle\" title=\"pyaedt.edb_core.layout.EdbLayout.create_circle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.create_circle</span></code></a>(layer_name,\u00a0x,\u00a0y,\u00a0radius)</p></td>\n<td><p>Create a circle on a specified layer.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.create_polygon/#pyaedt.edb_core.layout.EdbLayout.create_polygon\" title=\"pyaedt.edb_core.layout.EdbLayout.create_polygon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.create_polygon</span></code></a>(main_shape,\u00a0layer_name)</p></td>\n<td><p>Create a polygon based on a list of points and voids.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.create_polygon_from_points/#pyaedt.edb_core.layout.EdbLayout.create_polygon_from_points\" title=\"pyaedt.edb_core.layout.EdbLayout.create_polygon_from_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.create_polygon_from_points</span></code></a>(...[,\u00a0...])</p></td>\n<td><p>Create a new polygon from a point list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.create_rectangle/#pyaedt.edb_core.layout.EdbLayout.create_rectangle\" title=\"pyaedt.edb_core.layout.EdbLayout.create_rectangle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.create_rectangle</span></code></a>(layer_name[,\u00a0...])</p></td>\n<td><p>Create rectangle.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.create_trace/#pyaedt.edb_core.layout.EdbLayout.create_trace\" title=\"pyaedt.edb_core.layout.EdbLayout.create_trace\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.create_trace</span></code></a>(path_list,\u00a0layer_name)</p></td>\n<td><p>Create a trace based on a list of points.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.defeature_polygon/#pyaedt.edb_core.layout.EdbLayout.defeature_polygon\" title=\"pyaedt.edb_core.layout.EdbLayout.defeature_polygon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.defeature_polygon</span></code></a>(setup_info,\u00a0poly)</p></td>\n<td><p>Defeature the polygon based on the maximum surface deviation criteria.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.delete_primitives/#pyaedt.edb_core.layout.EdbLayout.delete_primitives\" title=\"pyaedt.edb_core.layout.EdbLayout.delete_primitives\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.delete_primitives</span></code></a>(net_names)</p></td>\n<td><p>Delete primitives by net names.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.fix_circle_void_for_clipping/#pyaedt.edb_core.layout.EdbLayout.fix_circle_void_for_clipping\" title=\"pyaedt.edb_core.layout.EdbLayout.fix_circle_void_for_clipping\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.fix_circle_void_for_clipping</span></code></a>()</p></td>\n<td><p>Fix issues when circle void are clipped due to a bug in EDB.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.get_layout_statistics/#pyaedt.edb_core.layout.EdbLayout.get_layout_statistics\" title=\"pyaedt.edb_core.layout.EdbLayout.get_layout_statistics\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.get_layout_statistics</span></code></a>([...])</p></td>\n<td><p>Return EDBStatistics object from a layout.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.get_polygon_bounding_box/#pyaedt.edb_core.layout.EdbLayout.get_polygon_bounding_box\" title=\"pyaedt.edb_core.layout.EdbLayout.get_polygon_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.get_polygon_bounding_box</span></code></a>(polygon)</p></td>\n<td><p>Retrieve a polygon bounding box.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.get_polygon_points/#pyaedt.edb_core.layout.EdbLayout.get_polygon_points\" title=\"pyaedt.edb_core.layout.EdbLayout.get_polygon_points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.get_polygon_points</span></code></a>(polygon)</p></td>\n<td><p>Retrieve polygon points.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.get_polygons_by_layer/#pyaedt.edb_core.layout.EdbLayout.get_polygons_by_layer\" title=\"pyaedt.edb_core.layout.EdbLayout.get_polygons_by_layer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.get_polygons_by_layer</span></code></a>(layer_name)</p></td>\n<td><p>Retrieve polygons by a layer.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.get_primitives/#pyaedt.edb_core.layout.EdbLayout.get_primitives\" title=\"pyaedt.edb_core.layout.EdbLayout.get_primitives\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.get_primitives</span></code></a>([net_name,\u00a0...])</p></td>\n<td><p>Get primitives by conditions.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.parametrize_polygon/#pyaedt.edb_core.layout.EdbLayout.parametrize_polygon\" title=\"pyaedt.edb_core.layout.EdbLayout.parametrize_polygon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.parametrize_polygon</span></code></a>(polygon,\u00a0...)</p></td>\n<td><p>Parametrize pieces of a polygon based on another polygon.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.parametrize_trace_width/#pyaedt.edb_core.layout.EdbLayout.parametrize_trace_width\" title=\"pyaedt.edb_core.layout.EdbLayout.parametrize_trace_width\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.parametrize_trace_width</span></code></a>(nets_name)</p></td>\n<td><p>Parametrize a Trace on specific layer or all stackup.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.shape_to_polygon_data/#pyaedt.edb_core.layout.EdbLayout.shape_to_polygon_data\" title=\"pyaedt.edb_core.layout.EdbLayout.shape_to_polygon_data\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.shape_to_polygon_data</span></code></a>(shape)</p></td>\n<td><p>Convert a shape to polygon data.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.unite_polygons_on_layer/#pyaedt.edb_core.layout.EdbLayout.unite_polygons_on_layer\" title=\"pyaedt.edb_core.layout.EdbLayout.unite_polygons_on_layer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.unite_polygons_on_layer</span></code></a>([...])</p></td>\n<td><p>Try to unite all Polygons on specified layer.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.bondwires/#pyaedt.edb_core.layout.EdbLayout.bondwires\" title=\"pyaedt.edb_core.layout.EdbLayout.bondwires\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.bondwires</span></code></a></p></td>\n<td><p>Bondwires.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.circles/#pyaedt.edb_core.layout.EdbLayout.circles\" title=\"pyaedt.edb_core.layout.EdbLayout.circles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.circles</span></code></a></p></td>\n<td><p>Circles.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.db/#pyaedt.edb_core.layout.EdbLayout.db\" title=\"pyaedt.edb_core.layout.EdbLayout.db\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.db</span></code></a></p></td>\n<td><p>Db object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.layers/#pyaedt.edb_core.layout.EdbLayout.layers\" title=\"pyaedt.edb_core.layout.EdbLayout.layers\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.layers</span></code></a></p></td>\n<td><p>Dictionary of layers.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.paths/#pyaedt.edb_core.layout.EdbLayout.paths\" title=\"pyaedt.edb_core.layout.EdbLayout.paths\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.paths</span></code></a></p></td>\n<td><p>Paths.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.polygons/#pyaedt.edb_core.layout.EdbLayout.polygons\" title=\"pyaedt.edb_core.layout.EdbLayout.polygons\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.polygons</span></code></a></p></td>\n<td><p>Polygons.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.polygons_by_layer/#pyaedt.edb_core.layout.EdbLayout.polygons_by_layer\" title=\"pyaedt.edb_core.layout.EdbLayout.polygons_by_layer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.polygons_by_layer</span></code></a></p></td>\n<td><p>Primitives with layer names as keys.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.primitives/#pyaedt.edb_core.layout.EdbLayout.primitives\" title=\"pyaedt.edb_core.layout.EdbLayout.primitives\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.primitives</span></code></a></p></td>\n<td><p>Primitives.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.primitives_by_layer/#pyaedt.edb_core.layout.EdbLayout.primitives_by_layer\" title=\"pyaedt.edb_core.layout.EdbLayout.primitives_by_layer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.primitives_by_layer</span></code></a></p></td>\n<td><p>Primitives with layer names as keys.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.primitives_by_net/#pyaedt.edb_core.layout.EdbLayout.primitives_by_net\" title=\"pyaedt.edb_core.layout.EdbLayout.primitives_by_net\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.primitives_by_net</span></code></a></p></td>\n<td><p>Primitives with net names as keys.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.edb_core.layout.EdbLayout.rectangles/#pyaedt.edb_core.layout.EdbLayout.rectangles\" title=\"pyaedt.edb_core.layout.EdbLayout.rectangles\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">EdbLayout.rectangles</span></code></a></p></td>\n<td><p>Rectangles.</p></td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["EDBAPI/_autosummary/pyaedt.edb_core.layout.EdbLayout.add_void", "add_void", "N", "next"], ["EDBAPI/_autosummary/pyaedt.edb_core.padstack.EdbPadstacks.pingroups", "pingroups", "P", "previous"]], "sourcename": "EDBAPI/_autosummary/pyaedt.edb_core.layout.EdbLayout.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">pyaedt.edb_core.layout.EdbLayout</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb_core.layout.EdbLayout\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EdbLayout</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "EDBAPI/_autosummary/pyaedt.edb_core.layout.EdbLayout", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}