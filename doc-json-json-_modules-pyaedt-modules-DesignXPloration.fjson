{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modules.DesignXPloration", "body": "<h1>Source code for pyaedt.modules.DesignXPloration</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">csv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">_arg2dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">_dict2arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">PropsManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.OptimetricsTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdoeSetup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.OptimetricsTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdxSetup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.OptimetricsTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">defaultoptiSetup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.OptimetricsTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">defaultparametricSetup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.OptimetricsTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">defaultsensitivitySetup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.OptimetricsTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">defaultstatisticalSetup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.SetupTemplates</span> <span class=\"kn\">import</span> <span class=\"n\">SetupProps</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CommonOptimetrics</span><span class=\"p\">(</span><span class=\"n\">PropsManager</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Creates and sets up optimizations.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    p_app :</span>\n\n<span class=\"sd\">    name :</span>\n\n<span class=\"sd\">    dictinputs</span>\n\n<span class=\"sd\">    optimtype : str</span>\n<span class=\"sd\">        Type of the optimization.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">p_app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dictinputs</span><span class=\"p\">,</span> <span class=\"n\">optimtype</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">p_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">ooptimetrics</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"o\">=</span> <span class=\"n\">optimtype</span>\n\n        <span class=\"n\">inputd</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">dictinputs</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiParametric&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultparametricSetup</span><span class=\"p\">))</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">inputd</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ProdOptiSetupDataV2&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span><span class=\"s2\">&quot;SaveFields&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;FastOptimetrics&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SolveWithCopiedMeshOnly&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultdxSetup</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiOptimization&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultoptiSetup</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiSensitivity&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultsensitivitySetup</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiStatistical&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultstatisticalSetup</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiDXDOE&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultdoeSetup</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">optimtype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;optiSLang&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">SetupProps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inputd</span> <span class=\"ow\">or</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">defaultdxSetup</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">inputd</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;ID&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;NextUniqueID&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;MoveBackwards&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;GoalSetupVersion&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;Version&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;SetupType&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">inputd</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">setups</span> <span class=\"o\">=</span> <span class=\"n\">inputd</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">setups</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;SolutionManager&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ID Map&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Setup&quot;</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n                        <span class=\"k\">for</span> <span class=\"n\">setup</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;SolutionManager&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ID Map&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Setup&quot;</span><span class=\"p\">]:</span>\n                            <span class=\"k\">if</span> <span class=\"n\">setup</span><span class=\"p\">[</span><span class=\"s2\">&quot;I&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                                <span class=\"n\">setups</span><span class=\"p\">[</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"n\">setup</span><span class=\"p\">[</span><span class=\"s2\">&quot;I&quot;</span><span class=\"p\">]</span>\n                                <span class=\"k\">break</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;SolutionManager&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ID Map&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Setup&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;I&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">el</span><span class=\"p\">:</span>\n                            <span class=\"n\">setups</span><span class=\"p\">[</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;SolutionManager&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ID Map&quot;</span><span class=\"p\">][</span>\n                                <span class=\"s2\">&quot;Setup&quot;</span>\n                            <span class=\"p\">][</span><span class=\"s2\">&quot;N&quot;</span><span class=\"p\">]</span>\n                            <span class=\"k\">break</span>\n            <span class=\"k\">if</span> <span class=\"n\">inputd</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Goals&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_is_object_oriented_enabled</span><span class=\"p\">():</span>\n                    <span class=\"n\">oparams</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetCalculationInfo</span><span class=\"p\">()</span>\n                    <span class=\"n\">oparam</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">oparams</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n                    <span class=\"n\">calculation</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Goal&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">calculation</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">oparam</span><span class=\"p\">)</span>\n                    <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n                    <span class=\"n\">_arg2dict</span><span class=\"p\">(</span><span class=\"n\">calculation</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Goals&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">arg1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_context</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">expressions</span><span class=\"p\">,</span>\n        <span class=\"n\">condition</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_weight</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_value</span><span class=\"p\">,</span>\n        <span class=\"n\">setup_sweep_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">intrinsics</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">report_category</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">is_goal</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">did</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n        <span class=\"k\">if</span> <span class=\"n\">domain</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">did</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">sweepdefinition</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;ReportType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">report_category</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">setup_sweep_name</span><span class=\"p\">:</span>\n            <span class=\"n\">setup_sweep_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solution&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">setup_sweep_name</span>\n        <span class=\"n\">ctxt</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;TR&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;AC&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DC&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">did</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">setup_sweep_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solution&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">setup_sweep_name</span>\n\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HFSS3DLayout&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Differential Pairs&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"n\">did</span><span class=\"p\">,</span>\n                    <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"mi\">2</span><span class=\"p\">,</span>\n                    <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"mi\">1</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;EnsDiffPairKey&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;IDIID&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">did</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IDIID&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">]</span>\n\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NexximLNA&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NexximTransient&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">did</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">subdesign_id</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt_temp</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NUMLEVELS&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SUBDESIGNID&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">subdesign_id</span><span class=\"p\">)]</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">ctxt_temp</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Differential Pairs&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt_temp</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;USE_DIFF_PAIRS&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">ctxt_temp</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">context</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Differential Pairs&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Diff:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Differential Pairs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Domain:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">domain</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2D Extractor&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;Context&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Original&quot;</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;Context&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">context</span>\n        <span class=\"k\">elif</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n            <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;Context&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">context</span>\n            <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">line_names</span><span class=\"p\">:</span>\n                <span class=\"n\">ctxt</span><span class=\"p\">[</span><span class=\"s2\">&quot;PointCount&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">polyline_points</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">ctxt</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Domain&quot;</span><span class=\"p\">:</span> <span class=\"n\">domain</span><span class=\"p\">})</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ctxt</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Calculation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">expressions</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">expressions</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">and</span> <span class=\"n\">context</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">line_names</span> <span class=\"ow\">and</span> <span class=\"n\">intrinsics</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;Distance&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">intrinsics</span><span class=\"p\">:</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Distance&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">setup_sweep_name</span><span class=\"p\">:</span>\n            <span class=\"n\">setup_sweep_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">setup_sweep_name</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sweep not Available.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">elif</span> <span class=\"n\">setup_sweep_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">existing_analysis_sweeps</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sweep not Available.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">intrinsics</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">intrinsics</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">k</span><span class=\"p\">:</span>\n                    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">):</span>\n                    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rd&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Start:=&quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Stop:=&quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;DiscreteValues:=&quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)):</span>\n                    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;d&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;DiscreteValues:=&quot;</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">))</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span>\n\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                    <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">))</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">]]</span>\n                    <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_goal</span><span class=\"p\">:</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Condition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">condition</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;GoalValue&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span><span class=\"s2\">&quot;GoalValueType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Independent&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Real/Imag&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bG&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;v:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;[</span><span class=\"si\">{}</span><span class=\"s2\">;]&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">goal_value</span><span class=\"p\">)]}</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Weight&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;[</span><span class=\"si\">{}</span><span class=\"s2\">;]&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">goal_weight</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sweepdefinition</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">update_dictionary</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Update the setup based on stored properties.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        update_dictionary : dict, optional</span>\n<span class=\"sd\">            Dictionary to use. The  default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">update_dictionary</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">update_dictionary</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">_setitem_without_update</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">update_dictionary</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">])</span>\n\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiParametric&quot;</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Sweep Operations&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">variation</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweep Operations&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]):</span>\n                <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;add:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">variation</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span><span class=\"o\">.</span><span class=\"n\">EditSetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a setup.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InsertSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span><span class=\"o\">.</span><span class=\"n\">InsertSetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_calculation</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation</span><span class=\"p\">,</span>\n        <span class=\"n\">ranges</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span>\n        <span class=\"n\">report_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">is_goal</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_weight</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n            <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">setupname</span> <span class=\"o\">=</span> <span class=\"n\">solution</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">setupname</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">setupname</span><span class=\"p\">)</span>\n        <span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Time&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">ranges</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"s2\">&quot;Freq&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ranges</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;Phase&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ranges</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;Theta&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ranges</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;Magnetostatic&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Electrostatic&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;EddyCurrent&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;DCConduction&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Eigenmode&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]:</span>\n            <span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Sweep&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">report_type</span><span class=\"p\">:</span>\n            <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">report_type</span>\n            <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">and</span> <span class=\"n\">context</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sheet_names</span><span class=\"p\">:</span>\n                <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Fields&quot;</span>\n            <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2D Extractor&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Matrix&quot;</span>\n            <span class=\"k\">elif</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">field_setups</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"o\">==</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                            <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Far Fields&quot;</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"k\">pass</span>\n        <span class=\"n\">sweepdefinition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_context</span><span class=\"p\">(</span>\n            <span class=\"n\">calculation</span><span class=\"p\">,</span>\n            <span class=\"n\">condition</span><span class=\"p\">,</span>\n            <span class=\"n\">goal_weight</span><span class=\"p\">,</span>\n            <span class=\"n\">goal_value</span><span class=\"p\">,</span>\n            <span class=\"n\">solution</span><span class=\"p\">,</span>\n            <span class=\"n\">domain</span><span class=\"p\">,</span>\n            <span class=\"n\">ranges</span><span class=\"p\">,</span>\n            <span class=\"n\">report_type</span><span class=\"p\">,</span>\n            <span class=\"n\">context</span><span class=\"p\">,</span>\n            <span class=\"n\">subdesign_id</span><span class=\"p\">,</span>\n            <span class=\"n\">polyline_points</span><span class=\"p\">,</span>\n            <span class=\"n\">is_goal</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">dx_variables</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">variables</span><span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">dx_variables</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"k\">pass</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">dx_variables</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_activate_variable</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OptiDXDOE&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">is_goal</span><span class=\"p\">:</span>\n            <span class=\"n\">optigoalname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;CostFunctionGoals&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">optigoalname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Goals&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Goal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">],</span> <span class=\"n\">sweepdefinition</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sweepdefinition</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweepdefinition</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_goal</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">optigoalname</span><span class=\"p\">,</span>\n        <span class=\"n\">reporttype</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;discrete&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">calc_val1</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">calc_val2</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"s2\">&quot;==&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_weight</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add an optimization goal to the setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        optigoalname : str</span>\n<span class=\"sd\">            Name of the optimization goal.</span>\n<span class=\"sd\">        reporttype : str, optional</span>\n<span class=\"sd\">            Type of the report.</span>\n<span class=\"sd\">        solution : str, optional</span>\n<span class=\"sd\">            Type of the solution. The default is ``None``.</span>\n<span class=\"sd\">        domain : str, optional</span>\n<span class=\"sd\">            Type of the domain. The default is ``&quot;Sweep&quot;&#39;&#39;.</span>\n<span class=\"sd\">        calculation : str, optional</span>\n<span class=\"sd\">            Name of the calculation. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        calculation_type : str, optional</span>\n<span class=\"sd\">            Type of the calculation. The default is ``&quot;discrete&quot;``.</span>\n<span class=\"sd\">        calc_val1 : str, optional</span>\n<span class=\"sd\">            First value for the calculation. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        calc_val2 : str, optional</span>\n<span class=\"sd\">            Second value for the calculation. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        condition : str, optional</span>\n<span class=\"sd\">            The condition for the calculation. The default is ``&quot;==&quot;``.</span>\n<span class=\"sd\">        goal_value : optional</span>\n<span class=\"sd\">            Value for the optimization goal. The default is ``1``.</span>\n<span class=\"sd\">        goal_weight : optional</span>\n<span class=\"sd\">            Weight for the optimzation goal. The default is ``1``.</span>\n<span class=\"sd\">        goal_name : str, optional</span>\n<span class=\"sd\">            Name of the goal. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">sweepdefinition</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;ReportType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">reporttype</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n            <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">setupname</span> <span class=\"o\">=</span> <span class=\"n\">solution</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">setupname</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">setupname</span><span class=\"p\">)</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Solution&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">solution</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;SimValueContext&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Domain&quot;</span><span class=\"p\">:</span> <span class=\"n\">domain</span><span class=\"p\">})</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Calculation&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">calculation</span>\n        <span class=\"k\">if</span> <span class=\"n\">goal_name</span><span class=\"p\">:</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">goal_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">calculation</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">domain</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">var</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Freq&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">var</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Time&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">calculation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;discrete&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">calc_val1</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n                <span class=\"n\">dr</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">calc_val1</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">dr</span> <span class=\"o\">=</span> <span class=\"n\">calc_val1</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;d&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DiscreteValues:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">dr</span><span class=\"p\">]})</span>\n        <span class=\"k\">elif</span> <span class=\"n\">calculation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;all&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">var</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ranges&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;Var:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">var</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">calculation_type</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Start:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">calc_val1</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;Stop:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">calc_val2</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;DiscreteValues:=&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Condition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">condition</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;GoalValue&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span><span class=\"s2\">&quot;GoalValueType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Independent&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Real/Imag&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bG&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;v:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;[</span><span class=\"si\">{}</span><span class=\"s2\">;]&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">goal_value</span><span class=\"p\">)]}</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Weight&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;[</span><span class=\"si\">{}</span><span class=\"s2\">;]&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">goal_weight</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Goal&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">],</span> <span class=\"n\">sweepdefinition</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sweepdefinition</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"n\">optigoalname</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweepdefinition</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_activate_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variable_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OptiDXDOE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OptiOptimization&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OptiSLang&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_optimization</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiParametric&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_tuning</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiSensitivity&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_sensitivity</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">soltype</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiStatistical&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_statistical</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"SetupOpti\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupOpti/#pyaedt.modules.DesignXPloration.SetupOpti\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SetupOpti</span><span class=\"p\">(</span><span class=\"n\">CommonOptimetrics</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Sets up an optimization in Opimetrics.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dictinputs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">optim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">CommonOptimetrics</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dictinputs</span><span class=\"o\">=</span><span class=\"n\">dictinputs</span><span class=\"p\">,</span> <span class=\"n\">optimtype</span><span class=\"o\">=</span><span class=\"n\">optim_type</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"SetupOpti.delete\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupOpti.delete/#pyaedt.modules.DesignXPloration.SetupOpti.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete a defined Optimetrics Setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name : str</span>\n<span class=\"sd\">            Name of optimetrics setup to delete.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if setup is deleted. `False` if it failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span><span class=\"o\">.</span><span class=\"n\">DeleteSetups</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">optimizations</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"SetupOpti.add_calculation\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupOpti.add_calculation/#pyaedt.modules.DesignXPloration.SetupOpti.add_calculation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_calculation</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation</span><span class=\"p\">,</span>\n        <span class=\"n\">ranges</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span>\n        <span class=\"n\">report_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a calculation to the setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        calculation : str, optional</span>\n<span class=\"sd\">            Name of the calculation.</span>\n<span class=\"sd\">        ranges : dict, optional</span>\n<span class=\"sd\">            Dictionary of ranges with respective values.</span>\n<span class=\"sd\">            Values can be: `None` for all values, a List of Discrete Values, a tuple of start and stop range.</span>\n<span class=\"sd\">            It includes intrinsics like &quot;Freq&quot;, &quot;Time&quot;, &quot;Theta&quot;, &quot;Distance&quot;.</span>\n<span class=\"sd\">            The default is ``None``, to be used e.g. in &quot;Eigenmode&quot; design type.</span>\n<span class=\"sd\">        solution : str, optional</span>\n<span class=\"sd\">            Type of the solution. The default is ``None``, in which case the default</span>\n<span class=\"sd\">            solution is used.</span>\n<span class=\"sd\">        context : str, optional</span>\n<span class=\"sd\">            Calculation contexts. It can be a sphere, a matrix or a polyline.</span>\n<span class=\"sd\">        subdesign_id : int, optional</span>\n<span class=\"sd\">            Subdesign id for Circuit and HFSS 3D Layout objects.</span>\n<span class=\"sd\">        polyline_points : int, optional</span>\n<span class=\"sd\">            Number of points for Polyline context.</span>\n<span class=\"sd\">        report_type : str, optional</span>\n<span class=\"sd\">            Override the auto computation of Calculation Type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_calculation</span><span class=\"p\">(</span>\n            <span class=\"n\">calculation</span><span class=\"p\">,</span>\n            <span class=\"n\">ranges</span><span class=\"p\">,</span>\n            <span class=\"n\">variables</span><span class=\"p\">,</span>\n            <span class=\"n\">solution</span><span class=\"p\">,</span>\n            <span class=\"n\">context</span><span class=\"p\">,</span>\n            <span class=\"n\">subdesign_id</span><span class=\"p\">,</span>\n            <span class=\"n\">polyline_points</span><span class=\"p\">,</span>\n            <span class=\"n\">report_type</span><span class=\"p\">,</span>\n            <span class=\"n\">is_goal</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SetupOpti.add_goal\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupOpti.add_goal/#pyaedt.modules.DesignXPloration.SetupOpti.add_goal\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_goal</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation</span><span class=\"p\">,</span>\n        <span class=\"n\">ranges</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span>\n        <span class=\"n\">report_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_weight</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a goal to the setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        calculation : str, optional</span>\n<span class=\"sd\">            Name of the calculation.</span>\n<span class=\"sd\">        ranges : dict</span>\n<span class=\"sd\">            Dictionary of ranges with respective values.</span>\n<span class=\"sd\">            Values can be: `None` for all values, a List of Discrete Values, a tuple of start and stop range.</span>\n<span class=\"sd\">            It includes intrinsics like &quot;Freq&quot;, &quot;Time&quot;, &quot;Theta&quot;, &quot;Distance&quot;.</span>\n<span class=\"sd\">        variables : list, optional</span>\n<span class=\"sd\">            List of variables to include in the optimization.</span>\n<span class=\"sd\">        condition : string, optional</span>\n<span class=\"sd\">            The default is ``&quot;&lt;=&quot;``.</span>\n<span class=\"sd\">        goal_value : optional</span>\n<span class=\"sd\">            Value for the goal. The default is ``1``.</span>\n<span class=\"sd\">        goal_weight : optional</span>\n<span class=\"sd\">            Value for the goal weight. The default is ``1``.</span>\n<span class=\"sd\">        solution : str, optional</span>\n<span class=\"sd\">            Type of the solution. The default is ``None``, in which case the default</span>\n<span class=\"sd\">            solution is used.</span>\n<span class=\"sd\">        context : str, optional</span>\n<span class=\"sd\">            Calculation contexts. It can be a sphere, a matrix or a polyline.</span>\n<span class=\"sd\">        subdesign_id : int, optional</span>\n<span class=\"sd\">            Subdesign id for Circuit and HFSS 3D Layout objects.</span>\n<span class=\"sd\">        polyline_points : int, optional</span>\n<span class=\"sd\">            Number of points for Polyline context.</span>\n<span class=\"sd\">        report_type : str, optional</span>\n<span class=\"sd\">            Override the auto computation of Calculation Type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_calculation</span><span class=\"p\">(</span>\n            <span class=\"n\">calculation</span><span class=\"p\">,</span>\n            <span class=\"n\">ranges</span><span class=\"p\">,</span>\n            <span class=\"n\">variables</span><span class=\"p\">,</span>\n            <span class=\"n\">solution</span><span class=\"p\">,</span>\n            <span class=\"n\">context</span><span class=\"p\">,</span>\n            <span class=\"n\">subdesign_id</span><span class=\"p\">,</span>\n            <span class=\"n\">polyline_points</span><span class=\"p\">,</span>\n            <span class=\"n\">report_type</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">condition</span><span class=\"p\">,</span>\n            <span class=\"n\">goal_value</span><span class=\"p\">,</span>\n            <span class=\"n\">goal_weight</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SetupOpti.add_variation\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupOpti.add_variation/#pyaedt.modules.DesignXPloration.SetupOpti.add_variation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_variation</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">variable_name</span><span class=\"p\">,</span>\n        <span class=\"n\">min_value</span><span class=\"p\">,</span>\n        <span class=\"n\">max_value</span><span class=\"p\">,</span>\n        <span class=\"n\">starting_point</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">min_step</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">max_step</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">use_manufacturable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a new variable as input for the optimization and defines its ranges.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variable_name : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        min_value : float</span>\n<span class=\"sd\">            Minimum Optimization Value for variable_name.</span>\n<span class=\"sd\">        max_value : float</span>\n<span class=\"sd\">            Maximum Optimization Value for variable_name.</span>\n<span class=\"sd\">        starting_point : float, optional</span>\n<span class=\"sd\">            Starting point for optimization. If None, default will be used.</span>\n<span class=\"sd\">        min_step : float</span>\n<span class=\"sd\">            Minimum Step Size for optimization. If None, 1/100 of the range will be used.</span>\n\n<span class=\"sd\">        max_step : float</span>\n<span class=\"sd\">            Maximum Step Size for optimization. If None, 1/10 of the range will be used.</span>\n<span class=\"sd\">        use_manufacturable : bool</span>\n<span class=\"sd\">            Either if to use or not the Manufacturable values. Default is False.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">variable_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variable </span><span class=\"si\">{}</span><span class=\"s2\"> does not exists.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_activate_variable</span><span class=\"p\">(</span><span class=\"n\">variable_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">min_step</span><span class=\"p\">:</span>\n            <span class=\"n\">min_step</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">max_value</span> <span class=\"o\">-</span> <span class=\"n\">min_value</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">100</span>\n        <span class=\"n\">min_step</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">min_step</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">max_step</span><span class=\"p\">:</span>\n            <span class=\"n\">max_step</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">max_value</span> <span class=\"o\">-</span> <span class=\"n\">min_value</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">10</span>\n        <span class=\"n\">max_step</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">max_step</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"n\">min_value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"n\">max_value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">max_value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;i:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;int:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Min:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">min_value</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Max:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">max_value</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;MinStep:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">min_step</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;MaxStep:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">max_step</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;MinFocus:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">min_value</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;MaxFocus:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">max_value</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;UseManufacturableValues:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">use_manufacturable</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variables&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variables&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variables&quot;</span><span class=\"p\">][</span><span class=\"n\">variable_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">arg</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;StartingPoint&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;StartingPoint&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">starting_point</span><span class=\"p\">:</span>\n            <span class=\"n\">starting_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;StartingPoint&quot;</span><span class=\"p\">][</span><span class=\"n\">variable_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span>\n            <span class=\"n\">starting_point</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">variable_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"SetupParam\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupParam/#pyaedt.modules.DesignXPloration.SetupParam\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SetupParam</span><span class=\"p\">(</span><span class=\"n\">CommonOptimetrics</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Sets up a parametric analysis in Optimetrics.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">p_app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dictinputs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">optim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;OptiParametric&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">CommonOptimetrics</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">p_app</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">dictinputs</span><span class=\"o\">=</span><span class=\"n\">dictinputs</span><span class=\"p\">,</span> <span class=\"n\">optimtype</span><span class=\"o\">=</span><span class=\"n\">optim_type</span><span class=\"p\">)</span>\n        <span class=\"k\">pass</span>\n\n<div class=\"viewcode-block\" id=\"SetupParam.delete\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupParam.delete/#pyaedt.modules.DesignXPloration.SetupParam.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete a defined Optimetrics Setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name : str</span>\n<span class=\"sd\">            Name of optimetrics setup to delete.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if setup is deleted. ``False`` if it failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span><span class=\"o\">.</span><span class=\"n\">DeleteSetups</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">parametrics</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"SetupParam.add_variation\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupParam.add_variation/#pyaedt.modules.DesignXPloration.SetupParam.add_variation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_variation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sweep_var</span><span class=\"p\">,</span> <span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">end_point</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">variation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearCount&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a variation to an existing parametric setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sweep_var : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        start_point : float or int</span>\n<span class=\"sd\">            Variation Start Point.</span>\n<span class=\"sd\">        end_point : float or int, optional</span>\n<span class=\"sd\">            Variation End Point. This parameter is optional if a Single Value is defined.</span>\n<span class=\"sd\">        step : float or int, optional</span>\n<span class=\"sd\">            Variation Step or Count depending on variation_type. Default is `100`.</span>\n<span class=\"sd\">        unit : str, optional</span>\n<span class=\"sd\">            Variation units. Default is `None`.</span>\n<span class=\"sd\">        variation_type : float or int</span>\n<span class=\"sd\">            Variation Type. Admitted values are `&quot;LinearCount&quot;`, `&quot;LinearStep&quot;`, `&quot;LogScale&quot;`, `&quot;SingleValue&quot;`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">sweep_var</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variable </span><span class=\"si\">{}</span><span class=\"s2\"> does not exists.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sweep_var</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">sweep_range</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">unit</span><span class=\"p\">:</span>\n            <span class=\"n\">unit</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">sweep_var</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span>\n        <span class=\"n\">start_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">)</span>\n        <span class=\"n\">end_point</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">end_point</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">variation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;LinearCount&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_range</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LINC </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">end_point</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">variation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;LinearStep&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_range</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LIN </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">end_point</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">))</span>\n        <span class=\"k\">elif</span> <span class=\"n\">variation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;LogScale&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_range</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;DEC </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">end_point</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">))</span>\n        <span class=\"k\">elif</span> <span class=\"n\">variation_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;SingleValue&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">sweep_range</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">value_with_units</span><span class=\"p\">(</span><span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">sweep_range</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_activate_variable</span><span class=\"p\">(</span><span class=\"n\">sweep_var</span><span class=\"p\">)</span>\n        <span class=\"n\">sweepdefinition</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweep_var</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweep_range</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;OffsetF1&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Synchronize&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweepdefinition</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_append_sweepdefinition</span><span class=\"p\">(</span><span class=\"n\">sweepdefinition</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_append_sweepdefinition</span><span class=\"p\">(</span><span class=\"n\">sweepdefinition</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_append_sweepdefinition</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sweepdefinition</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">sweep_def</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Data&quot;</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"o\">+</span> <span class=\"n\">sweepdefinition</span><span class=\"p\">[</span><span class=\"s2\">&quot;Data&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sweepdefinition</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"SetupParam.sync_variables\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupParam.sync_variables/#pyaedt.modules.DesignXPloration.SetupParam.sync_variables\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">sync_variables</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variables</span><span class=\"p\">,</span> <span class=\"n\">sync_n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Sync variable variations in an existing parametric setup.</span>\n<span class=\"sd\">        Setting the sync number to `0` will effectively unsync the variables.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variables : list</span>\n<span class=\"sd\">            List of variables to sync.</span>\n<span class=\"sd\">        sync_n : int, optional</span>\n<span class=\"sd\">            Sync number. Sweep variables with the same Sync number will be synchronizad.</span>\n<span class=\"sd\">            Default is `1`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">])</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Not enough variables are defined in the Parametric setup&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">existing_variables</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">s</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]]</span>\n        <span class=\"n\">undo_vals</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">existing_variables</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variable </span><span class=\"si\">{}</span><span class=\"s2\"> is not defined in the Parametric setup&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">))</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">sweep_def</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"n\">undo_vals</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Synchronize&quot;</span><span class=\"p\">]</span>\n                    <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Synchronize&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sync_n</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"c1\"># If it fails to sync (due to e.g. different number of variations), reverts to original values.</span>\n            <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">sweep_def</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"o\">==</span> <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">]:</span>\n                        <span class=\"n\">sweep_def</span><span class=\"p\">[</span><span class=\"s2\">&quot;Synchronize&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">undo_vals</span><span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to sync the Parametric setup.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"SetupParam.add_calculation\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupParam.add_calculation/#pyaedt.modules.DesignXPloration.SetupParam.add_calculation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_calculation</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation</span><span class=\"p\">,</span>\n        <span class=\"n\">ranges</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span>\n        <span class=\"n\">report_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a calculation to the parametric setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        calculation : str, optional</span>\n<span class=\"sd\">            Name of the calculation.</span>\n<span class=\"sd\">        ranges : dict</span>\n<span class=\"sd\">            Dictionary of ranges with respective values.</span>\n<span class=\"sd\">            Values can be: `None` for all values, a List of Discrete Values, a tuple of start and stop range.</span>\n<span class=\"sd\">            It includes intrinsics like &quot;Freq&quot;, &quot;Time&quot;, &quot;Theta&quot;, &quot;Distance&quot;.</span>\n<span class=\"sd\">        solution : str, optional</span>\n<span class=\"sd\">            Type of the solution. The default is ``None``, in which case the default</span>\n<span class=\"sd\">            solution is used.</span>\n<span class=\"sd\">        context : str, optional</span>\n<span class=\"sd\">            Calculation contexts. It can be a sphere, a matrix or a polyline.</span>\n<span class=\"sd\">        subdesign_id : int, optional</span>\n<span class=\"sd\">            Subdesign id for Circuit and HFSS 3D Layout objects.</span>\n<span class=\"sd\">        polyline_points : int, optional</span>\n<span class=\"sd\">            Number of points for Polyline context.</span>\n<span class=\"sd\">        report_type : str, optional</span>\n<span class=\"sd\">            Override the auto computation of Calculation Type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.EditSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_add_calculation</span><span class=\"p\">(</span>\n            <span class=\"n\">calculation</span><span class=\"p\">,</span> <span class=\"n\">ranges</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">solution</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">subdesign_id</span><span class=\"p\">,</span> <span class=\"n\">polyline_points</span><span class=\"p\">,</span> <span class=\"n\">report_type</span><span class=\"p\">,</span> <span class=\"n\">is_goal</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SetupParam.export_to_csv\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.SetupParam.export_to_csv/#pyaedt.modules.DesignXPloration.SetupParam.export_to_csv\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_to_csv</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Export the current Parametric Setup to csv.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Full Path to the csv file.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if the export is correctly executed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">omodule</span><span class=\"o\">.</span><span class=\"n\">ExportParametricSetupTable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ParametricSetups\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.ParametricSetups/#pyaedt.modules.DesignXPloration.ParametricSetups\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ParametricSetups</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Sets up Parametrics analyses. It includes Parametrics, Sensitivity and Statistical Analysis.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; sensitivity_setups = app.parametrics</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">p_app</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">p_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">setups_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;Optimetrics&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;OptimetricsSetups&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">setups_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span>\n                        <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">))</span>\n                        <span class=\"ow\">and</span> <span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">][</span><span class=\"s2\">&quot;SetupType&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiParametric&quot;</span>\n                    <span class=\"p\">):</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">SetupParam</span><span class=\"p\">(</span><span class=\"n\">p_app</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">],</span> <span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">][</span><span class=\"s2\">&quot;SetupType&quot;</span><span class=\"p\">]))</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">p_app</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Parent.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">optimodule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Optimetrics module.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`Optimetrics`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">ooptimetrics</span>\n\n<div class=\"viewcode-block\" id=\"ParametricSetups.add\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.ParametricSetups.add/#pyaedt.modules.DesignXPloration.ParametricSetups.add\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">sweep_var</span><span class=\"p\">,</span>\n        <span class=\"n\">start_point</span><span class=\"p\">,</span>\n        <span class=\"n\">end_point</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n        <span class=\"n\">variation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearCount&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">parametricname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a basic sensitivity analysis.</span>\n<span class=\"sd\">        You can customize all options after the analysis is added.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sweep_var : str</span>\n<span class=\"sd\">            Name of the variable.</span>\n<span class=\"sd\">        start_point : float or int</span>\n<span class=\"sd\">            Variation Start Point if a variation is defined or Single Value.</span>\n<span class=\"sd\">        end_point : float or int, optional</span>\n<span class=\"sd\">            Variation End Point. This parameter is optional if a Single Value is defined.</span>\n<span class=\"sd\">        step : float or int</span>\n<span class=\"sd\">            Variation Step or Count depending on variation_type. The default is ``100``.</span>\n<span class=\"sd\">        variation_type : float or int</span>\n<span class=\"sd\">            Variation Type. Admitted values are `&quot;LinearCount&quot;`, `&quot;LinearStep&quot;`, `&quot;LogScale&quot;`, `&quot;SingleValue&quot;`.</span>\n<span class=\"sd\">        solution : str, optional</span>\n<span class=\"sd\">            Type of the solution. The default is ``None``, in which case the default</span>\n<span class=\"sd\">            solution is used.</span>\n<span class=\"sd\">        parametricname : str, optional</span>\n<span class=\"sd\">            Name of the sensitivity analysis. The default is ``None``, in which case</span>\n<span class=\"sd\">            a default name is assigned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.DesignXPloration.SetupParam`</span>\n<span class=\"sd\">            Optimization Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InsertSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">sweep_var</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Variable </span><span class=\"si\">{}</span><span class=\"s2\"> not found.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">sweep_var</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n            <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">setupname</span> <span class=\"o\">=</span> <span class=\"n\">solution</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">parametricname</span><span class=\"p\">:</span>\n            <span class=\"n\">parametricname</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Parametric&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">SetupParam</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">,</span> <span class=\"n\">parametricname</span><span class=\"p\">,</span> <span class=\"n\">optim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;OptiParametric&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">setupname</span><span class=\"p\">]</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">})</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"n\">unit</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"p\">[</span><span class=\"n\">sweep_var</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">units</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">add_variation</span><span class=\"p\">(</span><span class=\"n\">sweep_var</span><span class=\"p\">,</span> <span class=\"n\">start_point</span><span class=\"p\">,</span> <span class=\"n\">end_point</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"p\">,</span> <span class=\"n\">variation_type</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">setup</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">setup</span></div>\n\n<div class=\"viewcode-block\" id=\"ParametricSetups.delete\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.ParametricSetups.delete/#pyaedt.modules.DesignXPloration.ParametricSetups.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete a defined Parametric Setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name : str</span>\n<span class=\"sd\">            Name of parametric setup to delete.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if setup is deleted. ``False`` if it failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">setup_name</span><span class=\"p\">:</span>\n                <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"ParametricSetups.add_from_file\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.ParametricSetups.add_from_file/#pyaedt.modules.DesignXPloration.ParametricSetups.add_from_file\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_from_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">parametricname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a Parametric Setup from a csv file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filename : str</span>\n<span class=\"sd\">            Csv file path.</span>\n<span class=\"sd\">        parametricname : str, option</span>\n<span class=\"sd\">            Name of parameric setup.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if the import is executed correctly.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">parametricname</span><span class=\"p\">:</span>\n            <span class=\"n\">parametricname</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;Parametric&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">SetupParam</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">,</span> <span class=\"n\">parametricname</span><span class=\"p\">,</span> <span class=\"n\">optim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;OptiParametric&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">setup_defined</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">setup_defined</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">]</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">csvfile</span><span class=\"p\">:</span>\n            <span class=\"n\">csvreader</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">DictReader</span><span class=\"p\">(</span><span class=\"n\">csvfile</span><span class=\"p\">)</span>\n            <span class=\"n\">first_data_line</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">csvreader</span><span class=\"p\">)</span>\n            <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()}</span>\n            <span class=\"n\">sweep_definition</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">var_name</span> <span class=\"ow\">in</span> <span class=\"n\">csvreader</span><span class=\"o\">.</span><span class=\"n\">fieldnames</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">var_name</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;*&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">sweep_definition</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                        <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">:</span> <span class=\"n\">var_name</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Data&quot;</span><span class=\"p\">:</span> <span class=\"n\">first_data_line</span><span class=\"p\">[</span><span class=\"n\">var_name</span><span class=\"p\">],</span>\n                                <span class=\"s2\">&quot;OffsetF1&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Synchronize&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n            <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweep_definition</span>\n\n            <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">parametricname</span><span class=\"p\">]</span>\n            <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n\n            <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweep Operations&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">:</span> <span class=\"p\">[]})</span>\n            <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">var_name</span> <span class=\"ow\">in</span> <span class=\"n\">csvreader</span><span class=\"o\">.</span><span class=\"n\">fieldnames</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">var_name</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;*&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">first_data_line</span><span class=\"p\">[</span><span class=\"n\">var_name</span><span class=\"p\">])</span>\n            <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">table</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">csvreader</span><span class=\"p\">:</span>\n                <span class=\"n\">table_line</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"k\">for</span> <span class=\"n\">var_name</span> <span class=\"ow\">in</span> <span class=\"n\">csvreader</span><span class=\"o\">.</span><span class=\"n\">fieldnames</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">var_name</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;*&quot;</span><span class=\"p\">:</span>\n                        <span class=\"n\">table_line</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">[</span><span class=\"n\">var_name</span><span class=\"p\">])</span>\n                <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">table_line</span><span class=\"p\">)</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">table</span><span class=\"p\">:</span>\n                <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweep Operations&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">point</span><span class=\"p\">)</span>\n\n        <span class=\"n\">cont</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">args</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;NAME:Sweep Operations&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n                <span class=\"k\">del</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"n\">cont</span><span class=\"p\">]</span>\n                <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Sweep Operations&quot;</span><span class=\"p\">])</span>\n                <span class=\"k\">break</span>\n            <span class=\"n\">cont</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">variation</span> <span class=\"ow\">in</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweep Operations&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]):</span>\n            <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;add:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">variation</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">optimodule</span><span class=\"o\">.</span><span class=\"n\">InsertSetup</span><span class=\"p\">(</span><span class=\"s2\">&quot;OptiParametric&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">setup</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"OptimizationSetups\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.OptimizationSetups/#pyaedt.modules.DesignXPloration.OptimizationSetups\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">OptimizationSetups</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Sets up optimizations. It includes Optimization, DOE and DesignXplorer Analysis.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; app = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; optimization_setup = app.optimizations</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">p_app</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">p_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">setups_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_properties</span><span class=\"p\">[</span><span class=\"s2\">&quot;Optimetrics&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;OptimetricsSetups&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">for</span> <span class=\"n\">data</span> <span class=\"ow\">in</span> <span class=\"n\">setups_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">))</span> <span class=\"ow\">and</span> <span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">][</span><span class=\"s2\">&quot;SetupType&quot;</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;OptiOptimization&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;OptiDXDOE&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;OptiSLang&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;OptiSensitivity&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;OptiStatistical&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">]:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">SetupOpti</span><span class=\"p\">(</span><span class=\"n\">p_app</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">],</span> <span class=\"n\">setups_data</span><span class=\"p\">[</span><span class=\"n\">data</span><span class=\"p\">][</span><span class=\"s2\">&quot;SetupType&quot;</span><span class=\"p\">]))</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">p_app</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Parent.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">optimodule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Optimetrics module.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`Optimetrics`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">ooptimetrics</span>\n\n<div class=\"viewcode-block\" id=\"OptimizationSetups.delete\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.OptimizationSetups.delete/#pyaedt.modules.DesignXPloration.OptimizationSetups.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Delete a defined Optimetrics Setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name : str</span>\n<span class=\"sd\">            Name of optimetrics setup to delete.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if setup is deleted. ``False`` if it failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">setup_name</span><span class=\"p\">:</span>\n                <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"OptimizationSetups.add\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modules.DesignXPloration.OptimizationSetups.add/#pyaedt.modules.DesignXPloration.OptimizationSetups.add\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">calculation</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">ranges</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">optim_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Optimization&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">goal_weight</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">parametricname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">subdesign_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">1001</span><span class=\"p\">,</span>\n        <span class=\"n\">report_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Add a basic optimization analysis.</span>\n<span class=\"sd\">        You can customize all options after the analysis is added.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        calculation : str, optional</span>\n<span class=\"sd\">            Name of the calculation.</span>\n<span class=\"sd\">        ranges : dict, optional</span>\n<span class=\"sd\">            Dictionary of ranges with respective values.</span>\n<span class=\"sd\">            Values can be: a list of discrete values, a dict with tuple args of start and stop range.</span>\n<span class=\"sd\">            It includes intrinsics like &quot;Freq&quot;, &quot;Time&quot;, &quot;Theta&quot;, &quot;Distance&quot;.</span>\n<span class=\"sd\">        variables : list, optional</span>\n<span class=\"sd\">            List of variables to include in the optimization.</span>\n<span class=\"sd\">        optim_type : strm optional</span>\n<span class=\"sd\">            Optimization Type.</span>\n<span class=\"sd\">            Possible values are `&quot;Optimization&quot;`, `&quot;DXDOE&quot;`,`&quot;DesignExplorer&quot;`,`&quot;Sensitivity&quot;`,`&quot;Statistical&quot;`</span>\n<span class=\"sd\">            and `&quot;optiSLang&quot;`.</span>\n<span class=\"sd\">        condition : string, optional</span>\n<span class=\"sd\">            The default is ``&quot;&lt;=&quot;``.</span>\n<span class=\"sd\">        goal_value : optional</span>\n<span class=\"sd\">            Value for the goal. The default is ``1``.</span>\n<span class=\"sd\">        goal_weight : optional</span>\n<span class=\"sd\">            Value for the goal weight. The default is ``1``.</span>\n<span class=\"sd\">        solution : str, optional</span>\n<span class=\"sd\">            Type of the solution. The default is ``None``, in which case the default</span>\n<span class=\"sd\">            solution is used.</span>\n<span class=\"sd\">        parametricname : str, optional</span>\n<span class=\"sd\">            Name of the analysis. The default is ``None``, in which case a</span>\n<span class=\"sd\">            default name is assigned.</span>\n<span class=\"sd\">        context : str, optional</span>\n<span class=\"sd\">            Calculation contexts. It can be a sphere, a matrix or a polyline.</span>\n<span class=\"sd\">        subdesign_id : int, optional</span>\n<span class=\"sd\">            Subdesign id for Circuit and HFSS 3D Layout objects.</span>\n<span class=\"sd\">        polyline_points : int, optional</span>\n<span class=\"sd\">            Number of points for Polyline context.</span>\n<span class=\"sd\">        report_type : str, optional</span>\n<span class=\"sd\">            Override the auto computation of Calculation Type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.DesignXPloration.SetupOpti`</span>\n<span class=\"sd\">            Optimization object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.InsertSetup</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">solution</span><span class=\"p\">:</span>\n            <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">nominal_sweep</span>\n        <span class=\"n\">setupname</span> <span class=\"o\">=</span> <span class=\"n\">solution</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">parametricname</span><span class=\"p\">:</span>\n            <span class=\"n\">parametricname</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">optim_type</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">optim_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;optiSLang&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">optim_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Opti&quot;</span> <span class=\"o\">+</span> <span class=\"n\">optim_type</span>\n        <span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">SetupOpti</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">,</span> <span class=\"n\">parametricname</span><span class=\"p\">,</span> <span class=\"n\">optim_type</span><span class=\"o\">=</span><span class=\"n\">optim_type</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sim. Setups&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">setupname</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">calculation</span><span class=\"p\">:</span>\n            <span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Time&quot;</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ranges</span><span class=\"p\">:</span>\n                <span class=\"n\">ranges</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;Freq&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ranges</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;Phase&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ranges</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;Theta&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">ranges</span><span class=\"p\">:</span>\n                <span class=\"n\">domain</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Sweep&quot;</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">report_type</span><span class=\"p\">:</span>\n                <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_solutions</span><span class=\"o\">.</span><span class=\"n\">report_type</span>\n                <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">and</span> <span class=\"n\">context</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sheet_names</span><span class=\"p\">:</span>\n                    <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Fields&quot;</span>\n                <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">solution_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Q3D Extractor&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2D Extractor&quot;</span><span class=\"p\">]:</span>\n                    <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Matrix&quot;</span>\n                <span class=\"k\">elif</span> <span class=\"n\">context</span><span class=\"p\">:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">field_setups</span><span class=\"p\">:</span>\n                            <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"o\">==</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                                <span class=\"n\">report_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Far Fields&quot;</span>\n                    <span class=\"k\">except</span><span class=\"p\">:</span>\n                        <span class=\"k\">pass</span>\n            <span class=\"n\">sweepdefinition</span> <span class=\"o\">=</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">_get_context</span><span class=\"p\">(</span>\n                <span class=\"n\">calculation</span><span class=\"p\">,</span>\n                <span class=\"n\">condition</span><span class=\"p\">,</span>\n                <span class=\"n\">goal_weight</span><span class=\"p\">,</span>\n                <span class=\"n\">goal_value</span><span class=\"p\">,</span>\n                <span class=\"n\">solution</span><span class=\"p\">,</span>\n                <span class=\"n\">domain</span><span class=\"p\">,</span>\n                <span class=\"n\">ranges</span><span class=\"p\">,</span>\n                <span class=\"n\">report_type</span><span class=\"p\">,</span>\n                <span class=\"n\">context</span><span class=\"p\">,</span>\n                <span class=\"n\">subdesign_id</span><span class=\"p\">,</span>\n                <span class=\"n\">polyline_points</span><span class=\"p\">,</span>\n                <span class=\"n\">is_goal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Goals&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweepdefinition</span>\n\n        <span class=\"n\">dx_variables</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">dx_variables</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"k\">pass</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">dx_variables</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">optim_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;OptiOptimization&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OptiDXDOE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">]:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_optimization</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">optim_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiSensitivity&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_sensitivity</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">optim_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiStatistical&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">activate_variable_statistical</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">optim_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;OptiDXDOE&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">calculation</span><span class=\"p\">:</span>\n            <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;CostFunctionGoals&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Goal&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">sweepdefinition</span>\n        <span class=\"k\">if</span> <span class=\"n\">optim_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;OptiDesignExplorer&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;optiSLang&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">dx_variables</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Variable&quot;</span><span class=\"p\">:</span> <span class=\"n\">l</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Data&quot;</span><span class=\"p\">:</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OffsetF1&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Synchronize&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">})</span>\n                <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Sweeps&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;SweepDefinition&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n        <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">setup</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">setup</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modules/DesignXPloration", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}