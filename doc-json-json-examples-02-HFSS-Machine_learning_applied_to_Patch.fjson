{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "HFSS examples"}], "prev": {"link": "../HFSS_Spiral/", "title": "HFSS: spiral inductor"}, "next": {"link": "../../02-HFSS3DLayout/", "title": "HFSS 3D Layout examples"}, "title": "HFSS: machine learning applied to a patch", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-02-hfss-machine-learning-applied-to-patch-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"hfss-machine-learning-applied-to-a-patch\">\n<span id=\"sphx-glr-examples-02-hfss-machine-learning-applied-to-patch-py\"></span><h1>HFSS: machine learning applied to a patch<a class=\"headerlink\" href=\"#hfss-machine-learning-applied-to-a-patch\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use PyAEDT to create a machine learning algorithm in three steps:</p>\n<ol class=\"arabic simple\">\n<li><p>Generate the database.</p></li>\n<li><p>Create the machine learning algorithm.</p></li>\n<li><p>Implement the model in a PyAEDT method.</p></li>\n</ol>\n<p>While this example supplies the code for all three steps in one Python file, it would be\nbetter to separate the code for each step into its own Python file.</p>\n<section id=\"perform-required-imports\">\n<h2>Perform required imports<a class=\"headerlink\" href=\"#perform-required-imports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">sqrt</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">joblib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.pipeline</span> <span class=\"kn\">import</span> <span class=\"n\">make_pipeline</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">StandardScaler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.svm</span> <span class=\"kn\">import</span> <span class=\"n\">SVR</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">Hfss</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.advanced_cad.stackup_3d</span> <span class=\"kn\">import</span> <span class=\"n\">Stackup3D</span>\n</pre></div>\n</div>\n</section>\n<section id=\"set-non-graphical-mode\">\n<h2>Set non-graphical mode<a class=\"headerlink\" href=\"#set-non-graphical-mode\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set non-graphical mode. <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span></code> is needed to generate\ndocumentation only.\nYou can set <code class=\"docutils literal notranslate\"><span class=\"pre\">non_graphical</span></code> either to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;t&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"generate-database\">\n<h1>Generate database<a class=\"headerlink\" href=\"#generate-database\" title=\"Permalink to this heading\">#</a></h1>\n<p>This section describes the first step, which is for generating the database.</p>\n<section id=\"generate-input\">\n<h2>Generate input<a class=\"headerlink\" href=\"#generate-input\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate input randomly by creating a function with four inputs: frequency,\nsubstrate permittivity, substrate thickness, and patch width. Frequency ranges\nfrom 0.1 GHz to 1 GHz. Permittivity is from 1 to 12.</p>\n<p>The following code generates a database of 1 frequency x 2 permittivity\nx 2 thickness x 2 width. It creates eight cases, which are far too few to\nuse to train the model but are a sufficient number for testing\nthe model. Later in this example, you import more than 3,300 different\ncases in a previously generated database of 74 frequencies\nx 5 permittivity x 3 thickness x 3 width.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">tuple_random_frequency_permittivity</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">frequency_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">150</span> <span class=\"o\">*</span> <span class=\"mf\">1e6</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">in_list</span> <span class=\"ow\">in</span> <span class=\"n\">frequency_list</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"n\">random_permittivity</span> <span class=\"o\">=</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"mi\">11</span> <span class=\"o\">*</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">100</span>\n        <span class=\"n\">temp_tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">in_list</span><span class=\"p\">,</span> <span class=\"n\">random_permittivity</span><span class=\"p\">)</span>\n        <span class=\"n\">tuple_random_frequency_permittivity</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">temp_tuple</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Thickness is generated from 0.0025 to 0.055 of the wavelength in the void.\nWidth is generated from 0.5 to 1.5 of the optimal theoretical width:</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">c</span> <span class=\"pre\">/</span> <span class=\"pre\">(2</span> <span class=\"pre\">*</span> <span class=\"pre\">frequency</span> <span class=\"pre\">*</span> <span class=\"pre\">sqrt((permittivity</span> <span class=\"pre\">+</span> <span class=\"pre\">1)</span> <span class=\"pre\">/</span> <span class=\"pre\">2))</span></code></p>\n<p>For each couple of frequency-permittivity, three random thicknesses and three\nrandom widths are generated. Patch length is calculated using the analytic\nformula. Using this formula is important because it reduces the sweep\nfrequency needed for the data recovery. Every case is stored in a list of a\ndictionary.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">dictionary_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mf\">2.99792458e8</span>\n<span class=\"k\">for</span> <span class=\"n\">couple</span> <span class=\"ow\">in</span> <span class=\"n\">tuple_random_frequency_permittivity</span><span class=\"p\">:</span>\n    <span class=\"n\">list_thickness</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">list_width</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">frequency</span> <span class=\"o\">=</span> <span class=\"n\">couple</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">permittivity</span> <span class=\"o\">=</span> <span class=\"n\">couple</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">er</span> <span class=\"o\">=</span> <span class=\"n\">permittivity</span>\n    <span class=\"n\">wave_length_0</span> <span class=\"o\">=</span> <span class=\"n\">c</span> <span class=\"o\">/</span> <span class=\"n\">frequency</span>\n\n    <span class=\"n\">min_thickness</span> <span class=\"o\">=</span> <span class=\"mf\">0.0025</span> <span class=\"o\">*</span> <span class=\"n\">wave_length_0</span>\n    <span class=\"n\">inter_thickness</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span> <span class=\"o\">*</span> <span class=\"n\">wave_length_0</span>\n    <span class=\"n\">max_thickness</span> <span class=\"o\">=</span> <span class=\"mf\">0.055</span> <span class=\"o\">*</span> <span class=\"n\">wave_length_0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"n\">random_int</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">random_int</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">thickness</span> <span class=\"o\">=</span> <span class=\"n\">min_thickness</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">inter_thickness</span> <span class=\"o\">-</span> <span class=\"n\">min_thickness</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">thickness</span> <span class=\"o\">=</span> <span class=\"n\">inter_thickness</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">max_thickness</span> <span class=\"o\">-</span> <span class=\"n\">inter_thickness</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span>\n        <span class=\"n\">list_thickness</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">thickness</span><span class=\"p\">)</span>\n\n    <span class=\"n\">min_width</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">c</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">frequency</span> <span class=\"o\">*</span> <span class=\"n\">sqrt</span><span class=\"p\">((</span><span class=\"n\">er</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n    <span class=\"n\">max_width</span> <span class=\"o\">=</span> <span class=\"mf\">1.5</span> <span class=\"o\">*</span> <span class=\"n\">c</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">frequency</span> <span class=\"o\">*</span> <span class=\"n\">sqrt</span><span class=\"p\">((</span><span class=\"n\">er</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">min_width</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">max_width</span> <span class=\"o\">-</span> <span class=\"n\">min_width</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span>\n        <span class=\"n\">list_width</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">width</span> <span class=\"ow\">in</span> <span class=\"n\">list_width</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">thickness</span> <span class=\"ow\">in</span> <span class=\"n\">list_thickness</span><span class=\"p\">:</span>\n            <span class=\"n\">effective_permittivity</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">er</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">er</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">thickness</span> <span class=\"o\">/</span> <span class=\"n\">width</span><span class=\"p\">))</span>\n            <span class=\"n\">er_e</span> <span class=\"o\">=</span> <span class=\"n\">effective_permittivity</span>\n            <span class=\"n\">w_h</span> <span class=\"o\">=</span> <span class=\"n\">width</span> <span class=\"o\">/</span> <span class=\"n\">thickness</span>\n            <span class=\"n\">added_length</span> <span class=\"o\">=</span> <span class=\"mf\">0.412</span> <span class=\"o\">*</span> <span class=\"n\">thickness</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">er_e</span> <span class=\"o\">+</span> <span class=\"mf\">0.3</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">w_h</span> <span class=\"o\">+</span> <span class=\"mf\">0.264</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">((</span><span class=\"n\">er_e</span> <span class=\"o\">-</span> <span class=\"mf\">0.258</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">w_h</span> <span class=\"o\">+</span> <span class=\"mf\">0.813</span><span class=\"p\">))</span>\n            <span class=\"n\">wave_length</span> <span class=\"o\">=</span> <span class=\"n\">c</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">frequency</span> <span class=\"o\">*</span> <span class=\"n\">sqrt</span><span class=\"p\">(</span><span class=\"n\">er_e</span><span class=\"p\">))</span>\n            <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">wave_length</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">added_length</span>\n            <span class=\"n\">dictionary</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">:</span> <span class=\"n\">frequency</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">:</span> <span class=\"n\">permittivity</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;thickness&quot;</span><span class=\"p\">:</span> <span class=\"n\">thickness</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;width&quot;</span><span class=\"p\">:</span> <span class=\"n\">width</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;length&quot;</span><span class=\"p\">:</span> <span class=\"n\">length</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;previous_impedance&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">dictionary_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">dictionary</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;List of data: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">dictionary_list</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Its length is: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dictionary_list</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>List of data: [{&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 1.11, &#39;thickness&#39;: 0.016150087027394233, &#39;width&#39;: 0.6493187072055668, &#39;length&#39;: 0.9291939172575782, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 1.11, &#39;thickness&#39;: 0.017480305760680454, &#39;width&#39;: 0.6493187072055668, &#39;length&#39;: 0.9275925500418131, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 1.11, &#39;thickness&#39;: 0.016150087027394233, &#39;width&#39;: 1.0054654552570148, &#39;length&#39;: 0.9283206766531866, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 1.11, &#39;thickness&#39;: 0.017480305760680454, &#39;width&#39;: 1.0054654552570148, &#39;length&#39;: 0.9266568241805949, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 10.9, &#39;thickness&#39;: 0.10962270855084219, &#39;width&#39;: 0.44887756947146407, &#39;length&#39;: 0.2548254538172353, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 10.9, &#39;thickness&#39;: 0.0762910131054917, &#39;width&#39;: 0.44887756947146407, &#39;length&#39;: 0.2723855121852592, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 10.9, &#39;thickness&#39;: 0.10962270855084219, &#39;width&#39;: 0.330447934400385, &#39;length&#39;: 0.2634727671369378, &#39;previous_impedance&#39;: 0}, {&#39;frequency&#39;: 150000000.0, &#39;permittivity&#39;: 10.9, &#39;thickness&#39;: 0.0762910131054917, &#39;width&#39;: 0.330447934400385, &#39;length&#39;: 0.2794780011574344, &#39;previous_impedance&#39;: 0}]\nIts length is: 8\n</pre></div>\n</div>\n</section>\n<section id=\"generate-hfss-design\">\n<h2>Generate HFSS design<a class=\"headerlink\" href=\"#generate-hfss-design\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate the HFSS design using the <code class=\"docutils literal notranslate\"><span class=\"pre\">Stackup3D</span></code> method.\nOpen an HFSS design and create the stackup, add the different layers, and add\nthe patch. In the stackup library, most things, like the layers and patch,\nare already parametrized.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">desktopVersion</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2022.2&quot;</span>\n\n<span class=\"n\">hfss</span> <span class=\"o\">=</span> <span class=\"n\">Hfss</span><span class=\"p\">(</span>\n    <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Terminal&quot;</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">non_graphical</span><span class=\"p\">,</span> <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"n\">desktopVersion</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">stackup</span> <span class=\"o\">=</span> <span class=\"n\">Stackup3D</span><span class=\"p\">(</span><span class=\"n\">hfss</span><span class=\"p\">)</span>\n<span class=\"n\">ground</span> <span class=\"o\">=</span> <span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">add_ground_layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;ground&quot;</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span> <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"mf\">0.035</span><span class=\"p\">,</span> <span class=\"n\">fill_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;air&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">dielectric</span> <span class=\"o\">=</span> <span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">add_dielectric_layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">,</span> <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;Duroid (tm)&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">add_signal_layer</span><span class=\"p\">(</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span> <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"mf\">0.035</span><span class=\"p\">,</span> <span class=\"n\">fill_material</span><span class=\"o\">=</span><span class=\"s2\">&quot;air&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">patch</span> <span class=\"o\">=</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">patch_length</span><span class=\"o\">=</span><span class=\"mf\">1009.86</span><span class=\"p\">,</span> <span class=\"n\">patch_width</span><span class=\"o\">=</span><span class=\"mf\">1185.9</span><span class=\"p\">,</span> <span class=\"n\">patch_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Patch&quot;</span><span class=\"p\">,</span> <span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"mf\">100e6</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"resize-layers-around-patch\">\n<h2>Resize layers around patch<a class=\"headerlink\" href=\"#resize-layers-around-patch\" title=\"Permalink to this heading\">#</a></h2>\n<p>Resize the layers around the patch so that they change when the patch changes.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">resize_around_element</span><span class=\"p\">(</span><span class=\"n\">patch</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-lumped-port\">\n<h2>Create lumped port<a class=\"headerlink\" href=\"#create-lumped-port\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a lumped port that is parametrized with the function of the patch.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">create_lumped_port</span><span class=\"p\">(</span><span class=\"n\">reference_layer</span><span class=\"o\">=</span><span class=\"n\">ground</span><span class=\"p\">,</span> <span class=\"n\">opposite_side</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">port_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;one&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x0000019A834B1370&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-line\">\n<h2>Create line<a class=\"headerlink\" href=\"#create-line\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a line that is parametrized with the function of the patch length. This\nensures that the air box is large enough in the normal direction of the patch.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">points_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">position_x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">position_y</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">elevation</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">position_x</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">position_y</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">signal</span><span class=\"o\">.</span><span class=\"n\">elevation</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; + &quot;</span> <span class=\"o\">+</span> <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span>\n<span class=\"p\">]</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">primitives</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">points_list</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;adjust_airbox&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">pad_percent</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">primitives</span><span class=\"o\">.</span><span class=\"n\">create_region</span><span class=\"p\">(</span><span class=\"n\">pad_percent</span><span class=\"p\">)</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">assign_radiation_boundary_to_objects</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x0000019A8E1FD670&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"plot\">\n<h2>Plot<a class=\"headerlink\" href=\"#plot\" title=\"Permalink to this heading\">#</a></h2>\n<p>Plot patch</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">export_path</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Image.jpg&quot;</span><span class=\"p\">),</span> <span class=\"n\">plot_air_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_Machine_learning_applied_to_Patch_001.png\" srcset=\"../../_images/sphx_glr_Machine_learning_applied_to_Patch_001.png\" alt=\"Machine learning applied to Patch\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.generic.plot.ModelPlotter object at 0x0000019A834B94F0&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-setup-and-sweep\">\n<h2>Create setup and sweep<a class=\"headerlink\" href=\"#create-setup-and-sweep\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a setup and a sweep by frequency.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dictionary_list</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">freq</span> <span class=\"ow\">in</span> <span class=\"n\">frequency_list</span><span class=\"p\">:</span>\n    <span class=\"n\">frequency_name</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">freq</span> <span class=\"o\">*</span> <span class=\"mf\">1e-6</span><span class=\"p\">))</span>\n    <span class=\"n\">setup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Setup_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">frequency_name</span><span class=\"p\">)</span>\n    <span class=\"n\">current_setup</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_setup</span><span class=\"p\">(</span><span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"n\">setup_name</span><span class=\"p\">)</span>\n    <span class=\"n\">current_setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">freq</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;Hz&quot;</span>\n    <span class=\"n\">current_setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaximumPasses&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n    <span class=\"n\">current_setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MinimumConvergedPasses&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">current_setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaxDeltaS&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>\n    <span class=\"n\">current_setup</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n    <span class=\"n\">current_setup</span><span class=\"p\">[</span><span class=\"s2\">&quot;SaveAnyFields&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"n\">freq_start</span> <span class=\"o\">=</span> <span class=\"n\">freq</span> <span class=\"o\">*</span> <span class=\"mf\">0.75</span>\n    <span class=\"n\">freq_stop</span> <span class=\"o\">=</span> <span class=\"n\">freq</span> <span class=\"o\">*</span> <span class=\"mf\">1.25</span>\n    <span class=\"n\">sweep_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Sweep_of_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">setup_name</span>\n    <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_linear_count_sweep</span><span class=\"p\">(</span>\n        <span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"n\">setup_name</span><span class=\"p\">,</span>\n        <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">freqstart</span><span class=\"o\">=</span><span class=\"n\">freq_start</span><span class=\"p\">,</span>\n        <span class=\"n\">freqstop</span><span class=\"o\">=</span><span class=\"n\">freq_stop</span><span class=\"p\">,</span>\n        <span class=\"n\">num_of_freq_points</span><span class=\"o\">=</span><span class=\"mi\">25000</span><span class=\"p\">,</span>\n        <span class=\"n\">sweepname</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sweep_of_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">setup_name</span><span class=\"p\">,</span>\n        <span class=\"n\">save_fields</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">sweep_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Interpolating&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>8\n</pre></div>\n</div>\n</section>\n<section id=\"define-function\">\n<h2>Define function<a class=\"headerlink\" href=\"#define-function\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define a function to recover the index of the resonance frequency.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">index_of_resonance</span><span class=\"p\">(</span><span class=\"n\">imaginary_list</span><span class=\"p\">,</span> <span class=\"n\">real_list</span><span class=\"p\">):</span>\n    <span class=\"n\">list_of_index</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">imaginary_list</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">imaginary_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">imaginary_list</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">imaginary_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">imaginary_list</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]):</span>\n                <span class=\"n\">list_of_index</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">imaginary_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">imaginary_list</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]):</span>\n                <span class=\"n\">list_of_index</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">list_of_index</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n    <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">list_of_index</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">list_of_index</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">resonance_index</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"n\">list_of_index</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">storage</span> <span class=\"o\">&lt;</span> <span class=\"n\">real_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]:</span>\n                <span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">real_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n                <span class=\"n\">resonance_index</span> <span class=\"o\">=</span> <span class=\"n\">index</span>\n        <span class=\"k\">return</span> <span class=\"n\">resonance_index</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-parametric-variation-by-case\">\n<h2>Create parametric variation by case<a class=\"headerlink\" href=\"#create-parametric-variation-by-case\" title=\"Permalink to this heading\">#</a></h2>\n<p>Use a loop to create a parametric variation by case and associate it with a setup.\nThe parametric variation is composed of the patch length and width and substrate\npermittivity and thickness. For each, measure the real resonance frequency to\nobtain the data length, width, permittivity, and thickness that corresponds\nto a resonance frequency. Use an error counter to verify that the resonance\nfrequency is contained in the sweep. To make it easy, calculate the length\nof each case using the analytic formula.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">error_counter</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dictionary_list</span><span class=\"p\">)):</span>\n    <span class=\"n\">dictio</span> <span class=\"o\">=</span> <span class=\"n\">dictionary_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n    <span class=\"n\">frequency_name</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1e-6</span><span class=\"p\">))</span>\n    <span class=\"n\">setup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Setup_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">frequency_name</span><span class=\"p\">)</span>\n    <span class=\"n\">sweep_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Sweep_of_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">setup_name</span>\n    <span class=\"n\">length_variation</span> <span class=\"o\">=</span> <span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;length&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1e3</span>\n    <span class=\"n\">width_variation</span> <span class=\"o\">=</span> <span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;width&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1e3</span>\n    <span class=\"n\">thickness_variation</span> <span class=\"o\">=</span> <span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;thickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1e3</span>\n    <span class=\"n\">permittivity_variation</span> <span class=\"o\">=</span> <span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">param_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;para_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">setup_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">this_param</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">parametrics</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n        <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">length_variation</span><span class=\"p\">,</span>\n        <span class=\"n\">length_variation</span><span class=\"p\">,</span>\n        <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">variation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearCount&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">solution</span><span class=\"o\">=</span><span class=\"n\">setup_name</span><span class=\"p\">,</span>\n        <span class=\"n\">parametricname</span><span class=\"o\">=</span><span class=\"n\">param_name</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">this_param</span><span class=\"o\">.</span><span class=\"n\">add_variation</span><span class=\"p\">(</span>\n        <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">width_variation</span><span class=\"p\">,</span> <span class=\"n\">width_variation</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">variation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearCount&quot;</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">this_param</span><span class=\"o\">.</span><span class=\"n\">add_variation</span><span class=\"p\">(</span>\n        <span class=\"n\">dielectric</span><span class=\"o\">.</span><span class=\"n\">thickness</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness_variation</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness_variation</span><span class=\"p\">,</span>\n        <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearCount&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">this_param</span><span class=\"o\">.</span><span class=\"n\">add_variation</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;$cloned_Duroid__tm__permittivity&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">permittivity_variation</span><span class=\"p\">,</span>\n        <span class=\"n\">permittivity_variation</span><span class=\"p\">,</span>\n        <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">variation_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;LinearCount&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">analyze_setup</span><span class=\"p\">(</span><span class=\"n\">param_name</span><span class=\"p\">,</span> <span class=\"n\">num_cores</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">num_tasks</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">get_solution_data</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;Zt(one_T1, one_T1)&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">setup_sweep_name</span><span class=\"o\">=</span><span class=\"n\">setup_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; : &quot;</span> <span class=\"o\">+</span> <span class=\"n\">sweep_name</span><span class=\"p\">,</span>\n        <span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s2\">&quot;Sweep&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">length_variation</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">width</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">width_variation</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">dielectric</span><span class=\"o\">.</span><span class=\"n\">thickness</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">thickness_variation</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;$cloned_Duroid__tm__permittivity&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">permittivity_variation</span><span class=\"p\">)],</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">polyline_points</span><span class=\"o\">=</span><span class=\"mi\">25000</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">imaginary_part</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">data_imag</span><span class=\"p\">()</span>\n    <span class=\"n\">real_part</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">data_real</span><span class=\"p\">()</span>\n    <span class=\"n\">corresponding_index</span> <span class=\"o\">=</span> <span class=\"n\">index_of_resonance</span><span class=\"p\">(</span><span class=\"n\">imaginary_part</span><span class=\"p\">,</span> <span class=\"n\">real_part</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">corresponding_index</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;The resonance is out of the range&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">error_counter</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">minimum_imaginary</span> <span class=\"o\">=</span> <span class=\"n\">imaginary_part</span><span class=\"p\">[</span><span class=\"n\">corresponding_index</span><span class=\"p\">]</span>\n    <span class=\"n\">previous_impedance</span> <span class=\"o\">=</span> <span class=\"n\">real_part</span><span class=\"p\">[</span><span class=\"n\">corresponding_index</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;minimum_imaginary: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">minimum_imaginary</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;previous_impedance: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">previous_impedance</span><span class=\"p\">))</span>\n    <span class=\"n\">frequency_list</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">primary_sweep_values</span>\n    <span class=\"n\">resonance_frequency</span> <span class=\"o\">=</span> <span class=\"n\">frequency_list</span><span class=\"p\">[</span><span class=\"n\">corresponding_index</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resonance_frequency</span><span class=\"p\">)</span>\n    <span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">resonance_frequency</span>\n    <span class=\"n\">dictio</span><span class=\"p\">[</span><span class=\"s2\">&quot;previous_impedance&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">previous_impedance</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>minimum_imaginary: 0.30029756668945023\nprevious_impedance: 464.38240890547536\n0.14595433817352702\nminimum_imaginary: 0.3812150948661955\nprevious_impedance: 491.6543625479381\n0.138763050522021\nminimum_imaginary: -0.42953748062248925\nprevious_impedance: 212.48497390645588\n0.12998769950798\nminimum_imaginary: -0.2018852785201472\nprevious_impedance: 242.72847157451523\n0.14478729149166\nminimum_imaginary: 0.018656123662484904\nprevious_impedance: 248.93597014604296\n0.13603594143765801\nminimum_imaginary: -0.07918579169368614\nprevious_impedance: 250.06342096930382\n0.135783931357254\nminimum_imaginary: -0.13600047068002086\nprevious_impedance: 305.15884951825086\n0.133851854074163\nminimum_imaginary: 0.07351485156427291\nprevious_impedance: 331.8914933431957\n0.134352874114965\n</pre></div>\n</div>\n</section>\n<section id=\"print-error\">\n<h2>Print error<a class=\"headerlink\" href=\"#print-error\" title=\"Permalink to this heading\">#</a></h2>\n<p>Print the number of range error.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;number of range error: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">error_counter</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>number of range error: []\n</pre></div>\n</div>\n</section>\n<section id=\"end-data-recovery-step\">\n<h2>End data recovery step<a class=\"headerlink\" href=\"#end-data-recovery-step\" title=\"Permalink to this heading\">#</a></h2>\n<p>End the data recovery step by dumping the dictionary list into a JSON file.\nSaving the data allows you to use it in another Python script.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">json_file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ml_data_for_test.json&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">json_file_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">readfile</span><span class=\"p\">:</span>\n    <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">dictionary_list</span><span class=\"p\">,</span> <span class=\"n\">readfile</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"create-machine-learning-algorithm\">\n<h1>Create machine learning algorithm<a class=\"headerlink\" href=\"#create-machine-learning-algorithm\" title=\"Permalink to this heading\">#</a></h1>\n<p>This section describes the second step, which is for creating the machine\nlearning algorithm.</p>\n<section id=\"import-training-cases\">\n<h2>Import training cases<a class=\"headerlink\" href=\"#import-training-cases\" title=\"Permalink to this heading\">#</a></h2>\n<p>Import the 3,300 cases in the supplied JSON file to train the model. As mentioned\nearlier, you cannot use the small database that you generated earlier for training\nthe model. Its 8 cases are used later to test the model.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">path_folder</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">pyaedt_dir</span>\n<span class=\"n\">training_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path_folder</span><span class=\"p\">,</span> <span class=\"s2\">&quot;misc&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ml_data_file_train_100MHz_1GHz.json&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">training_file</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">readfile</span><span class=\"p\">:</span>\n    <span class=\"n\">my_dictio_list_train</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">readfile</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">json_file_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">readfile</span><span class=\"p\">:</span>\n    <span class=\"n\">my_dictio_list_test</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">readfile</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_dictio_list_train</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_dictio_list_test</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>3330\n8\n</pre></div>\n</div>\n</section>\n<section id=\"create-lists\">\n<h2>Create lists<a class=\"headerlink\" href=\"#create-lists\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create four lists:</p>\n<ul class=\"simple\">\n<li><p>One for the input of the training</p></li>\n<li><p>One for the output of training</p></li>\n<li><p>Oone for the input of the test</p></li>\n<li><p>One for the output of the test</p></li>\n</ul>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">input_for_training_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">output_for_training_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">input_for_test_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">output_for_test_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n</pre></div>\n</div>\n</section>\n<section id=\"fill-list-for-input-of-training\">\n<h2>Fill list for input of training<a class=\"headerlink\" href=\"#fill-list-for-input-of-training\" title=\"Permalink to this heading\">#</a></h2>\n<p>Fill the list for the input of the training with frequency, width, permittivity,\nand thickness so that the output is the length. The objective of this\nalgorithm is to predict the length according to the rest.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_dictio_list_train</span><span class=\"p\">)):</span>\n    <span class=\"n\">freq_width_perm_thick</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">my_dictio_list_train</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1e9</span><span class=\"p\">,</span>\n        <span class=\"n\">my_dictio_list_train</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;width&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n        <span class=\"n\">my_dictio_list_train</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">],</span>\n        <span class=\"n\">my_dictio_list_train</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;thickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">my_dictio_list_train</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;length&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>\n    <span class=\"n\">input_for_training_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">freq_width_perm_thick</span><span class=\"p\">)</span>\n    <span class=\"n\">output_for_training_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_dictio_list_test</span><span class=\"p\">)):</span>\n    <span class=\"n\">freq_width_perm_thick</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">my_dictio_list_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mf\">1e9</span><span class=\"p\">,</span>\n        <span class=\"n\">my_dictio_list_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;width&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n        <span class=\"n\">my_dictio_list_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;permittivity&quot;</span><span class=\"p\">],</span>\n        <span class=\"n\">my_dictio_list_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;thickness&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">my_dictio_list_test</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"s2\">&quot;length&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span>\n    <span class=\"n\">input_for_test_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">freq_width_perm_thick</span><span class=\"p\">)</span>\n    <span class=\"n\">output_for_test_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;number of test cases: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">output_for_test_list</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;number of training cases: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">output_for_training_list</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>number of test cases: 8\nnumber of training cases: 3330\n</pre></div>\n</div>\n</section>\n<section id=\"convert-lists-in-array\">\n<h2>Convert lists in array<a class=\"headerlink\" href=\"#convert-lists-in-array\" title=\"Permalink to this heading\">#</a></h2>\n<p>Convert the lists in an array.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">input_for_training_array</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">input_for_training_list</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">output_for_training_array</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">output_for_training_list</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">input_for_test_array</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">input_for_test_list</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"n\">output_for_test_array</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">output_for_test_list</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;input array for training: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">input_for_training_array</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;output array for training: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">output_for_training_array</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>input array for training: [[8.5343952e+07 1.8699978e+03 1.0000000e+00 1.3607236e+02]\n [8.7562560e+07 1.8699978e+03 1.0000000e+00 3.1649155e+01]\n [8.5523544e+07 1.8699978e+03 1.0000000e+00 1.6327014e+02]\n ...\n [9.5384678e+08 3.3421940e+01 1.1450000e+01 1.0995456e+01]\n [1.1057147e+09 3.3421940e+01 1.1450000e+01 2.1035936e+00]\n [9.7680755e+08 3.3421940e+01 1.1450000e+01 1.3259815e+01]]\noutput array for training: [1463.626    1607.3876   1427.5016   ...   36.353287   39.326664\n   35.355724]\n</pre></div>\n</div>\n</section>\n<section id=\"create-model\">\n<h2>Create model<a class=\"headerlink\" href=\"#create-model\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the model. Depending on the app, you can use different models.\nThe easiest way to find the correct model for an app is to search\nfor this app or one that is close to it.</p>\n<p>To predict characteristics of a patch antenna (resonance frequency, bandwidth,\nand input impedance), you can use SVR (Support Vector Regression) or ANN\n(Analyze Neuronal Network). The following code uses SVR because it is easier\nto implement. ANN is a more general method that also works with other\nhigh frequency components. While it is more likely to work for other app,\nimplementing ANN is much more complex.</p>\n<p>For SVR, there are three different kernels. For the patch antenna, RBF (Radial Basic\nFunction) is preferred. There are three other arguments that have a big impact\non the accuracy of the model: C, gamma, and epsilon. Sometimes they are given\nwith the necessary model for the app. Otherwise, you can try different\nvalues and see which one is the best by measuring the accuracy of the model.\nTo make this example shorter, <code class=\"docutils literal notranslate\"><span class=\"pre\">C=1e4</span></code>. However, the optimal value\nin this app is <code class=\"docutils literal notranslate\"><span class=\"pre\">C=5e4</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">svr_rbf</span> <span class=\"o\">=</span> <span class=\"n\">SVR</span><span class=\"p\">(</span><span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s2\">&quot;rbf&quot;</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"o\">=</span><span class=\"mf\">1e4</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">,</span> <span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"n\">regression</span> <span class=\"o\">=</span> <span class=\"n\">make_pipeline</span><span class=\"p\">(</span><span class=\"n\">StandardScaler</span><span class=\"p\">(),</span> <span class=\"n\">svr_rbf</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"train-model\">\n<h2>Train model<a class=\"headerlink\" href=\"#train-model\" title=\"Permalink to this heading\">#</a></h2>\n<p>Train the model.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">regression</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">input_for_training_array</span><span class=\"p\">,</span> <span class=\"n\">output_for_training_array</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"output_subarea output_html rendered_html output_result\">\n<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"\u25b8\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"\u25be\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()),\n                (&#x27;svr&#x27;, SVR(C=10000.0, epsilon=0.05, gamma=&#x27;auto&#x27;))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()),\n                (&#x27;svr&#x27;, SVR(C=10000.0, epsilon=0.05, gamma=&#x27;auto&#x27;))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVR</label><div class=\"sk-toggleable__content\"><pre>SVR(C=10000.0, epsilon=0.05, gamma=&#x27;auto&#x27;)</pre></div></div></div></div></div></div></div>\n</div>\n<br />\n<br /></section>\n<section id=\"dump-model-into-joblib-file\">\n<h2>Dump model into JOBLIB file<a class=\"headerlink\" href=\"#dump-model-into-joblib-file\" title=\"Permalink to this heading\">#</a></h2>\n<p>Dump the model into a JOBLIB file using the same method as you used earlier\nfor the JSON file.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">model_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;svr_model.joblib&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">regression</span><span class=\"p\">,</span> <span class=\"n\">model_file</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;D:/Project/Project1625.pyaedt\\\\HFSS_YL2\\\\svr_model.joblib&#39;]\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"implement-model-in-pyaedt-method\">\n<h1>Implement model in PyAEDT method<a class=\"headerlink\" href=\"#implement-model-in-pyaedt-method\" title=\"Permalink to this heading\">#</a></h1>\n<p>This section describes the third step, which is for implementing the model\nin the PyAEDT method.</p>\n<section id=\"load-model\">\n<h2>Load model<a class=\"headerlink\" href=\"#load-model\" title=\"Permalink to this heading\">#</a></h2>\n<p>Load the model in another Python file to predict different cases.\nHere the correct model with <code class=\"docutils literal notranslate\"><span class=\"pre\">C=5e4</span></code> is loaded rather than the one you made\nearlier with <code class=\"docutils literal notranslate\"><span class=\"pre\">C=1e4</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">model_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path_folder</span><span class=\"p\">,</span> <span class=\"s2\">&quot;misc&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;patch_svr_model_100MHz_1GHz.joblib&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">regression</span> <span class=\"o\">=</span> <span class=\"n\">joblib</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">model_path</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>c:\\actions-runner\\_work\\pyaedt\\pyaedt\\jsondoc\\lib\\site-packages\\sklearn\\base.py:299: UserWarning: Trying to unpickle estimator StandardScaler from version 1.0.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:\nhttps://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations\n  warnings.warn(\nc:\\actions-runner\\_work\\pyaedt\\pyaedt\\jsondoc\\lib\\site-packages\\sklearn\\base.py:299: UserWarning: Trying to unpickle estimator SVR from version 1.0.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:\nhttps://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations\n  warnings.warn(\nc:\\actions-runner\\_work\\pyaedt\\pyaedt\\jsondoc\\lib\\site-packages\\sklearn\\base.py:299: UserWarning: Trying to unpickle estimator Pipeline from version 1.0.2 when using version 1.2.1. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:\nhttps://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations\n  warnings.warn(\n</pre></div>\n</div>\n</section>\n<section id=\"predict-length-of-patch\">\n<h2>Predict length of patch<a class=\"headerlink\" href=\"#predict-length-of-patch\" title=\"Permalink to this heading\">#</a></h2>\n<p>Predict the length of the patch as a function of its resonant frequency and width\nand substrate thickness and permittivity.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">prediction_of_length</span> <span class=\"o\">=</span> <span class=\"n\">regression</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">input_for_test_list</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"measure-model-efficiency\">\n<h2>Measure model efficiency<a class=\"headerlink\" href=\"#measure-model-efficiency\" title=\"Permalink to this heading\">#</a></h2>\n<p>Measure the model efficiency.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">average_relative_gap</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">counter_under_zero_five</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">counter_under_one</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">counter_under_two</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">counter_under_five</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">counter_under_ten</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">counter_upper_ten</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rel_counter_under_one</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rel_counter_under_two</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rel_counter_under_five</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rel_counter_under_ten</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rel_counter_under_twenty</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">rel_counter_upper_twenty</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">prediction_of_length</span><span class=\"p\">)):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;value: &quot;</span>\n        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">input_for_test_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">])</span>\n        <span class=\"o\">+</span> <span class=\"s2\">&quot;, prediction: &quot;</span>\n        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">prediction_of_length</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n        <span class=\"o\">+</span> <span class=\"s2\">&quot;, reality: &quot;</span>\n        <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">output_for_test_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">gap</span> <span class=\"o\">=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">prediction_of_length</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">output_for_test_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">])</span>\n    <span class=\"n\">relative_gap</span> <span class=\"o\">=</span> <span class=\"n\">gap</span> <span class=\"o\">/</span> <span class=\"n\">output_for_test_list</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n    <span class=\"n\">average_relative_gap</span> <span class=\"o\">=</span> <span class=\"n\">average_relative_gap</span> <span class=\"o\">+</span> <span class=\"n\">relative_gap</span>\n    <span class=\"k\">if</span> <span class=\"n\">gap</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n        <span class=\"n\">counter_under_zero_five</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"mf\">0.5</span> <span class=\"o\">&lt;=</span> <span class=\"n\">gap</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">counter_under_one</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"mi\">1</span> <span class=\"o\">&lt;=</span> <span class=\"n\">gap</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"n\">counter_under_two</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"mi\">2</span> <span class=\"o\">&lt;=</span> <span class=\"n\">gap</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n        <span class=\"n\">counter_under_five</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"mi\">5</span> <span class=\"o\">&lt;=</span> <span class=\"n\">gap</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n        <span class=\"n\">counter_under_ten</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">counter_upper_ten</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">relative_gap</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.01</span><span class=\"p\">:</span>\n        <span class=\"n\">rel_counter_under_one</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"n\">relative_gap</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.02</span><span class=\"p\">:</span>\n        <span class=\"n\">rel_counter_under_two</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"n\">relative_gap</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.05</span><span class=\"p\">:</span>\n        <span class=\"n\">rel_counter_under_five</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"n\">relative_gap</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>\n        <span class=\"n\">rel_counter_under_ten</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">elif</span> <span class=\"n\">relative_gap</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.2</span><span class=\"p\">:</span>\n        <span class=\"n\">rel_counter_under_twenty</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">rel_counter_upper_twenty</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n<span class=\"n\">average_relative_gap</span> <span class=\"o\">=</span> <span class=\"n\">average_relative_gap</span> <span class=\"o\">/</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">prediction_of_length</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>value: [145954338.173527, 649.3187072055669, 1.11, 16.150087027394232], prediction: 878385.6011414193, reality: 929193.9172575781\nvalue: [138763050.522021, 649.3187072055669, 1.11, 17.480305760680455], prediction: 911995.4403143235, reality: 927592.550041813\nvalue: [129987699.50798, 1005.4654552570148, 1.11, 16.150087027394232], prediction: 957374.6043976853, reality: 928320.6766531867\nvalue: [144787291.49166, 1005.4654552570148, 1.11, 17.480305760680455], prediction: 888871.7795043685, reality: 926656.8241805949\nvalue: [136035941.437658, 448.8775694714641, 10.9, 109.62270855084219], prediction: 316073.94892106904, reality: 254825.4538172353\nvalue: [135783931.357254, 448.8775694714641, 10.9, 76.2910131054917], prediction: 268716.37497612595, reality: 272385.5121852592\nvalue: [133851854.074163, 330.447934400385, 10.9, 109.62270855084219], prediction: 293763.02910692483, reality: 263472.7671369378\nvalue: [134352874.114965, 330.447934400385, 10.9, 76.2910131054917], prediction: 277645.2529404387, reality: 279478.00115743437\n</pre></div>\n</div>\n<p>The first displays are the gap <code class=\"docutils literal notranslate\"><span class=\"pre\">(prediction</span> <span class=\"pre\">-</span> <span class=\"pre\">real)</span></code>. The second displays are\nthe relative gap <code class=\"docutils literal notranslate\"><span class=\"pre\">((prediction</span> <span class=\"pre\">-</span> <span class=\"pre\">real)/real)</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;sample size: &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">prediction_of_length</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;0.5 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">counter_under_zero_five</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;1 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">counter_under_one</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;2 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">counter_under_two</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;5 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">counter_under_five</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;10 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">counter_under_ten</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&gt;10 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">counter_upper_ten</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;sum : &quot;</span>\n    <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span>\n        <span class=\"n\">counter_under_zero_five</span>\n        <span class=\"o\">+</span> <span class=\"n\">counter_under_one</span>\n        <span class=\"o\">+</span> <span class=\"n\">counter_under_two</span>\n        <span class=\"o\">+</span> <span class=\"n\">counter_under_five</span>\n        <span class=\"o\">+</span> <span class=\"n\">counter_under_ten</span>\n        <span class=\"o\">+</span> <span class=\"n\">counter_upper_ten</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;-------------------------------------------</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;0.01 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rel_counter_under_one</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;0.02 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rel_counter_under_two</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;0.05 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rel_counter_under_five</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;0.1 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rel_counter_under_ten</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;0.2 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rel_counter_under_twenty</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;&gt;0.2 : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">rel_counter_upper_twenty</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;sum : &quot;</span>\n    <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span>\n        <span class=\"n\">rel_counter_under_one</span>\n        <span class=\"o\">+</span> <span class=\"n\">rel_counter_under_two</span>\n        <span class=\"o\">+</span> <span class=\"n\">rel_counter_under_five</span>\n        <span class=\"o\">+</span> <span class=\"n\">rel_counter_under_ten</span>\n        <span class=\"o\">+</span> <span class=\"n\">rel_counter_under_twenty</span>\n        <span class=\"o\">+</span> <span class=\"n\">rel_counter_upper_twenty</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;average is : &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">average_relative_gap</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>sample size: 8\n&lt;0.5 : 0\n&lt;1 : 0\n&lt;2 : 1\n&lt;5 : 1\n&lt;10 : 0\n&gt;10 : 6\n\nsum : 8\n-------------------------------------------\n\n&lt;0.01 : 1\n&lt;0.02 : 2\n&lt;0.05 : 2\n&lt;0.1 : 1\n&lt;0.2 : 1\n&gt;0.2 : 1\nsum : 8\naverage is : 0.06486447963936358\n</pre></div>\n</div>\n</section>\n</section>\n<section id=\"release-aedt\">\n<h1>Release AEDT<a class=\"headerlink\" href=\"#release-aedt\" title=\"Permalink to this heading\">#</a></h1>\n<p>Release AEDT.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 10 minutes  8.254 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-02-hfss-machine-learning-applied-to-patch-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/d28bc1786d826d6ee59c4f277e69c9aa/Machine_learning_applied_to_Patch.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">Machine_learning_applied_to_Patch.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/3af829e9b06c5672f7f746e927c68e0b/Machine_learning_applied_to_Patch.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">Machine_learning_applied_to_Patch.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/02-HFSS3DLayout/index", "HFSS 3D Layout examples", "N", "next"], ["examples/02-HFSS/HFSS_Spiral", "HFSS: spiral inductor", "P", "previous"]], "sourcename": "examples/02-HFSS/Machine_learning_applied_to_Patch.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">HFSS: machine learning applied to a patch</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-imports\">Perform required imports</a></li>\n<li><a class=\"reference internal\" href=\"#set-non-graphical-mode\">Set non-graphical mode</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#generate-database\">Generate database</a><ul>\n<li><a class=\"reference internal\" href=\"#generate-input\">Generate input</a></li>\n<li><a class=\"reference internal\" href=\"#generate-hfss-design\">Generate HFSS design</a></li>\n<li><a class=\"reference internal\" href=\"#resize-layers-around-patch\">Resize layers around patch</a></li>\n<li><a class=\"reference internal\" href=\"#create-lumped-port\">Create lumped port</a></li>\n<li><a class=\"reference internal\" href=\"#create-line\">Create line</a></li>\n<li><a class=\"reference internal\" href=\"#plot\">Plot</a></li>\n<li><a class=\"reference internal\" href=\"#create-setup-and-sweep\">Create setup and sweep</a></li>\n<li><a class=\"reference internal\" href=\"#define-function\">Define function</a></li>\n<li><a class=\"reference internal\" href=\"#create-parametric-variation-by-case\">Create parametric variation by case</a></li>\n<li><a class=\"reference internal\" href=\"#print-error\">Print error</a></li>\n<li><a class=\"reference internal\" href=\"#end-data-recovery-step\">End data recovery step</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#create-machine-learning-algorithm\">Create machine learning algorithm</a><ul>\n<li><a class=\"reference internal\" href=\"#import-training-cases\">Import training cases</a></li>\n<li><a class=\"reference internal\" href=\"#create-lists\">Create lists</a></li>\n<li><a class=\"reference internal\" href=\"#fill-list-for-input-of-training\">Fill list for input of training</a></li>\n<li><a class=\"reference internal\" href=\"#convert-lists-in-array\">Convert lists in array</a></li>\n<li><a class=\"reference internal\" href=\"#create-model\">Create model</a></li>\n<li><a class=\"reference internal\" href=\"#train-model\">Train model</a></li>\n<li><a class=\"reference internal\" href=\"#dump-model-into-joblib-file\">Dump model into JOBLIB file</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#implement-model-in-pyaedt-method\">Implement model in PyAEDT method</a><ul>\n<li><a class=\"reference internal\" href=\"#load-model\">Load model</a></li>\n<li><a class=\"reference internal\" href=\"#predict-length-of-patch\">Predict length of patch</a></li>\n<li><a class=\"reference internal\" href=\"#measure-model-efficiency\">Measure model efficiency</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#release-aedt\">Release AEDT</a></li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/02-HFSS/Machine_learning_applied_to_Patch", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}