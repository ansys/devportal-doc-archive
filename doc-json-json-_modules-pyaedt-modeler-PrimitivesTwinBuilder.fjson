{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.PrimitivesTwinBuilder", "body": "<h1>Source code for pyaedt.modeler.PrimitivesTwinBuilder</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.PrimitivesCircuit</span> <span class=\"kn\">import</span> <span class=\"n\">CircuitComponents</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.PrimitivesCircuit</span> <span class=\"kn\">import</span> <span class=\"n\">ComponentCatalog</span>\n\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TwinBuilderComponents</span><span class=\"p\">(</span><span class=\"n\">CircuitComponents</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;TwinBuilderComponents class.</span>\n\n<span class=\"sd\">    This class is for managing all circuit components for Twin Builder.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    parent :</span>\n\n<span class=\"sd\">    modeler :</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Basic usage demonstrated with a Twin Builder design:</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Twin Builder</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = TwinBuilder()</span>\n<span class=\"sd\">    &gt;&gt;&gt; prim = aedtapp.modeler.schematic</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_libray</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design Library.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Simplorer Elements&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">tab_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Tab name.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Quantities&quot;</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">partname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get object id from a string or integer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        partname : int or str</span>\n<span class=\"sd\">            ID or name of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">partname</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">partname</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">partname</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span> <span class=\"o\">==</span> <span class=\"n\">partname</span> <span class=\"ow\">or</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"n\">partname</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">modeler</span><span class=\"p\">):</span>\n        <span class=\"n\">CircuitComponents</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">modeler</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_currentId</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">components_catalog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the syslib component catalog with all info.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.PrimitivesCircuit.ComponentCatalog`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span> <span class=\"o\">=</span> <span class=\"n\">ComponentCatalog</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_components_catalog</span>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_resistor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_resistor/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_resistor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_resistor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a resistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the resistor. The default value is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Value for the resistor. The default value is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default value is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list. The default value is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Passive Elements&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;R&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_inductor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_inductor/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_inductor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_inductor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an inductor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the inductor. The default is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Value for the inductor. The default is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Passive Elements&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;L&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;L&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_capacitor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_capacitor/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_capacitor\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_capacitor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a capacitor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the capacitor. The default value is ``None``.</span>\n<span class=\"sd\">        value : float, optional</span>\n<span class=\"sd\">            Value for the capacitor. The default value is ``50``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default value is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list. The default value is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Passive Elements&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;UseInitialConditions&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_voltage_source\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_voltage_source/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_voltage_source\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_voltage_source</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;E&quot;</span><span class=\"p\">,</span> <span class=\"n\">amplitude</span><span class=\"o\">=</span><span class=\"mi\">326</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a voltage source (conservative electrical output).</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the voltage source. The default is ``None``.</span>\n<span class=\"sd\">        type  : str, optional</span>\n<span class=\"sd\">            Type of the source. The default is ``E``.</span>\n<span class=\"sd\">        amplitude : float, optional</span>\n<span class=\"sd\">            Amplitude of the waveform if periodic. The default is ``326V``</span>\n<span class=\"sd\">        freq : float, optional</span>\n<span class=\"sd\">            Frequency of the periodic waveform. The default is ``50Hz``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle of rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list or not. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Sources&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;E&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;E&quot;</span><span class=\"p\">:</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;EMF&quot;</span><span class=\"p\">,</span> <span class=\"n\">amplitude</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ESINE&quot;</span> <span class=\"ow\">or</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;EPULSE&quot;</span> <span class=\"ow\">or</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ETRIANG&quot;</span><span class=\"p\">:</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;AMPL&quot;</span><span class=\"p\">,</span> <span class=\"n\">amplitude</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;FREQ&quot;</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TPERIO&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tend+1&quot;</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PERIO&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_diode\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_diode/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_diode\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_diode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a diode.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the diode. The default is ``None``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Semiconductors System Level&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_npn\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_npn/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_npn\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_npn</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an NPN transistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the NPN transistor. The default value is ``None``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Semiconductors System Level&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;BJT&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_pnp\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_pnp/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_pnp\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_pnp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a PNP transistor.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the PNP transistor. The default is ``None``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Circuit</span><span class=\"se\">\\\\</span><span class=\"s2\">Semiconductors System Level&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;BJT&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"TwinBuilderComponents.create_periodic_waveform_source\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_periodic_waveform_source/#pyaedt.modeler.PrimitivesTwinBuilder.TwinBuilderComponents.create_periodic_waveform_source\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_periodic_waveform_source</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">compname</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;SINE&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">amplitude</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n        <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>\n        <span class=\"n\">phase</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Create a periodic waveform source (non conservative real output).</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str, optional</span>\n<span class=\"sd\">            Name of the voltage source. The default is ``None``.</span>\n<span class=\"sd\">        type  : str, optional</span>\n<span class=\"sd\">            Type of the source [SINE, PULSE, TRAING, SAWTOOTH]. The default is ``SINE``.</span>\n<span class=\"sd\">        amplitude : float, optional</span>\n<span class=\"sd\">            Amplitude of the waveform if periodic. The default is ``100V``</span>\n<span class=\"sd\">        freq : float, optional</span>\n<span class=\"sd\">            Frequency of the periodic waveform. The default is ``50Hz``.</span>\n<span class=\"sd\">        phase : float, optional</span>\n<span class=\"sd\">            Phase of the  periodic waveform. The default is ``0deg``.</span>\n<span class=\"sd\">        offset : float, optional</span>\n<span class=\"sd\">            Offset added to the amplitude of the periodic waveform. The default is ``0``.</span>\n<span class=\"sd\">        delay : float, optional</span>\n<span class=\"sd\">            Delay before starting of the periodic waveform. The default is ``0``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis. The default value is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle of rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to use the instance ID in the net list or not. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">compname</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Basic Elements</span><span class=\"se\">\\\\</span><span class=\"s2\">Tools</span><span class=\"se\">\\\\</span><span class=\"s2\">Time Functions&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"nb\">type</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;SINE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PULSE&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;TRIANG&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SAWTOOTH&quot;</span><span class=\"p\">]:</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;AMPL&quot;</span><span class=\"p\">,</span> <span class=\"n\">amplitude</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;FREQ&quot;</span><span class=\"p\">,</span> <span class=\"n\">freq</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PHASE&quot;</span><span class=\"p\">,</span> <span class=\"n\">phase</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;OFF&quot;</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TDELAY&quot;</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;TPERIO&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tend+1&quot;</span><span class=\"p\">)</span>\n            <span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;PERIO&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/PrimitivesTwinBuilder", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}