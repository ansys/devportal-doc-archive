{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.application.Analysis3D", "body": "<h1>Source code for pyaedt.application.Analysis3D</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">csv</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ntpath</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Analysis</span> <span class=\"kn\">import</span> <span class=\"n\">Analysis</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.configurations</span> <span class=\"kn\">import</span> <span class=\"n\">Configurations</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.Model2D</span> <span class=\"kn\">import</span> <span class=\"n\">Modeler2D</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.Model3D</span> <span class=\"kn\">import</span> <span class=\"n\">Modeler3D</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.stackup_3d</span> <span class=\"kn\">import</span> <span class=\"n\">Stackup3D</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.Mesh</span> <span class=\"kn\">import</span> <span class=\"n\">Mesh</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.MeshIcepak</span> <span class=\"kn\">import</span> <span class=\"n\">IcepakMesh</span>\n\n<span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.PostProcessor</span> <span class=\"kn\">import</span> <span class=\"n\">PostProcessor</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modules.AdvancedPostProcessing</span> <span class=\"kn\">import</span> <span class=\"n\">PostProcessor</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FieldAnalysis3D</span><span class=\"p\">(</span><span class=\"n\">Analysis</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages 3D field analysis setup in HFSS, Maxwell 3D, and Q3D.</span>\n\n<span class=\"sd\">    This class is automatically initialized by an application call from one of</span>\n<span class=\"sd\">    the 3D tools. See the application function for parameter definitions.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    application : str</span>\n<span class=\"sd\">        3D application that is to initialize the call.</span>\n<span class=\"sd\">    projectname : str, optional</span>\n<span class=\"sd\">        Name of the project to select or the full path to the project</span>\n<span class=\"sd\">        or AEDTZ archive to open. The default is ``None``, in which</span>\n<span class=\"sd\">        case an attempt is made to get an active project. If no</span>\n<span class=\"sd\">        projects are present, an empty project is created.</span>\n<span class=\"sd\">    designname : str, optional</span>\n<span class=\"sd\">        Name of the design to select. The default is ``None``, in</span>\n<span class=\"sd\">        which case an attempt is made to get an active design. If no</span>\n<span class=\"sd\">        designs are present, an empty design is created.</span>\n<span class=\"sd\">    solution_type : str, optional</span>\n<span class=\"sd\">        Solution type to apply to the design. The default is</span>\n<span class=\"sd\">        ``None``, in which case the default type is applied.</span>\n<span class=\"sd\">    setup_name : str, optional</span>\n<span class=\"sd\">        Name of the setup to use as the nominal. The default is</span>\n<span class=\"sd\">        ``None``, in which case the active setup is used or</span>\n<span class=\"sd\">        nothing is used.</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT  to use. The default is ``None``, in which case</span>\n<span class=\"sd\">        the active version or latest installed version is used.</span>\n<span class=\"sd\">    non_graphical : bool, optional</span>\n<span class=\"sd\">        Whether to run AEDT in non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT is launched in the graphical mode.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the</span>\n<span class=\"sd\">        machine. The default is ``True``.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to release AEDT on exit. The default is ``False``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to enable the student version of AEDT. The default</span>\n<span class=\"sd\">        is ``False``.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Only used when ``new_desktop_session = False``, specifies by process ID which instance</span>\n<span class=\"sd\">        of Electronics Desktop to point PyAEDT at.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">application</span><span class=\"p\">,</span>\n        <span class=\"n\">projectname</span><span class=\"p\">,</span>\n        <span class=\"n\">designname</span><span class=\"p\">,</span>\n        <span class=\"n\">solution_type</span><span class=\"p\">,</span>\n        <span class=\"n\">setup_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">Analysis</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"n\">application</span><span class=\"p\">,</span>\n            <span class=\"n\">projectname</span><span class=\"p\">,</span>\n            <span class=\"n\">designname</span><span class=\"p\">,</span>\n            <span class=\"n\">solution_type</span><span class=\"p\">,</span>\n            <span class=\"n\">setup_name</span><span class=\"p\">,</span>\n            <span class=\"n\">specified_version</span><span class=\"p\">,</span>\n            <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n            <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n            <span class=\"n\">close_on_exit</span><span class=\"p\">,</span>\n            <span class=\"n\">student_version</span><span class=\"p\">,</span>\n            <span class=\"n\">machine</span><span class=\"p\">,</span>\n            <span class=\"n\">port</span><span class=\"p\">,</span>\n            <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span> <span class=\"o\">=</span> <span class=\"n\">Modeler2D</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">application</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Maxwell 2D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2D Extractor&quot;</span><span class=\"p\">]</span> <span class=\"k\">else</span> <span class=\"n\">Modeler3D</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh</span> <span class=\"o\">=</span> <span class=\"n\">IcepakMesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">application</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Icepak&quot;</span> <span class=\"k\">else</span> <span class=\"n\">Mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_post</span> <span class=\"o\">=</span> <span class=\"n\">PostProcessor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_configurations</span> <span class=\"o\">=</span> <span class=\"n\">Configurations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">configurations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Property to import and export configuration files.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.generic.configurations.Configurations`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_configurations</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">modeler</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Modeler.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Model3D.Modeler3D` or :class:`pyaedt.modeler.Model2D.Modeler2D`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modules.Mesh.Mesh` or :class:`pyaedt.modules.MeshIcepak.IcepakMesh`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">components3d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;3D components.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of 3D components with their absolute paths.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">components_dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">syspath</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">syslib</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3DComponents&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">syspath</span><span class=\"p\">):</span>\n            <span class=\"n\">listfiles</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">dirs</span><span class=\"p\">,</span> <span class=\"n\">files</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">syspath</span><span class=\"p\">):</span>\n                <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">files</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;.a3dcomp&quot;</span><span class=\"p\">):</span>\n                        <span class=\"n\">listfiles</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">))</span>\n            <span class=\"c1\"># listfiles = glob.glob(syspath + &quot;/**/*.a3dcomp&quot;, recursive=True)</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">listfiles</span><span class=\"p\">:</span>\n                <span class=\"n\">head</span><span class=\"p\">,</span> <span class=\"n\">tail</span> <span class=\"o\">=</span> <span class=\"n\">ntpath</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"n\">components_dict</span><span class=\"p\">[</span><span class=\"n\">tail</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n        <span class=\"n\">userlib</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">userlib</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3DComponents&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">userlib</span><span class=\"p\">):</span>\n            <span class=\"n\">listfiles</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">dirs</span><span class=\"p\">,</span> <span class=\"n\">files</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">userlib</span><span class=\"p\">):</span>\n                <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">files</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;.a3dcomp&quot;</span><span class=\"p\">):</span>\n                        <span class=\"n\">listfiles</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">))</span>\n            <span class=\"c1\"># listfiles = glob.glob(userlib + &quot;/**/*.a3dcomp&quot;, recursive=True)</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">listfiles</span><span class=\"p\">:</span>\n                <span class=\"n\">head</span><span class=\"p\">,</span> <span class=\"n\">tail</span> <span class=\"o\">=</span> <span class=\"n\">ntpath</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"n\">components_dict</span><span class=\"p\">[</span><span class=\"n\">tail</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">el</span>\n        <span class=\"k\">return</span> <span class=\"n\">components_dict</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">plot</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">objects</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">export_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">plot_as_separate_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">plot_air_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">force_opacity_value</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">clean_files</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Plot the model or a subset of objects.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objects : list, optional</span>\n<span class=\"sd\">            List of objects to plot. The default is ``None``, in which case all objects</span>\n<span class=\"sd\">            are exported.</span>\n<span class=\"sd\">        show : bool, optional</span>\n<span class=\"sd\">            Whether to show the plot after generation. The default is ``True``. If</span>\n<span class=\"sd\">            ``False``, the generated class is returned for more customization before</span>\n<span class=\"sd\">            plot generation.</span>\n<span class=\"sd\">        export_path : str, optional</span>\n<span class=\"sd\">            If available, an image is saved to file. If ``None`` no image will be saved.</span>\n<span class=\"sd\">        plot_as_separate_objects : bool, optional</span>\n<span class=\"sd\">            Whether to plot each object separately. The default is ``True``, which may</span>\n<span class=\"sd\">            require more time to export from AEDT.</span>\n<span class=\"sd\">        plot_air_objects : bool, optional</span>\n<span class=\"sd\">            Whether to also plot air and vacuum objects. The default is ``True``.</span>\n<span class=\"sd\">        force_opacity_value : float, optional</span>\n<span class=\"sd\">            Opacity value between 0 and 1 to applied to all of the model. The</span>\n<span class=\"sd\">            default is ``None``, which means the AEDT opacity is applied to each object.</span>\n<span class=\"sd\">        clean_files : bool, optional</span>\n<span class=\"sd\">            Whether to clean created files after plot generation. The default is ``False``,</span>\n<span class=\"sd\">            which means that the cache is maintained in the model object that is returned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.generic.plot.ModelPlotter`</span>\n<span class=\"sd\">            Model Object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Plot is available only on CPython&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span> <span class=\"o\">&lt;</span> <span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Plot is supported from AEDT 2021 R2.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">plot_model_obj</span><span class=\"p\">(</span>\n                <span class=\"n\">objects</span><span class=\"o\">=</span><span class=\"n\">objects</span><span class=\"p\">,</span>\n                <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"n\">show</span><span class=\"p\">,</span>\n                <span class=\"n\">export_path</span><span class=\"o\">=</span><span class=\"n\">export_path</span><span class=\"p\">,</span>\n                <span class=\"n\">plot_as_separate_objects</span><span class=\"o\">=</span><span class=\"n\">plot_as_separate_objects</span><span class=\"p\">,</span>\n                <span class=\"n\">plot_air_objects</span><span class=\"o\">=</span><span class=\"n\">plot_air_objects</span><span class=\"p\">,</span>\n                <span class=\"n\">force_opacity_value</span><span class=\"o\">=</span><span class=\"n\">force_opacity_value</span><span class=\"p\">,</span>\n                <span class=\"n\">clean_files</span><span class=\"o\">=</span><span class=\"n\">clean_files</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_mesh_stats</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">mesh_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export mesh statistics to a file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        setup_name :str</span>\n<span class=\"sd\">            Setup name.</span>\n<span class=\"sd\">        variation_string : str, optional</span>\n<span class=\"sd\">            Variation list. The default is ``&quot;&quot;``.</span>\n<span class=\"sd\">        mesh_path : str, optional</span>\n<span class=\"sd\">            Full path to the mesh statistics file. The default is ``None``, in which</span>\n<span class=\"sd\">            caswe the working directory is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            File path.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.ExportMeshStats</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">mesh_path</span><span class=\"p\">:</span>\n            <span class=\"n\">mesh_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;meshstats.ms&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">ExportMeshStats</span><span class=\"p\">(</span><span class=\"n\">setup_name</span><span class=\"p\">,</span> <span class=\"n\">variation_string</span><span class=\"p\">,</span> <span class=\"n\">mesh_path</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">mesh_path</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_components3d_vars</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component3dname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Read the A3DCOMP file and check for variables.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component3dname :</span>\n<span class=\"sd\">            Name of the 3D component, which must be in the ``syslib`` or ``userlib`` directory. Otherwise,</span>\n<span class=\"sd\">            you must specify the full absolute path to the AEDCOMP file with the file name and the extension.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of variables in the A3DCOMP file.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">vars</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">component3dname</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components3d</span><span class=\"p\">:</span>\n            <span class=\"n\">aedt_fh</span> <span class=\"o\">=</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">component3dname</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">aedt_fh</span><span class=\"p\">:</span>\n                <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">aedt_fh</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n                <span class=\"n\">_all_lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">temp</span><span class=\"p\">:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">_all_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">))</span>\n                    <span class=\"k\">except</span> <span class=\"ne\">UnicodeDecodeError</span><span class=\"p\">:</span>\n                        <span class=\"k\">break</span>\n                <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">_all_lines</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;VariableProp(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                        <span class=\"n\">line_list</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">)</span>\n                        <span class=\"nb\">vars</span><span class=\"p\">[</span><span class=\"n\">line_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">line_list</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">line_list</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n                <span class=\"n\">aedt_fh</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"nb\">vars</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components3d</span><span class=\"p\">[</span><span class=\"n\">component3dname</span><span class=\"p\">],</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">aedt_fh</span><span class=\"p\">:</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">aedt_fh</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n        <span class=\"n\">_all_lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">temp</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">_all_lines</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\t</span><span class=\"s2\">&quot;</span><span class=\"p\">))</span>\n            <span class=\"k\">except</span> <span class=\"ne\">UnicodeDecodeError</span><span class=\"p\">:</span>\n                <span class=\"k\">break</span>\n        <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">_all_lines</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;VariableProp(&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">line</span><span class=\"p\">:</span>\n                <span class=\"n\">line_list</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;&#39;&quot;</span><span class=\"p\">)</span>\n                <span class=\"nb\">vars</span><span class=\"p\">[</span><span class=\"n\">line_list</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">line_list</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">line_list</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"nb\">vars</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_property_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve a property value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objectname : str</span>\n<span class=\"sd\">            Name of the object.</span>\n<span class=\"sd\">        property : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        type : str, optional</span>\n<span class=\"sd\">            Type of the property. Options are ``&quot;boundary&quot;``, ``&quot;excitation&quot;``,</span>\n<span class=\"sd\">            ``&quot;setup&quot;,`` and ``&quot;mesh&quot;``. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Value of the property.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDesign.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">boundary</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HfssTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">}</span>\n        <span class=\"n\">excitation</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HfssTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">}</span>\n        <span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HfssTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;General&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;General&quot;</span><span class=\"p\">}</span>\n        <span class=\"n\">mesh</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MeshSetupTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">}</span>\n        <span class=\"nb\">all</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;HfssTab&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;MeshSetupTab&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Icepak&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Q3D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;General&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Maxwell3D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;General&quot;</span><span class=\"p\">],</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Boundary&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">propserv</span> <span class=\"o\">=</span> <span class=\"n\">boundary</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">propserv</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Setup&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">propserv</span> <span class=\"o\">=</span> <span class=\"n\">setup</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">propserv</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span>\n\n        <span class=\"k\">elif</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Excitation&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">propserv</span> <span class=\"o\">=</span> <span class=\"n\">excitation</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">propserv</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span>\n\n        <span class=\"k\">elif</span> <span class=\"nb\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Mesh&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">propserv</span> <span class=\"o\">=</span> <span class=\"n\">mesh</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">propserv</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">val</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">propservs</span> <span class=\"o\">=</span> <span class=\"nb\">all</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_design_type</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">propserv</span> <span class=\"ow\">in</span> <span class=\"n\">propservs</span><span class=\"p\">:</span>\n                <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"n\">propserv</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">))</span>\n                <span class=\"k\">if</span> <span class=\"nb\">property</span> <span class=\"ow\">in</span> <span class=\"n\">properties</span><span class=\"p\">:</span>\n                    <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">propserv</span><span class=\"p\">,</span> <span class=\"n\">objectname</span><span class=\"p\">,</span> <span class=\"nb\">property</span><span class=\"p\">)</span>\n                    <span class=\"k\">return</span> <span class=\"n\">val</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copy_solid_bodies_from</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">design</span><span class=\"p\">,</span> <span class=\"n\">object_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">no_vacuum</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">no_pec</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">include_sheets</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Copy a list of objects and user defined models from one design to the active design.</span>\n<span class=\"sd\">        If user defined models are selected, the project will be saved automatically.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        design :</span>\n<span class=\"sd\">            Starting application object. For example, ``hfss1= HFSS3DLayout``.</span>\n<span class=\"sd\">        object_list : list, optional</span>\n<span class=\"sd\">            List of objects and user defined components to copy. The default is ``None``.</span>\n<span class=\"sd\">        no_vacuum : bool, optional</span>\n<span class=\"sd\">            Whether to include vacuum objects for the copied objects.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n<span class=\"sd\">        no_pec :</span>\n<span class=\"sd\">            Whether to include pec objects for the copied objects. The</span>\n<span class=\"sd\">            default is ``True``.</span>\n<span class=\"sd\">        include_sheets :</span>\n<span class=\"sd\">            Whether to include sheets for the copied objects. The</span>\n<span class=\"sd\">            default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Copy</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Paste</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">body_list</span> <span class=\"o\">=</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">solid_names</span>\n        <span class=\"n\">udc_list</span> <span class=\"o\">=</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_component_names</span>\n        <span class=\"n\">original_design_type</span> <span class=\"o\">=</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">design_type</span>\n        <span class=\"n\">dest_design_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span>\n        <span class=\"n\">new_udc_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">include_sheets</span><span class=\"p\">:</span>\n            <span class=\"n\">body_list</span> <span class=\"o\">+=</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sheet_names</span>\n        <span class=\"k\">if</span> <span class=\"n\">udc_list</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">udc</span> <span class=\"ow\">in</span> <span class=\"n\">udc_list</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span>\n                    <span class=\"n\">original_design_type</span> <span class=\"o\">!=</span> <span class=\"n\">dest_design_type</span>\n                    <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">udc</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span>\n                    <span class=\"ow\">or</span> <span class=\"n\">original_design_type</span> <span class=\"o\">==</span> <span class=\"n\">dest_design_type</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">new_udc_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">udc</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">part_id</span> <span class=\"ow\">in</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">udc</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">udc</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"n\">part_id</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">body_list</span><span class=\"p\">:</span>\n                        <span class=\"n\">body_list</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"n\">udc</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"n\">part_id</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"n\">selection_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">udc_selection</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">material_properties</span> <span class=\"o\">=</span> <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">objects</span>\n        <span class=\"n\">selections</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">selections</span><span class=\"p\">:</span>\n            <span class=\"n\">selection_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">selections</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_list</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">udc</span> <span class=\"ow\">in</span> <span class=\"n\">new_udc_list</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">udc</span> <span class=\"ow\">in</span> <span class=\"n\">selections</span><span class=\"p\">:</span>\n                    <span class=\"n\">udc_selection</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">udc</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">body</span> <span class=\"ow\">in</span> <span class=\"n\">body_list</span><span class=\"p\">:</span>\n                <span class=\"n\">include_object</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">material_properties</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                    <span class=\"k\">if</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">body</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"n\">no_vacuum</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">material_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;vacuum&quot;</span><span class=\"p\">:</span>\n                            <span class=\"n\">include_object</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                        <span class=\"k\">if</span> <span class=\"n\">no_pec</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pec&quot;</span><span class=\"p\">:</span>\n                            <span class=\"n\">include_object</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">if</span> <span class=\"n\">include_object</span><span class=\"p\">:</span>\n                    <span class=\"n\">selection_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">udm</span> <span class=\"ow\">in</span> <span class=\"n\">new_udc_list</span><span class=\"p\">:</span>\n                <span class=\"n\">udc_selection</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">udm</span><span class=\"p\">)</span>\n        <span class=\"n\">selection_list</span> <span class=\"o\">=</span> <span class=\"n\">selection_list</span> <span class=\"o\">+</span> <span class=\"n\">udc_selection</span>\n        <span class=\"n\">design</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Copy</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">selection_list</span><span class=\"p\">)])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">udc_selection</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_dictionary</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export3DModel</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"p\">,</span> <span class=\"n\">filePath</span><span class=\"p\">,</span> <span class=\"n\">fileFormat</span><span class=\"o\">=</span><span class=\"s2\">&quot;.step&quot;</span><span class=\"p\">,</span> <span class=\"n\">object_list</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">removed_objects</span><span class=\"o\">=</span><span class=\"p\">[]):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export the 3D model.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.5.0</span>\n<span class=\"sd\">           Use :func:`pyaedt.application.Analysis3D.modeler.export_3d_model` instead.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;`export3DModel` is deprecated. Use `export_3d_model` instead.&quot;</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">export_3d_model</span><span class=\"p\">(</span><span class=\"n\">fileName</span><span class=\"p\">,</span> <span class=\"n\">filePath</span><span class=\"p\">,</span> <span class=\"n\">fileFormat</span><span class=\"p\">,</span> <span class=\"n\">object_list</span><span class=\"p\">,</span> <span class=\"n\">removed_objects</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_3d_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"p\">,</span> <span class=\"n\">filePath</span><span class=\"p\">,</span> <span class=\"n\">fileFormat</span><span class=\"o\">=</span><span class=\"s2\">&quot;.step&quot;</span><span class=\"p\">,</span> <span class=\"n\">object_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">removed_objects</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Export the 3D model.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        fileName : str</span>\n<span class=\"sd\">            Name of the file.</span>\n<span class=\"sd\">        filePath : str</span>\n<span class=\"sd\">            Path for the file.</span>\n<span class=\"sd\">        fileFormat : str, optional</span>\n<span class=\"sd\">            Format of the file. The default is ``&quot;.step&quot;``.</span>\n<span class=\"sd\">        object_list : list, optional</span>\n<span class=\"sd\">            List of objects to export. The default is ``None``.</span>\n<span class=\"sd\">        removed_objects : list, optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Export</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">object_list</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">object_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">removed_objects</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">removed_objects</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">object_list</span><span class=\"p\">:</span>\n            <span class=\"n\">allObjects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n            <span class=\"k\">if</span> <span class=\"n\">removed_objects</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">rem</span> <span class=\"ow\">in</span> <span class=\"n\">removed_objects</span><span class=\"p\">:</span>\n                    <span class=\"n\">allObjects</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">rem</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Region&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">allObjects</span><span class=\"p\">:</span>\n                    <span class=\"n\">allObjects</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"s2\">&quot;Region&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">allObjects</span> <span class=\"o\">=</span> <span class=\"n\">object_list</span><span class=\"p\">[:]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exporting </span><span class=\"si\">{}</span><span class=\"s2\"> objects&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">allObjects</span><span class=\"p\">)))</span>\n        <span class=\"n\">major</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"n\">minor</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"c1\"># actual version supported by AEDT is 29.0</span>\n        <span class=\"k\">if</span> <span class=\"n\">fileFormat</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;.sm3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.sat&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.sab&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">major</span> <span class=\"o\">=</span> <span class=\"mi\">29</span>\n            <span class=\"n\">minor</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">stringa</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">allObjects</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:ExportParameters&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;AllowRegionDependentPartSelectionForPMLCreation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;AllowRegionSelectionForPMLCreation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">stringa</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;File Name:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">filePath</span><span class=\"p\">,</span> <span class=\"n\">fileName</span> <span class=\"o\">+</span> <span class=\"n\">fileFormat</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;Major Version:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">major</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Minor Version:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">minor</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Export</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_all_sources</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve all setup sources.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of str</span>\n<span class=\"sd\">            List of all setup sources.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.GetAllSources</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">GetAllSources</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_source_context</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sources</span><span class=\"p\">,</span> <span class=\"n\">number_of_modes</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the source context.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sources : list</span>\n<span class=\"sd\">            List of source names.</span>\n<span class=\"sd\">        number_of_modes : int, optional</span>\n<span class=\"sd\">            Number of modes. The default is ``1``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModule.SetSourceContexts</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">contexts</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">sources</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">s</span>\n            <span class=\"k\">if</span> <span class=\"n\">number_of_modes</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">number_of_modes</span><span class=\"p\">):</span>\n                    <span class=\"n\">value</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"n\">contexts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>  <span class=\"c1\"># use one based indexing</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">osolution</span><span class=\"o\">.</span><span class=\"n\">SetSourceContexts</span><span class=\"p\">(</span><span class=\"n\">contexts</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign a material to one or more objects.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        obj : str, list</span>\n<span class=\"sd\">            One or more objects to assign materials to.</span>\n<span class=\"sd\">        mat : str</span>\n<span class=\"sd\">            Material to assign. If this material is not present, it is</span>\n<span class=\"sd\">            created.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.AssignMaterial</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        The method :func:`assign_material` is used to assign a material to a list of objects.</span>\n\n<span class=\"sd\">        Open a design and create the objects.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; box1 = hfss.modeler.create_box([10, 10, 10], [4, 5, 5])</span>\n<span class=\"sd\">        &gt;&gt;&gt; box2 = hfss.modeler.create_box([0, 0, 0], [2, 3, 4])</span>\n<span class=\"sd\">        &gt;&gt;&gt; cylinder1 = hfss.modeler.create_cylinder(cs_axis=&quot;X&quot;, position=[5, 0, 0], radius=1, height=20)</span>\n<span class=\"sd\">        &gt;&gt;&gt; cylinder2 = hfss.modeler.create_cylinder(cs_axis=&quot;Z&quot;, position=[0, 0, 5], radius=1, height=10)</span>\n\n<span class=\"sd\">        Assign the material ``&quot;copper&quot;`` to all the objects.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; objects_list = [box1, box2, cylinder1, cylinder2]</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.assign_material(objects_list, &quot;copper&quot;)</span>\n\n<span class=\"sd\">        The method also accepts a list of object names.</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; obj_names_list = [box1.name, box2.name, cylinder1.name, cylinder2.name]</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.assign_material(obj_names_list, &quot;aluminum&quot;)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">selections</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">:</span>\n            <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">material_keys</span><span class=\"p\">[</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">_get_aedt_case_name</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_api</span><span class=\"p\">:</span>\n            <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">_aedmattolibrary</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">matobj</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">solve_inside</span> <span class=\"o\">=</span> <span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">is_dielectric</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">slice_sel</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">selections</span><span class=\"p\">))</span>\n            <span class=\"n\">num_objects</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">selections</span><span class=\"p\">)</span>\n            <span class=\"n\">remaining</span> <span class=\"o\">=</span> <span class=\"n\">num_objects</span>\n            <span class=\"k\">while</span> <span class=\"n\">remaining</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">objs</span> <span class=\"o\">=</span> <span class=\"n\">selections</span><span class=\"p\">[:</span><span class=\"n\">slice_sel</span><span class=\"p\">]</span>\n                <span class=\"n\">szSelections</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">)</span>\n                <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;AllowRegionDependentPartSelectionForPMLCreation:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;AllowRegionSelectionForPMLCreation:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">szSelections</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n                <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;MaterialValue:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s1\">&#39;&quot;</span><span class=\"si\">{}</span><span class=\"s1\">&quot;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;SolveInside:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">solve_inside</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ShellElement:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ShellElementThickness:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;nan &quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;IsMaterialEditable:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;UseMaterialAppearance:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;IsLightweight:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">AssignMaterial</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">name</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">material_appearance</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"o\">=</span> <span class=\"n\">solve_inside</span>\n                <span class=\"n\">remaining</span> <span class=\"o\">-=</span> <span class=\"n\">slice_sel</span>\n                <span class=\"k\">if</span> <span class=\"n\">remaining</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">selections</span> <span class=\"o\">=</span> <span class=\"n\">selections</span><span class=\"p\">[</span><span class=\"n\">slice_sel</span><span class=\"p\">:]</span>\n\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material does not exist.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_all_conductors_names</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve all conductors in the active design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of str</span>\n<span class=\"sd\">            List of all conductors.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetObjectsByMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"n\">cond</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">conductors</span>\n\n        <span class=\"n\">obj_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">obj_val</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">obj_val</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"ow\">in</span> <span class=\"n\">cond</span><span class=\"p\">:</span>\n                <span class=\"n\">obj_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">obj_val</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj_names</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_all_dielectrics_names</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve all dielectrics in the active design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of str</span>\n<span class=\"sd\">           List of all dielectrics.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetObjectsByMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"n\">diel</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">dielectrics</span>\n        <span class=\"n\">obj_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">obj_val</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">obj_val</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"ow\">in</span> <span class=\"n\">diel</span><span class=\"p\">:</span>\n                <span class=\"n\">obj_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">obj_val</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj_names</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_create_dataset_from_sherlock</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">material_string</span><span class=\"p\">,</span> <span class=\"n\">property_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Mass_Density&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">mats</span> <span class=\"o\">=</span> <span class=\"n\">material_string</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mat_temp</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">mats</span><span class=\"p\">]</span>\n        <span class=\"n\">nominal_id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">mat_temp</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">nominal_val</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">mat_temp</span><span class=\"p\">[</span><span class=\"n\">nominal_id</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">ds_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">property_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_dataset</span><span class=\"p\">(</span>\n            <span class=\"n\">ds_name</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;K&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;F&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">mat_temp</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">/</span> <span class=\"n\">nominal_val</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">mat_temp</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">nominal_val</span><span class=\"p\">,</span> <span class=\"s2\">&quot;$&quot;</span> <span class=\"o\">+</span> <span class=\"n\">ds_name</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assignmaterial_from_sherlock_files</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">csv_component</span><span class=\"p\">,</span> <span class=\"n\">csv_material</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign material to objects in a design based on a CSV file obtained from Sherlock.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        csv_component :  str</span>\n<span class=\"sd\">            Name of the CSV file containing the component properties, including the</span>\n<span class=\"sd\">            material name.</span>\n<span class=\"sd\">        csv_material : str</span>\n<span class=\"sd\">            Name of the CSV file containing the material properties.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.AssignMaterial</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">csv_material</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">csvfile</span><span class=\"p\">:</span>\n            <span class=\"n\">csv_input</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">csvfile</span><span class=\"p\">)</span>\n            <span class=\"n\">material_header</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">csv_input</span><span class=\"p\">)</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">csv_input</span><span class=\"p\">)</span>\n            <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">material_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">material_header</span><span class=\"p\">:</span>\n                <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">]</span>\n                <span class=\"n\">k</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">csv_component</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">csvfile</span><span class=\"p\">:</span>\n            <span class=\"n\">csv_input</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">csvfile</span><span class=\"p\">)</span>\n            <span class=\"n\">component_header</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">csv_input</span><span class=\"p\">)</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">csv_input</span><span class=\"p\">)</span>\n            <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">component_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">component_header</span><span class=\"p\">:</span>\n                <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">]</span>\n                <span class=\"n\">k</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">all_objs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">object_names</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">mat</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">list_mat_obj</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;COMP_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">rd</span> <span class=\"k\">for</span> <span class=\"n\">rd</span><span class=\"p\">,</span> <span class=\"n\">md</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">],</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material&quot;</span><span class=\"p\">])</span> <span class=\"k\">if</span> <span class=\"n\">md</span> <span class=\"o\">==</span> <span class=\"n\">mat</span>\n            <span class=\"p\">]</span>\n            <span class=\"n\">list_mat_obj</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">rd</span> <span class=\"k\">for</span> <span class=\"n\">rd</span><span class=\"p\">,</span> <span class=\"n\">md</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Ref Des&quot;</span><span class=\"p\">],</span> <span class=\"n\">component_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material&quot;</span><span class=\"p\">])</span> <span class=\"k\">if</span> <span class=\"n\">md</span> <span class=\"o\">==</span> <span class=\"n\">mat</span><span class=\"p\">]</span>\n            <span class=\"n\">list_mat_obj</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">mo</span> <span class=\"k\">for</span> <span class=\"n\">mo</span> <span class=\"ow\">in</span> <span class=\"n\">list_mat_obj</span> <span class=\"k\">if</span> <span class=\"n\">mo</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">list_mat_obj</span><span class=\"p\">:</span>\n                <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">checkifmaterialexists</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">newmat</span><span class=\"p\">:</span>\n                    <span class=\"n\">newmat</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">add_material</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">())</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Material Density&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;@&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material Density&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;,&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material Density&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                        <span class=\"n\">nominal_val</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_dataset_from_sherlock</span><span class=\"p\">(</span>\n                            <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material Density&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Mass_Density&quot;</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">mass_density</span> <span class=\"o\">=</span> <span class=\"n\">nominal_val</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">mass_density</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pwl(</span><span class=\"si\">{}</span><span class=\"s2\">, Temp)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material Density&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">mass_density</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Thermal Conductivity&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;@&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Conductivity&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                        <span class=\"ow\">and</span> <span class=\"s2\">&quot;,&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Conductivity&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                    <span class=\"p\">):</span>\n                        <span class=\"n\">nominal_val</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_dataset_from_sherlock</span><span class=\"p\">(</span>\n                            <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Conductivity&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Thermal_Conductivity&quot;</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">thermal_conductivity</span> <span class=\"o\">=</span> <span class=\"n\">nominal_val</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">thermal_conductivity</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pwl(</span><span class=\"si\">{}</span><span class=\"s2\">, Temp)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Thermal Conductivity&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">thermal_conductivity</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Material CTE&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;@&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material CTE&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;,&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material CTE&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                        <span class=\"n\">nominal_val</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_dataset_from_sherlock</span><span class=\"p\">(</span>\n                            <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material CTE&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&quot;CTE&quot;</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">thermal_expansion_coefficient</span> <span class=\"o\">=</span> <span class=\"n\">nominal_val</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">thermal_expansion_coefficient</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pwl(</span><span class=\"si\">{}</span><span class=\"s2\">, Temp)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Material CTE&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">thermal_expansion_coefficient</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Poisson Ratio&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;@&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Poisson Ratio&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;,&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Poisson Ratio&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                        <span class=\"n\">nominal_val</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_dataset_from_sherlock</span><span class=\"p\">(</span>\n                            <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Poisson Ratio&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Poisson_Ratio&quot;</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">poissons_ratio</span> <span class=\"o\">=</span> <span class=\"n\">nominal_val</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">poissons_ratio</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pwl(</span><span class=\"si\">{}</span><span class=\"s2\">, Temp)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Poisson Ratio&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">poissons_ratio</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Elastic Modulus&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;@&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Elastic Modulus&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;,&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Elastic Modulus&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                        <span class=\"n\">nominal_val</span><span class=\"p\">,</span> <span class=\"n\">dataset_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_create_dataset_from_sherlock</span><span class=\"p\">(</span>\n                            <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Elastic Modulus&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&quot;Youngs_Modulus&quot;</span>\n                        <span class=\"p\">)</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">youngs_modulus</span> <span class=\"o\">=</span> <span class=\"n\">nominal_val</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">youngs_modulus</span><span class=\"o\">.</span><span class=\"n\">thermalmodifier</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pwl(</span><span class=\"si\">{}</span><span class=\"s2\">, Temp)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">dataset_name</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">material_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;Elastic Modulus&quot;</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n                        <span class=\"n\">newmat</span><span class=\"o\">.</span><span class=\"n\">youngs_modulus</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assign_material</span><span class=\"p\">(</span><span class=\"n\">list_mat_obj</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">)</span>\n\n                <span class=\"k\">for</span> <span class=\"n\">obj_name</span> <span class=\"ow\">in</span> <span class=\"n\">list_mat_obj</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">obj_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">surface_material_name</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"p\">[</span><span class=\"n\">obj_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">surface_material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Steel-oxidised-surface&quot;</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">all_objs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ao</span> <span class=\"k\">for</span> <span class=\"n\">ao</span> <span class=\"ow\">in</span> <span class=\"n\">all_objs</span> <span class=\"k\">if</span> <span class=\"n\">ao</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_mat_obj</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cleanup_solution</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">variations</span><span class=\"o\">=</span><span class=\"s2\">&quot;All&quot;</span><span class=\"p\">,</span> <span class=\"n\">entire_solution</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">mesh</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">linked_data</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete a set of Solution Variations or part of them.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        variations : List, str, optional</span>\n<span class=\"sd\">            All variations to delete. Default is `&quot;All&quot;` which deletes all available solutions.</span>\n<span class=\"sd\">        entire_solution : bool, optional</span>\n<span class=\"sd\">            Either if delete entire Solution or part of it. If `True` other booleans will be ignored</span>\n<span class=\"sd\">            as solution will be entirely deleted.</span>\n<span class=\"sd\">        field : bool, optional</span>\n<span class=\"sd\">            Either if delete entire Fields of variation or not. Default is `True`.</span>\n<span class=\"sd\">        mesh : bool, optional</span>\n<span class=\"sd\">            Either if delete entire Mesh of variation or not. Default is `True`.</span>\n<span class=\"sd\">        linked_data : bool, optional</span>\n<span class=\"sd\">            Either if delete entire Linked Data of variation or not. Default is `True`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if Delete operation succeeded.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">variations</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">variations</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">variations</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">entire_solution</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">DeleteFullVariation</span><span class=\"p\">(</span><span class=\"n\">variations</span><span class=\"p\">,</span> <span class=\"n\">linked_data</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">field</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">DeleteFieldVariation</span><span class=\"p\">(</span><span class=\"n\">variations</span><span class=\"p\">,</span> <span class=\"n\">mesh</span><span class=\"p\">,</span> <span class=\"n\">linked_data</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">linked_data</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">DeleteLinkedDataVariation</span><span class=\"p\">(</span><span class=\"n\">variations</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_stackup_3d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a stackup 3D object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.stackup_3d.Stackup3D`</span>\n<span class=\"sd\">            ``True`` when delete operation is successful.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">st</span> <span class=\"o\">=</span> <span class=\"n\">Stackup3D</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">st</span>\n</pre></div>", "current_page_name": "_modules/pyaedt/application/Analysis3D", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}