{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "pyaedt.edb_core.edb_data.layer_data", "body": "<h1>Source code for pyaedt.edb_core.edb_data.layer_data</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n\n\n<div class=\"viewcode-block\" id=\"EDBLayer\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer/#pyaedt.edb_core.edb_data.layer_data.EDBLayer\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EDBLayer</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB functionalities for a layer.</span>\n\n<span class=\"sd\">    .. deprecated:: 0.6.5</span>\n<span class=\"sd\">        There is no need to use core_stackup anymore. You can instantiate new class stackup directly from edb class.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb = Edb(myedb, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb_layer = edb.core_stackup.stackup_layers.layers[&quot;TOP&quot;]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edblayer</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span> <span class=\"o\">=</span> <span class=\"n\">edblayer</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch_factor</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filling_material_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_negative_layer</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upper_elevation</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_top_bottom_association</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">_edb</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span> <span class=\"o\">=</span> <span class=\"n\">app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_enabled</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_top</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_bottom</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_side</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">init_vals</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_cloned_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_builder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_builder</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_logger</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get Edb Value.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer ID.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            ID of the layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetLayerId</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer type.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Type of the layer.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_layer_types_to_int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@layer_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve or update the material name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the material.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cloned_layer</span><span class=\"o\">.</span><span class=\"n\">GetMaterial</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span>\n\n    <span class=\"nd\">@material_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thickness_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Thickness value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Thickness value.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cloned_layer</span><span class=\"o\">.</span><span class=\"n\">GetThicknessValue</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span>\n\n    <span class=\"nd\">@thickness_value</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thickness_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">filling_material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Filling material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the filling material if it exists.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filling_material_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cloned_layer</span><span class=\"o\">.</span><span class=\"n\">GetFillMaterial</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filling_material_name</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@filling_material_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">filling_material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filling_material_name</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">negative_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Negative layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when negative, ``False`` otherwise..</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_negative_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetNegative</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_negative_layer</span>\n\n    <span class=\"nd\">@negative_layer</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">negative_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_negative_layer</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roughness_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Roughness enabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if the layer has roughness, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_enabled</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">IsRoughnessEnabled</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_enabled</span>\n\n    <span class=\"nd\">@roughness_enabled</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roughness_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_enabled</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.assign_roughness_model_top\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.assign_roughness_model_top/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.assign_roughness_model_top\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_roughness_model_top</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">,</span> <span class=\"n\">huray_radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5um&quot;</span><span class=\"p\">,</span> <span class=\"n\">huray_surface_ratio</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.9&quot;</span><span class=\"p\">,</span> <span class=\"n\">groisse_roughness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1um&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign roughness model on conductor top.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_type : str, optional</span>\n<span class=\"sd\">            Type of roughness model. The default is ``&quot;huray&quot;``. Options are ``&quot;huray&quot;``, ``&quot;groisse&quot;``.</span>\n<span class=\"sd\">        huray_radius : str, optional</span>\n<span class=\"sd\">            Radius of huray model. The default is ``&quot;0.5um&quot;``.</span>\n<span class=\"sd\">        huray_surface_ratio : str, float, optional.</span>\n<span class=\"sd\">            Surface ratio of huray model. The default is ``&quot;2.9&quot;``.</span>\n<span class=\"sd\">        groisse_roughness : str, float, optional</span>\n<span class=\"sd\">            Roughness of groisse model. The default is ``&quot;1um&quot;``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_top</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model_type</span><span class=\"p\">,</span> <span class=\"n\">huray_radius</span><span class=\"p\">,</span> <span class=\"n\">huray_surface_ratio</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;groisse&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_top</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model_type</span><span class=\"p\">,</span> <span class=\"n\">groisse_roughness</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_top</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.assign_roughness_model_bottom\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.assign_roughness_model_bottom/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.assign_roughness_model_bottom\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_roughness_model_bottom</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">,</span> <span class=\"n\">huray_radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5um&quot;</span><span class=\"p\">,</span> <span class=\"n\">huray_surface_ratio</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.9&quot;</span><span class=\"p\">,</span> <span class=\"n\">groisse_roughness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1um&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign roughness model on conductor bottom.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_type : str, optional</span>\n<span class=\"sd\">            Type of roughness model. The default is ``&quot;huray&quot;``. Options are ``&quot;huray&quot;``, ``&quot;groisse&quot;``.</span>\n<span class=\"sd\">        huray_radius : str, optional</span>\n<span class=\"sd\">            Radius of huray model. The default is ``&quot;0.5um&quot;``.</span>\n<span class=\"sd\">        huray_surface_ratio : str, float, optional.</span>\n<span class=\"sd\">            Surface ratio of huray model. The default is ``&quot;2.9&quot;``.</span>\n<span class=\"sd\">        groisse_roughness : str, float, optional</span>\n<span class=\"sd\">            Roughness of groisse model. The default is ``&quot;1um&quot;``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_bottom</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model_type</span><span class=\"p\">,</span> <span class=\"n\">huray_radius</span><span class=\"p\">,</span> <span class=\"n\">huray_surface_ratio</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;groisse&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_bottom</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model_type</span><span class=\"p\">,</span> <span class=\"n\">groisse_roughness</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_bottom</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.assign_roughness_model_side\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.assign_roughness_model_side/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.assign_roughness_model_side\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_roughness_model_side</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">,</span> <span class=\"n\">huray_radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5um&quot;</span><span class=\"p\">,</span> <span class=\"n\">huray_surface_ratio</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.9&quot;</span><span class=\"p\">,</span> <span class=\"n\">groisse_roughness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1um&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign roughness model on conductor side.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_type : str, optional</span>\n<span class=\"sd\">            Type of roughness model. The default is ``&quot;huray&quot;``. Options are ``&quot;huray&quot;``, ``&quot;groisse&quot;``.</span>\n<span class=\"sd\">        huray_radius : str, optional</span>\n<span class=\"sd\">            Radius of huray model. The default is ``&quot;0.5um&quot;``.</span>\n<span class=\"sd\">        huray_surface_ratio : str, float, optional.</span>\n<span class=\"sd\">            Surface ratio of huray model. The default is ``&quot;2.9&quot;``.</span>\n<span class=\"sd\">        groisse_roughness : str, float, optional</span>\n<span class=\"sd\">            Roughness of groisse model. The default is ``&quot;1um&quot;``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_side</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model_type</span><span class=\"p\">,</span> <span class=\"n\">huray_radius</span><span class=\"p\">,</span> <span class=\"n\">huray_surface_ratio</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;groisse&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_side</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">model_type</span><span class=\"p\">,</span> <span class=\"n\">groisse_roughness</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_side</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_bottom_association</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top/bottom association layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Top/bottom association layer, where:</span>\n\n<span class=\"sd\">            * 0 - Top associated</span>\n<span class=\"sd\">            * 1 - No association</span>\n<span class=\"sd\">            * 2 - Bottom associated</span>\n<span class=\"sd\">            * 4 - Number of top/bottom associations</span>\n<span class=\"sd\">            * -1 -  Undefined.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_top_bottom_association</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetTopBottomAssociation</span><span class=\"p\">())</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_top_bottom_association</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lower_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Lower elevation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Lower elevation.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cloned_layer</span><span class=\"o\">.</span><span class=\"n\">GetLowerElevation</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span>\n\n    <span class=\"nd\">@lower_elevation</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lower_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">upper_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Upper elevation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Upper elevation.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upper_elevation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cloned_layer</span><span class=\"o\">.</span><span class=\"n\">GetUpperElevation</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upper_elevation</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">etch_factor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Etch factor.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Etch factor if it exists, 0 otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch_factor</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cloned_layer</span><span class=\"o\">.</span><span class=\"n\">GetEtchFactor</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">())</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch_factor</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n    <span class=\"nd\">@etch_factor</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">etch_factor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n            <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch_factor</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layers</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.plot\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.plot/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.plot\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">plot</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">nets</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">show_legend</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">save_plot</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">outline</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">),</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Plot a layer to a Matplotlib 2D chart.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        nets : str, list, optional</span>\n<span class=\"sd\">            Name of the nets to include in the plot. If `None` all the nets will be considered.</span>\n<span class=\"sd\">        show_legend : bool, optional</span>\n<span class=\"sd\">            If `True` the legend is shown in the plot. (default)</span>\n<span class=\"sd\">            If `False` the legend is not shown.</span>\n<span class=\"sd\">        save_plot : str, optional</span>\n<span class=\"sd\">            If `None` the plot will be shown.</span>\n<span class=\"sd\">            If a file path is specified the plot will be saved to such file.</span>\n<span class=\"sd\">        outline : list, optional</span>\n<span class=\"sd\">            List of points of the outline to plot.</span>\n<span class=\"sd\">        size : tuple, optional</span>\n<span class=\"sd\">            Image size in pixel (width, height).</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n            <span class=\"n\">nets</span><span class=\"o\">=</span><span class=\"n\">nets</span><span class=\"p\">,</span>\n            <span class=\"n\">layers</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">color_by_net</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">show_legend</span><span class=\"o\">=</span><span class=\"n\">show_legend</span><span class=\"p\">,</span>\n            <span class=\"n\">save_plot</span><span class=\"o\">=</span><span class=\"n\">save_plot</span><span class=\"p\">,</span>\n            <span class=\"n\">outline</span><span class=\"o\">=</span><span class=\"n\">outline</span><span class=\"p\">,</span>\n            <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">size</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.init_vals\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.init_vals/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.init_vals\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">init_vals</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Initialize values.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetThicknessValue</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n                <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n            <span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch_factor</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetEtchFactor</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">())</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filling_material_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetFillMaterial</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_negative_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetNegative</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_enabled</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">IsRoughnessEnabled</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetMaterial</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_lower_elevation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetLowerElevation</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upper_elevation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetUpperElevation</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_top_bottom_association</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer</span><span class=\"o\">.</span><span class=\"n\">GetTopBottomAssociation</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.update_layer_vals\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.update_layer_vals/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.update_layer_vals\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_layer_vals</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">layerName</span><span class=\"p\">,</span>\n        <span class=\"n\">newLayer</span><span class=\"p\">,</span>\n        <span class=\"n\">etchMap</span><span class=\"p\">,</span>\n        <span class=\"n\">materialMap</span><span class=\"p\">,</span>\n        <span class=\"n\">fillMaterialMap</span><span class=\"p\">,</span>\n        <span class=\"n\">thicknessMap</span><span class=\"p\">,</span>\n        <span class=\"n\">negativeMap</span><span class=\"p\">,</span>\n        <span class=\"n\">roughnessMap</span><span class=\"p\">,</span>\n        <span class=\"n\">layerTypeMap</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update layer properties.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layerName :</span>\n\n<span class=\"sd\">        newLayer :</span>\n\n<span class=\"sd\">        materialMap :</span>\n\n<span class=\"sd\">        fillMaterialMap :</span>\n\n<span class=\"sd\">        thicknessMap :</span>\n\n<span class=\"sd\">        negativeMap :</span>\n\n<span class=\"sd\">        roughnessMap :</span>\n\n<span class=\"sd\">        layerTypeMap :</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Layer object.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"n\">layerName</span><span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetLayerType</span><span class=\"p\">(</span><span class=\"n\">layerTypeMap</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Layer </span><span class=\"si\">%s</span><span class=\"s2\"> has unknown type </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">layerName</span><span class=\"p\">,</span> <span class=\"n\">layerTypeMap</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">thicknessMap</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetThickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">thicknessMap</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">materialMap</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetMaterial</span><span class=\"p\">(</span><span class=\"n\">materialMap</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">fillMaterialMap</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetFillMaterial</span><span class=\"p\">(</span><span class=\"n\">fillMaterialMap</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">negativeMap</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetNegative</span><span class=\"p\">(</span><span class=\"n\">negativeMap</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">roughnessMap</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetRoughnessEnabled</span><span class=\"p\">(</span><span class=\"n\">roughnessMap</span><span class=\"p\">)</span>\n            <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_top</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_bottom</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_model_side</span><span class=\"p\">]</span>\n            <span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Top</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Side</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Bottom</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">mdl</span><span class=\"p\">,</span> <span class=\"n\">region</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">regions</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">mdl</span><span class=\"p\">:</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"n\">model_type</span> <span class=\"o\">=</span> <span class=\"n\">mdl</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">mdl</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">surface_ratio</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">mdl</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">HurrayRoughnessModel</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">surface_ratio</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">roughness</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">mdl</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">GroisseRoughnessModel</span><span class=\"p\">(</span><span class=\"n\">roughness</span><span class=\"p\">)</span>\n                <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetRoughnessModel</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">etchMap</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">layerTypeMap</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]:</span>\n            <span class=\"n\">etchVal</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">etchMap</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">etchVal</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">if</span> <span class=\"n\">etchVal</span> <span class=\"o\">!=</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactorEnabled</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">etchVal</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">etchVal</span><span class=\"p\">))</span>\n            <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactorEnabled</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">newLayer</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.set_elevation\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.set_elevation/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.set_elevation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_elevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">elev</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the layer elevation.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layer :</span>\n<span class=\"sd\">            Layer object.</span>\n<span class=\"sd\">        elev : float</span>\n<span class=\"sd\">            Layer elevation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Layer</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">SetLowerElevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">elev</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">layer</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayer.update_layers\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayer.update_layers/#pyaedt.edb_core.edb_data.layer_data.EDBLayer.update_layers\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update all layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">thisLC</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">())</span>\n        <span class=\"n\">layer_collection_mode</span> <span class=\"o\">=</span> <span class=\"n\">thisLC</span><span class=\"o\">.</span><span class=\"n\">GetMode</span><span class=\"p\">()</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">thisLC</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">AllLayerSet</span><span class=\"p\">)))</span>\n        <span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n        <span class=\"n\">newLayers</span> <span class=\"o\">=</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">]()</span>\n        <span class=\"n\">el</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                <span class=\"n\">newLayers</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">())</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">layerName</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">layerName</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_layer_vals</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">,</span>\n                    <span class=\"n\">newLayer</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_etch_factor</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_filling_material_name</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thickness</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_negative_layer</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roughness_enabled</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_elevation</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_elevation</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n            <span class=\"n\">newLayers</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n\n        <span class=\"n\">lcNew</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollection</span><span class=\"p\">()</span>\n        <span class=\"n\">newLayers</span><span class=\"o\">.</span><span class=\"n\">Reverse</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayers</span><span class=\"p\">(</span><span class=\"n\">newLayers</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to set new layers when updating the stackup information.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">SetMode</span><span class=\"p\">(</span><span class=\"n\">layer_collection_mode</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">SetLayerCollection</span><span class=\"p\">(</span><span class=\"n\">lcNew</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to set new layer stackup mode when updating the stackup information.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedblayers</span><span class=\"o\">.</span><span class=\"n\">_update_edb_objects</span><span class=\"p\">()</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"EDBLayers\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers/#pyaedt.edb_core.edb_data.layer_data.EDBLayers\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EDBLayers</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB functionalities for all primitive layers.</span>\n\n<span class=\"sd\">    .. deprecated:: 0.6.5</span>\n<span class=\"sd\">        There is no need to use core_stackup anymore. You can instantiate new class stackup directly from edb class.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    edb_stackup : :class:`pyaedt.edb_core.stackup.EdbStackup`</span>\n<span class=\"sd\">        Inherited AEDT object.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Edb</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb = Edb(myedb, edbversion=&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; edb_layers = edb.core_stackup.stackup_layers</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edb_stackup</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stackup_mode</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span> <span class=\"o\">=</span> <span class=\"n\">edb_stackup</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_collection</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_edb_objects</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layername</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve a layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layername : str</span>\n<span class=\"sd\">            Name of the layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            EDB Layer</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layername</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edb</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_edb</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_edb_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_builder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_builder</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_active_layout</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Dictionary of layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict[str, :class:`pyaedt.edb_core.edb_data.layer_data.EDBLayer`]</span>\n<span class=\"sd\">            Dictionary of layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_edb_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edb_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;EDB layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of EDB layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">allLayers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">AllLayerSet</span><span class=\"p\">)))</span>\n        <span class=\"n\">allStackuplayers</span> <span class=\"o\">=</span> <span class=\"nb\">filter</span><span class=\"p\">(</span>\n            <span class=\"k\">lambda</span> <span class=\"n\">lyr</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">DielectricLayer</span><span class=\"p\">)</span>\n            <span class=\"ow\">or</span> <span class=\"p\">(</span>\n                <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n                <span class=\"ow\">or</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">allLayers</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span>\n            <span class=\"n\">allStackuplayers</span><span class=\"p\">,</span>\n            <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">lyr</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">StackupLayer</span><span class=\"p\">:</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">GetLowerElevation</span><span class=\"p\">(),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">signal_layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Signal layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict[str, :class:`pyaedt.edb_core.edb_data.layer_data.EDBLayer`]</span>\n<span class=\"sd\">            Dictionary of signal layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_signal_layers</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"k\">for</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"n\">edblayer</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"n\">edblayer</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n                <span class=\"ow\">or</span> <span class=\"n\">edblayer</span><span class=\"o\">.</span><span class=\"n\">_layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n            <span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_signal_layers</span><span class=\"p\">[</span><span class=\"n\">layer</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">edblayer</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_signal_layers</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edb_layer_collection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Copy of EDB layer collection.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        class : Ansys.Ansoft.Edb.Cell.LayerCollection</span>\n<span class=\"sd\">            Collection of layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_collection</span><span class=\"p\">:</span>\n            <span class=\"n\">lc_readonly</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">()</span>\n            <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">lc_readonly</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">AllLayerSet</span><span class=\"p\">)))</span>\n            <span class=\"n\">layer_collection</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollection</span><span class=\"p\">()</span>\n\n            <span class=\"n\">flag_first_layer</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"n\">lyr_clone</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                <span class=\"n\">lyr_name</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"n\">flag_first_layer</span><span class=\"p\">:</span>\n                    <span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">lyr_clone</span><span class=\"p\">)</span>\n                    <span class=\"n\">flag_first_layer</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">AddLayerAbove</span><span class=\"p\">(</span><span class=\"n\">lyr_clone</span><span class=\"p\">,</span> <span class=\"n\">lyr_name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_collection</span> <span class=\"o\">=</span> <span class=\"n\">layer_collection</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_collection</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_collection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer collection.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Collection of layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_collection_mode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer collection mode.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollectionMode</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_types</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer types.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Types of layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stackup_mode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Stackup mode.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Type of the stackup mode, where:</span>\n\n<span class=\"sd\">            * 0 - Laminate</span>\n<span class=\"sd\">            * 1 - Overlapping</span>\n<span class=\"sd\">            * 2 - Multizone</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stackup_mode</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">GetMode</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stackup_mode</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">DielectricLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">AirlinesLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">ErrorsLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SymbolLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">MeasureLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">8</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">AssemblyLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">9</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SilkscreenLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SolderMaskLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">11</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SolderPasteLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">12</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">GlueLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">13</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">WirebondLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">14</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">UserLayer</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">16</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SIwaveHFSSSolverRegions</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">18</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">OutlineLayer</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_layer_types_to_int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layer_type</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">layer_type</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">0</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">DielectricLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">1</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">ConductingLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">2</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">AirlinesLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">3</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">ErrorsLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">4</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SymbolLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">5</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">MeasureLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">6</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">AssemblyLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">8</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SilkscreenLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">9</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SolderMaskLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">10</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SolderPasteLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">11</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">GlueLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">12</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">WirebondLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">13</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">UserLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">14</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">SIwaveHFSSSolverRegions</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">16</span>\n            <span class=\"k\">elif</span> <span class=\"n\">layer_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">OutlineLayer</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"mi\">18</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">layer_type</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">layer_type</span>\n\n    <span class=\"nd\">@stackup_mode</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">stackup_mode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">or</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection_mode</span><span class=\"o\">.</span><span class=\"n\">Laminate</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">SetMode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection_mode</span><span class=\"o\">.</span><span class=\"n\">Laminate</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">or</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection_mode</span><span class=\"o\">.</span><span class=\"n\">Overlapping</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">SetMode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection_mode</span><span class=\"o\">.</span><span class=\"n\">Overlapping</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"ow\">or</span> <span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection_mode</span><span class=\"o\">.</span><span class=\"n\">MultiZone</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">SetMode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection_mode</span><span class=\"o\">.</span><span class=\"n\">MultiZone</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_edb_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_layers</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()]</span> <span class=\"o\">=</span> <span class=\"n\">EDBLayer</span><span class=\"p\">(</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_stackup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">SetLayerCollection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_layer_collection</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_edb_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"EDBLayers.insert_layer_above\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above/#pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert_layer_above</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">layer_name</span><span class=\"p\">,</span>\n        <span class=\"n\">base_layer</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">fillMaterial</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;35um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">layerType</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">negative_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">roughness_enabled</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">etch_factor</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Insert a layer above the specified base layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layer_name : str</span>\n<span class=\"sd\">            Name of the layer to add.</span>\n<span class=\"sd\">        base_layer : str</span>\n<span class=\"sd\">            Name of the layer after which to add the new layer.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Name of the material. The default is ``&quot;copper&quot;``.</span>\n<span class=\"sd\">        fillMaterial : str, optional</span>\n<span class=\"sd\">            Name of the fill material. The default is ``&quot;&quot;``.)</span>\n<span class=\"sd\">        thickness : str, optional</span>\n<span class=\"sd\">            Thickness value, including units. The default is ``&quot;35um&quot;``.</span>\n<span class=\"sd\">        layerType :</span>\n<span class=\"sd\">            Type of the layer. The default is ``0``</span>\n<span class=\"sd\">            ``0``: Signal layer.</span>\n<span class=\"sd\">            ``1``: Dielectric layer.</span>\n<span class=\"sd\">            ``2``: Conducting plane layer.</span>\n<span class=\"sd\">            ``3``: Airline layer.</span>\n<span class=\"sd\">            ``4``: Error layer.</span>\n<span class=\"sd\">            ``5``: Symbol layer.</span>\n<span class=\"sd\">            ``6``: Measure layer.</span>\n<span class=\"sd\">            ``8``: Assembly layer.</span>\n<span class=\"sd\">            ``9``: Silkscreen layer.</span>\n<span class=\"sd\">            ``10``: Solder Mask layer.</span>\n<span class=\"sd\">            ``11``: Solder Paste layer.</span>\n<span class=\"sd\">        negative_layer : bool, optional</span>\n<span class=\"sd\">            ``True`` when negative, ``False`` otherwise.</span>\n<span class=\"sd\">        roughness_enabled : bool, optional</span>\n<span class=\"sd\">            ``True`` if the layer has roughness, ``False`` otherwise.</span>\n<span class=\"sd\">        etch_factor : optional</span>\n<span class=\"sd\">            Etch value if any. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.layer_data.EDBLayer`</span>\n<span class=\"sd\">            Layer Object for stackup layers.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">new_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">StackupLayer</span><span class=\"p\">(</span>\n            <span class=\"n\">layer_name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">edb_layer</span> <span class=\"o\">=</span> <span class=\"n\">EDBLayer</span><span class=\"p\">(</span><span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"p\">)</span>\n        <span class=\"n\">new_layer</span> <span class=\"o\">=</span> <span class=\"n\">edb_layer</span><span class=\"o\">.</span><span class=\"n\">update_layer_vals</span><span class=\"p\">(</span>\n            <span class=\"n\">layer_name</span><span class=\"p\">,</span>\n            <span class=\"n\">new_layer</span><span class=\"p\">,</span>\n            <span class=\"n\">etch_factor</span><span class=\"p\">,</span>\n            <span class=\"n\">material</span><span class=\"p\">,</span>\n            <span class=\"n\">fillMaterial</span><span class=\"p\">,</span>\n            <span class=\"n\">thickness</span><span class=\"p\">,</span>\n            <span class=\"n\">negative_layer</span><span class=\"p\">,</span>\n            <span class=\"n\">roughness_enabled</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edb_layer_collection</span><span class=\"o\">.</span><span class=\"n\">AddLayerAbove</span><span class=\"p\">(</span><span class=\"n\">new_layer</span><span class=\"p\">,</span> <span class=\"n\">base_layer</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">edb_layer</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_stackup</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layer_name</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayers.add_layer\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.add_layer/#pyaedt.edb_core.edb_data.layer_data.EDBLayers.add_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_layer</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">layerName</span><span class=\"p\">,</span>\n        <span class=\"n\">start_layer</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">fillMaterial</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;35um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">layerType</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">negative_layer</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">roughness_enabled</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">etchMap</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a layer after a specific layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layerName : str</span>\n<span class=\"sd\">            Name of the layer to add.</span>\n<span class=\"sd\">        start_layer : str, optional</span>\n<span class=\"sd\">            Name of the layer after which to add the new layer.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        material : str, optional</span>\n<span class=\"sd\">            Name of the material. The default is ``&quot;copper&quot;``.</span>\n<span class=\"sd\">        fillMaterial : str, optional</span>\n<span class=\"sd\">            Name of the fill material. The default is ``&quot;&quot;``.)</span>\n<span class=\"sd\">        thickness : str, optional</span>\n<span class=\"sd\">            Thickness value, including units. The default is ``&quot;35um&quot;``.</span>\n<span class=\"sd\">        layerType :</span>\n<span class=\"sd\">            Type of the layer. The default is ``0``</span>\n<span class=\"sd\">            ``0``: Signal layer.</span>\n<span class=\"sd\">            ``1``: Dielectric layer.</span>\n<span class=\"sd\">            ``2``: Conducting plane layer.</span>\n<span class=\"sd\">            ``3``: Airline layer.</span>\n<span class=\"sd\">            ``4``: Error layer.</span>\n<span class=\"sd\">            ``5``: Symbol layer.</span>\n<span class=\"sd\">            ``6``: Measure layer.</span>\n<span class=\"sd\">            ``8``: Assembly layer.</span>\n<span class=\"sd\">            ``9``: Silkscreen layer.</span>\n<span class=\"sd\">            ``10``: Solder Mask layer.</span>\n<span class=\"sd\">            ``11``: Solder Paste layer.</span>\n<span class=\"sd\">        negative_layer : bool, optional</span>\n<span class=\"sd\">            ``True`` when negative, ``False`` otherwise.</span>\n<span class=\"sd\">        roughness_enabled : bool, optional</span>\n<span class=\"sd\">            ``True`` if the layer has roughness, ``False`` otherwise.</span>\n<span class=\"sd\">        etchMap : optional</span>\n<span class=\"sd\">            Etch value if any. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.layer_data.EDBLayer`</span>\n<span class=\"sd\">            Layer Object for stackup layers. Boolean otherwise (True in case of success).</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">thisLC</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">()</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">thisLC</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">AllLayerSet</span><span class=\"p\">)))</span>\n        <span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n        <span class=\"n\">el</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"n\">lcNew</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollection</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">layers</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">start_layer</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"n\">layerName</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">))</span>\n                <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">StackupLayer</span><span class=\"p\">(</span>\n                    <span class=\"n\">layerName</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">),</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">layerName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">EDBLayer</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"p\">)</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">layerName</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update_layer_vals</span><span class=\"p\">(</span>\n                    <span class=\"n\">layerName</span><span class=\"p\">,</span>\n                    <span class=\"n\">newLayer</span><span class=\"p\">,</span>\n                    <span class=\"n\">etchMap</span><span class=\"p\">,</span>\n                    <span class=\"n\">material</span><span class=\"p\">,</span>\n                    <span class=\"n\">fillMaterial</span><span class=\"p\">,</span>\n                    <span class=\"n\">thickness</span><span class=\"p\">,</span>\n                    <span class=\"n\">negative_layer</span><span class=\"p\">,</span>\n                    <span class=\"n\">roughness_enabled</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">),</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetLowerElevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">))</span>\n\n                <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n                <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetLowerElevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">))</span>\n                <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n                <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                    <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">())</span>\n                    <span class=\"k\">continue</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"k\">if</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">start_layer</span><span class=\"p\">:</span>\n                    <span class=\"n\">original_layer</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                    <span class=\"n\">original_layer</span><span class=\"o\">.</span><span class=\"n\">SetLowerElevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">))</span>\n                    <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">original_layer</span><span class=\"p\">)</span>\n                    <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">original_layer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n                    <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">StackupLayer</span><span class=\"p\">(</span>\n                        <span class=\"n\">layerName</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">layerName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">EDBLayer</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"p\">)</span>\n                    <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">layerName</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update_layer_vals</span><span class=\"p\">(</span>\n                        <span class=\"n\">layerName</span><span class=\"p\">,</span>\n                        <span class=\"n\">newLayer</span><span class=\"p\">,</span>\n                        <span class=\"n\">etchMap</span><span class=\"p\">,</span>\n                        <span class=\"n\">material</span><span class=\"p\">,</span>\n                        <span class=\"n\">fillMaterial</span><span class=\"p\">,</span>\n                        <span class=\"n\">thickness</span><span class=\"p\">,</span>\n                        <span class=\"n\">negative_layer</span><span class=\"p\">,</span>\n                        <span class=\"n\">roughness_enabled</span><span class=\"p\">,</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_int_to_layer_types</span><span class=\"p\">(</span><span class=\"n\">layerType</span><span class=\"p\">),</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetLowerElevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">))</span>\n                    <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n                    <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n                    <span class=\"c1\"># newLayers.Add(original_layer)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                    <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">SetLowerElevation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_edb_value</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">))</span>\n                    <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n                    <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                    <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayerTop</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">())</span>\n                    <span class=\"k\">continue</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">SetLayerCollection</span><span class=\"p\">(</span><span class=\"n\">lcNew</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to set new layers when updating the stackup information.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_edb_objects</span><span class=\"p\">()</span>\n        <span class=\"n\">allLayers</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_collection</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">AllLayerSet</span><span class=\"p\">)))</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">layerName</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layerName</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">layerName</span> <span class=\"ow\">in</span> <span class=\"n\">allLayers</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayers.add_outline_layer\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.add_outline_layer/#pyaedt.edb_core.edb_data.layer_data.EDBLayers.add_outline_layer\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">add_outline_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">outline_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Outline&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Add an outline layer named ``&quot;Outline&quot;`` if it is not present.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            &quot;True&quot; if succeeded</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">outlineLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"o\">.</span><span class=\"n\">FindByName</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">(),</span> <span class=\"n\">outline_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">outlineLayer</span><span class=\"o\">.</span><span class=\"n\">IsNull</span><span class=\"p\">():</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_layer</span><span class=\"p\">(</span>\n                <span class=\"n\">outline_name</span><span class=\"p\">,</span>\n                <span class=\"n\">layerType</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layer_types</span><span class=\"o\">.</span><span class=\"n\">OutlineLayer</span><span class=\"p\">,</span>\n                <span class=\"n\">material</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"EDBLayers.remove_layer\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.remove_layer/#pyaedt.edb_core.edb_data.layer_data.EDBLayers.remove_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layername</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Remove a layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layername : str</span>\n<span class=\"sd\">            Name of the layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">thisLC</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">GetLayerCollection</span><span class=\"p\">())</span>\n        <span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">thisLC</span><span class=\"o\">.</span><span class=\"n\">Layers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerTypeSet</span><span class=\"o\">.</span><span class=\"n\">AllLayerSet</span><span class=\"p\">)))</span>\n        <span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n        <span class=\"n\">newLayers</span> <span class=\"o\">=</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">Layer</span><span class=\"p\">]()</span>\n        <span class=\"n\">el</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">for</span> <span class=\"n\">lyr</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">():</span>\n                <span class=\"n\">newLayers</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">())</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">layername</span> <span class=\"o\">==</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()):</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n                <span class=\"n\">newLayer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_object</span><span class=\"p\">[</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()]</span><span class=\"o\">.</span><span class=\"n\">set_elevation</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"n\">el</span> <span class=\"o\">+=</span> <span class=\"n\">newLayer</span><span class=\"o\">.</span><span class=\"n\">GetThickness</span><span class=\"p\">()</span>\n                <span class=\"n\">newLayers</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">newLayer</span><span class=\"p\">)</span>\n        <span class=\"n\">lcNew</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerCollection</span><span class=\"p\">()</span>\n        <span class=\"n\">newLayers</span><span class=\"o\">.</span><span class=\"n\">Reverse</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">lcNew</span><span class=\"o\">.</span><span class=\"n\">AddLayers</span><span class=\"p\">(</span><span class=\"n\">newLayers</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pedbstackup</span><span class=\"o\">.</span><span class=\"n\">_active_layout</span><span class=\"o\">.</span><span class=\"n\">SetLayerCollection</span><span class=\"p\">(</span><span class=\"n\">lcNew</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to set new layers when updating the stackup information.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_edb_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"LayerEdbClass\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.LayerEdbClass/#pyaedt.edb_core.edb_data.layer_data.LayerEdbClass\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">LayerEdbClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;New Edb Layer management class. Replaces EDBLayer.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pclass</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span> <span class=\"o\">=</span> <span class=\"n\">pclass</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edb</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_edb_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_edb_layer_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">Clone</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_stackup_layer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Determine whether this layer is a stackup layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            True if this layer is a stackup layer, False otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">IsStackupLayer</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve color of the layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        tuple</span>\n<span class=\"sd\">            RGB.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer_color</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetColor</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">layer_color</span><span class=\"o\">.</span><span class=\"n\">Item1</span><span class=\"p\">,</span> <span class=\"n\">layer_color</span><span class=\"o\">.</span><span class=\"n\">Item2</span><span class=\"p\">,</span> <span class=\"n\">layer_color</span><span class=\"o\">.</span><span class=\"n\">Item3</span>\n\n    <span class=\"nd\">@color</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rgb</span><span class=\"p\">):</span>\n        <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetColor</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">rgb</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve name of the layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_name&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve type of the layer.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;signal&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetLayerType</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">DielectricLayer</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;dielectric&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n    <span class=\"nd\">@type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">new_type</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_type</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"n\">new_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">SetLayerType</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">SignalLayer</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">new_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;dielectric&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">SetLayerType</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">LayerType</span><span class=\"o\">.</span><span class=\"n\">DielectricLayer</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get/Set the material loss_tangent.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetMaterial</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@material</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetMaterial</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conductivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the material conductivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">conductivity</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">permittivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the material permittivity.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">permittivity</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">loss_tangent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the material loss_tangent.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">materials</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">loss_tangent</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dielectric_fill</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve material name of the layer dielectric fill.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetFillMaterial</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n    <span class=\"nd\">@dielectric_fill</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dielectric_fill</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetFillMaterial</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve thickness of the layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stackup_layer</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetThicknessValue</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@thickness</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">thickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stackup_layer</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetThickness</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">etch_factor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve etch factor of this layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">GetEtchFactor</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">ToDouble</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@etch_factor</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">etch_factor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stackup_layer</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactorEnabled</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactorEnabled</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetEtchFactor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_edb_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roughness_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Determine whether roughness is enabled on this layer.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stackup_layer</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span><span class=\"o\">.</span><span class=\"n\">IsRoughnessEnabled</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@roughness_enabled</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roughness_enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">set_enable</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stackup_layer</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"n\">set_enable</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetRoughnessEnabled</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assign_roughness_model</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetRoughnessEnabled</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"LayerEdbClass.assign_roughness_model\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.layer_data.LayerEdbClass.assign_roughness_model/#pyaedt.edb_core.edb_data.layer_data.LayerEdbClass.assign_roughness_model\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">assign_roughness_model</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">huray_radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">huray_surface_ratio</span><span class=\"o\">=</span><span class=\"s2\">&quot;2.9&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">groisse_roughness</span><span class=\"o\">=</span><span class=\"s2\">&quot;1um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">apply_on_surface</span><span class=\"o\">=</span><span class=\"s2\">&quot;all&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign roughness model on this layer.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_type : str, optional</span>\n<span class=\"sd\">            Type of roughness model. The default is ``&quot;huray&quot;``. Options are ``&quot;huray&quot;``, ``&quot;groisse&quot;``.</span>\n<span class=\"sd\">        huray_radius : str, optional</span>\n<span class=\"sd\">            Radius of huray model. The default is ``&quot;0.5um&quot;``.</span>\n<span class=\"sd\">        huray_surface_ratio : str, float, optional.</span>\n<span class=\"sd\">            Surface ratio of huray model. The default is ``&quot;2.9&quot;``.</span>\n<span class=\"sd\">        groisse_roughness : str, float, optional</span>\n<span class=\"sd\">            Roughness of groisse model. The default is ``&quot;1um&quot;``.</span>\n<span class=\"sd\">        apply_on_surface : str, optional.</span>\n<span class=\"sd\">            Where to assign roughness model. The default is ``&quot;all&quot;``. Options are ``&quot;top&quot;``, ``&quot;bottom&quot;``,</span>\n<span class=\"sd\">             ``&quot;side&quot;``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stackup_layer</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">radius</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_edb_value</span><span class=\"p\">(</span><span class=\"n\">huray_radius</span><span class=\"p\">)</span>\n        <span class=\"n\">surface_ratio</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_edb_value</span><span class=\"p\">(</span><span class=\"n\">huray_surface_ratio</span><span class=\"p\">)</span>\n        <span class=\"n\">groisse_roughness</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_edb_value</span><span class=\"p\">(</span><span class=\"n\">groisse_roughness</span><span class=\"p\">)</span>\n        <span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">apply_on_surface</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;all&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Top</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Side</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Bottom</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">apply_on_surface</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;top&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Top</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">apply_on_surface</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;bottom&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Bottom</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">apply_on_surface</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;side&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">regions</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">RoughnessModel</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"o\">.</span><span class=\"n\">Side</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n\n        <span class=\"n\">layer_clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_layer</span>\n        <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">regions</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">model_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;huray&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">HurrayRoughnessModel</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">surface_ratio</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_pedb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Cell</span><span class=\"o\">.</span><span class=\"n\">GroisseRoughnessModel</span><span class=\"p\">(</span><span class=\"n\">groisse_roughness</span><span class=\"p\">)</span>\n            <span class=\"n\">layer_clone</span><span class=\"o\">.</span><span class=\"n\">SetRoughnessModel</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pclass</span><span class=\"o\">.</span><span class=\"n\">_set_layout_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_clone</span><span class=\"p\">,</span> <span class=\"s2\">&quot;change_attribute&quot;</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/edb_core/edb_data/layer_data", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}