{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "pyaedt.modeler.advanced_cad.parts", "body": "<h1>Source code for pyaedt.modeler.advanced_cad.parts</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.geometry_operators</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryOperators</span>\n\n\n<div class=\"viewcode-block\" id=\"Part\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Part/#pyaedt.modeler.advanced_cad.parts.Part\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Part</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages 3D component placement and definition.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    part_folder : str</span>\n<span class=\"sd\">        Path to the folder with the A3DCOMP files.</span>\n<span class=\"sd\">    part_dict : dict</span>\n<span class=\"sd\">        Defines relevant properties of the class with the following keywords:</span>\n<span class=\"sd\">        * &#39;comp_name&#39;: str, Name of the A3DCOMP file.</span>\n<span class=\"sd\">        * &#39;offset&#39;: list or str, Offset coordinate system definition relative to the parent.</span>\n<span class=\"sd\">        * &#39;rotation_cs&#39;: list or str, Rotation coordinate system relative to the parent.</span>\n<span class=\"sd\">        * &#39;rotation&#39;: str or numeric, Rotation angle.</span>\n<span class=\"sd\">        * &#39;compensation_angle&#39;: str or numeric, Initial angle.</span>\n<span class=\"sd\">        * &#39;rotation_axis&#39;: str, Rotation axis (``&quot;X&quot;``, ``&quot;Y&quot;``, or ``&quot;Z&quot;``).</span>\n<span class=\"sd\">        * &#39;duplicate_number&#39;: str or int, Number of instances for linear duplication.</span>\n<span class=\"sd\">        * &#39;duplicate_vector&#39;: list, Vector for duplication relative to the parent coordinate system.</span>\n<span class=\"sd\">    parent :  str</span>\n<span class=\"sd\">        The default is ``None``.</span>\n<span class=\"sd\">    name : str, optional</span>\n<span class=\"sd\">        Name of the A3DCOMP file without the extension. The default is ``None``.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># List of known keys for a part and default values:</span>\n    <span class=\"n\">allowed_keys</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;comp_name&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># *.a3dcomp file name</span>\n        <span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;rotation&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;compensation_angle&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;rotation_axis&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;tire_radius&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;duplicate_number&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;duplicate_vector&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;antenna_type&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># Antenna only</span>\n        <span class=\"s2\">&quot;ffd_name&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># Antenna only</span>\n        <span class=\"s2\">&quot;mode&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># Antenna only</span>\n        <span class=\"s2\">&quot;aedt_name&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;beamwidth_elevation&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># Antenna only</span>\n        <span class=\"s2\">&quot;beamwidth_azimuth&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># Antenna only</span>\n        <span class=\"s2\">&quot;polarization&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>  <span class=\"c1\"># Antenna only</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">part_folder</span><span class=\"p\">,</span> <span class=\"n\">part_dict</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n\n        <span class=\"c1\"># Default values:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n        <span class=\"c1\"># Extract the 3D component name and part folder</span>\n        <span class=\"c1\"># from the file name.</span>\n        <span class=\"c1\"># Use this as the default value for comp_name.  Ensure that the correct extension is used.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;part_folder&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">part_folder</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">Part</span><span class=\"o\">.</span><span class=\"n\">allowed_keys</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">part_dict</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">part_dict</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Part</span><span class=\"o\">.</span><span class=\"n\">allowed_keys</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_motion</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">parent</span><span class=\"p\">:</span>  <span class=\"c1\"># Inherit _motion directly from parent.</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_motion</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">motion</span>\n\n        <span class=\"c1\"># make sure self._name is unique if it is not passed as an argument.</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>  <span class=\"c1\"># Part name should be unique. No checking here.</span>\n        <span class=\"k\">elif</span> <span class=\"s2\">&quot;name&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">part_dict</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">part_dict</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;radar&quot;</span>  <span class=\"c1\"># TODO: Need to fix this!</span>\n\n        <span class=\"c1\"># Update self._compdef from the library definition in the *.json file.</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">kw</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"n\">part_dict</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">kw</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">kw</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key &quot;</span> <span class=\"o\">+</span> <span class=\"n\">kw</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; not allowed.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Instantiate yaw, pitch and roll.  Might want to change</span>\n        <span class=\"c1\"># how this is handled. Make &quot;rotation&quot; a list instead of</span>\n        <span class=\"c1\"># using .yaw, .pitch, .roll properties?</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>  <span class=\"c1\"># [X, Y, Z] rotation Boolean</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation_axis&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">rotations_axis</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation_axis&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation&quot;</span><span class=\"p\">]:</span>\n                <span class=\"n\">rotations</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">rotations</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">rotations</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">rotations_axis</span><span class=\"p\">[</span><span class=\"n\">rotations</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;x&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># roll</span>\n                    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"k\">elif</span> <span class=\"n\">rotations_axis</span><span class=\"p\">[</span><span class=\"n\">rotations</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># pitch</span>\n                    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"k\">elif</span> <span class=\"n\">rotations_axis</span><span class=\"p\">[</span><span class=\"n\">rotations</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;z&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># yaw</span>\n                    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span> <span class=\"o\">=</span> <span class=\"n\">y</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span> <span class=\"o\">=</span> <span class=\"n\">p</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span> <span class=\"o\">=</span> <span class=\"n\">r</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">cs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">cs</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Global&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">cs</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">i</span> <span class=\"ow\">is</span> <span class=\"nb\">str</span> <span class=\"k\">else</span> <span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">cs</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n\n<div class=\"viewcode-block\" id=\"Part.zero_offset\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Part.zero_offset/#pyaedt.modeler.advanced_cad.parts.Part.zero_offset\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">zero_offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">kw</span><span class=\"p\">):</span>  <span class=\"c1\"># Returns True if cs at kw is at [0, 0, 0]</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Check if the coordinate system defined by kw is [0, 0, 0].</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        kw : str</span>\n<span class=\"sd\">             Coordinate system for kw. Options are ``offset`` and ``rotation_cs``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">kw</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">kw</span><span class=\"p\">]:</span>\n                <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">is_small</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">kw</span><span class=\"p\">]]</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">file_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Antenna file name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full name of the A3DCOMP file.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;part_folder&quot;</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;comp_name&quot;</span><span class=\"p\">])</span>\n\n    <span class=\"c1\"># Create a unique coordinate system name for the part.</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cs_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Coordinate system name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the coordinate system.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_motion</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zero_offset</span><span class=\"p\">(</span><span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zero_offset</span><span class=\"p\">(</span><span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_cs&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span>\n\n    <span class=\"c1\"># Define the variable names for angles in the app:</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Yaw variable name. Yaw is the rotation about the object&#39;s Z-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            ame of the yaw variable.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_yaw&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Pitch variable name. Pitch is the rotation about the object&#39;s Y-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the pitch variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_pitch&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Roll variable name. Roll is the rotation about the object&#39;s X-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">             Name of the roll variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_roll&quot;</span>\n\n    <span class=\"c1\"># Always return the local origin as a list:</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">local_origin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Local part offset values.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of offset values for the local part.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zero_offset</span><span class=\"p\">(</span><span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">_local_units</span><span class=\"p\">:</span>\n                    <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">_local_units</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">modeler_units</span>\n                <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;offset&quot;</span><span class=\"p\">]]</span>\n\n                <span class=\"k\">return</span> <span class=\"n\">offset</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rotate_origin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Origin rotation list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of offset values for the rotation.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">zero_offset</span><span class=\"p\">(</span><span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">local_origin</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;rotation_cs&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_do_rotate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>  <span class=\"c1\"># True if any rotation angles are non-zero or &#39;rotation_cs&#39; is defined.</span>\n        <span class=\"k\">return</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_do_offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>  <span class=\"c1\"># True if any rotation angles are non-zero.</span>\n        <span class=\"k\">return</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">numeric_cs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">local_origin</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Allow expressions should be valid angle as either string</span>\n    <span class=\"c1\"># or numerical value.</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Yaw variable value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the yaw variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span>\n\n    <span class=\"nd\">@yaw</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">yaw</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span> <span class=\"o\">=</span> <span class=\"n\">yaw</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Pitch variable value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value of the pitch variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span>\n\n    <span class=\"nd\">@pitch</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pitch</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span> <span class=\"o\">=</span> <span class=\"n\">pitch</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Roll variable value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value of the roll variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span>\n\n    <span class=\"nd\">@roll</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">roll</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span> <span class=\"o\">=</span> <span class=\"n\">roll</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Part name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the part.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span>\n\n<div class=\"viewcode-block\" id=\"Part.set_relative_cs\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Part.set_relative_cs/#pyaedt.modeler.advanced_cad.parts.Part.set_relative_cs\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_relative_cs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a parametric coordinate system.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># Set x, y, z offset variables in app. But check first to see if the CS</span>\n        <span class=\"c1\"># has already been defined.</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetCoordinateSystems</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">x_pointing</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">y_pointing</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span>\n                <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">local_origin</span><span class=\"p\">,</span>\n                <span class=\"n\">x_pointing</span><span class=\"o\">=</span><span class=\"n\">x_pointing</span><span class=\"p\">,</span>\n                <span class=\"n\">y_pointing</span><span class=\"o\">=</span><span class=\"n\">y_pointing</span><span class=\"p\">,</span>\n                <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">,</span>\n                <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;axis&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rot_cs_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Rotation coordinate system name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the rotation coordinate system.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_rot_cs&quot;</span>\n\n<div class=\"viewcode-block\" id=\"Part.do_rotate\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Part.do_rotate/#pyaedt.modeler.advanced_cad.parts.Part.do_rotate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">do_rotate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">aedt_object</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set the rotation coordinate system relative to the parent coordinate system.</span>\n\n<span class=\"sd\">        This method should only be called if there is rotation in the component.</span>\n<span class=\"sd\">        The rotation coordinate system is offset from the parent coordinate system.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">            HFSS application instance.</span>\n<span class=\"sd\">        aedt_object : str</span>\n<span class=\"sd\">            Name of the HFSS design.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">x_pointing</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">y_pointing</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span>\n            <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rotate_origin</span><span class=\"p\">,</span>\n            <span class=\"n\">x_pointing</span><span class=\"o\">=</span><span class=\"n\">x_pointing</span><span class=\"p\">,</span>\n            <span class=\"n\">y_pointing</span><span class=\"o\">=</span><span class=\"n\">y_pointing</span><span class=\"p\">,</span>\n            <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">,</span>\n            <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;axis&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_cs_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n            <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Z&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n            <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot_axis</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n            <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">aedt_object</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Part.insert\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Part.insert/#pyaedt.modeler.advanced_cad.parts.Part.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Insert 3D component in AEDT.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of inserted object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">aedt_objects</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># TODO: Why the inconsistent syntax for cs commands?</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_do_offset</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_relative_cs</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>  <span class=\"c1\"># Create coordinate system, if needed.</span>\n            <span class=\"n\">comp_obj</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">insert_3d_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"n\">targetCS</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">)</span>\n            <span class=\"n\">aedt_objects</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">comp_obj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">comp_obj</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">insert_3d_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"n\">targetCS</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">)</span>\n            <span class=\"n\">aedt_objects</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">comp_obj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_do_rotate</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_rotate</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">aedt_objects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n        <span class=\"c1\"># Duplication occurs in parent coordinate system.</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;duplicate_vector&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">d_vect</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;duplicate_vector&quot;</span><span class=\"p\">]]</span>\n            <span class=\"n\">duplicate_result</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_along_line</span><span class=\"p\">(</span>\n                <span class=\"n\">aedt_objects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">d_vect</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"s2\">&quot;duplicate_number&quot;</span><span class=\"p\">]),</span> <span class=\"n\">is_3d_comp</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">duplicate_result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n                <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">duplicate_result</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                    <span class=\"n\">aedt_objects</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">aedt_objects</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Antenna\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Antenna/#pyaedt.modeler.advanced_cad.parts.Antenna\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Antenna</span><span class=\"p\">(</span><span class=\"n\">Part</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Manages antennas.</span>\n\n<span class=\"sd\">    This class is derived from :class:`Part`.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    root_folder : str</span>\n<span class=\"sd\">        Root directory</span>\n<span class=\"sd\">    ant_dict : dict</span>\n<span class=\"sd\">        Antenna dictionary</span>\n<span class=\"sd\">    parent : str, optional</span>\n<span class=\"sd\">        The default is ``None``.</span>\n<span class=\"sd\">    name : str, optional</span>\n<span class=\"sd\">        The default is ``None``.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">root_folder</span><span class=\"p\">,</span> <span class=\"n\">ant_dict</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Antenna</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">root_folder</span><span class=\"p\">,</span> <span class=\"n\">ant_dict</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_antenna_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;antenna_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;parametric&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">SbrAntennas</span><span class=\"o\">.</span><span class=\"n\">ParametricBeam</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;antenna_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ffd&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;file&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">params</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Multi-part component parameters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            Dictionary of parameters for a multi-part component.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;antenna_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;parametric&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"s2\">&quot;Vertical BeamWidth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;beamwidth_elevation&quot;</span><span class=\"p\">]</span>\n            <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"s2\">&quot;Horizontal BeamWidth&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;beamwidth_azimuth&quot;</span><span class=\"p\">]</span>\n            <span class=\"n\">p</span><span class=\"p\">[</span><span class=\"s2\">&quot;Polarization&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;polarization&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">p</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">target_cs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">target_cs</span><span class=\"p\">:</span>\n            <span class=\"n\">target_cs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">units</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">_local_units</span><span class=\"p\">:</span>\n                <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">_local_units</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">units</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;ffd_name&quot;</span><span class=\"p\">]:</span>\n            <span class=\"n\">ffd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;part_folder&quot;</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;ffd_name&quot;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.ffd&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">create_sbr_file_based_antenna</span><span class=\"p\">(</span>\n                <span class=\"n\">ffd_full_path</span><span class=\"o\">=</span><span class=\"n\">ffd</span><span class=\"p\">,</span> <span class=\"n\">model_units</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">,</span> <span class=\"n\">target_cs</span><span class=\"o\">=</span><span class=\"n\">target_cs</span><span class=\"p\">,</span> <span class=\"n\">antenna_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">create_sbr_antenna</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_antenna_type</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">),</span>\n                <span class=\"n\">model_units</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">,</span>\n                <span class=\"n\">parameters_dict</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">,</span>\n                <span class=\"n\">target_cs</span><span class=\"o\">=</span><span class=\"n\">target_cs</span><span class=\"p\">,</span>\n                <span class=\"n\">antenna_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">a</span>\n\n<div class=\"viewcode-block\" id=\"Antenna.insert\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.modeler.advanced_cad.parts.Antenna.insert/#pyaedt.modeler.advanced_cad.parts.Antenna.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Insert antenna in HFSS SBR+.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">        units :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the inserted object.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_do_offset</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_relative_cs</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n            <span class=\"n\">antenna_object</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">target_cs</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">antenna_object</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">target_cs</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multiparts</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_do_rotate</span> <span class=\"ow\">and</span> <span class=\"n\">antenna_object</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">do_rotate</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">antenna_object</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">antenna_object</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/advanced_cad/parts", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}