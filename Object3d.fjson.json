{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.Object3d", "body": "<h1>Source code for pyaedt.modeler.Object3d</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains these classes: `Components3DLayout`,`CircuitComponent&#39;,</span>\n<span class=\"sd\">`EdgePrimitive`, `EdgeTypePrimitive`, `FacePrimitive`, `Geometries3DLayout`,</span>\n<span class=\"sd\">`Nets3DLayout`, `Objec3DLayout`, `Object3d`, `Padstack`, `PDSHole`, `PDSLayer`,</span>\n<span class=\"sd\">`Pins3DLayout&#39;, and `VertexPrimitive`.</span>\n\n<span class=\"sd\">This module provides methods and data structures for managing all properties of</span>\n<span class=\"sd\">objects (points, lines, sheeets, and solids) within the AEDT 3D Modeler.</span>\n\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">string</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.application.Variables</span> <span class=\"kn\">import</span> <span class=\"n\">decompose_variable_value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">AEDT_UNITS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">MILS2METER</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.GeometryOperators</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryOperators</span>\n\n<span class=\"n\">clamp</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">minn</span><span class=\"p\">,</span> <span class=\"n\">maxn</span><span class=\"p\">:</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">maxn</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">),</span> <span class=\"n\">minn</span><span class=\"p\">)</span>\n\n<span class=\"n\">rgb_color_codes</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;Black&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Green&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;White&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Red&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Lime&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Blue&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Yellow&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Cyan&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Magenta&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Silver&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">192</span><span class=\"p\">,</span> <span class=\"mi\">192</span><span class=\"p\">,</span> <span class=\"mi\">192</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Gray&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Maroon&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Olive&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Purple&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Teal&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;Navy&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">184</span><span class=\"p\">,</span> <span class=\"mi\">115</span><span class=\"p\">,</span> <span class=\"mi\">51</span><span class=\"p\">),</span>\n    <span class=\"s2\">&quot;stainless steel&quot;</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">224</span><span class=\"p\">,</span> <span class=\"mi\">223</span><span class=\"p\">,</span> <span class=\"mi\">219</span><span class=\"p\">),</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_arg2dict</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"n\">dict_out</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;NAME:DimUnits&quot;</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;NAME:Point&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"n\">dict_out</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]][</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n                <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]]]</span>\n                <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]]</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n    <span class=\"k\">elif</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][:</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;NAME:&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">top_key</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span>\n        <span class=\"n\">dict_in</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][:</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n                <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))</span> <span class=\"o\">==</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;&lt;type &#39;List&#39;&gt;&quot;</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">_arg2dict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]),</span> <span class=\"n\">dict_in</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">elif</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">:]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]))</span> <span class=\"o\">==</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;&lt;type &#39;List&#39;&gt;&quot;</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">dict_in</span><span class=\"p\">:</span>\n                        <span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]))</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"n\">dict_in</span><span class=\"p\">:</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                            <span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                        <span class=\"k\">else</span><span class=\"p\">:</span>\n                            <span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]]</span>\n                            <span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">dict_in</span><span class=\"p\">[</span><span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Incorrect data argument format&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">top_key</span> <span class=\"ow\">in</span> <span class=\"n\">dict_out</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">top_key</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n                <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">top_key</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">dict_in</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">top_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">top_key</span><span class=\"p\">],</span> <span class=\"n\">dict_in</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">dict_out</span><span class=\"p\">[</span><span class=\"n\">top_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dict_in</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Incorrect data argument format&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">arg_out</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    d :</span>\n\n<span class=\"sd\">    arg_out :</span>\n\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;_pyaedt&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">k</span><span class=\"p\">:</span>\n            <span class=\"k\">continue</span>\n        <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Point&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;DimUnits&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n                <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n                    <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">e</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n                    <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n                <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Range&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n                <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n                    <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">e</span><span class=\"p\">])</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n            <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n            <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n            <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n                <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n                <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n                <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"n\">EdgePrimitive</span> <span class=\"ow\">or</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"n\">FacePrimitive</span> <span class=\"ow\">or</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"n\">VertexPrimitive</span><span class=\"p\">:</span>\n                <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">arg_out</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_uname</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Append a 6-digit hash code to a specified name.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    name : str</span>\n<span class=\"sd\">        Name to append the hash code to. The default is ``&quot;NewObject_&quot;``.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    str</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">char_set</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_uppercase</span> <span class=\"o\">+</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">digits</span>\n    <span class=\"n\">unique_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"n\">char_set</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"n\">unique_name</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;NewObject_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">unique_name</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_to_boolean</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Retrieve the Boolean value of the provided input.</span>\n\n<span class=\"sd\">        If the value is a Boolean, return the value.</span>\n<span class=\"sd\">        Otherwise check to see if the value is in</span>\n<span class=\"sd\">        [&quot;false&quot;, &quot;f&quot;, &quot;no&quot;, &quot;n&quot;, &quot;none&quot;, &quot;0&quot;, &quot;[]&quot;, &quot;{}&quot;, &quot;&quot; ]</span>\n<span class=\"sd\">        and return True if the value is not in the list.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    val : bool or str</span>\n<span class=\"sd\">        Input value to test for True/False condition.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    bool</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span> <span class=\"ow\">or</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">val</span>\n\n    <span class=\"n\">false_items</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;false&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;f&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;no&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;n&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;none&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;[]&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"ow\">not</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"n\">false_items</span>\n\n\n<span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Concatenate a specified units string to a numerical input.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    value : str or number</span>\n<span class=\"sd\">        Valid expression string in the AEDT modeler. For example, ``&quot;5mm&quot;``.</span>\n<span class=\"sd\">    units : str</span>\n<span class=\"sd\">        Valid units string in the AEDT modeler. For example, ``&quot;mm&quot;``.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    str</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">units</span>\n    <span class=\"k\">except</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EdgeTypePrimitive</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Provides common methods for EdgePrimitive and FacePrimitive.&quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">fillet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">setback</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a fillet to the selected edge.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        radius : float, optional</span>\n<span class=\"sd\">            Radius of the fillet. The default is ``0.1``.</span>\n<span class=\"sd\">        setback : float, optional</span>\n<span class=\"sd\">            Setback value for the file. The default is ``0.0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Fillet</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">edge_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">vertex_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">VertexPrimitive</span><span class=\"p\">):</span>\n            <span class=\"n\">vertex_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">is3d</span><span class=\"p\">:</span>\n                <span class=\"n\">edge_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Filet is possible only on a vertex in 2D designs.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NewPartsModelFlag:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:FilletParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Edges:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge_id_list</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Vertices:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">vertex_id_list</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Radius:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">))</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Setback:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">setback</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">Fillet</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;UnClassified&quot;</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">Undo</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Operation failed, generating an unclassified object. Check and retry.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">chamfer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">left_distance</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">right_distance</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"n\">chamfer_type</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a chamfer to the selected edge.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        left_distance : float, optional</span>\n<span class=\"sd\">            Left distance from the edge. The default is ``1``.</span>\n<span class=\"sd\">        right_distance : float, optional</span>\n<span class=\"sd\">            Right distance from the edge. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional.</span>\n<span class=\"sd\">            Angle value for chamfer types 2 and 3. The default is ``0``.</span>\n<span class=\"sd\">        chamfer_type : int, optional</span>\n<span class=\"sd\">            Type of the chamfer. Options are:</span>\n<span class=\"sd\">                * 0 - Symmetric</span>\n<span class=\"sd\">                * 1 - Left Distance-Right Distance</span>\n<span class=\"sd\">                * 2 - Left Distance-Angle</span>\n<span class=\"sd\">                * 3 - Right Distance-Angle</span>\n\n<span class=\"sd\">            The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Chamfer</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">edge_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">vertex_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">VertexPrimitive</span><span class=\"p\">):</span>\n            <span class=\"n\">vertex_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">is3d</span><span class=\"p\">:</span>\n                <span class=\"n\">edge_id_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;chamfer is possible only on Vertex in 2D Designs &quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NewPartsModelFlag:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChamferParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Edges:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge_id_list</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Vertices:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">vertex_id_list</span><span class=\"p\">)</span>\n        <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;LeftDistance:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">left_distance</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">right_distance</span><span class=\"p\">:</span>\n            <span class=\"n\">right_distance</span> <span class=\"o\">=</span> <span class=\"n\">left_distance</span>\n        <span class=\"k\">if</span> <span class=\"n\">chamfer_type</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;RightDistance:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">right_distance</span><span class=\"p\">))</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ChamferType:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Symmetric&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">chamfer_type</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;RightDistance:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">right_distance</span><span class=\"p\">))</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ChamferType:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Left Distance-Right Distance&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">chamfer_type</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ChamferType:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Left Distance-Right Distance&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">chamfer_type</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;LeftDistance:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;RightDistance:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">right_distance</span><span class=\"p\">))</span>\n            <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ChamferType:=&quot;</span><span class=\"p\">),</span> <span class=\"n\">vArg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Right Distance-Angle&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Wrong Type Entered. Type must be integer from 0 to 3&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">Chamfer</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span> <span class=\"n\">vArg2</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;UnClassified&quot;</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">Undo</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Operation Failed generating Unclassified object. Check and retry&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n\n<div class=\"viewcode-block\" id=\"VertexPrimitive\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.VertexPrimitive/#pyaedt.modeler.Primitives.VertexPrimitive\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">VertexPrimitive</span><span class=\"p\">(</span><span class=\"n\">EdgeTypePrimitive</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains the vertex object within the AEDT Desktop Modeler.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    object3d : :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">        Pointer to the calling object that provides additional functionality.</span>\n<span class=\"sd\">    objid : int</span>\n<span class=\"sd\">        Object ID as determined by the parent object.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object3d</span><span class=\"p\">,</span> <span class=\"n\">objid</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">objid</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span> <span class=\"o\">=</span> <span class=\"n\">object3d</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span> <span class=\"o\">=</span> <span class=\"n\">object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Position of the vertex.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of float values or &#39;&#39;None``</span>\n<span class=\"sd\">            List of ``[x, y, z]`` coordinates of the vertex</span>\n<span class=\"sd\">            in model units when the data from AEDT is valid, ``None``</span>\n<span class=\"sd\">            otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetVertexPosition</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">vertex_data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetVertexPosition</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">vertex_data</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Vertex &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Vertex &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"EdgePrimitive\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.EdgePrimitive/#pyaedt.modeler.Primitives.EdgePrimitive\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EdgePrimitive</span><span class=\"p\">(</span><span class=\"n\">EdgeTypePrimitive</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains the edge object within the AEDT Desktop Modeler.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    object3d : :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">        Pointer to the calling object that provides additional functionality.</span>\n<span class=\"sd\">    edge_id : int</span>\n<span class=\"sd\">        Object ID as determined by the parent object.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object3d</span><span class=\"p\">,</span> <span class=\"n\">edge_id</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">edge_id</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span> <span class=\"o\">=</span> <span class=\"n\">object3d</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span> <span class=\"o\">=</span> <span class=\"n\">object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">segment_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Compute segment information using the object-oriented method (from AEDT 2021 R2</span>\n<span class=\"sd\">        with beta options). The method manages segment info for lines, circles and ellipse</span>\n<span class=\"sd\">        providing information about all of those.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">            list</span>\n<span class=\"sd\">                Segment info if available.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">return</span> <span class=\"p\">{}</span>\n        <span class=\"n\">ll</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Lines&quot;</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateObjectFromEdges</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NewPartsModelFlag:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NonModel&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:BodyFromEdgeToParameters&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edges:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">]]],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;CreateGroupsForNewObjects:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">new_line</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Lines&quot;</span><span class=\"p\">))</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">ll</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GenerateHistory</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">new_line</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;NewPartsModelFlag:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NonModel&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;UseCurrentCS:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">oo</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">new_line</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">segment</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">oo1</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"s2\">&quot;Segment0&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oo1</span> <span class=\"o\">=</span> <span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"n\">oo</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">for</span> <span class=\"n\">prop</span> <span class=\"ow\">in</span> <span class=\"n\">oo1</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;/&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">prop</span><span class=\"p\">:</span>\n                <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">oo1</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"n\">prop</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;X:=&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">val</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">val</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">6</span><span class=\"p\">:</span>\n                    <span class=\"n\">segment</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">val</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">val</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]]</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">segment</span><span class=\"p\">[</span><span class=\"n\">prop</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">val</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">Undo</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">Undo</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">segment</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vertices</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Vertices list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.VertexPrimitive`</span>\n<span class=\"sd\">            List of vertices.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetVertexIDsFromEdge</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetVertexIDsFromEdge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)]</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">aedt_version</span> <span class=\"o\">&gt;</span> <span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">vertex</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n            <span class=\"n\">vertex</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"p\">)</span>\n            <span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">VertexPrimitive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"p\">,</span> <span class=\"n\">vertex</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">vertices</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">midpoint</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Midpoint coordinates of the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of float values or ``None``</span>\n<span class=\"sd\">            Midpoint in ``[x, y, z]`` coordinates when the edge</span>\n<span class=\"sd\">            is a circle with only one vertex, ``None`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetVertexPosition</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">midpoint</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">get_mid_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">midpoint</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetEdgePositionAtNormalizedParameter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Length of the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float or bool</span>\n<span class=\"sd\">            Edge length in model units when edge has two vertices, ``False`` othwerise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetEdgeLength</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetEdgeLength</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;EdgeId &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;EdgeId &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"EdgePrimitive.create_object\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.EdgePrimitive.create_object/#pyaedt.modeler.Primitives.EdgePrimitive.create_object\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_model</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">create_group_for_new_objects</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return a new object from the selected edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">            3D object.</span>\n<span class=\"sd\">        non_model : bool, optional</span>\n<span class=\"sd\">            Either if create the new object as model or non-model. The default is `False`.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateObjectFromEdges</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">create_object_from_edge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_model</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"EdgePrimitive.move_along_normal\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.EdgePrimitive.move_along_normal/#pyaedt.modeler.Primitives.EdgePrimitive.move_along_normal\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">move_along_normal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Move this edge.</span>\n<span class=\"sd\">        This method moves an edge which belong to the same solid.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        offset : float, optional</span>\n<span class=\"sd\">             Offset to apply in model units. The default is ``1.0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.MoveEdges</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Solid&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Edge Movement applies only to 2D objects.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">move_edge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"FacePrimitive\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.FacePrimitive/#pyaedt.modeler.Primitives.FacePrimitive\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FacePrimitive</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Contains the face object within the AEDT Desktop Modeler.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;FaceId &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;FaceId &quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object3d</span><span class=\"p\">,</span> <span class=\"n\">obj_id</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object3d : :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">        obj_id : int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"n\">obj_id</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span> <span class=\"o\">=</span> <span class=\"n\">object3d</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">oeditor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Oeditor Module.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">object_units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">touching_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the objects that touch one of the vertex, edge midpoint or the actual face.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            Object names touching that face.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">list_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">vertex</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">:</span>\n            <span class=\"n\">body_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_bodynames_from_position</span><span class=\"p\">(</span>\n                <span class=\"n\">vertex</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">include_non_model</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_names</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                <span class=\"n\">list_names</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"n\">body_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_bodynames_from_position</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">,</span> <span class=\"n\">include_non_model</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_names</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                <span class=\"n\">list_names</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"n\">body_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_bodynames_from_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">,</span> <span class=\"n\">include_non_model</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_names</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n            <span class=\"n\">list_names</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">list_names</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edges</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Edges lists.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n<span class=\"sd\">            List of Edges.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetEdgeIDsFromFace</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetEdgeIDsFromFace</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)):</span>\n            <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">EdgePrimitive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)))</span>\n        <span class=\"k\">return</span> <span class=\"n\">edges</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vertices</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Vertices lists.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.VertexPrimitive`</span>\n<span class=\"sd\">            List of Vertices.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetVertexIDsFromFace</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetVertexIDsFromFace</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)]</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">aedt_version</span> <span class=\"o\">&gt;</span> <span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">vertex</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n            <span class=\"n\">vertex</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"p\">)</span>\n            <span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">VertexPrimitive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"p\">)))</span>\n        <span class=\"k\">return</span> <span class=\"n\">vertices</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Face ID.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">center_from_aedt</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Face center for a planar face in model units.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list or bool</span>\n<span class=\"sd\">            Center position in ``[x, y, z]`` coordinates for the planar face, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetFaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetFaceCenter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Non-planar face does not provide a face center.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">center</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">c</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">center</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_planar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if a face is planar or not.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetFaceCenter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">center</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Face center in model units.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           It returns the face centroid if number of face vertex is &gt;1.</span>\n<span class=\"sd\">           It tries to get AEDT Face Center in case of single vertex face</span>\n<span class=\"sd\">           and returns the vertex position otherwise.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of float values</span>\n<span class=\"sd\">            Centroid of all vertices of the face.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetFaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">get_polygon_centroid</span><span class=\"p\">([</span><span class=\"n\">pos</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"k\">for</span> <span class=\"n\">pos</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">center</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">center_from_aedt</span>\n            <span class=\"k\">if</span> <span class=\"n\">center</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">center</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Face area.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Face area in model units.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetFaceArea</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">area</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetFaceArea</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">area</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_z</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top edge in the Z direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">edge</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_z</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom edge in the Z direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">edge</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top edge in the X direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">edge</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom edge in the X direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">edge</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top edge in the Y direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">edge</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom edge in the X direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">edge</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<div class=\"viewcode-block\" id=\"FacePrimitive.is_on_bounding\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.FacePrimitive.is_on_bounding/#pyaedt.modeler.Primitives.FacePrimitive.is_on_bounding\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_on_bounding</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">1e-9</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check if the face is on bounding box or Not.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        tolerance : float, optional</span>\n<span class=\"sd\">            Tolerance of check between face center and bounding box.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            `True` if the face is on bounding box. `False` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetModelBoundingBox</span><span class=\"p\">())]</span>\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">center</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span>\n            <span class=\"ow\">or</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span>\n            <span class=\"ow\">or</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span>\n            <span class=\"ow\">or</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span>\n            <span class=\"ow\">or</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span>\n            <span class=\"ow\">or</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">tol</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"FacePrimitive.move_with_offset\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.FacePrimitive.move_with_offset/#pyaedt.modeler.Primitives.FacePrimitive.move_with_offset\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">move_with_offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Move the face along the normal.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        offset : float, optional</span>\n<span class=\"sd\">            Offset to apply in model units. The default is ``1.0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.MoveFaces</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">MoveFaces</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NewPartsModelFlag:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:MoveFacesParameters&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;MoveAlongNormalFlag:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;OffsetDistance:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">object_units</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;MoveVectorX:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;MoveVectorY:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;MoveVectorZ:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;FacesToMove:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"FacePrimitive.move_with_vector\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.FacePrimitive.move_with_vector/#pyaedt.modeler.Primitives.FacePrimitive.move_with_vector\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">move_with_vector</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Move the face along a vector.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        vector : list</span>\n<span class=\"sd\">            List of ``[x, y, z]`` coordinates for the vector.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.MoveFaces</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">MoveFaces</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;NewPartsModelFlag:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:MoveFacesParameters&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;MoveAlongNormalFlag:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;OffsetDistance:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;MoveVectorX:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">vector</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">object_units</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;MoveVectorY:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">vector</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">object_units</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;MoveVectorZ:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">vector</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">object_units</span><span class=\"p\">),</span>\n                    <span class=\"s2\">&quot;FacesToMove:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">],</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">normal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Face normal.</span>\n\n<span class=\"sd\">        Limitations:</span>\n<span class=\"sd\">        #. The face must be planar.</span>\n<span class=\"sd\">        #. Currently it works only if the face has at least two vertices. Notable excluded items are circles and</span>\n<span class=\"sd\">        ellipses that have only one vertex.</span>\n<span class=\"sd\">        #. If a bounding box is specified, the normal is orientated outwards with respect to the bounding box.</span>\n<span class=\"sd\">        Usually the bounding box refers to a volume where the face lies.</span>\n<span class=\"sd\">        If no bounding box is specified, the normal can be inward or outward the volume.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of float values or ``None``</span>\n<span class=\"sd\">            Normal vector (normalized ``[x, y, z]`` coordinates) or ``None``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetVertexPosition</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vertices_ids</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">vertices_ids</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Not enough vertices or non-planar face&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"c1\"># elif len(vertices_ids)&lt;2:</span>\n        <span class=\"c1\">#     v1 = vertices_ids[0].position</span>\n        <span class=\"c1\">#     offset = [(a-b)/2 for a,b in zip(v1,self.center)]</span>\n        <span class=\"c1\">#     v2 = [a+b for a,b in zip(self.center, offset)]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">v1</span> <span class=\"o\">=</span> <span class=\"n\">vertices_ids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span>\n            <span class=\"n\">v2</span> <span class=\"o\">=</span> <span class=\"n\">vertices_ids</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">position</span>\n        <span class=\"n\">fc</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">center</span>\n        <span class=\"n\">cv1</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_points</span><span class=\"p\">(</span><span class=\"n\">fc</span><span class=\"p\">,</span> <span class=\"n\">v1</span><span class=\"p\">)</span>\n        <span class=\"n\">cv2</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_points</span><span class=\"p\">(</span><span class=\"n\">fc</span><span class=\"p\">,</span> <span class=\"n\">v2</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">cv2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cv1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span> <span class=\"ow\">and</span> <span class=\"n\">cv2</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cv1</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">cv2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cv1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span> <span class=\"ow\">and</span> <span class=\"n\">cv2</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cv1</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">cv2</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cv1</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span> <span class=\"ow\">and</span> <span class=\"n\">cv2</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">cv1</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_cross</span><span class=\"p\">(</span><span class=\"n\">cv1</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"p\">)</span>\n        <span class=\"n\">normal</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">normalize_vector</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Try to move the face center twice, the first with the normal vector, and the second with its inverse.</span>\n<span class=\"sd\">        Measures which is closer to the center point of the bounding box.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">inv_norm</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">normal</span><span class=\"p\">]</span>\n        <span class=\"n\">mv1</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_sum</span><span class=\"p\">(</span><span class=\"n\">fc</span><span class=\"p\">,</span> <span class=\"n\">normal</span><span class=\"p\">)</span>\n        <span class=\"n\">mv2</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">v_sum</span><span class=\"p\">(</span><span class=\"n\">fc</span><span class=\"p\">,</span> <span class=\"n\">inv_norm</span><span class=\"p\">)</span>\n        <span class=\"n\">bb_center</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">get_mid_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">])</span>\n        <span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">points_distance</span><span class=\"p\">(</span><span class=\"n\">mv1</span><span class=\"p\">,</span> <span class=\"n\">bb_center</span><span class=\"p\">)</span>\n        <span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">points_distance</span><span class=\"p\">(</span><span class=\"n\">mv2</span><span class=\"p\">,</span> <span class=\"n\">bb_center</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">d1</span> <span class=\"o\">&gt;</span> <span class=\"n\">d2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">normal</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">inv_norm</span>\n\n<div class=\"viewcode-block\" id=\"FacePrimitive.create_object\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.FacePrimitive.create_object/#pyaedt.modeler.Primitives.FacePrimitive.create_object\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_model</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return a new object from the selected face.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">            3D object.</span>\n<span class=\"sd\">        non_model : bool, optional</span>\n<span class=\"sd\">            Either if create the new object as model or non-model. Default is `False`.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateObjectFromFaces</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object3d</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">create_object_from_face</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_model</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Object3d\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d/#pyaedt.modeler.Primitives.Object3d\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Object3d</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages object attributes for the AEDT 3D Modeler.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    primitives : :class:`pyaedt.modeler.Primitives3D.Primitives3D`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n<span class=\"sd\">    name : str</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Basic usage demonstrated with an HFSS design:</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; prim = aedtapp.modeler</span>\n\n<span class=\"sd\">    Create a part, such as box, to return an :class:`pyaedt.modeler.Object3d.Object3d`.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; id = prim.create_box([0, 0, 0], [10, 10, 5], &quot;Mybox&quot;, &quot;Copper&quot;)</span>\n<span class=\"sd\">    &gt;&gt;&gt; part = prim[id]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        primitives : :class:`pyaedt.modeler.Primitives3D.Primitives3D`</span>\n<span class=\"sd\">            Inherited parent object.</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"o\">=</span> <span class=\"n\">_uname</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span> <span class=\"o\">=</span> <span class=\"n\">primitives</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flags</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Global&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_updated</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_all_props</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mass</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_volume</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_bounding_box_unmodel</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bounding box of a part, unmodel/undo method.</span>\n\n<span class=\"sd\">        This is done by setting all other objects as unmodel and getting the model bounding box.</span>\n<span class=\"sd\">        Then an undo operation restore the design.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of [list of float]</span>\n<span class=\"sd\">            List of six ``[x, y, z]`` positions of the bounding box containing</span>\n<span class=\"sd\">            Xmin, Ymin, Zmin, Xmax, Ymax, and Zmax values.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">objs_to_unmodel</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"ow\">and</span> <span class=\"n\">val</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">objs_to_unmodel</span><span class=\"p\">:</span>\n            <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_change_geometry_property</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"n\">objs_to_unmodel</span><span class=\"p\">)</span>\n        <span class=\"n\">modeled</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n            <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_change_geometry_property</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">modeled</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"n\">bounding</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_model_bounding_box</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">objs_to_unmodel</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">Undo</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">modeled</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_odesign</span><span class=\"o\">.</span><span class=\"n\">Undo</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">ClearMessages</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">project_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_name</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">bounding</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_bounding_box_sat</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bounding box of a part.</span>\n\n<span class=\"sd\">        This is done by exporting a part as a SAT file and reading the bounding box information from the SAT file.</span>\n<span class=\"sd\">        A list of six 3D position vectors is returned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of [list of float]</span>\n<span class=\"sd\">            List of six ``[x, y, z]`` positions of the bounding box containing</span>\n<span class=\"sd\">            Xmin, Ymin, Zmin, Xmax, Ymax, and Zmax values.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetModelBoundingBox</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">tmp_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">working_directory</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tmp_path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.sat&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">export_3d_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">tmp_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.sat&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">])</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Cannot export the ACIS SAT file for object </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fh</span><span class=\"p\">:</span>\n            <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"n\">fh</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n        <span class=\"n\">all_lines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">s</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">temp</span> <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;body &quot;</span><span class=\"p\">)]</span>\n\n        <span class=\"n\">bb</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">all_lines</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">all_lines</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;.+ (.+) (.+) (.+) (.+) (.+) (.+) #$&quot;</span>\n            <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">):</span>\n                        <span class=\"n\">bb</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)))</span>\n                <span class=\"k\">except</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;ERROR: Cannot remove temp file.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">bb</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bounding box of a part.</span>\n\n<span class=\"sd\">        A list of six 3D position vectors is returned.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of [list of float]</span>\n<span class=\"sd\">            List of six ``[x, y, z]`` positions of the bounding box containing</span>\n<span class=\"sd\">            Xmin, Ymin, Zmin, Xmax, Ymax, and Zmax values.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetModelBoundingBox</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Unclassified&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">disable_bounding_box_sat</span><span class=\"p\">:</span>\n            <span class=\"n\">bounding</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box_sat</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">bounding</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">bounding</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box_unmodel</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_bounding_box_unmodel</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bounding_dimension</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the dimension array of the bounding box.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of three float values representing the bounding box dimensions</span>\n<span class=\"sd\">            in the form ``[dim_x, dim_y, dim_z]``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetModelBoundingBox</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">oBoundingBox</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span>\n        <span class=\"n\">dimensions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">dimensions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])))</span>\n        <span class=\"n\">dimensions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])))</span>\n        <span class=\"n\">dimensions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">oBoundingBox</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])))</span>\n        <span class=\"k\">return</span> <span class=\"n\">dimensions</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_odesign</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_odesign</span>\n\n<div class=\"viewcode-block\" id=\"Object3d.plot\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.plot/#pyaedt.modeler.Primitives.Object3d.plot\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Plot model with PyVista.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        show : bool, optional</span>\n<span class=\"sd\">            Show the plot after generation.  The default value is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.generic.plot.ModelPlotter`</span>\n<span class=\"sd\">            Model Object.</span>\n\n<span class=\"sd\">        Notes</span>\n<span class=\"sd\">        -----</span>\n<span class=\"sd\">        Works from AEDT 2021.2 in CPython only. PyVista has to be installed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span> <span class=\"o\">&gt;=</span> <span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">plot_model_obj</span><span class=\"p\">(</span>\n                <span class=\"n\">objects</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span>\n                <span class=\"n\">plot_as_separate_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">plot_air_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"n\">show</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.export_image\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.export_image/#pyaedt.modeler.Primitives.Object3d.export_image\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">export_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n\n        <span class=\"sd\">&quot;&quot;&quot;Export the model to path.</span>\n\n<span class=\"sd\">        .. note::</span>\n<span class=\"sd\">           Works from AEDT 2021.2 in CPython only. PyVista has to be installed.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        file_path : str, optional</span>\n<span class=\"sd\">            File name with full path. If `None` Project directory will be used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            File path.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span> <span class=\"o\">&gt;=</span> <span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">file_path</span><span class=\"p\">:</span>\n                <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.png&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">model_obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">plot_model_obj</span><span class=\"p\">(</span>\n                <span class=\"n\">objects</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span>\n                <span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"n\">export_path</span><span class=\"o\">=</span><span class=\"n\">file_path</span><span class=\"p\">,</span>\n                <span class=\"n\">plot_as_separate_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">clean_files</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">model_obj</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">model_obj</span><span class=\"o\">.</span><span class=\"n\">image_file</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">touching_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the objects that touch one of the vertex, edge midpoint or face of the object.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Unclassified&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"n\">list_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">vertex</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">:</span>\n            <span class=\"n\">body_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_bodynames_from_position</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"o\">.</span><span class=\"n\">position</span><span class=\"p\">)</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_names</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                <span class=\"n\">list_names</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"n\">body_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_bodynames_from_position</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">)</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_names</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                <span class=\"n\">list_names</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"n\">body_names</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_bodynames_from_position</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">)</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">body_names</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">list_names</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n                <span class=\"n\">list_names</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">list_names</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">faces</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Information for each face in the given part.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetFaceIDs</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Unclassified&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetFaceIDs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)):</span>\n            <span class=\"n\">face</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n            <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">FacePrimitive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">face</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">faces</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">faces_on_bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return only the face ids of the faces touching the bounding box.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">f_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">is_on_bounding</span><span class=\"p\">():</span>\n                <span class=\"n\">f_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">f_list</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">face_closest_to_bounding_box</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return only the face ids of the face closest to the bounding box.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetModelBoundingBox</span><span class=\"p\">())]</span>\n        <span class=\"n\">f_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">f_val</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span>\n            <span class=\"n\">p_dist</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span>\n                    <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span>\n                    <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span>\n                    <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n                    <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]),</span>\n                    <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]),</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">f_val</span> <span class=\"ow\">and</span> <span class=\"n\">p_dist</span> <span class=\"o\">&lt;</span> <span class=\"n\">f_val</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">f_val</span><span class=\"p\">:</span>\n                <span class=\"n\">f_id</span> <span class=\"o\">=</span> <span class=\"n\">face</span>\n                <span class=\"n\">f_val</span> <span class=\"o\">=</span> <span class=\"n\">p_dist</span>\n        <span class=\"k\">return</span> <span class=\"n\">f_id</span>\n\n<div class=\"viewcode-block\" id=\"Object3d.largest_face\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.largest_face/#pyaedt.modeler.Primitives.Object3d.largest_face\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">largest_face</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return only the face with the greatest area.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">,</span> <span class=\"n\">face</span><span class=\"p\">))</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">f_sorted</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">f_sorted</span><span class=\"p\">[:</span><span class=\"n\">n</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.longest_edge\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.longest_edge/#pyaedt.modeler.Primitives.Object3d.longest_edge\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">longest_edge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return only the edge with the greatest length.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"n\">edge</span><span class=\"p\">))</span>\n        <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">e_sorted</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">e</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">e_sorted</span><span class=\"p\">[:</span><span class=\"n\">n</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.smallest_face\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.smallest_face/#pyaedt.modeler.Primitives.Object3d.smallest_face\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">smallest_face</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return only the face with the smallest area.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">,</span> <span class=\"n\">face</span><span class=\"p\">))</span>\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">f_sorted</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">f_sorted</span><span class=\"p\">[:</span><span class=\"n\">n</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.shortest_edge\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.shortest_edge/#pyaedt.modeler.Primitives.Object3d.shortest_edge\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">shortest_edge</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return only the edge with the smallest length.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"n\">edge</span><span class=\"p\">))</span>\n        <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span>\n            <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">e_sorted</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">e</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">e_sorted</span><span class=\"p\">[:</span><span class=\"n\">n</span><span class=\"p\">]</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_face_z</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top face in the Z direction of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_face_z</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom face in the Z direction of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_face_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top face in the X direction of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_face_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom face in the X direction of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_face_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top face in the Y direction of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_face_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom face in the X direction of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_z</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top edge in the Z direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.FaceCenter</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">top_edge_z</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">top_edge_z</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_z</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom edge in the Z direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">bottom_edge_z</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">bottom_edge_z</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top edge in the X direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">top_edge_x</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">top_edge_x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_x</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom edge in the X direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">bottom_edge_x</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">bottom_edge_x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">top_edge_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Top edge in the Y direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">top_edge_y</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">top_edge_y</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bottom_edge_y</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Bottom edge in the X direction of the object. Midpoint is used as criteria to find the edge.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">bottom_edge_y</span><span class=\"o\">.</span><span class=\"n\">midpoint</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]),</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">bottom_edge_y</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">]</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">tup</span><span class=\"p\">:</span> <span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edges</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Information for each edge in the given part.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetEdgeIDsFromObject</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Unclassified&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_object_edges</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"n\">edge</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)</span>\n            <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">EdgePrimitive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edge</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">edges</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vertices</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Information for each vertex in the given part.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.VertexPrimitive`</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetVertexIDsFromObject</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Unclassified&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"n\">vertices</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">get_object_vertices</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)]</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">aedt_version</span> <span class=\"o\">&gt;</span> <span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">vertex</span> <span class=\"ow\">in</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n            <span class=\"n\">vertex</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"p\">)</span>\n            <span class=\"n\">vertices</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">VertexPrimitive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vertex</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">vertices</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">m_Editor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pointer to the oEditor object in the AEDT API. This property is</span>\n<span class=\"sd\">        intended primarily for use by FacePrimitive, EdgePrimitive, and</span>\n<span class=\"sd\">        VertexPrimitive child objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        oEditor COM Object</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Surface material name of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str or None</span>\n<span class=\"sd\">            Name of the surface material when successful, ``None`` and a warning message otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Surface Material&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Surface Material&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">group_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Group the object belongs to.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the group.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Group&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Group&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span>\n\n    <span class=\"nd\">@group_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">group_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign Object to a specific group. it creates a new group if the group doesn&#39;t exist.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the group to assign. Group will be created if it does not exist.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the group.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">CreateGroup</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:GroupParameter&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ParentGroupID:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Parts:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;SubmodelInstances:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Groups:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">groupName</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Group&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"n\">groupName</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">vgroup</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Group&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vgroup</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_groupName</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Material name of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str or None</span>\n<span class=\"sd\">            Name of the material when successful, ``None`` and a warning message otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Material&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n            <span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Material&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"k\">if</span> <span class=\"n\">mat</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"n\">mat</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@material_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">):</span>\n        <span class=\"n\">matobj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_materials</span><span class=\"o\">.</span><span class=\"n\">checkifmaterialexists</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">matobj</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Material&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">34</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"mi\">34</span><span class=\"p\">)]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_material_name</span> <span class=\"o\">=</span> <span class=\"n\">matobj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">%s</span><span class=\"s2\"> does not exist.&quot;</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@surface_material_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_material_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span> <span class=\"o\">=</span> <span class=\"n\">mat</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Surface Material&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"o\">+</span> <span class=\"n\">mat</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_surface_material</span> <span class=\"o\">=</span> <span class=\"n\">mat</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Material </span><span class=\"si\">%s</span><span class=\"s2\"> does not exist&quot;</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;ID of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int or None</span>\n<span class=\"sd\">            ID of the object when successful, ``None`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetObjectIDByName</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectIDByName</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_id</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">object_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Type of the object.</span>\n\n<span class=\"sd\">        Options are:</span>\n<span class=\"sd\">             * Solid</span>\n<span class=\"sd\">             * Sheet</span>\n<span class=\"sd\">             * Line</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Type of the object.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Solids&quot;</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Solid&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sheets&quot;</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Sheet&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Lines&quot;</span><span class=\"p\">)):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Line&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetObjectsInGroup</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unclassified&quot;</span><span class=\"p\">)):</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Unclassified&quot;</span>  <span class=\"c1\"># pragma: no cover</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_object_type</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is3d</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Check for if the object is 3D.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Solid&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Object mass.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float or None</span>\n<span class=\"sd\">            Mass of the object when successful, 0.0 otherwise. Mass of the volume in kg since AEDT mass density is</span>\n<span class=\"sd\">            always in kg/m^3</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetObjectVolume</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_name</span><span class=\"p\">:</span>\n            <span class=\"n\">volume</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectVolume</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n            <span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_units</span>\n            <span class=\"n\">mass_density</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_materials</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_name</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">mass_density</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">volume</span><span class=\"p\">)</span>\n                <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"p\">)])</span> <span class=\"o\">**</span> <span class=\"mi\">3</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mass</span> <span class=\"o\">=</span> <span class=\"n\">mass_density</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mass</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">volume</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Object volume.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">            Volume of the object when successful, 0.0 otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetObjectVolume</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Solid&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_volume</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetObjectVolume</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_volume</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_volume</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Name of the object as a string value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Name of object as a string value.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">obj_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">object_names</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">obj_name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">:</span>\n                <span class=\"n\">vName</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"n\">vName</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;NAME:Name&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">vName</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">vName</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">obj_name</span><span class=\"p\">)</span>\n                <span class=\"n\">vChangedProps</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"n\">vName</span><span class=\"p\">]</span>\n                <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">]</span>\n                <span class=\"n\">vPropServers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n                <span class=\"n\">vGeo3d</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"n\">vPropServers</span><span class=\"p\">,</span> <span class=\"n\">vChangedProps</span><span class=\"p\">]</span>\n                <span class=\"n\">vOut</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span> <span class=\"n\">vGeo3d</span><span class=\"p\">]</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">,</span> <span class=\"n\">vOut</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"o\">=</span> <span class=\"n\">obj_name</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">cleanup_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># TODO check for name conflict</span>\n            <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">valid_properties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Valid properties.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetProperties</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_all_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_all_props</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_all_props</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Part color as a tuple of integer values for `(Red, Green, Blue)` color values.</span>\n\n<span class=\"sd\">        If the integer values are outside the range 0-255, then limit the values. Invalid inputs are ignored.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; part.color = (255,255,0)</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Color&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span><span class=\"p\">:</span>\n            <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Color&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">color</span><span class=\"p\">:</span>\n                <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">)</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"mi\">255</span>\n                <span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">)</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">8</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"mi\">255</span>\n                <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">color</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"mi\">255</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">195</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Color tuple as a string in the format &#39;(Red, Green, Blue)&#39;.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;(</span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\">)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n\n    <span class=\"nd\">@color</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">color_value</span><span class=\"p\">):</span>\n        <span class=\"n\">color_tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">color_value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">color_tuple</span> <span class=\"o\">=</span> <span class=\"n\">rgb_color_codes</span><span class=\"p\">[</span><span class=\"n\">color_value</span><span class=\"p\">]</span>\n            <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n                <span class=\"n\">parse_string</span> <span class=\"o\">=</span> <span class=\"n\">color_value</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;(&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">parse_string</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                    <span class=\"n\">color_tuple</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">([</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">parse_string</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">color_tuple</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">([</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">color_value</span><span class=\"p\">])</span>\n            <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">color_tuple</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">color_tuple</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n                <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">color_tuple</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n                <span class=\"n\">B</span> <span class=\"o\">=</span> <span class=\"n\">clamp</span><span class=\"p\">(</span><span class=\"n\">color_tuple</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>\n                <span class=\"n\">vColor</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Color&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">),</span> <span class=\"s2\">&quot;G:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">),</span> <span class=\"s2\">&quot;B:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">)]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vColor</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span>\n                <span class=\"n\">color_tuple</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">msg_text</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Invalid color input </span><span class=\"si\">{}</span><span class=\"s2\"> for object </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">color_value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"n\">msg_text</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transparency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Part transparency as a value between 0.0 and 1.0.</span>\n\n<span class=\"sd\">        If the value is outside the range, then apply a limit. If the value is not a valid number, set to ``0.0``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Transparent&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span><span class=\"p\">:</span>\n            <span class=\"n\">transp</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Transparent&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">transp</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span>\n\n    <span class=\"nd\">@transparency</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">transparency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">T</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">trans_float</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">trans_float</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.0</span><span class=\"p\">:</span>\n                <span class=\"n\">trans_float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n            <span class=\"k\">elif</span> <span class=\"n\">trans_float</span> <span class=\"o\">&gt;</span> <span class=\"mf\">1.0</span><span class=\"p\">:</span>\n                <span class=\"n\">trans_float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"n\">trans_float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"n\">vTrans</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Transparent&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">trans_float</span><span class=\"p\">)]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vTrans</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_transparency</span> <span class=\"o\">=</span> <span class=\"n\">trans_float</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">object_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Object units.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">model_units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">part_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Part coordinate system.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the part coordinate system.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Orientation&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Orientation&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span>\n\n    <span class=\"nd\">@part_coordinate_system</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">part_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sCS</span><span class=\"p\">):</span>\n\n        <span class=\"n\">pcs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Orientation&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">sCS</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">pcs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_part_coordinate_system</span> <span class=\"o\">=</span> <span class=\"n\">sCS</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solve_inside</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Part solve inside flag.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when ``&quot;solve-inside&quot;`` is activated for the part, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Solve Inside&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n            <span class=\"n\">solveinside</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Solve Inside&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">solveinside</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;false&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">solveinside</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@solve_inside</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solve_inside</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">vSolveInside</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># fS = self._to_boolean(S)</span>\n        <span class=\"n\">fs</span> <span class=\"o\">=</span> <span class=\"n\">S</span>\n        <span class=\"n\">vSolveInside</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;NAME:Solve Inside&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">vSolveInside</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">vSolveInside</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">fs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vSolveInside</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solve_inside</span> <span class=\"o\">=</span> <span class=\"n\">fs</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">display_wireframe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Wireframe property of the part.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when wirefame is activated for the part, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Display Wireframe&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span><span class=\"p\">:</span>\n            <span class=\"n\">wireframe</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Display Wireframe&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">wireframe</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;true&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">wireframe</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;True&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span>\n\n    <span class=\"nd\">@display_wireframe</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">display_wireframe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fWireframe</span><span class=\"p\">):</span>\n        <span class=\"n\">vWireframe</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Display Wireframe&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">fWireframe</span><span class=\"p\">]</span>\n        <span class=\"c1\"># fwf = self._to_boolean(wf)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vWireframe</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_wireframe</span> <span class=\"o\">=</span> <span class=\"n\">fWireframe</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Part Model/Non-model property.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when model, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Model&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">valid_properties</span><span class=\"p\">:</span>\n            <span class=\"n\">mod</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Geometry3DAttributeTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">mod</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;false&quot;</span> <span class=\"ow\">or</span> <span class=\"n\">mod</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span>\n\n    <span class=\"nd\">@model</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fModel</span><span class=\"p\">):</span>\n        <span class=\"n\">vArg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Model&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">fModel</span><span class=\"p\">]</span>\n        <span class=\"n\">fModel</span> <span class=\"o\">=</span> <span class=\"n\">_to_boolean</span><span class=\"p\">(</span><span class=\"n\">fModel</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">vArg1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model</span> <span class=\"o\">=</span> <span class=\"n\">fModel</span>\n\n<div class=\"viewcode-block\" id=\"Object3d.unite\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.unite/#pyaedt.modeler.Primitives.Object3d.unite\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">unite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_list</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Unite a list of objects with this object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_list : list of str or list of pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            List of objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">           Object 3D object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Unite</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">unite_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">,</span> <span class=\"n\">return_list</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">unite</span><span class=\"p\">(</span><span class=\"n\">unite_list</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.intersect\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.intersect/#pyaedt.modeler.Primitives.Object3d.intersect\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">intersect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">theList</span><span class=\"p\">,</span> <span class=\"n\">keep_originals</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Intersect the active object with a given list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        theList : list</span>\n<span class=\"sd\">            List of objects.</span>\n<span class=\"sd\">        keep_originals : bool, optional</span>\n<span class=\"sd\">            Whether to keep the original object. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">            Retrieve the resulting 3D Object when succeeded.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Intersect</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">theList</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">theList</span><span class=\"p\">,</span> <span class=\"n\">return_list</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">intersect</span><span class=\"p\">(</span><span class=\"n\">theList</span><span class=\"p\">,</span> <span class=\"n\">keep_originals</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.split\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.split/#pyaedt.modeler.Primitives.Object3d.split\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">split</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">plane</span><span class=\"p\">,</span> <span class=\"n\">sides</span><span class=\"o\">=</span><span class=\"s2\">&quot;Both&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Split the active object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        plane : str</span>\n<span class=\"sd\">            Coordinate plane of the cut or the Application.PLANE object.</span>\n<span class=\"sd\">            Choices for the coordinate plane are ``&quot;XY&quot;``, ``&quot;YZ&quot;``, and ``&quot;ZX&quot;``.</span>\n<span class=\"sd\">        sides : str, optional</span>\n<span class=\"sd\">            Which side to keep. Options are ``&quot;Both&quot;``, ``&quot;PositiveOnly&quot;``,</span>\n<span class=\"sd\">            and ``&quot;NegativeOnly&quot;``. The default is ``&quot;Both&quot;``, in which case</span>\n<span class=\"sd\">            all objects are kept after the split.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of str</span>\n<span class=\"sd\">            List of split objects.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Split</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">plane</span><span class=\"p\">,</span> <span class=\"n\">sides</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.mirror\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.mirror/#pyaedt.modeler.Primitives.Object3d.mirror\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mirror a selection.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : int or float</span>\n<span class=\"sd\">            List of the ``[x, y, z]`` coordinates or</span>\n<span class=\"sd\">            the Application.Position object for the selection.</span>\n<span class=\"sd\">        vector : float</span>\n<span class=\"sd\">            List of the ``[x1, y1, z1]`` coordinates or</span>\n<span class=\"sd\">            the Application.Position object for the vector.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d, bool</span>\n<span class=\"sd\">            3D object.</span>\n<span class=\"sd\">            ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Mirror</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"n\">vector</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.rotate\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.rotate/#pyaedt.modeler.Primitives.Object3d.rotate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rotate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mf\">90.0</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Rotate the selection.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cs_axis</span>\n<span class=\"sd\">            Coordinate system axis or the Application.CoordinateSystemAxis object.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle of rotation. The units, defined by ``unit``, can be either</span>\n<span class=\"sd\">            degrees or radians. The default is ``90.0``.</span>\n<span class=\"sd\">        unit : text, optional</span>\n<span class=\"sd\">             Units for the angle. Options are ``&quot;deg&quot;`` or ``&quot;rad&quot;``.</span>\n<span class=\"sd\">             The default is ``&quot;deg&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d, bool</span>\n<span class=\"sd\">            3D object.</span>\n<span class=\"sd\">            ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Rotate</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"o\">=</span><span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">unit</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.move\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.move/#pyaedt.modeler.Primitives.Object3d.move\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Move objects from a list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objid : list, Position object</span>\n<span class=\"sd\">            List of object IDs.</span>\n<span class=\"sd\">        vector : list</span>\n<span class=\"sd\">            Vector of the direction move. It can be a list of the ``[x, y, z]``</span>\n<span class=\"sd\">            coordinates or a Position object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d, bool</span>\n<span class=\"sd\">            3D object.</span>\n<span class=\"sd\">            ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Move</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"n\">vector</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.duplicate_around_axis\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.duplicate_around_axis/#pyaedt.modeler.Primitives.Object3d.duplicate_around_axis\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">duplicate_around_axis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">create_new_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Duplicate the object around the axis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cs_axis : Application.CoordinateSystemAxis object</span>\n<span class=\"sd\">            Coordinate system axis of the object.</span>\n<span class=\"sd\">        angle : float</span>\n<span class=\"sd\">            Angle of rotation in degrees. The default is ``90``.</span>\n<span class=\"sd\">        nclones : int, optional</span>\n<span class=\"sd\">            Number of clones. The default is ``2``.</span>\n<span class=\"sd\">        create_new_objects : bool, optional</span>\n<span class=\"sd\">            Whether to create copies as new objects. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of names of the newly added objects.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.DuplicateAroundAxis</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">added_objects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_around_axis</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"p\">,</span> <span class=\"n\">create_new_objects</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">added_objects</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.duplicate_along_line\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.duplicate_along_line/#pyaedt.modeler.Primitives.Object3d.duplicate_along_line\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_along_line</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">attachObject</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Duplicate the object along a line.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        vector : list</span>\n<span class=\"sd\">            List of ``[x1 ,y1, z1]`` coordinates for the vector or the Application.Position object.</span>\n<span class=\"sd\">        nclones : int, optional</span>\n<span class=\"sd\">            Number of clones. The default is ``2``.</span>\n<span class=\"sd\">        attachObject : bool, optional</span>\n<span class=\"sd\">            Whether to attach the object. The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of names of the newly added objects.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.DuplicateAlongLine</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">added_objects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_along_line</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"p\">,</span> <span class=\"n\">attachObject</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">added_objects</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.translate\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.translate/#pyaedt.modeler.Primitives.Object3d.translate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">translate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Translate the object and return the 3D object.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.0</span>\n<span class=\"sd\">           Use :func:`move` instead.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            3D object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Move</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;`translate` is deprecated. Use `move` instead.&quot;</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">vector</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.sweep_along_vector\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.sweep_along_vector/#pyaedt.modeler.Primitives.Object3d.sweep_along_vector\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">sweep_along_vector</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sweep_vector</span><span class=\"p\">,</span> <span class=\"n\">draft_angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">draft_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Round&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Sweep the selection along a vector.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sweep_vector :</span>\n<span class=\"sd\">            Application.Position object</span>\n<span class=\"sd\">        draft_angle : float, optional</span>\n<span class=\"sd\">            Angle of the draft in degrees. The default is ``0``.</span>\n<span class=\"sd\">        draft_type : str</span>\n<span class=\"sd\">            Type of the draft. Options are ``&quot;Extended&quot;``, ``&quot;Round&quot;``,</span>\n<span class=\"sd\">            and ``&quot;Natural&quot;``. The default is ``&quot;Round``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when model, ``False`` otherwise.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.SweepAlongVector</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sweep_along_vector</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sweep_vector</span><span class=\"p\">,</span> <span class=\"n\">draft_angle</span><span class=\"p\">,</span> <span class=\"n\">draft_type</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.sweep_along_path\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.sweep_along_path/#pyaedt.modeler.Primitives.Object3d.sweep_along_path\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">sweep_along_path</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sweep_object</span><span class=\"p\">,</span> <span class=\"n\">draft_angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">draft_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Round&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_check_face_intersection</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">twist_angle</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Sweep the selection along a vector.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        sweep_vector :</span>\n<span class=\"sd\">            Application.Position object</span>\n<span class=\"sd\">        draft_angle : float, optional</span>\n<span class=\"sd\">            Angle of the draft in degrees. The default is ``0``.</span>\n<span class=\"sd\">        draft_type : str</span>\n<span class=\"sd\">            Type of the draft. Options are ``&quot;Extended&quot;``, ``&quot;Round&quot;``,</span>\n<span class=\"sd\">            and ``&quot;Natural&quot;``. The default is ``&quot;Round``.</span>\n<span class=\"sd\">        is_check_face_intersection : bool, optional</span>\n<span class=\"sd\">           The default is ``False``.</span>\n<span class=\"sd\">        twist_angle : float, optional</span>\n<span class=\"sd\">            Angle at which to twist or rotate in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            Swept object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.SweepAlongPath</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sweep_along_path</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sweep_object</span><span class=\"p\">,</span> <span class=\"n\">draft_angle</span><span class=\"p\">,</span> <span class=\"n\">draft_type</span><span class=\"p\">,</span> <span class=\"n\">is_check_face_intersection</span><span class=\"p\">,</span> <span class=\"n\">twist_angle</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.sweep_around_axis\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.sweep_around_axis/#pyaedt.modeler.Primitives.Object3d.sweep_around_axis\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">sweep_around_axis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">sweep_angle</span><span class=\"o\">=</span><span class=\"mi\">360</span><span class=\"p\">,</span> <span class=\"n\">draft_angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Sweep around an axis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cs_axis : pyaedt.generic.constants.CoordinateSystemAxis</span>\n<span class=\"sd\">            Coordinate system of the axis.</span>\n<span class=\"sd\">        sweep_angle : float, optional</span>\n<span class=\"sd\">             Sweep angle in degrees. The default is ``360``.</span>\n<span class=\"sd\">        draft_angle : float, optional</span>\n<span class=\"sd\">            Angle of the draft. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            Swept object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.SweepAroundAxis</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sweep_around_axis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">sweep_angle</span><span class=\"p\">,</span> <span class=\"n\">draft_angle</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.section\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.section/#pyaedt.modeler.Primitives.Object3d.section\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">section</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">plane</span><span class=\"p\">,</span> <span class=\"n\">create_new</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">section_cross_object</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Section the object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        plane : pyaedt.generic.constants.PLANE</span>\n<span class=\"sd\">            Coordinate system of the plane object. Application.PLANE object</span>\n<span class=\"sd\">        create_new : bool, optional</span>\n<span class=\"sd\">            Whether to create an object. The default is ``True``.</span>\n<span class=\"sd\">        section_cross_object : bool, optional</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            3D object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Section</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># TODO Refactor plane !</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">section</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">plane</span><span class=\"p\">,</span> <span class=\"n\">create_new</span><span class=\"p\">,</span> <span class=\"n\">section_cross_object</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.clone\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.clone/#pyaedt.modeler.Primitives.Object3d.clone\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">clone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Clone the object and return the new 3D object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            3D object that was added.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Clone</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">new_obj_tuple</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n        <span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">new_obj_tuple</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">assert</span> <span class=\"n\">success</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Could not clone the object </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">new_name</span> <span class=\"o\">=</span> <span class=\"n\">new_obj_tuple</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"p\">[</span><span class=\"n\">new_name</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.subtract\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.subtract/#pyaedt.modeler.Primitives.Object3d.subtract\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">subtract</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tool_list</span><span class=\"p\">,</span> <span class=\"n\">keep_originals</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Subtract one or more parts from the object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        tool_list : str, Object3d, or list of str and Object3d.</span>\n<span class=\"sd\">            List of parts to subtract from this part.</span>\n<span class=\"sd\">        keep_originals : bool, optional</span>\n<span class=\"sd\">            Whether to keep the tool parts after subtraction. The default</span>\n<span class=\"sd\">            is ``True``. If ``False``, the parts are deleted.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.Object3d</span>\n<span class=\"sd\">            Modified 3D object following the subtraction.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Subtract</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">tool_list</span><span class=\"p\">,</span> <span class=\"n\">keep_originals</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.wrap_sheet\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.wrap_sheet/#pyaedt.modeler.Primitives.Object3d.wrap_sheet\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wrap_sheet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">imprinted</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Execute the sheet wrapping around an object. This object can be either the sheet or the object.</span>\n<span class=\"sd\">        If wrapping produces an unclassified operation it will be reverted.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        object_name : str, :class:`pyaedt.modeler.Object3d.Object3d`</span>\n<span class=\"sd\">            Object name or solid object or sheet name.</span>\n<span class=\"sd\">        imprinted : bool, optional</span>\n<span class=\"sd\">            Either if imprint or not over the sheet. Default is `False`.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            Command execution status.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">object_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">convert_to_selections</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Sheet&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">object_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">solid_names</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">wrap_sheet</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"n\">imprinted</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Solid&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">object_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">sheet_names</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">wrap_sheet</span><span class=\"p\">(</span><span class=\"n\">object_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">imprinted</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Error in command execution.&quot;</span>\n            <span class=\"n\">msg</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot; Either one of the two objects has to be a sheet and the other an object.&quot;</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.delete\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.delete/#pyaedt.modeler.Primitives.Object3d.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete the object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Delete</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">cleanup_objects</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.faces_by_area\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.faces_by_area/#pyaedt.modeler.Primitives.Object3d.faces_by_area\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">faces_by_area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">area</span><span class=\"p\">,</span> <span class=\"n\">area_filter</span><span class=\"o\">=</span><span class=\"s2\">&quot;==&quot;</span><span class=\"p\">,</span> <span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-12</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Filter faces by area.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        area : float</span>\n<span class=\"sd\">            Value of the area to filter in model units.</span>\n<span class=\"sd\">        area_filter : str, optional</span>\n<span class=\"sd\">            Comparer symbol.</span>\n<span class=\"sd\">            Default value is &quot;==&quot;.</span>\n<span class=\"sd\">        tolerance : float, optional</span>\n<span class=\"sd\">            tolerance for comparison.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.FacePrimitive`</span>\n<span class=\"sd\">            list of face primitives.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;==&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&gt;=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&gt;&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">area_filter</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">filters</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Symbol not valid, enter one of the following: &quot;==&quot;, &quot;&lt;=&quot;, &quot;&gt;=&quot;, &quot;&lt;&quot;, &quot;&gt;&quot;&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">faces</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">area_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;==&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span> <span class=\"o\">-</span> <span class=\"n\">area</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">tolerance</span><span class=\"p\">:</span>\n                    <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">area_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&gt;=&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span> <span class=\"o\">-</span> <span class=\"n\">area</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"o\">-</span><span class=\"n\">tolerance</span><span class=\"p\">:</span>\n                    <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">area_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span> <span class=\"o\">-</span> <span class=\"n\">area</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"n\">tolerance</span><span class=\"p\">:</span>\n                    <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">area_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&gt;&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span> <span class=\"o\">-</span> <span class=\"n\">area</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">area_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&lt;&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">area</span> <span class=\"o\">-</span> <span class=\"n\">area</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">faces</span></div>\n\n<div class=\"viewcode-block\" id=\"Object3d.edges_by_length\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Object3d.edges_by_length/#pyaedt.modeler.Primitives.Object3d.edges_by_length\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edges_by_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"p\">,</span> <span class=\"n\">length_filter</span><span class=\"o\">=</span><span class=\"s2\">&quot;==&quot;</span><span class=\"p\">,</span> <span class=\"n\">tolerance</span><span class=\"o\">=</span><span class=\"mf\">1e-12</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Filter edges by length.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        length : float</span>\n<span class=\"sd\">            Value of the length to filter.</span>\n<span class=\"sd\">        length_filter : str, optional</span>\n<span class=\"sd\">            Comparer symbol.</span>\n<span class=\"sd\">            Default value is &quot;==&quot;.</span>\n<span class=\"sd\">        tolerance : float, optional</span>\n<span class=\"sd\">            tolerance for comparison.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.EdgePrimitive`</span>\n<span class=\"sd\">            list of edge primitives.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;==&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&gt;=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&gt;&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">length_filter</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">filters</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">&#39;Symbol not valid, enter one of the following: &quot;==&quot;, &quot;&lt;=&quot;, &quot;&gt;=&quot;, &quot;&lt;&quot;, &quot;&gt;&quot;&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">edges</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">edge</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">length_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;==&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">-</span> <span class=\"n\">length</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">tolerance</span><span class=\"p\">:</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">length_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&gt;=&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">-</span> <span class=\"n\">length</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"o\">-</span><span class=\"n\">tolerance</span><span class=\"p\">:</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">length_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&lt;=&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">-</span> <span class=\"n\">length</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"n\">tolerance</span><span class=\"p\">:</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">length_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&gt;&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">-</span> <span class=\"n\">length</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">length_filter</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;&lt;&quot;</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"o\">.</span><span class=\"n\">length</span> <span class=\"o\">-</span> <span class=\"n\">length</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">edges</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">edge</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">edges</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_change_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vPropChange</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_change_geometry_property</span><span class=\"p\">(</span><span class=\"n\">vPropChange</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># self._object3d._refresh_object_types()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">cleanup_objects</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">         </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         name: </span><span class=\"si\">{}</span><span class=\"s2\">    id: </span><span class=\"si\">{}</span><span class=\"s2\">    object_type: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         --- read/write properties  ----</span>\n<span class=\"s2\">         solve_inside: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         model: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         material_name: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         color: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         transparency: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         display_wireframe </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         part_coordinate_system: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         &quot;&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_type</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solve_inside</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">material_name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transparency</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">display_wireframe</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">part_coordinate_system</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Padstack\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Padstack/#pyaedt.modeler.Primitives.Padstack\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Padstack</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages properties of a padstack.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    name : str, optional</span>\n<span class=\"sd\">        Name of the padstack. The default is ``&quot;Padstack&quot;``.</span>\n<span class=\"sd\">    padstackmanager : optional</span>\n<span class=\"sd\">        The default is ``None``.</span>\n<span class=\"sd\">    units : str, optional</span>\n<span class=\"sd\">        The default is ``mm``.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Padstack&quot;</span><span class=\"p\">,</span> <span class=\"n\">padstackmanager</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstackmgr</span> <span class=\"o\">=</span> <span class=\"n\">padstackmanager</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lib</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mat</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;copper&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plating</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PDSHole</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">holerange</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;UTL&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_shape</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;None&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_placement</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;abv&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_rad</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0mm&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sb2</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0mm&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_mat</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;solder&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layerid</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">PDSHole</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Manages properties of a padstack hole.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        holetype : str, optional</span>\n<span class=\"sd\">            Type of the hole. The default is ``Circular``.</span>\n<span class=\"sd\">        sizes : str, optional</span>\n<span class=\"sd\">            Diameter of the hole with units. The default is ``&quot;1mm&quot;``.</span>\n<span class=\"sd\">        xpos : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        ypos : str, optional</span>\n<span class=\"sd\">            The default is ``&quot;0mm&quot;``.</span>\n<span class=\"sd\">        rot : str, otpional</span>\n<span class=\"sd\">            Rotation in degrees. The default is ``&quot;0deg&quot;``.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">holetype</span><span class=\"o\">=</span><span class=\"s2\">&quot;Cir&quot;</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">],</span> <span class=\"n\">xpos</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"o\">=</span><span class=\"s2\">&quot;0mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">rot</span><span class=\"o\">=</span><span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"n\">holetype</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sizes</span> <span class=\"o\">=</span> <span class=\"n\">sizes</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">xpos</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">ypos</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rot</span> <span class=\"o\">=</span> <span class=\"n\">rot</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">PDSLayer</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Manages properties of a padstack layer.&quot;&quot;&quot;</span>\n\n        <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">layername</span><span class=\"o\">=</span><span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layername</span> <span class=\"o\">=</span> <span class=\"n\">layername</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">id</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pad</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_antipad</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connectionx</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connectiony</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connectiondir</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n        <span class=\"nd\">@property</span>\n        <span class=\"k\">def</span> <span class=\"nf\">pad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"sd\">&quot;&quot;&quot;Pad.&quot;&quot;&quot;</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pad</span>\n\n        <span class=\"nd\">@property</span>\n        <span class=\"k\">def</span> <span class=\"nf\">antipad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"sd\">&quot;&quot;&quot;Antipad.&quot;&quot;&quot;</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_antipad</span>\n\n        <span class=\"nd\">@pad</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n        <span class=\"k\">def</span> <span class=\"nf\">pad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pad</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pad</span> <span class=\"o\">=</span> <span class=\"n\">Padstack</span><span class=\"o\">.</span><span class=\"n\">PDSHole</span><span class=\"p\">(</span><span class=\"n\">holetype</span><span class=\"o\">=</span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n\n        <span class=\"nd\">@antipad</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n        <span class=\"k\">def</span> <span class=\"nf\">antipad</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_antipad</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_antipad</span> <span class=\"o\">=</span> <span class=\"n\">Padstack</span><span class=\"o\">.</span><span class=\"n\">PDSHole</span><span class=\"p\">(</span><span class=\"n\">holetype</span><span class=\"o\">=</span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n\n        <span class=\"nd\">@property</span>\n        <span class=\"k\">def</span> <span class=\"nf\">thermal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"sd\">&quot;&quot;&quot;Thermal.&quot;&quot;&quot;</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal</span>\n\n        <span class=\"nd\">@thermal</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n        <span class=\"k\">def</span> <span class=\"nf\">thermal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_thermal</span> <span class=\"o\">=</span> <span class=\"n\">Padstack</span><span class=\"o\">.</span><span class=\"n\">PDSHole</span><span class=\"p\">(</span><span class=\"n\">holetype</span><span class=\"o\">=</span><span class=\"s2\">&quot;None&quot;</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pads_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pad properties.&quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModTime:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1594101963</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;LibLocation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:psd&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;nam:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;lib:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mat:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mat</span><span class=\"p\">,</span> <span class=\"s2\">&quot;plt:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plating</span><span class=\"p\">]</span>\n        <span class=\"n\">arg3</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:pds&quot;</span><span class=\"p\">]</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"n\">arg4</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;NAME:lgm&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;lay:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">layername</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;id:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;pad:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;shp:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pad</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Szs:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pad</span><span class=\"o\">.</span><span class=\"n\">sizes</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pad</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pad</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">pad</span><span class=\"o\">.</span><span class=\"n\">rot</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ant:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;shp:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">antipad</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Szs:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">antipad</span><span class=\"o\">.</span><span class=\"n\">sizes</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">antipad</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">antipad</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">antipad</span><span class=\"o\">.</span><span class=\"n\">rot</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;thm:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;shp:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermal</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Szs:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermal</span><span class=\"o\">.</span><span class=\"n\">sizes</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermal</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermal</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thermal</span><span class=\"o\">.</span><span class=\"n\">rot</span><span class=\"p\">,</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">connectionx</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">connectiony</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;dir:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg4</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">connectiondir</span><span class=\"p\">)</span>\n            <span class=\"n\">arg3</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg4</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg3</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;hle:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;shp:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Szs:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">sizes</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">rot</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;hRg:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">holerange</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;sbsh:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_shape</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;sbpl:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_placement</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;sbr:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_rad</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;sb2:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sb2</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;sbn:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solder_mat</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;ppl:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([])</span>\n        <span class=\"k\">return</span> <span class=\"n\">arg</span>\n\n<div class=\"viewcode-block\" id=\"Padstack.add_layer\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Padstack.add_layer/#pyaedt.modeler.Primitives.Padstack.add_layer\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_layer</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">layername</span><span class=\"o\">=</span><span class=\"s2\">&quot;Start&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">pad_hole</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">antipad_hole</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">thermal_hole</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">connx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">conny</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">conndir</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">layer_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a layer in the padstack.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        layername : str, optional</span>\n<span class=\"sd\">            Name of layer. The default is ``&quot;Start&quot;``.</span>\n<span class=\"sd\">        pad_hole : pyaedt.modeler.Object3d.Object3d.PDSHole</span>\n<span class=\"sd\">            Pad hole object, which you can create with the :func:`add_hole` method.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        antipad_hole :</span>\n<span class=\"sd\">            Antipad hole object, which you can create with the :func:`add_hole` method.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        thermal_hole :</span>\n<span class=\"sd\">            Thermal hole object, which you can create with the :func:`add_hole` method.</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        connx : optional</span>\n<span class=\"sd\">            Connection in the X-axis direction. The default is ``0.``</span>\n<span class=\"sd\">        conny : optional</span>\n<span class=\"sd\">            Connection in the Y-axis direction. The default is ``0.``</span>\n<span class=\"sd\">        conndir :</span>\n<span class=\"sd\">            Connection attach angle. The default is ``0.``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">layer_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">layername</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">layer_id</span><span class=\"p\">:</span>\n                <span class=\"n\">layer_id</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()))</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n            <span class=\"n\">new_layer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PDSLayer</span><span class=\"p\">(</span><span class=\"n\">layername</span><span class=\"p\">,</span> <span class=\"n\">layer_id</span><span class=\"p\">)</span>\n            <span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">pad</span> <span class=\"o\">=</span> <span class=\"n\">pad_hole</span>\n            <span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">antipad</span> <span class=\"o\">=</span> <span class=\"n\">antipad_hole</span>\n            <span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">thermal</span> <span class=\"o\">=</span> <span class=\"n\">thermal_hole</span>\n            <span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">connectionx</span> <span class=\"o\">=</span> <span class=\"n\">connx</span>\n            <span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">connectiony</span> <span class=\"o\">=</span> <span class=\"n\">conny</span>\n            <span class=\"n\">new_layer</span><span class=\"o\">.</span><span class=\"n\">connectiondir</span> <span class=\"o\">=</span> <span class=\"n\">conndir</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"n\">layername</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">new_layer</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Padstack.add_hole\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Padstack.add_hole/#pyaedt.modeler.Primitives.Padstack.add_hole\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_hole</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">holetype</span><span class=\"o\">=</span><span class=\"s2\">&quot;Cir&quot;</span><span class=\"p\">,</span> <span class=\"n\">sizes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">xpos</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">rot</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a hole.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        holetype : str, optional</span>\n<span class=\"sd\">            Type of the hole. Options are:</span>\n\n<span class=\"sd\">            * No&quot; - no pad</span>\n<span class=\"sd\">            * &quot;Cir&quot; - Circle</span>\n<span class=\"sd\">            * &quot;Sq&quot; - Square</span>\n<span class=\"sd\">            * &quot;Rct&quot; - Rectangle</span>\n<span class=\"sd\">            * &quot;Ov&quot; - Oval</span>\n<span class=\"sd\">            * &quot;Blt&quot; - Bullet</span>\n<span class=\"sd\">            * &quot;Ply&quot; - Polygons</span>\n<span class=\"sd\">            * &quot;R45&quot; - Round 45 thermal</span>\n<span class=\"sd\">            * &quot;R90&quot; - Round 90 thermal</span>\n<span class=\"sd\">            * &quot;S45&quot; - Square 45 thermal</span>\n<span class=\"sd\">            * &quot;S90&quot; - Square 90 thermal</span>\n\n<span class=\"sd\">            The default is ``&quot;Cir&quot;``.</span>\n<span class=\"sd\">        sizes : array, optional</span>\n<span class=\"sd\">            Array of sizes, which depends on the object. For example, a circle ias an array</span>\n<span class=\"sd\">            of one element. The default is ``[1]``.</span>\n<span class=\"sd\">        xpos :</span>\n<span class=\"sd\">            Position on the X axis. The default is ``0``.</span>\n<span class=\"sd\">        ypos :</span>\n<span class=\"sd\">            Position on the Y axis. The default is ``0``.</span>\n<span class=\"sd\">        rot : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.Object3d.PDSHole`</span>\n<span class=\"sd\">            Hole object to be passed to padstack or layer.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">hole</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PDSHole</span><span class=\"p\">()</span>\n        <span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">shape</span> <span class=\"o\">=</span> <span class=\"n\">holetype</span>\n        <span class=\"n\">sizes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">sizes</span> <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">int</span> <span class=\"ow\">or</span> <span class=\"nb\">float</span><span class=\"p\">]</span>\n        <span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">sizes</span> <span class=\"o\">=</span> <span class=\"n\">sizes</span>\n        <span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">ypos</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span><span class=\"p\">)</span>\n        <span class=\"n\">hole</span><span class=\"o\">.</span><span class=\"n\">rot</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">rot</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">hole</span></div>\n\n<div class=\"viewcode-block\" id=\"Padstack.create\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Padstack.create/#pyaedt.modeler.Primitives.Padstack.create\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a padstack in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.Add</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstackmgr</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pads_args</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Padstack.update\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Padstack.update/#pyaedt.modeler.Primitives.Padstack.update\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the padstack in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.Edit</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstackmgr</span><span class=\"o\">.</span><span class=\"n\">Edit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pads_args</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Padstack.remove\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.Padstack.remove/#pyaedt.modeler.Primitives.Padstack.remove\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Remove the padstack in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.Remove</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">padstackmgr</span><span class=\"o\">.</span><span class=\"n\">Remove</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"CircuitPins\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitPins/#pyaedt.modeler.Primitives.CircuitPins\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CircuitPins</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class that manages circuit component pins.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">circuit_comp</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span> <span class=\"o\">=</span> <span class=\"n\">circuit_comp</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">pinname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"n\">circuit_comp</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pin Position in [x,y] format.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.GetComponentPinLocation</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n            <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">30</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Component Location&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">pos1</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"n\">pos1</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">pos1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()[:</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"mf\">0.0000254</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">pos1</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;GPort&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                    <span class=\"n\">pos1</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"mf\">0.00254</span>\n                <span class=\"k\">return</span> <span class=\"n\">pos1</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">),</span>\n            <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"kc\">False</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">net</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get pin net.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;PagePort@&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">net</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"p\">:</span>\n            <span class=\"n\">conns</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetNetConnections</span><span class=\"p\">(</span><span class=\"n\">net</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">conn</span> <span class=\"ow\">in</span> <span class=\"n\">conns</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;;</span><span class=\"si\">{}</span><span class=\"s2\">;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">conn</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;;</span><span class=\"si\">{}</span><span class=\"s2\"> &quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">conn</span>\n                <span class=\"p\">):</span>\n                    <span class=\"k\">return</span> <span class=\"n\">net</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n<div class=\"viewcode-block\" id=\"CircuitPins.connect_to_component\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitPins.connect_to_component/#pyaedt.modeler.Primitives.CircuitPins.connect_to_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connect_to_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_pin</span><span class=\"p\">,</span> <span class=\"n\">page_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Connect schematic components.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_pin : :class:`pyaedt.modeler.PrimitivesNexxim.CircuitPins`</span>\n<span class=\"sd\">           Component Pin to attach</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            page port name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oPadstackManager.CreatePagePort</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">component_pin</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n            <span class=\"n\">component_pin</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">component_pin</span><span class=\"p\">]</span>\n        <span class=\"n\">comp_angle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"n\">comp_angle</span> <span class=\"o\">+=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n        <span class=\"k\">if</span> <span class=\"n\">page_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">page_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">_</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompInst@&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">page_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"n\">component_pin</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">page_name</span> <span class=\"o\">=</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span>\n                        <span class=\"k\">break</span>\n                    <span class=\"k\">except</span><span class=\"p\">:</span>\n                        <span class=\"k\">continue</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span>\n                <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">x_loc</span><span class=\"p\">:</span>\n            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">comp_angle</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">+</span> <span class=\"n\">comp_angle</span>\n        <span class=\"n\">ret1</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span><span class=\"n\">page_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">cmp</span> <span class=\"ow\">in</span> <span class=\"n\">component_pin</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span>\n                    <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"n\">x_loc</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n            <span class=\"n\">comp_pin_angle</span> <span class=\"o\">=</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">angle</span> <span class=\"o\">*</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">180</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">pins</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                <span class=\"n\">comp_pin_angle</span> <span class=\"o\">+=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n            <span class=\"k\">if</span> <span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">x_loc</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">comp_pin_angle</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">+</span> <span class=\"n\">comp_pin_angle</span>\n            <span class=\"n\">ret2</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_comp</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">create_page_port</span><span class=\"p\">(</span>\n                <span class=\"n\">page_name</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">cmp</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">ret1</span> <span class=\"ow\">and</span> <span class=\"n\">ret2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ComponentParameters</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tab</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)]],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Property </span><span class=\"si\">%s</span><span class=\"s2\"> has not been edited.Check if readonly&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">):</span>\n        <span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_tab</span> <span class=\"o\">=</span> <span class=\"n\">tab</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelParameters</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the model properties.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span>\n            <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n            <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">EditWithComps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to update model </span><span class=\"si\">%s</span><span class=\"s2\"> &quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"n\">props</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n\n<div class=\"viewcode-block\" id=\"CircuitComponent\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitComponent/#pyaedt.modeler.Primitives.CircuitComponent\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CircuitComponent</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages circuit components.&quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">composed_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Composed names.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">circuit_components</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">tabname</span><span class=\"o\">=</span><span class=\"s2\">&quot;PassedParameterTab&quot;</span><span class=\"p\">,</span> <span class=\"n\">custom_editor</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span> <span class=\"o\">=</span> <span class=\"n\">circuit_components</span>\n        <span class=\"k\">if</span> <span class=\"n\">custom_editor</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"n\">custom_editor</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modelName</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Active&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">component</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refdes</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">levels</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">usesymbolcolor</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">units</span> <span class=\"o\">=</span> <span class=\"n\">units</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"n\">tabname</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">InstanceName</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_property_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Property Data List.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;@&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]))</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return Model Name if present.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;ModelDefName:=&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_property_data</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"s2\">&quot;ModelDefName:=&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the model data if the component has one.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.ModelParameters`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the model data if the component has one.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">:</span>\n            <span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n            <span class=\"n\">_arg2dict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)),</span> <span class=\"n\">_parameters</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span> <span class=\"o\">=</span> <span class=\"n\">ModelParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">_parameters</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_model_data</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Circuit Parameters.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetProperties</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span>\n        <span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Maxwell Circuit&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Quantities&quot;</span>\n        <span class=\"n\">proparray</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">proparray</span><span class=\"p\">:</span>\n            <span class=\"n\">propval</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n            <span class=\"n\">_parameters</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">propval</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"n\">ComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"n\">_parameters</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">component_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Component parameters.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetProperties</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Circuit Design&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span>\n        <span class=\"n\">_component_info</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Component&quot;</span>\n        <span class=\"n\">proparray</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"n\">proparray</span><span class=\"p\">:</span>\n            <span class=\"n\">propval</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)</span>\n            <span class=\"n\">_component_info</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">propval</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span> <span class=\"o\">=</span> <span class=\"n\">ComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">,</span> <span class=\"n\">_component_info</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_info</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pins of the component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list of :class:`pyaedt.modeler.Object3d.CircuitPins`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Port&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">pins</span> <span class=\"ow\">or</span> <span class=\"n\">pins</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">pins</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;Twin Builder&quot;</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">))</span>\n                <span class=\"k\">elif</span> <span class=\"n\">pin</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">CircuitPins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pins</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the part location.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">loc</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Component Location&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">loc</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(),</span> <span class=\"n\">loc</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;,&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()]</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span>\n\n    <span class=\"nd\">@location</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">location_xy</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the part location.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        location_xy : list</span>\n<span class=\"sd\">            List of x and y coordinates. If float is provided, ``mils`` will be used.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">decomposed</span> <span class=\"o\">=</span> <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">location_xy</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">x_location</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"n\">MILS2METER</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">x_location</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n            <span class=\"n\">x_location</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">x_location</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">x_location</span> <span class=\"o\">=</span> <span class=\"n\">location_xy</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">decomposed</span> <span class=\"o\">=</span> <span class=\"n\">decompose_variable_value</span><span class=\"p\">(</span><span class=\"n\">location_xy</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">y_location</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">*</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">*</span> <span class=\"n\">MILS2METER</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">y_location</span> <span class=\"o\">=</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">decomposed</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n            <span class=\"n\">y_location</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">y_location</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">y_location</span> <span class=\"o\">=</span> <span class=\"n\">location_xy</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Location&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">x_location</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">y_location</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_location</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x_location</span><span class=\"p\">,</span> <span class=\"n\">y_location</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the part angle.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                    <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Component Angle&quot;</span>\n                <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u00b0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span>\n\n    <span class=\"nd\">@angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set the part angle.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">angle</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_angle</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;\u00b0&quot;</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">_dim_arg</span><span class=\"p\">(</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;\u00b0&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Angle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_circuit_components</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Grpc doesn&#39;t support angle settings because special characters are not supported.&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get the part mirror.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                    <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetPropertyValue</span><span class=\"p\">,</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Component Mirror&quot;</span>\n                <span class=\"p\">)</span>\n                <span class=\"o\">==</span> <span class=\"s2\">&quot;true&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mirror</span>\n\n    <span class=\"nd\">@mirror</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mirror_value</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mirror part.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        mirror_value : bool</span>\n<span class=\"sd\">            Either to mirror the part. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Mirror&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">mirror_value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.set_use_symbol_color\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitComponent.set_use_symbol_color/#pyaedt.modeler.Primitives.CircuitComponent.set_use_symbol_color\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_use_symbol_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">symbol_color</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set symbol color usage.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        symbol_color : bool, optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">symbol_color</span><span class=\"p\">:</span>\n            <span class=\"n\">symbol_color</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">usesymbolcolor</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Use Symbol Color&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">symbol_color</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.set_color\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitComponent.set_color/#pyaedt.modeler.Primitives.CircuitComponent.set_color\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_color</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">R</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"n\">G</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set symbol color.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        R : int, optional</span>\n<span class=\"sd\">            Red color value. The default is ``255``.</span>\n<span class=\"sd\">        G : int, optional</span>\n<span class=\"sd\">            Green color value. The default is ``128``.</span>\n<span class=\"sd\">        B : int, optional</span>\n<span class=\"sd\">            Blue color value. The default is ``0``</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vMaterial</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Component Color&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;R:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"s2\">&quot;G:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"s2\">&quot;B:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">vMaterial</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.set_property\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitComponent.set_property/#pyaedt.modeler.Primitives.CircuitComponent.set_property\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set a part property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        property_name : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        property_value :</span>\n<span class=\"sd\">            Value for the property.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">property_name</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n                <span class=\"n\">v_prop</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">v_prop</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">v_prop</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_property</span><span class=\"p\">(</span><span class=\"n\">v_prop</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">property_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">property_value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">property_name</span><span class=\"p\">,</span> <span class=\"n\">property_value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        property_name : str</span>\n<span class=\"sd\">            Name of the property.</span>\n<span class=\"sd\">        property_value :</span>\n<span class=\"sd\">            Value for the property.</span>\n\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">property_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">property_value</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"CircuitComponent.change_property\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.CircuitComponent.change_property/#pyaedt.modeler.Primitives.CircuitComponent.change_property\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">change_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vPropChange</span><span class=\"p\">,</span> <span class=\"n\">names_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Modify a property.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        vPropChange :</span>\n\n<span class=\"sd\">        names_list : list, optional</span>\n<span class=\"sd\">             The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">vChangedProps</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"n\">vPropChange</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">names_list</span><span class=\"p\">:</span>\n            <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">names_list</span><span class=\"p\">:</span>\n                <span class=\"n\">vPropServers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">vPropServers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">]</span>\n        <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">vPropChange</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tabname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)):</span>\n            <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tabname</span>\n        <span class=\"k\">elif</span> <span class=\"n\">vPropChange</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"s2\">&quot;PassedParameterTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)):</span>\n            <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PassedParameterTab&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"n\">vPropChange</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">:]</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">GetProperties</span><span class=\"p\">(</span><span class=\"s2\">&quot;BaseElementTab&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)):</span>\n            <span class=\"n\">tabname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;BaseElementTab&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">tabname</span><span class=\"p\">:</span>\n            <span class=\"n\">vGeo3dlayout</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">tabname</span><span class=\"p\">,</span> <span class=\"n\">vPropServers</span><span class=\"p\">,</span> <span class=\"n\">vChangedProps</span><span class=\"p\">]</span>\n            <span class=\"n\">vOut</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span> <span class=\"n\">vGeo3dlayout</span><span class=\"p\">]</span>\n            <span class=\"k\">return</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">,</span> <span class=\"n\">vOut</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserDefinedComponentParameters</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_m_Editor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)]],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Property </span><span class=\"si\">%s</span><span class=\"s2\"> has not been edited.Check if readonly&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">):</span>\n        <span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserDefinedComponentProps</span><span class=\"p\">(</span><span class=\"n\">OrderedDict</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;User Defined Component Internal Parameters.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_user_defined_component</span><span class=\"o\">.</span><span class=\"n\">auto_update</span><span class=\"p\">:</span>\n            <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_user_defined_component</span><span class=\"o\">.</span><span class=\"n\">update_native</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_user_defined_component</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Update of </span><span class=\"si\">%s</span><span class=\"s2\"> Failed. Check needed arguments&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_defined_components</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"p\">):</span>\n        <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">props</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">)):</span>\n                    <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">UserDefinedComponentProps</span><span class=\"p\">(</span><span class=\"n\">user_defined_components</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pyaedt_user_defined_component</span> <span class=\"o\">=</span> <span class=\"n\">user_defined_components</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_setitem_without_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">OrderedDict</span><span class=\"o\">.</span><span class=\"fm\">__setitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent/#pyaedt.modeler.Primitives.UserDefinedComponent\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">UserDefinedComponent</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages object attributes for 3DComponent and User Defined Model.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    primitives : :class:`pyaedt.modeler.Primitives3D.Primitives3D`</span>\n<span class=\"sd\">        Inherited parent object.</span>\n<span class=\"sd\">    name : str</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Basic usage demonstrated with an HFSS design:</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Hfss</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Hfss()</span>\n<span class=\"sd\">    &gt;&gt;&gt; prim = aedtapp.modeler.user_defined_components</span>\n\n<span class=\"sd\">    Obtain user defined component names, to return an :class:`pyaedt.modeler.Object3d.UserDefinedComponent`.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; component_names = aedtapp.modeler.user_defined_components</span>\n<span class=\"sd\">    &gt;&gt;&gt; component = aedtapp.modeler[component_names[0]]</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">primitives</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">component_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        primitives : :class:`pyaedt.modeler.Primitives3D.Primitives3D`</span>\n<span class=\"sd\">            Inherited parent object.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            The default is ``None``.</span>\n<span class=\"sd\">        props : dict, optional</span>\n<span class=\"sd\">            Dictionary of properties. The default is ``None``.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fix_udm_props</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;General[Name]&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Group&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Target Coordinate System&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Target Coordinate System/Choices&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Info[Name]&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Location&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Location/Choices&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Company&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Date&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Purpose&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Version&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_group_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is3dcomponent</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_assembly</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"o\">=</span> <span class=\"n\">_uname</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parts</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span> <span class=\"o\">=</span> <span class=\"n\">primitives</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target_coordinate_system</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Global&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is_updated</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_all_props</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">defined_components</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentDefinitionNames</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">component</span> <span class=\"ow\">in</span> <span class=\"n\">defined_components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentInstanceNames</span><span class=\"p\">(</span><span class=\"n\">component</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">definition_name</span> <span class=\"o\">=</span> <span class=\"n\">component</span>\n        <span class=\"k\">if</span> <span class=\"n\">component_type</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"o\">=</span> <span class=\"n\">UserDefinedComponentProps</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"p\">,</span>\n                <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;TargetCS&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target_coordinate_system</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;SubmodelDefinitionName&quot;</span><span class=\"p\">:</span> <span class=\"n\">component</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;ComponentPriorityLists&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({}),</span>\n                        <span class=\"s2\">&quot;NextUniqueID&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;MoveBackwards&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;DatasetType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ComponentDatasetType&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({}),</span>\n                        <span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"s2\">&quot;ComponentName&quot;</span><span class=\"p\">:</span> <span class=\"n\">component</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Company&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Company URL&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Model Number&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Help URL&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;Notes&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                                <span class=\"s2\">&quot;IconType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">),</span>\n                        <span class=\"s2\">&quot;GeometryDefinitionParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;VariableOrders&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})}),</span>\n                        <span class=\"s2\">&quot;DesignDefinitionParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;VariableOrders&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})}),</span>\n                        <span class=\"s2\">&quot;MaterialDefinitionParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;VariableOrders&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})}),</span>\n                        <span class=\"s2\">&quot;MapInstanceParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DesignVariable&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;UniqueDefinitionIdentifier&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;89d26167-fb77-480e-a7ab-&quot;</span>\n                        <span class=\"o\">+</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"s2\">&quot;abcdef0123456789&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">))),</span>\n                        <span class=\"s2\">&quot;OriginFilePath&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;IsLocal&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;ChecksumString&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;ChecksumHistory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n                        <span class=\"s2\">&quot;VersionHistory&quot;</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n                        <span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">:</span> <span class=\"n\">component_type</span><span class=\"p\">}),</span>\n                        <span class=\"s2\">&quot;InstanceParameters&quot;</span><span class=\"p\">:</span> <span class=\"n\">OrderedDict</span><span class=\"p\">(</span>\n                            <span class=\"p\">{</span><span class=\"s2\">&quot;GeometryParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;MaterialParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DesignParameters&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">}</span>\n                        <span class=\"p\">),</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">),</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">props</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">],</span> <span class=\"n\">props</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">native_properties</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">auto_update</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">group_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Group the component belongs to.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the group.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Group&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">():</span>\n            <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Group&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">group</span>\n\n    <span class=\"nd\">@group_name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">group_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Assign component to a specific group. A new group is created if the specified group doesn&#39;t exist.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the group to assign the component to. A group is created if the one</span>\n<span class=\"sd\">            specified does not exist.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the group.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Group&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">(</span><span class=\"s2\">&quot;Groups&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:GroupParameter&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ParentGroupID:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Model&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Parts:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;SubmodelInstances:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Groups:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n            <span class=\"n\">assigned_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateGroup</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">ChangeProperty</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:AllTabs&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span>\n                        <span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PropServers&quot;</span><span class=\"p\">,</span> <span class=\"n\">assigned_name</span><span class=\"p\">],</span>\n                        <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ChangedProps&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]],</span>\n                    <span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">pcs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Group&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">pcs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_group_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is3dcomponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;3DComponent flag.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">           ``True`` if a 3DComponent, ``False`` if a user-defined model.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">definitions</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentDefinitionNames</span><span class=\"p\">())</span>\n        <span class=\"k\">for</span> <span class=\"n\">comp</span> <span class=\"ow\">in</span> <span class=\"n\">definitions</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentInstanceNames</span><span class=\"p\">(</span><span class=\"n\">comp</span><span class=\"p\">):</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is3dcomponent</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_is3dcomponent</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_assembly</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh assembly flag.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">           ``True`` if mesh assembly is checked, ``None`` if a user-defined model.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Do Mesh Assembly&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span> <span class=\"ow\">and</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">():</span>\n            <span class=\"n\">ma</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_assembly</span> <span class=\"o\">=</span> <span class=\"n\">ma</span>\n            <span class=\"k\">return</span> <span class=\"n\">ma</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@mesh_assembly</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_assembly</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ma</span><span class=\"p\">):</span>\n        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Do Mesh Assembly&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span>\n            <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">ma</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">()</span>\n        <span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">SetPropValue</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">ma</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_assembly</span> <span class=\"o\">=</span> <span class=\"n\">ma</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Name of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Name of the object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">component_name</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">user_defined_component_names</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">object_names</span> <span class=\"o\">+</span> <span class=\"nb\">list</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentDefinitionNames</span><span class=\"p\">()</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">component_name</span> <span class=\"o\">!=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">:</span>\n                <span class=\"n\">pcs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">pcs</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span><span class=\"n\">component_name</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"p\">})</span>\n                <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_project_dictionary</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Name </span><span class=\"si\">%s</span><span class=\"s2\"> already assigned in the design&quot;</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Component parameters.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">            :class:`pyaedt.modeler.Object3d.UserDefinedComponentParameters</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">:</span>\n            <span class=\"n\">parameters_tuple</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">Get3DComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n            <span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">parameter</span> <span class=\"ow\">in</span> <span class=\"n\">parameters_tuple</span><span class=\"p\">:</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"n\">parameter</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                <span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"n\">UserDefinedComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">())</span>\n            <span class=\"n\">parameters_aedt</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fix_udm_props</span><span class=\"p\">))</span>\n            <span class=\"n\">parameter_name</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">par</span> <span class=\"k\">for</span> <span class=\"n\">par</span> <span class=\"ow\">in</span> <span class=\"n\">parameters_aedt</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">,</span> <span class=\"n\">par</span><span class=\"p\">)]</span>\n            <span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n            <span class=\"k\">for</span> <span class=\"n\">parameter</span> <span class=\"ow\">in</span> <span class=\"n\">parameter_name</span><span class=\"p\">:</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"n\">parameter</span><span class=\"p\">)</span>\n                <span class=\"n\">parameters</span><span class=\"p\">[</span><span class=\"n\">parameter</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span> <span class=\"o\">=</span> <span class=\"n\">UserDefinedComponentParameters</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parameters</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parts</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Dictionary of objects that belong to the user-defined component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        dict</span>\n<span class=\"sd\">           :class:`pyaedt.modeler.Object3d</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">component_parts</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetChildNames</span><span class=\"p\">())</span>\n        <span class=\"n\">parts_id</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">object_id_dict</span><span class=\"p\">[</span><span class=\"n\">part</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">part</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">object_id_dict</span> <span class=\"k\">if</span> <span class=\"n\">part</span> <span class=\"ow\">in</span> <span class=\"n\">component_parts</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">parts_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">part_id</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">[</span><span class=\"n\">part_id</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">part_id</span> <span class=\"ow\">in</span> <span class=\"n\">parts_id</span><span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">parts_dict</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">target_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Target coordinate system.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the target coordinate system.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetPropertyValue</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.ChangeProperty</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target_coordinate_system</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;Target Coordinate System&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">():</span>\n            <span class=\"n\">tCS</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Target Coordinate System&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target_coordinate_system</span> <span class=\"o\">=</span> <span class=\"n\">tCS</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target_coordinate_system</span>\n\n    <span class=\"nd\">@target_coordinate_system</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">target_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tCS</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Target Coordinate System&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">()</span>\n            <span class=\"ow\">and</span> <span class=\"s2\">&quot;Target Coordinate System/Choices&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropNames</span><span class=\"p\">()</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">tCS_options</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetChildObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">GetPropValue</span><span class=\"p\">(</span><span class=\"s2\">&quot;Target Coordinate System/Choices&quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">tCS</span> <span class=\"ow\">in</span> <span class=\"n\">tCS_options</span><span class=\"p\">:</span>\n                <span class=\"n\">pcs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Target Coordinate System&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Value:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">tCS</span><span class=\"p\">]</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_change_property</span><span class=\"p\">(</span><span class=\"n\">pcs</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_target_coordinate_system</span> <span class=\"o\">=</span> <span class=\"n\">tCS</span>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.delete\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.delete/#pyaedt.modeler.Primitives.UserDefinedComponent.delete\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Delete the object. The project must be saved after the operation to update the list</span>\n<span class=\"sd\">        of names for user-defined components.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Delete</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from pyaedt import hfss</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss = Hfss()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.modeler[&quot;UDM&quot;].delete()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss.save_project()</span>\n<span class=\"sd\">        &gt;&gt;&gt; hfss._project_dictionary = None</span>\n<span class=\"sd\">        &gt;&gt;&gt; udc = hfss.modeler.user_defined_component_names</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_Editor</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">user_defined_components</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">cleanup_objects</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></div>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.mirror\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.mirror/#pyaedt.modeler.Primitives.UserDefinedComponent.mirror\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mirror a selection.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        position : int or float</span>\n<span class=\"sd\">            List of the ``[x, y, z]`` coordinates or</span>\n<span class=\"sd\">            the Application.Position object for the selection.</span>\n<span class=\"sd\">        vector : float</span>\n<span class=\"sd\">            List of the ``[x1, y1, z1]`` coordinates or</span>\n<span class=\"sd\">            the Application.Position object for the vector.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.UserDefinedComponent, bool</span>\n<span class=\"sd\">            3D object when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Mirror</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"n\">vector</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">part</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">mirror</span><span class=\"p\">(</span><span class=\"n\">part</span><span class=\"p\">,</span> <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"n\">vector</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.rotate\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.rotate/#pyaedt.modeler.Primitives.UserDefinedComponent.rotate\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">rotate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mf\">90.0</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;deg&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Rotate the selection.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cs_axis</span>\n<span class=\"sd\">            Coordinate system axis or the Application.CoordinateSystemAxis object.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle of rotation. The units, defined by ``unit``, can be either</span>\n<span class=\"sd\">            degrees or radians. The default is ``90.0``.</span>\n<span class=\"sd\">        unit : text, optional</span>\n<span class=\"sd\">             Units for the angle. Options are ``&quot;deg&quot;`` or ``&quot;rad&quot;``.</span>\n<span class=\"sd\">             The default is ``&quot;deg&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.UserDefinedComponent, bool</span>\n<span class=\"sd\">            3D object when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Rotate</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"o\">=</span><span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">unit</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">part</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"n\">part</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"o\">=</span><span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"n\">unit</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.move\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.move/#pyaedt.modeler.Primitives.UserDefinedComponent.move\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Move component from a list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objid : list, Position object</span>\n<span class=\"sd\">            List of object IDs.</span>\n<span class=\"sd\">        vector : list</span>\n<span class=\"sd\">            Vector of the direction move. It can be a list of the ``[x, y, z]``</span>\n<span class=\"sd\">            coordinates or a Position object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        pyaedt.modeler.Object3d.UserDefinedComponent, bool</span>\n<span class=\"sd\">            3D object when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.Move</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"n\">vector</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">part</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">part</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"n\">vector</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.duplicate_around_axis\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.duplicate_around_axis/#pyaedt.modeler.Primitives.UserDefinedComponent.duplicate_around_axis\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_around_axis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">create_new_objects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Duplicate the component around the axis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        cs_axis : Application.CoordinateSystemAxis object</span>\n<span class=\"sd\">            Coordinate system axis of the object.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle of rotation in degrees. The default is ``90``.</span>\n<span class=\"sd\">        nclones : int, optional</span>\n<span class=\"sd\">            Number of clones. The default is ``2``.</span>\n<span class=\"sd\">        create_new_objects : bool, optional</span>\n<span class=\"sd\">            Whether to create copies as new objects. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of names of the newly added objects.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.DuplicateAroundAxis</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">:</span>\n            <span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">added_objects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_around_axis</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">cs_axis</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"p\">,</span> <span class=\"n\">create_new_objects</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">added_objects</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;User-defined models do not support this operation.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.duplicate_along_line\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.duplicate_along_line/#pyaedt.modeler.Primitives.UserDefinedComponent.duplicate_along_line\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">duplicate_along_line</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">attachObject</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Duplicate the object along a line.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        vector : list</span>\n<span class=\"sd\">            List of ``[x1 ,y1, z1]`` coordinates for the vector or the Application.Position object.</span>\n<span class=\"sd\">        attachObject : bool, optional</span>\n<span class=\"sd\">            Whether to attach the object. The default is ``False``.</span>\n<span class=\"sd\">        nclones : int, optional</span>\n<span class=\"sd\">            Number of clones. The default is ``2``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of names of the newly added objects.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.DuplicateAlongLine</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">:</span>\n            <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">added_objects</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">duplicate_along_line</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"p\">,</span> <span class=\"n\">nclones</span><span class=\"p\">,</span> <span class=\"n\">attachObject</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">added_objects</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;User-defined models do not support this operation.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"UserDefinedComponent.update_native\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.Object3d.UserDefinedComponent.update_native/#pyaedt.modeler.Primitives.UserDefinedComponent.update_native\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">update_native</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update the Native Component in AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># self.name = &quot;EditNativeComponentDefinitionData&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DefinitionName&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SubmodelDefinitionName&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;GeometryDefinitionParameters&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;GeometryDefinitionParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DesignDefinitionParameters&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DesignDefinitionParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaterialDefinitionParameters&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaterialDefinitionParameters&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NextUniqueID&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NextUniqueID&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MoveBackwards&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MoveBackwards&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DatasetType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DatasetType&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;DatasetDefinitions&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;NativeComponentDefinitionProvider&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;ComponentName&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;ComponentName&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Company&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Company&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Model Number&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Model Number&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Help URL&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Help URL&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Version&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Version&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Notes&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;Notes&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;IconType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">[</span><span class=\"s2\">&quot;BasicComponentInfo&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;IconType&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">EditNativeComponentDefinition</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_props</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">props</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">props</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">props</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">props</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"n\">_dict2arg</span><span class=\"p\">(</span><span class=\"n\">props</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">arg</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_change_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">vPropChange</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">_change_component_property</span><span class=\"p\">(</span><span class=\"n\">vPropChange</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_m_name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_props</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">)):</span>\n                <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">d</span><span class=\"p\">:</span>\n                    <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">({})</span>\n                <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_props</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">],</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n        <span class=\"k\">return</span> <span class=\"n\">d</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_m_Editor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pointer to the oEditor object in the AEDT API. This property is</span>\n<span class=\"sd\">        intended primarily for use by FacePrimitive, EdgePrimitive, and</span>\n<span class=\"sd\">        VertexPrimitive child objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        oEditor COM Object</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primitives</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;&quot;</span>\n<span class=\"s2\">         </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         is3dcomponent: </span><span class=\"si\">{}</span><span class=\"s2\">   parts: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         --- read/write properties  ----</span>\n<span class=\"s2\">         name: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         group_name: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         mesh_assembly: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         parameters: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         target_coordinate_system: </span><span class=\"si\">{}</span><span class=\"s2\"></span>\n<span class=\"s2\">         &quot;&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is3dcomponent</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">group_name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_assembly</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parameters</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">target_coordinate_system</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/Object3d", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}