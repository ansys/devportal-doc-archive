{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "pyaedt.edb_core.edb_data.hfss_simulation_setup_data", "body": "<h1>Source code for pyaedt.edb_core.edb_data.hfss_simulation_setup_data</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt.edb_core.general</span> <span class=\"kn\">import</span> <span class=\"n\">convert_py_list_to_net_list</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">Tuple</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n\n\n<div class=\"viewcode-block\" id=\"EdbFrequencySweep\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">EdbFrequencySweep</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for frequency sweep.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sim_setup</span><span class=\"p\">,</span> <span class=\"n\">frequency_sweep</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">edb_sweep_data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span> <span class=\"o\">=</span> <span class=\"n\">sim_setup</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">edb_sweep_data</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span> <span class=\"o\">=</span> <span class=\"n\">edb_sweep_data</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;sweep&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">simsetupdata</span><span class=\"o\">.</span><span class=\"n\">SweepData</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_frequencies</span><span class=\"p\">(</span><span class=\"n\">frequency_sweep</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_sweep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Update sweep.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SweepDataList</span><span class=\"o\">.</span><span class=\"n\">Clear</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">frequency_sweeps</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SweepDataList</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SweepDataList</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Name of the sweep.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set name of this sweep&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">sweep_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Sweep type.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">frequencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of frequencies points.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Frequencies</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_sampling</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether adaptive sampling is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if adaptive sampling is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">AdaptiveSampling</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adv_dc_extrapolation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on advanced DC Extrapolation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if advanced DC Extrapolation is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">AdvDCExtrapolation</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">auto_s_mat_only_solve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on Auto/Manual SMatrix only solve.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if Auto/Manual SMatrix only solve is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">AutoSMatOnlySolve</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enforce_causality</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enforce causality during interpolating sweep.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if enforce causality is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">EnforceCausality</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enforce_dc_and_causality</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enforce DC point and causality.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if enforce dc point and causality is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">EnforceDCAndCausality</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enforce_passivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enforce passivity during interpolating sweep.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if enforce passivity is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">EnforcePassivity</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">freq_sweep_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Sweep type.</span>\n<span class=\"sd\">        Options are:</span>\n<span class=\"sd\">           - ``kInterpolatingSweep``.</span>\n<span class=\"sd\">           - ``kDiscreteSweep``.</span>\n<span class=\"sd\">           - ``kBroadbandFastSweep``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">FreqSweepType</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_full_basis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to use Full basis elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if full basis interpolation is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUseFullBasis</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_port_impedance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on the port impedance interpolation.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if port impedance is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUsePortImpedance</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_prop_const</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to use propagation constants.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if propagation constants are used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUsePropConst</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_s_matrix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to use S matrix.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if S matrix are used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUseSMatrix</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_solutions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Number of aximum solutions.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">MaxSolutions</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_freq_s_mat_only_solve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Minimum frequency SMatrix only solve.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Frequency with units.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">MinFreqSMatOnlySolve</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_solved_freq</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Minimum solved frequency.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Frequency with units.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">MinSolvedFreq</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">passivity_tolerance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Tolerance for passivity enforcement.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">PassivityTolerance</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">relative_s_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Specify S-parameter error tolerance for interpolating sweep.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">RelativeSError</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on or off the extraction of surface current data.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if save fields is enabled, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SaveFields</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_rad_fields_only</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on save radiated fields only.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if save radiated field only is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SaveRadFieldsOnly</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_q3d_for_dc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enable Q3D solver for DC point extraction .</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if Q3d for DC point is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">UseQ3DForDC</span>\n\n    <span class=\"nd\">@adaptive_sampling</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_sampling</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">AdaptiveSampling</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@adv_dc_extrapolation</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adv_dc_extrapolation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">AdvDCExtrapolation</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@auto_s_mat_only_solve</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">auto_s_mat_only_solve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">AutoSMatOnlySolve</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@enforce_causality</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enforce_causality</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">EnforceCausality</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@enforce_dc_and_causality</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enforce_dc_and_causality</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">EnforceDCAndCausality</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@enforce_passivity</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enforce_passivity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">EnforcePassivity</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@freq_sweep_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">freq_sweep_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">edb_freq_sweep_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">TFreqSweepType</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;kInterpolatingSweep&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">FreqSweepType</span> <span class=\"o\">=</span> <span class=\"n\">edb_freq_sweep_type</span><span class=\"o\">.</span><span class=\"n\">kInterpolatingSweep</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;kDiscreteSweep&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">FreqSweepType</span> <span class=\"o\">=</span> <span class=\"n\">edb_freq_sweep_type</span><span class=\"o\">.</span><span class=\"n\">kDiscreteSweep</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;kBroadbandFastSweep&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">FreqSweepType</span> <span class=\"o\">=</span> <span class=\"n\">edb_freq_sweep_type</span><span class=\"o\">.</span><span class=\"n\">kBroadbandFastSweep</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">&quot;kNumSweepTypes&quot;</span><span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">FreqSweepType</span> <span class=\"o\">=</span> <span class=\"n\">edb_freq_sweep_type</span><span class=\"o\">.</span><span class=\"n\">kNumSweepTypes</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">FreqSweepType</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@interp_use_full_basis</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_full_basis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUseFullBasis</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@interp_use_port_impedance</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_port_impedance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUsePortImpedance</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@interp_use_prop_const</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_prop_const</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUsePropConst</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@interp_use_s_matrix</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">interp_use_s_matrix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">InterpUseSMatrix</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@max_solutions</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_solutions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">MaxSolutions</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@min_freq_s_mat_only_solve</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_freq_s_mat_only_solve</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">MinFreqSMatOnlySolve</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@min_solved_freq</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_solved_freq</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">MinSolvedFreq</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@passivity_tolerance</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">passivity_tolerance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">PassivityTolerance</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@relative_s_error</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">relative_s_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">RelativeSError</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@save_fields</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SaveFields</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@save_rad_fields_only</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_rad_fields_only</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SaveRadFieldsOnly</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@use_q3d_for_dc</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_q3d_for_dc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">UseQ3DForDC</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_set_frequencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">freq_sweep_string</span><span class=\"o\">=</span><span class=\"s2\">&quot;Linear Step: 0GHz to 20GHz, step=0.05GHz&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetFrequencies</span><span class=\"p\">(</span><span class=\"n\">freq_sweep_string</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"EdbFrequencySweep.set_frequencies_linear_scale\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies_linear_scale/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies_linear_scale\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_frequencies_linear_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"s2\">&quot;20GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"s2\">&quot;50MHz&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set a linear scale frequency sweep.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        start : str, float</span>\n<span class=\"sd\">            Start frequency.</span>\n<span class=\"sd\">        stop : str, float</span>\n<span class=\"sd\">            Stop frequency.</span>\n<span class=\"sd\">        step : str, float</span>\n<span class=\"sd\">            Step frequency.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if correctly executed, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">step</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Frequencies</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetFrequencies</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbFrequencySweep.set_frequencies_linear_count\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies_linear_count/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies_linear_count\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_frequencies_linear_count</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">&quot;1kHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set a linear count frequency sweep.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        start : str, float</span>\n<span class=\"sd\">            Start frequency.</span>\n<span class=\"sd\">        stop : str, float</span>\n<span class=\"sd\">            Stop frequency.</span>\n<span class=\"sd\">        count : int</span>\n<span class=\"sd\">            Step frequency.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if correctly executed, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Frequencies</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetFrequencies</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbFrequencySweep.set_frequencies_log_scale\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies_log_scale/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies_log_scale\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_frequencies_log_scale</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s2\">&quot;1kHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.1GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">samples</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set a log count frequency sweep.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        start : str, float</span>\n<span class=\"sd\">            Start frequency.</span>\n<span class=\"sd\">        stop : str, float</span>\n<span class=\"sd\">            Stop frequency.</span>\n<span class=\"sd\">        samples : int</span>\n<span class=\"sd\">            Step frequency.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if correctly executed, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_sim_setup</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_to_dim</span><span class=\"p\">(</span><span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Frequencies</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetLogFrequencies</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">samples</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"EdbFrequencySweep.set_frequencies\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep.set_frequencies\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_frequencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frequency_list</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set frequency list to the sweep frequencies.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        frequency_list : list, optional</span>\n<span class=\"sd\">            List of lists with four elements. Each list must contain:</span>\n\n<span class=\"sd\">              1- frequency type (``&quot;linear count&quot;``, ``&quot;log scale&quot;`` or ``&quot;linear scale&quot;``)</span>\n<span class=\"sd\">              2- start frequency</span>\n<span class=\"sd\">              3- stop frequency</span>\n<span class=\"sd\">              4- step frequency or count</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if correctly executed, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">frequency_list</span><span class=\"p\">:</span>\n            <span class=\"n\">frequency_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;linear count&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1kHz&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;log scale&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1kHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.1GHz&quot;</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;linear scale&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.1GHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;10GHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.1GHz&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">frequency_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;linear count&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetFrequencies</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])))</span>\n            <span class=\"k\">elif</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;linear scale&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetFrequencies</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])))</span>\n            <span class=\"k\">elif</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;log scale&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">SetLogFrequencies</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">temp</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sweep_data</span><span class=\"o\">.</span><span class=\"n\">Frequencies</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_sweep</span><span class=\"p\">()</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MeshOperation</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Mesh Operation Class.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">mesh_operation</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span> <span class=\"o\">=</span> <span class=\"n\">mesh_operation</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_op_mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;kMeshSetupBase&quot;</span><span class=\"p\">:</span> <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kMeshSetupBase</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kMeshSetupLength&quot;</span><span class=\"p\">:</span> <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kMeshSetupLength</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kMeshSetupSkinDepth&quot;</span><span class=\"p\">:</span> <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kMeshSetupSkinDepth</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kNumMeshOpTypes&quot;</span><span class=\"p\">:</span> <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kNumMeshOpTypes</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether if mesh operation is enabled.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if mesh operation is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">Enabled</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_operation_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh operation type.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">        0- ``kMeshSetupBase``</span>\n<span class=\"sd\">        1- ``kMeshSetupLength``</span>\n<span class=\"sd\">        2- ``kMeshSetupSkinDepth``</span>\n<span class=\"sd\">        3- ``kNumMeshOpTypes``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MeshOpType</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_region</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh region name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the mesh region.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MeshRegion</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh operation name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">nets_layers_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of nets and layers.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">           List of lists with three elements. Each list must contain:</span>\n<span class=\"sd\">           1- net name</span>\n<span class=\"sd\">           2- layer name</span>\n<span class=\"sd\">           3- bool.</span>\n<span class=\"sd\">           Third element is represents whether if the mesh operation is enabled or disabled.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">NetsLayersList</span>\n\n    <span class=\"nd\">@nets_layers_list</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">nets_layers_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n        <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">net</span><span class=\"p\">,</span> <span class=\"n\">layers</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">layer</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n                <span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">](</span><span class=\"n\">net</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">NetsLayersList</span> <span class=\"o\">=</span> <span class=\"n\">convert_py_list_to_net_list</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">refine_inside</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on refine inside objects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if refine inside objects is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">RefineInside</span>\n\n    <span class=\"nd\">@enabled</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enabled</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">Enabled</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@mesh_region</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_region</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MeshRegion</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@refine_inside</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">refine_inside</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">RefineInside</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum number of elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MaxElems</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">restrict_max_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to restrict maximum number  of elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">RestrictMaxElem</span>\n\n    <span class=\"nd\">@max_elements</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MaxElems</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@restrict_max_elements</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">restrict_max_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to restrict maximum number  of elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">RestrictMaxElem</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n\n<div class=\"viewcode-block\" id=\"MeshOperationLength\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.MeshOperationLength/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.MeshOperationLength\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MeshOperationLength</span><span class=\"p\">(</span><span class=\"n\">MeshOperation</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Mesh operation Length class.</span>\n<span class=\"sd\">    This class is accessible from Hfss Setup in EDB and add_length_mesh_operation method.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; mop = edbapp.setups[&quot;setup1a&quot;].add_length_mesh_operation({&quot;GND&quot;: [&quot;TOP&quot;, &quot;BOTTOM&quot;]})</span>\n<span class=\"sd\">    &gt;&gt;&gt; mop.max_elements = 3000</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">mesh_operation</span><span class=\"p\">):</span>\n        <span class=\"n\">MeshOperation</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">mesh_operation</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum length of elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MaxLength</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">restrict_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to restrict length of elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">RestrictLength</span>\n\n    <span class=\"nd\">@max_length</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">MaxLength</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@restrict_length</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">restrict_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to restrict length of elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">RestrictLength</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"MeshOperationSkinDepth\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.MeshOperationSkinDepth/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.MeshOperationSkinDepth\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MeshOperationSkinDepth</span><span class=\"p\">(</span><span class=\"n\">MeshOperation</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Mesh operation Skin Depth class.</span>\n<span class=\"sd\">    This class is accessible from Hfss Setup in EDB and assign_skin_depth_mesh_operation method.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; mop = edbapp.setups[&quot;setup1a&quot;].add_skin_depth_mesh_operation({&quot;GND&quot;: [&quot;TOP&quot;, &quot;BOTTOM&quot;]})</span>\n<span class=\"sd\">    &gt;&gt;&gt; mop.max_elements = 3000</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">mesh_operation</span><span class=\"p\">):</span>\n        <span class=\"n\">MeshOperation</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">mesh_operation</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">skin_depth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Skin depth value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">SkinDepth</span>\n\n    <span class=\"nd\">@skin_depth</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">skin_depth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">SkinDepth</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_triangle_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Surface triangle length value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">SurfTriLength</span>\n\n    <span class=\"nd\">@surface_triangle_length</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">surface_triangle_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">SurfTriLength</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">number_of_layer_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Number of layer elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">NumLayers</span>\n\n    <span class=\"nd\">@number_of_layer_elements</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">number_of_layer_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">NumLayers</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"HfssPortSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssPortSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssPortSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">HfssPortSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for HFSS port settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_hfss_port_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">HFSSPortSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_delta_z0</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum change to Z0 in successive passes.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">MaxDeltaZ0</span>\n\n    <span class=\"nd\">@max_delta_z0</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_delta_z0</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">MaxDeltaZ0</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_triangles_wave_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum number of triangles allowed for wave ports.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">MaxTrianglesWavePort</span>\n\n    <span class=\"nd\">@max_triangles_wave_port</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_triangles_wave_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">MaxTrianglesWavePort</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_triangles_wave_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Minimum number of triangles allowed for wave ports.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">MinTrianglesWavePort</span>\n\n    <span class=\"nd\">@min_triangles_wave_port</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_triangles_wave_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">MinTrianglesWavePort</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enable_set_triangles_wave_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enable setting of minimum and maximum mesh limits for wave ports.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if triangles wave port  is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">SetTrianglesWavePort</span>\n\n    <span class=\"nd\">@enable_set_triangles_wave_port</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enable_set_triangles_wave_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_port_settings</span><span class=\"o\">.</span><span class=\"n\">SetTrianglesWavePort</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"HfssSolverSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSolverSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSolverSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">HfssSolverSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for HFSS solver settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_hfss_solver_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">HFSSSolverSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enhanced_low_freq_accuracy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enable legacy low-frequency sampling.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if low frequency accuracy is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">EnhancedLowFreqAccuracy</span>\n\n    <span class=\"nd\">@enhanced_low_freq_accuracy</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enhanced_low_freq_accuracy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">EnhancedLowFreqAccuracy</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">order_basis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Order of the basic functions for HFSS.</span>\n<span class=\"sd\">        - 0=Mixed.</span>\n<span class=\"sd\">        - 1=Zero.</span>\n<span class=\"sd\">        - 2=1st order.</span>\n<span class=\"sd\">        - 3=2nd order.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Integer value according to the description.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">OrderBasis</span>\n\n    <span class=\"nd\">@order_basis</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">order_basis</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">OrderBasis</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">relative_residual</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Residual for use by the iterative solver.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">RelativeResidual</span>\n\n    <span class=\"nd\">@relative_residual</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">relative_residual</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">RelativeResidual</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solver_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get solver type to use (Direct/Iterative/Auto) for HFSS.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">        1- ``kAutoSolver``.</span>\n<span class=\"sd\">        2- ``kDirectSolver``.</span>\n<span class=\"sd\">        3- ``kIterativeSolver``.</span>\n<span class=\"sd\">        4- ``kNumSolverTypes``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">SolverType</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_shell_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to enable use of shell elements.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if shall elements are used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">UseShellElements</span>\n\n    <span class=\"nd\">@use_shell_elements</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_shell_elements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">UseShellElements</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"AdaptiveFrequencyData\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveFrequencyData/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveFrequencyData\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AdaptiveFrequencyData</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for adaptive frequency data.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">adaptive_frequency_data</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span> <span class=\"o\">=</span> <span class=\"n\">adaptive_frequency_data</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_frequency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Adaptive frequency for the setup.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Frequency with units.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequency</span>\n\n    <span class=\"nd\">@adaptive_frequency</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_frequency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequency</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_delta</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum change of S-parameters between two consecutive passes, which serves as</span>\n<span class=\"sd\">        a stopping criterion.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"o\">.</span><span class=\"n\">MaxDelta</span>\n\n    <span class=\"nd\">@max_delta</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_delta</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"o\">.</span><span class=\"n\">MaxDelta</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum allowed number of mesh refinement cycles.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"o\">.</span><span class=\"n\">MaxPasses</span>\n\n    <span class=\"nd\">@max_passes</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"o\">.</span><span class=\"n\">MaxPasses</span> <span class=\"o\">=</span> <span class=\"n\">value</span></div>\n\n\n<div class=\"viewcode-block\" id=\"AdaptiveSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AdaptiveSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for adaptive settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adapt_type_mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;kSingle&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptType</span><span class=\"o\">.</span><span class=\"n\">kSingle</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kMultiFrequencies&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptType</span><span class=\"o\">.</span><span class=\"n\">kMultiFrequencies</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kBroadband&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptType</span><span class=\"o\">.</span><span class=\"n\">kBroadband</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kNumAdaptTypes&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptType</span><span class=\"o\">.</span><span class=\"n\">kNumAdaptTypes</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Adaptive EDB settings.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">AdaptiveSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_frequency_data_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of all adaptive frequency data.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveFrequencyData`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">AdaptiveFrequencyData</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequencyDataList</span><span class=\"p\">)]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adapt_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Adaptive type.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">        1- ``kSingle``.</span>\n<span class=\"sd\">        2- ``kMultiFrequencies``.</span>\n<span class=\"sd\">        3- ``kBroadband``.</span>\n<span class=\"sd\">        4- ``kNumAdaptTypes``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptType</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@adapt_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adapt_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptType</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_adapt_type_mapping</span><span class=\"p\">[</span><span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">basic</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether if turn on basic adaptive.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">            ``True`` if bais adaptive is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">Basic</span>\n\n    <span class=\"nd\">@basic</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">basic</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">Basic</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">do_adaptive</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether if adpative mesh is on.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if adaptive is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">DoAdaptive</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_refinement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum number of mesh elements to be added per pass.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">MaxRefinement</span>\n\n    <span class=\"nd\">@max_refinement</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_refinement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">MaxRefinement</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_refine_per_pass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum number of mesh elementat that can be added during an adaptive pass.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">MaxRefinePerPass</span>\n\n    <span class=\"nd\">@max_refine_per_pass</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_refine_per_pass</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">MaxRefinePerPass</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Minimum number of passes.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">MinPasses</span>\n\n    <span class=\"nd\">@min_passes</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">min_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">MinPasses</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on save fields.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if save fields is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">SaveFields</span>\n\n    <span class=\"nd\">@save_fields</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">SaveFields</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_rad_field_only</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on save radiated fields only.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if save radiated field only is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">SaveRadFieldsOnly</span>\n\n    <span class=\"nd\">@save_rad_field_only</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_rad_field_only</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">SaveRadFieldsOnly</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_convergence_matrix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on the convergence matrix.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if convergence matrix is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">UseConvergenceMatrix</span>\n\n    <span class=\"nd\">@use_convergence_matrix</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_convergence_matrix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">UseConvergenceMatrix</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_max_refinement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on maximum refinement.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if maximum refinement is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">UseMaxRefinement</span>\n\n    <span class=\"nd\">@use_max_refinement</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_max_refinement</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">UseMaxRefinement</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"AdaptiveSettings.add_adaptive_frequency_data\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveSettings.add_adaptive_frequency_data/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveSettings.add_adaptive_frequency_data\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_adaptive_frequency_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frequency</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a setup for frequency data.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        frequency : str, float</span>\n<span class=\"sd\">            Frequency with units or float frequency (in Hz).</span>\n<span class=\"sd\">        max_num_passes : int, optional</span>\n<span class=\"sd\">            Maximum number of passes. The default is ``10``.</span>\n<span class=\"sd\">        max_delta_s : float, optional</span>\n<span class=\"sd\">            Maximum delta S. The default is ``0.02``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if method is successful, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">adaptive_frequency_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">simsetupdata</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequencyData</span><span class=\"p\">()</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">AdaptiveFrequencyData</span><span class=\"p\">(</span><span class=\"n\">adaptive_frequency_data</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">adaptive_frequency</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">arg_with_dim</span><span class=\"p\">(</span><span class=\"n\">frequency</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hz&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">max_passes</span> <span class=\"o\">=</span> <span class=\"n\">max_num_passes</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">max_delta</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">max_delta_s</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequencyDataList</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">_adaptive_frequency_data</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"DefeatureSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.DefeatureSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.DefeatureSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DefeatureSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for defeature settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_defeature_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">DefeatureSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">defeature_abs_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Absolute length for polygon defeaturing.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">DefeatureAbsLength</span>\n\n    <span class=\"nd\">@defeature_abs_length</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">defeature_abs_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">DefeatureAbsLength</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">defeature_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Defeature ratio.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">DefeatureRatio</span>\n\n    <span class=\"nd\">@defeature_ratio</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">defeature_ratio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">DefeatureRatio</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">healing_option</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on healing of mis-aligned points and edges.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">          0- Turn off.</span>\n<span class=\"sd\">          1- Turn on.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">HealingOption</span>\n\n    <span class=\"nd\">@healing_option</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">healing_option</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">HealingOption</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Model type.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">        0- General.</span>\n<span class=\"sd\">        1- IC.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">ModelType</span>\n\n    <span class=\"nd\">@model_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Model type (General 0 or IC 1).&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">ModelType</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove_floating_geometry</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to remove floating geometries.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if floating geometry removal is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">RemoveFloatingGeometry</span>\n\n    <span class=\"nd\">@remove_floating_geometry</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">remove_floating_geometry</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">RemoveFloatingGeometry</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">small_void_area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Small voids to remove area.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">SmallVoidArea</span>\n\n    <span class=\"nd\">@small_void_area</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">small_void_area</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">SmallVoidArea</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">union_polygons</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on the union of polygons before meshing.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if union polygons is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">UnionPolygons</span>\n\n    <span class=\"nd\">@union_polygons</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">union_polygons</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">UnionPolygons</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_defeature</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on the defeature.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if defeature is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">UseDefeature</span>\n\n    <span class=\"nd\">@use_defeature</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_defeature</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">UseDefeature</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_defeature_abs_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on the defeature absolute length.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if defeature absolute length is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">UseDefeatureAbsLength</span>\n\n    <span class=\"nd\">@use_defeature_abs_length</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_defeature_abs_length</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_defeature_settings</span><span class=\"o\">.</span><span class=\"n\">UseDefeatureAbsLength</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ViaSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.ViaSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.ViaSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ViaSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for via settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">parent</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_style_mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;k25DViaWirebond&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">T25DViaStyle</span><span class=\"o\">.</span><span class=\"n\">k25DViaWirebond</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;k25DViaRibbon&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">T25DViaStyle</span><span class=\"o\">.</span><span class=\"n\">k25DViaRibbon</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;k25DViaMesh&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">T25DViaStyle</span><span class=\"o\">.</span><span class=\"n\">k25DViaMesh</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;k25DViaField&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">T25DViaStyle</span><span class=\"o\">.</span><span class=\"n\">k25DViaField</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kNum25DViaStyle&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">T25DViaStyle</span><span class=\"o\">.</span><span class=\"n\">kNum25DViaStyle</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_via_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">ViaSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_density</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Via density.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaDensity</span>\n\n    <span class=\"nd\">@via_density</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_density</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaDensity</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Via material.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaMaterial</span>\n\n    <span class=\"nd\">@via_material</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_material</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaMaterial</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_num_sides</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Via number of sides.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaNumSides</span>\n\n    <span class=\"nd\">@via_num_sides</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_num_sides</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaNumSides</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_style</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Via style.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">        1- ``k25DViaWirebond``.</span>\n<span class=\"sd\">        2- ``k25DViaRibbon``.</span>\n<span class=\"sd\">        3- ``k25DViaMesh``.</span>\n<span class=\"sd\">        4- ``k25DViaField``.</span>\n<span class=\"sd\">        5- ``kNum25DViaStyle``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaStyle</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@via_style</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_style</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_settings</span><span class=\"o\">.</span><span class=\"n\">ViaStyle</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_via_style_mapping</span><span class=\"p\">[</span><span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"AdvancedMeshSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdvancedMeshSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdvancedMeshSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AdvancedMeshSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for advanced mesh settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_advanced_mesh_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">AdvancedMeshSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_snap_tol</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Layer snap tolerance. Attempt to align independent stackups in the mesher.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_advanced_mesh_settings</span><span class=\"o\">.</span><span class=\"n\">LayerSnapTol</span>\n\n    <span class=\"nd\">@layer_snap_tol</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">layer_snap_tol</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_advanced_mesh_settings</span><span class=\"o\">.</span><span class=\"n\">LayerSnapTol</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_display_attributes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh display attributes. Set color for mesh display (i.e. ``&quot;#000000&quot;``).</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_advanced_mesh_settings</span><span class=\"o\">.</span><span class=\"n\">MeshDisplayAttributes</span>\n\n    <span class=\"nd\">@mesh_display_attributes</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_display_attributes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_advanced_mesh_settings</span><span class=\"o\">.</span><span class=\"n\">MeshDisplayAttributes</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">replace_3d_triangles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on replace 3D triangles.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` if replace 3D triangles is used, ``False`` otherwise.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_advanced_mesh_settings</span><span class=\"o\">.</span><span class=\"n\">Replace3DTriangles</span>\n\n    <span class=\"nd\">@replace_3d_triangles</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">replace_3d_triangles</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_advanced_mesh_settings</span><span class=\"o\">.</span><span class=\"n\">Replace3DTriangles</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"CurveApproxSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.CurveApproxSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.CurveApproxSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CurveApproxSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for curve approximate settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_curve_approx_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">CurveApproxSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">arc_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Step-size to be used for arc faceting.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">ArcAngle</span>\n\n    <span class=\"nd\">@arc_angle</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">arc_angle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">ArcAngle</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">arc_to_chord_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum tolerated error between straight edge (chord) and faceted arc.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">ArcToChordError</span>\n\n    <span class=\"nd\">@arc_to_chord_error</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">arc_to_chord_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">ArcToChordError</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_arc_points</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Maximum number of mesh points for arc segments.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">MaxArcPoints</span>\n\n    <span class=\"nd\">@max_arc_points</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">max_arc_points</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">MaxArcPoints</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_azimuth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Azimuth angle for first mesh point of the arc.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">StartAzimuth</span>\n\n    <span class=\"nd\">@start_azimuth</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start_azimuth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">StartAzimuth</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_arc_to_chord_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether to turn on the arc-to-chord error setting for arc faceting.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">            ``True`` if arc-to-chord error is used, ``False`` otherwise.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">UseArcToChordError</span>\n\n    <span class=\"nd\">@use_arc_to_chord_error</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_arc_to_chord_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_curve_approx_settings</span><span class=\"o\">.</span><span class=\"n\">UseArcToChordError</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"DcrSettings\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.DcrSettings/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.DcrSettings\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DcrSettings</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for DCR settings.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span> <span class=\"o\">=</span> <span class=\"n\">parent</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_dcr_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">DCRSettings</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_max_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Conduction maximum number of passes.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionMaxPasses</span>\n\n    <span class=\"nd\">@conduction_max_passes</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_max_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionMaxPasses</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_min_converged_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Conduction minimum number of converged passes.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionMinConvergedPasses</span>\n\n    <span class=\"nd\">@conduction_min_converged_passes</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_min_converged_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionMinConvergedPasses</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_min_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Conduction minimum number of passes.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionMinPasses</span>\n\n    <span class=\"nd\">@conduction_min_passes</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_min_passes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionMinPasses</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_per_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;WConduction error percentage.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionPerError</span>\n\n    <span class=\"nd\">@conduction_per_error</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_per_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionPerError</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_per_refine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Conduction refinement.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        float</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionPerRefine</span>\n\n    <span class=\"nd\">@conduction_per_refine</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">conduction_per_refine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dcr_settings</span><span class=\"o\">.</span><span class=\"n\">ConductionPerRefine</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parent</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">HfssSimulationSetup</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for HFSS simulation setup.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">edb</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">edb_hfss_sim_setup</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span> <span class=\"o\">=</span> <span class=\"n\">edb</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">edb_hfss_sim_setup</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup</span> <span class=\"o\">=</span> <span class=\"n\">edb_hfss_sim_setup</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span> <span class=\"o\">=</span> <span class=\"n\">edb_hfss_sim_setup</span><span class=\"o\">.</span><span class=\"n\">GetSimSetupInfo</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">edb_hfss_sim_setup</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">simsetupdata</span><span class=\"o\">.</span><span class=\"n\">SimSetupInfo</span><span class=\"p\">[</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">simsetupdata</span><span class=\"o\">.</span><span class=\"n\">HFSSSimulationSettings</span>\n            <span class=\"p\">]()</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;hfss&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hfss_solver_settings</span><span class=\"o\">.</span><span class=\"n\">order_basis</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Utility</span><span class=\"o\">.</span><span class=\"n\">HFSSSimulationSetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">edb_sim_setup_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;EDB internal simulation setup object.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_update_setup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">mesh_operations</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">MeshOperations</span>\n        <span class=\"n\">mesh_operations</span><span class=\"o\">.</span><span class=\"n\">Clear</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">mop</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operations</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n            <span class=\"n\">mesh_operations</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">mop</span><span class=\"o\">.</span><span class=\"n\">mesh_operation</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">Utility</span><span class=\"o\">.</span><span class=\"n\">HFSSSimulationSetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">active_cell</span><span class=\"o\">.</span><span class=\"n\">DeleteSimulationSetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">active_cell</span><span class=\"o\">.</span><span class=\"n\">AddSimulationSetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">active_cell</span><span class=\"o\">.</span><span class=\"n\">SimulationSetups</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetSimSetupInfo</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">GetSimSetupInfo</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">frequency_sweeps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Frequency sweep list.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">sweep_data_list</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SweepDataList</span><span class=\"p\">):</span>\n            <span class=\"n\">sweep_data_list</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">EdbFrequencySweep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sweep_data_list</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Name of the setup.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n\n    <span class=\"nd\">@name</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">legacy_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">legacy_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">setups</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">_setups</span><span class=\"p\">[</span><span class=\"n\">legacy_name</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solver_slider_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Solver slider type.</span>\n<span class=\"sd\">        Options:</span>\n<span class=\"sd\">         1- ``kFast``.</span>\n<span class=\"sd\">         2- ``kMedium``.</span>\n<span class=\"sd\">         3- ``kAccurate``.</span>\n<span class=\"sd\">         4- ``kNumSliderTypes``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">TSolveSliderType</span><span class=\"o\">.</span><span class=\"n\">ToString</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@solver_slider_type</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solver_slider_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set solver slider type.&quot;&quot;&quot;</span>\n        <span class=\"n\">solver_types</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;kFast&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">TSolveSliderType</span><span class=\"o\">.</span><span class=\"n\">k25DViaWirebond</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kMedium&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">TSolveSliderType</span><span class=\"o\">.</span><span class=\"n\">k25DViaRibbon</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kAccurate&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">TSolveSliderType</span><span class=\"o\">.</span><span class=\"n\">k25DViaMesh</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;kNumSliderTypes&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">TSolveSliderType</span><span class=\"o\">.</span><span class=\"n\">k25DViaField</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">TSolveSliderType</span> <span class=\"o\">=</span> <span class=\"n\">solver_types</span><span class=\"p\">[</span><span class=\"n\">value</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_auto_setup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Whether if auto setup is enabled.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">IsAutoSetup</span>\n\n    <span class=\"nd\">@is_auto_setup</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">is_auto_setup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">IsAutoSetup</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setup_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Setup type.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">SetupType</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hfss_solver_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Manages EDB methods for HFSS solver settings.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSolverSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">HfssSolverSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">adaptive_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Adaptive Settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdaptiveSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">AdaptiveSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">defeature_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Defeature settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.DefeatureSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">DefeatureSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">via_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Via settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.ViaSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">ViaSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">advanced_mesh_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Advanced mesh settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.AdvancedMeshSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">AdvancedMeshSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">curve_approx_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Curve approximation settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.CurveApproxSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">CurveApproxSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dcr_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Dcr settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.DcrSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">DcrSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">hfss_port_settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;HFSS port settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssPortSettings`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">HfssPortSettings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">mesh_operations</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Mesh operations settings Class.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List of :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.MeshOperation`</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span>\n        <span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb_sim_setup_info</span><span class=\"o\">.</span><span class=\"n\">SimulationSettings</span><span class=\"o\">.</span><span class=\"n\">MeshOperations</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">MeshOpType</span> <span class=\"o\">==</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kMeshSetupLength</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperationLength</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">MeshOpType</span> <span class=\"o\">==</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kMeshSetupSkinDepth</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperationSkinDepth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">MeshOpType</span> <span class=\"o\">==</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">TMeshOpType</span><span class=\"o\">.</span><span class=\"n\">kMeshSetupBase</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperationSkinDepth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mesh_operations</span>\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup.add_length_mesh_operation\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.add_length_mesh_operation/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.add_length_mesh_operation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_length_mesh_operation</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">net_layer_list</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">max_elements</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span>\n        <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">restrict_elements</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">restrict_length</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">refine_inside</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">mesh_region</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a mesh operation to the setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        net_layer_list : dict</span>\n<span class=\"sd\">            Dictionary containing nets and layers on which enable Mesh operation. Example ``{&quot;A0_N&quot;: [&quot;TOP&quot;, &quot;PWR&quot;]}``.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Mesh operation name.</span>\n<span class=\"sd\">        max_elements : int, optional</span>\n<span class=\"sd\">            Maximum number of elements. Default is ``1000``.</span>\n<span class=\"sd\">        max_length : str, optional</span>\n<span class=\"sd\">            Maximum length of elements. Default is ``1mm``.</span>\n<span class=\"sd\">        restrict_elements : bool, optional</span>\n<span class=\"sd\">            Whether to restrict number of elements. Default is ``True``.</span>\n<span class=\"sd\">        restrict_length : bool, optional</span>\n<span class=\"sd\">            Whether to restrict length of elements. Default is ``True``.</span>\n<span class=\"sd\">        mesh_region : str, optional</span>\n<span class=\"sd\">            Mesh region name.</span>\n<span class=\"sd\">        refine_inside : bool, optional</span>\n<span class=\"sd\">            Whether to refine inside or not.  Default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.LengthMeshOperation`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;skin&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mesh_operation</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperationLength</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">simsetupdata</span><span class=\"o\">.</span><span class=\"n\">LengthMeshOperation</span><span class=\"p\">())</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">mesh_region</span> <span class=\"o\">=</span> <span class=\"n\">mesh_region</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">nets_layers_list</span> <span class=\"o\">=</span> <span class=\"n\">net_layer_list</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">refine_inside</span> <span class=\"o\">=</span> <span class=\"n\">refine_inside</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">max_elements</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">max_elements</span><span class=\"p\">)</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">max_length</span> <span class=\"o\">=</span> <span class=\"n\">max_length</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">restrict_length</span> <span class=\"o\">=</span> <span class=\"n\">restrict_length</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">restrict_max_elements</span> <span class=\"o\">=</span> <span class=\"n\">restrict_elements</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mesh_operation</span>\n        <span class=\"k\">return</span> <span class=\"n\">mesh_operation</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup.add_skin_depth_mesh_operation\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.add_skin_depth_mesh_operation/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.add_skin_depth_mesh_operation\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_skin_depth_mesh_operation</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">net_layer_list</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">max_elements</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span>\n        <span class=\"n\">skin_depth</span><span class=\"o\">=</span><span class=\"s2\">&quot;1um&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">restrict_elements</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">surface_triangle_length</span><span class=\"o\">=</span><span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">number_of_layers</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"n\">refine_inside</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">mesh_region</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add a mesh operation to the setup.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        net_layer_list : dict</span>\n<span class=\"sd\">            Dictionary containing nets and layers on which enable Mesh operation. Example ``{&quot;A0_N&quot;: [&quot;TOP&quot;, &quot;PWR&quot;]}``.</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Mesh operation name.</span>\n<span class=\"sd\">        max_elements : int, optional</span>\n<span class=\"sd\">            Maximum number of elements. Default is ``1000``.</span>\n<span class=\"sd\">        skin_depth : str, optional</span>\n<span class=\"sd\">            Skin Depth. Default is ``1um``.</span>\n<span class=\"sd\">        restrict_elements : bool, optional</span>\n<span class=\"sd\">            Whether to restrict number of elements. Default is ``True``.</span>\n<span class=\"sd\">        surface_triangle_length : bool, optional</span>\n<span class=\"sd\">            Surface Triangle length. Default is ``1mm``.</span>\n<span class=\"sd\">        number_of_layers : int, str, optional</span>\n<span class=\"sd\">            Number of layers. Default is ``2``.</span>\n<span class=\"sd\">        mesh_region : str, optional</span>\n<span class=\"sd\">            Mesh region name.</span>\n<span class=\"sd\">        refine_inside : bool, optional</span>\n<span class=\"sd\">            Whether to refine inside or not.  Default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.LengthMeshOperation`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;length&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">mesh_operation</span> <span class=\"o\">=</span> <span class=\"n\">MeshOperationSkinDepth</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_edb</span><span class=\"o\">.</span><span class=\"n\">simsetupdata</span><span class=\"o\">.</span><span class=\"n\">SkinDepthMeshOperation</span><span class=\"p\">())</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">mesh_region</span> <span class=\"o\">=</span> <span class=\"n\">mesh_region</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">nets_layers_list</span> <span class=\"o\">=</span> <span class=\"n\">net_layer_list</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">refine_inside</span> <span class=\"o\">=</span> <span class=\"n\">refine_inside</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">max_elements</span> <span class=\"o\">=</span> <span class=\"n\">max_elements</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">skin_depth</span> <span class=\"o\">=</span> <span class=\"n\">skin_depth</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">number_of_layer_elements</span> <span class=\"o\">=</span> <span class=\"n\">number_of_layers</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">surface_triangle_length</span> <span class=\"o\">=</span> <span class=\"n\">surface_triangle_length</span>\n        <span class=\"n\">mesh_operation</span><span class=\"o\">.</span><span class=\"n\">restrict_max_elements</span> <span class=\"o\">=</span> <span class=\"n\">restrict_elements</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mesh_operations</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">mesh_operation</span>\n        <span class=\"k\">return</span> <span class=\"n\">mesh_operation</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_update_setup</span><span class=\"p\">()</span> <span class=\"k\">else</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup.add_frequency_sweep\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.add_frequency_sweep/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.add_frequency_sweep\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_frequency_sweep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">frequency_sweep</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add frequency sweep.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str, optional</span>\n<span class=\"sd\">            Name of the frequency sweep.</span>\n<span class=\"sd\">        frequency_sweep : list, optional</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        :class:`pyaedt.edb_core.edb_data.hfss_simulation_setup_data.EdbFrequencySweep</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">frequency_sweeps</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;sweep&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">EdbFrequencySweep</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frequency_sweep</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup.set_solution_single_frequency\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.set_solution_single_frequency/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.set_solution_single_frequency\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_solution_single_frequency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"s2\">&quot;5GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"o\">=</span><span class=\"mf\">0.02</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set single-frequency solution.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        frequency : str, float, optional</span>\n<span class=\"sd\">            Adaptive frequency. The default is ``5GHz``.</span>\n<span class=\"sd\">        max_num_passes : int, optional</span>\n<span class=\"sd\">            Maximum number of passes. The default is ``10``.</span>\n<span class=\"sd\">        max_delta_s : float, optional</span>\n<span class=\"sd\">            Maximum delta S. The default is ``0.02``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequencyDataList</span><span class=\"o\">.</span><span class=\"n\">Clear</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">adapt_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;kSingle&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">add_adaptive_frequency_data</span><span class=\"p\">(</span><span class=\"n\">frequency</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup.set_solution_multi_frequencies\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.set_solution_multi_frequencies/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.set_solution_multi_frequencies\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_solution_multi_frequencies</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">frequencies</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">&quot;5GHz&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;10GHz&quot;</span><span class=\"p\">),</span> <span class=\"n\">max_num_passes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.02&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set multi-frequency solution.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        frequencies : list, tuple, optional</span>\n<span class=\"sd\">            List or tuple of adaptive frequencies. The default is ``5GHz``.</span>\n<span class=\"sd\">        max_num_passes : int, optional</span>\n<span class=\"sd\">            Maximum number of passes. Default is ``10``.</span>\n<span class=\"sd\">        max_delta_s : float, optional</span>\n<span class=\"sd\">            Maximum delta S. The default is ``0.02``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">adapt_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;kMultiFrequencies&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequencyDataList</span><span class=\"o\">.</span><span class=\"n\">Clear</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">frequencies</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">add_adaptive_frequency_data</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"HfssSimulationSetup.set_solution_broadband\"><a class=\"viewcode-back\" href=\"../../../../../API/_autosummary/pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.set_solution_broadband/#pyaedt.edb_core.edb_data.hfss_simulation_setup_data.HfssSimulationSetup.set_solution_broadband\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_solution_broadband</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">low_frequency</span><span class=\"o\">=</span><span class=\"s2\">&quot;5GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">high_frequency</span><span class=\"o\">=</span><span class=\"s2\">&quot;10GHz&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.02&quot;</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set broadband solution.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        low_frequency : str, float, optional</span>\n<span class=\"sd\">            Low frequency. The default is ``5GHz``.</span>\n<span class=\"sd\">        high_frequency : str, float, optional</span>\n<span class=\"sd\">            High frequency. The default is ``10GHz``.</span>\n<span class=\"sd\">        max_num_passes : int, optional</span>\n<span class=\"sd\">            Maximum number of passes. The default is ``10``.</span>\n<span class=\"sd\">        max_delta_s : float, optional</span>\n<span class=\"sd\">            Maximum Delta S. Default is ``0.02``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">adapt_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;kBroadband&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">AdaptiveFrequencyDataList</span><span class=\"o\">.</span><span class=\"n\">Clear</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">add_adaptive_frequency_data</span><span class=\"p\">(</span><span class=\"n\">low_frequency</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">adaptive_settings</span><span class=\"o\">.</span><span class=\"n\">add_adaptive_frequency_data</span><span class=\"p\">(</span><span class=\"n\">high_frequency</span><span class=\"p\">,</span> <span class=\"n\">max_num_passes</span><span class=\"p\">,</span> <span class=\"n\">max_delta_s</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/edb_core/edb_data/hfss_simulation_setup_data", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}