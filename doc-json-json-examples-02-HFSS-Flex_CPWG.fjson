{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "HFSS examples"}], "prev": {"link": "../Array/", "title": "HFSS: component antenna array"}, "next": {"link": "../HFSS_Choke/", "title": "HFSS: choke"}, "title": "HFSS: flex cable CPWG", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-02-hfss-flex-cpwg-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"hfss-flex-cable-cpwg\">\n<span id=\"sphx-glr-examples-02-hfss-flex-cpwg-py\"></span><h1>HFSS: flex cable CPWG<a class=\"headerlink\" href=\"#hfss-flex-cable-cpwg\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use PyAEDT to create a flex cable CPWG (coplanar waveguide with ground).</p>\n<section id=\"perform-required-immoprts\">\n<h2>Perform required immoprts<a class=\"headerlink\" href=\"#perform-required-immoprts\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">radians</span><span class=\"p\">,</span> <span class=\"n\">sin</span><span class=\"p\">,</span> <span class=\"n\">cos</span><span class=\"p\">,</span> <span class=\"n\">sqrt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">Hfss</span>\n</pre></div>\n</div>\n</section>\n<section id=\"set-non-graphical-mode\">\n<h2>Set non-graphical mode<a class=\"headerlink\" href=\"#set-non-graphical-mode\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set non-graphical mode. <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span></code> is needed to generate\ndocumentation only.\nYou can set <code class=\"docutils literal notranslate\"><span class=\"pre\">non_graphical</span></code> either to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;t&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"launch-aedt\">\n<h2>Launch AEDT<a class=\"headerlink\" href=\"#launch-aedt\" title=\"Permalink to this heading\">#</a></h2>\n<p>Launch AEDT 2022 R2 in graphical mode.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hfss</span> <span class=\"o\">=</span> <span class=\"n\">Hfss</span><span class=\"p\">(</span><span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">,</span> <span class=\"n\">solution_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;DrivenTerminal&quot;</span><span class=\"p\">,</span> <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">non_graphical</span><span class=\"p\">)</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">change_material_override</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">change_automatically_use_causal_materials</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_open_region</span><span class=\"p\">(</span><span class=\"s2\">&quot;100GHz&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;mil&quot;</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">mesh</span><span class=\"o\">.</span><span class=\"n\">assign_initial_mesh_from_slider</span><span class=\"p\">(</span><span class=\"n\">applycurvilinear</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-variables\">\n<h2>Create variables<a class=\"headerlink\" href=\"#create-variables\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create input variables for creating the flex cable CPWG.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">total_length</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>\n<span class=\"n\">theta</span> <span class=\"o\">=</span> <span class=\"mi\">120</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n<span class=\"n\">spacing</span> <span class=\"o\">=</span> <span class=\"mf\">1.53</span>\n<span class=\"n\">gnd_width</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">gnd_thickness</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">xt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">total_length</span> <span class=\"o\">-</span> <span class=\"n\">r</span> <span class=\"o\">*</span> <span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-bend\">\n<h2>Create bend<a class=\"headerlink\" href=\"#create-bend\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the bend. The <code class=\"docutils literal notranslate\"><span class=\"pre\">create_bending</span></code> method creates a list of points for\nthe bend based on the curvature radius and extension.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">create_bending</span><span class=\"p\">(</span><span class=\"n\">radius</span><span class=\"p\">,</span> <span class=\"n\">extension</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"n\">position_list</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"o\">-</span><span class=\"n\">xt</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">radius</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">radius</span><span class=\"p\">)]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">theta</span><span class=\"p\">)]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">radians</span><span class=\"p\">(</span><span class=\"n\">theta</span> <span class=\"o\">+</span> <span class=\"mf\">0.000000001</span><span class=\"p\">)]:</span>\n        <span class=\"n\">position_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">radius</span> <span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">radius</span> <span class=\"o\">*</span> <span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)))</span>\n\n    <span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">z1</span> <span class=\"o\">=</span> <span class=\"n\">position_list</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">y0</span><span class=\"p\">,</span> <span class=\"n\">z0</span> <span class=\"o\">=</span> <span class=\"n\">position_list</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n    <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">xt</span> <span class=\"o\">+</span> <span class=\"n\">extension</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">sqrt</span><span class=\"p\">((</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"n\">x0</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">z1</span> <span class=\"o\">-</span> <span class=\"n\">z0</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"n\">x0</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">scale</span> <span class=\"o\">+</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">z1</span> <span class=\"o\">-</span> <span class=\"n\">z0</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">scale</span> <span class=\"o\">+</span> <span class=\"n\">z0</span>\n\n    <span class=\"n\">position_list</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">position_list</span>\n</pre></div>\n</div>\n</section>\n<section id=\"draw-signal-line\">\n<h2>Draw signal line<a class=\"headerlink\" href=\"#draw-signal-line\" title=\"Permalink to this heading\">#</a></h2>\n<p>Draw a signal line to create a bended signal wire.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">position_list</span> <span class=\"o\">=</span> <span class=\"n\">create_bending</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span>\n    <span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">position_list</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rectangle&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_width</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_height</span><span class=\"o\">=</span><span class=\"n\">width</span><span class=\"p\">,</span>\n    <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"draw-ground-line\">\n<h2>Draw ground line<a class=\"headerlink\" href=\"#draw-ground-line\" title=\"Permalink to this heading\">#</a></h2>\n<p>Draw a ground line to create two bended ground wires.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gnd_r</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">spacing</span> <span class=\"o\">+</span> <span class=\"n\">width</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">gnd_width</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"ow\">in</span> <span class=\"n\">position_list</span><span class=\"p\">]</span>\n<span class=\"n\">gnd_l</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"ow\">in</span> <span class=\"n\">gnd_r</span><span class=\"p\">]</span>\n\n<span class=\"n\">gnd_objs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">gnd</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">gnd_r</span><span class=\"p\">,</span> <span class=\"n\">gnd_l</span><span class=\"p\">]:</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span>\n        <span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">gnd</span><span class=\"p\">,</span> <span class=\"n\">xsection_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rectangle&quot;</span><span class=\"p\">,</span> <span class=\"n\">xsection_width</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">,</span> <span class=\"n\">xsection_height</span><span class=\"o\">=</span><span class=\"n\">gnd_width</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">gnd_objs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"draw-dielectric\">\n<h2>Draw dielectric<a class=\"headerlink\" href=\"#draw-dielectric\" title=\"Permalink to this heading\">#</a></h2>\n<p>Draw a dielectric to create a dielectric cable.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">position_list</span> <span class=\"o\">=</span> <span class=\"n\">create_bending</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">height</span> <span class=\"o\">+</span> <span class=\"n\">gnd_thickness</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">fr4</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span>\n    <span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">position_list</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rectangle&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_width</span><span class=\"o\">=</span><span class=\"n\">gnd_thickness</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_height</span><span class=\"o\">=</span><span class=\"n\">width</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">spacing</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">gnd_width</span><span class=\"p\">,</span>\n    <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;FR4_epoxy&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-bottom-metals\">\n<h2>Create bottom metals<a class=\"headerlink\" href=\"#create-bottom-metals\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the bottom metals.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">position_list</span> <span class=\"o\">=</span> <span class=\"n\">create_bending</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">+</span> <span class=\"n\">height</span> <span class=\"o\">+</span> <span class=\"n\">gnd_thickness</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">bot</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span>\n    <span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"n\">position_list</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Rectangle&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_width</span><span class=\"o\">=</span><span class=\"n\">height</span><span class=\"p\">,</span>\n    <span class=\"n\">xsection_height</span><span class=\"o\">=</span><span class=\"n\">width</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">spacing</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">gnd_width</span><span class=\"p\">,</span>\n    <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;copper&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-port-interfaces\">\n<h2>Create port interfaces<a class=\"headerlink\" href=\"#create-port-interfaces\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create port interfaces (PEC enclosures).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">port_faces</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">face</span><span class=\"p\">,</span> <span class=\"n\">blockname</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">fr4</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">:],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;b1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b2&quot;</span><span class=\"p\">]):</span>\n    <span class=\"n\">xc</span><span class=\"p\">,</span> <span class=\"n\">yc</span><span class=\"p\">,</span> <span class=\"n\">zc</span> <span class=\"o\">=</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">center</span>\n    <span class=\"n\">positions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">face</span><span class=\"o\">.</span><span class=\"n\">vertices</span><span class=\"p\">]</span>\n\n    <span class=\"n\">port_sheet_list</span> <span class=\"o\">=</span> <span class=\"p\">[((</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">xc</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">10</span> <span class=\"o\">+</span> <span class=\"n\">xc</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">-</span> <span class=\"n\">yc</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">yc</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">z</span> <span class=\"o\">-</span> <span class=\"n\">zc</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">10</span> <span class=\"o\">+</span> <span class=\"n\">zc</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span> <span class=\"ow\">in</span> <span class=\"n\">positions</span><span class=\"p\">]</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">port_sheet_list</span><span class=\"p\">,</span> <span class=\"n\">close_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">cover_surface</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">center</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">]</span>\n\n    <span class=\"n\">port_block</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">thicken_sheet</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">port_block</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">blockname</span>\n    <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">port_block</span><span class=\"o\">.</span><span class=\"n\">faces</span><span class=\"p\">:</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">[</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">center</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">center</span><span class=\"p\">:</span>\n            <span class=\"n\">port_faces</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n    <span class=\"n\">port_block</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PEC&quot;</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">line</span><span class=\"p\">,</span> <span class=\"n\">bot</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">gnd_objs</span><span class=\"p\">:</span>\n        <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">subtract</span><span class=\"p\">([</span><span class=\"n\">port_block</span><span class=\"p\">],</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">port_faces</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[FaceId 7387]\n[FaceId 7387, FaceId 7582]\n</pre></div>\n</div>\n</section>\n<section id=\"create-boundary-condition\">\n<h2>Create boundary condition<a class=\"headerlink\" href=\"#create-boundary-condition\" title=\"Permalink to this heading\">#</a></h2>\n<p>Creates a Perfect E boundary condition.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">boundary</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">face</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">fr4</span><span class=\"o\">.</span><span class=\"n\">top_face_y</span><span class=\"p\">,</span> <span class=\"n\">fr4</span><span class=\"o\">.</span><span class=\"n\">bottom_face_y</span><span class=\"p\">]:</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_object_from_face</span><span class=\"p\">(</span><span class=\"n\">face</span><span class=\"p\">)</span>\n    <span class=\"n\">boundary</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">assign_perfecte_to_sheets</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-ports\">\n<h2>Create ports<a class=\"headerlink\" href=\"#create-ports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Creates ports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">for</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">port_name</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">port_faces</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;2&quot;</span><span class=\"p\">]):</span>\n    <span class=\"n\">reference</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">gnd_objs</span> <span class=\"o\">+</span> <span class=\"n\">boundary</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">bot</span><span class=\"p\">]]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s2\">&quot;b1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b2&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_wave_port_from_sheet</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">portname</span><span class=\"o\">=</span><span class=\"n\">port_name</span><span class=\"p\">,</span> <span class=\"n\">terminal_references</span><span class=\"o\">=</span><span class=\"n\">reference</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-setup-and-sweep\">\n<h2>Create setup and sweep<a class=\"headerlink\" href=\"#create-setup-and-sweep\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the setup and sweep.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_setup</span><span class=\"p\">(</span><span class=\"s2\">&quot;setup1&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">setup</span><span class=\"p\">[</span><span class=\"s2\">&quot;Frequency&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;2GHz&quot;</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MaximumPasses&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;MinimumConvergedPasses&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">create_linear_count_sweep</span><span class=\"p\">(</span>\n    <span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"s2\">&quot;setup1&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;GHz&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">freqstart</span><span class=\"o\">=</span><span class=\"mf\">1e-1</span><span class=\"p\">,</span>\n    <span class=\"n\">freqstop</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"n\">num_of_freq_points</span><span class=\"o\">=</span><span class=\"mi\">101</span><span class=\"p\">,</span>\n    <span class=\"n\">sweepname</span><span class=\"o\">=</span><span class=\"s2\">&quot;sweep1&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">save_fields</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">sweep_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Interpolating&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.SetupTemplates.SweepHFSS object at 0x000001F1CA1F9D90&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"plot-model\">\n<h2>Plot model<a class=\"headerlink\" href=\"#plot-model\" title=\"Permalink to this heading\">#</a></h2>\n<p>Plot the model.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">my_plot</span> <span class=\"o\">=</span> <span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">plot_air_objects</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">my_plot</span><span class=\"o\">.</span><span class=\"n\">show_axes</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">my_plot</span><span class=\"o\">.</span><span class=\"n\">show_grid</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">my_plot</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">working_directory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Image.jpg&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_Flex_CPWG_001.png\" srcset=\"../../_images/sphx_glr_Flex_CPWG_001.png\" alt=\"Flex CPWG\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"analyze-and-release\">\n<h2>Analyze and release<a class=\"headerlink\" href=\"#analyze-and-release\" title=\"Permalink to this heading\">#</a></h2>\n<p>Uncomment the <code class=\"docutils literal notranslate\"><span class=\"pre\">hfss.analyze_nominal</span></code> command if you want to analyze the\nmodel and release AEDT.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">hfss</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">()</span>\n<span class=\"c1\"># hfss.analyze_nominal(num_cores=4)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  25.254 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-02-hfss-flex-cpwg-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/76001bf7248a7544cc63b7da37e07bb1/Flex_CPWG.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">Flex_CPWG.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/a63f04b868d3e9127538ae58ab424d9a/Flex_CPWG.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">Flex_CPWG.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/02-HFSS/HFSS_Choke", "HFSS: choke", "N", "next"], ["examples/02-HFSS/Array", "HFSS: component antenna array", "P", "previous"]], "sourcename": "examples/02-HFSS/Flex_CPWG.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">HFSS: flex cable CPWG</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-immoprts\">Perform required immoprts</a></li>\n<li><a class=\"reference internal\" href=\"#set-non-graphical-mode\">Set non-graphical mode</a></li>\n<li><a class=\"reference internal\" href=\"#launch-aedt\">Launch AEDT</a></li>\n<li><a class=\"reference internal\" href=\"#create-variables\">Create variables</a></li>\n<li><a class=\"reference internal\" href=\"#create-bend\">Create bend</a></li>\n<li><a class=\"reference internal\" href=\"#draw-signal-line\">Draw signal line</a></li>\n<li><a class=\"reference internal\" href=\"#draw-ground-line\">Draw ground line</a></li>\n<li><a class=\"reference internal\" href=\"#draw-dielectric\">Draw dielectric</a></li>\n<li><a class=\"reference internal\" href=\"#create-bottom-metals\">Create bottom metals</a></li>\n<li><a class=\"reference internal\" href=\"#create-port-interfaces\">Create port interfaces</a></li>\n<li><a class=\"reference internal\" href=\"#create-boundary-condition\">Create boundary condition</a></li>\n<li><a class=\"reference internal\" href=\"#create-ports\">Create ports</a></li>\n<li><a class=\"reference internal\" href=\"#create-setup-and-sweep\">Create setup and sweep</a></li>\n<li><a class=\"reference internal\" href=\"#plot-model\">Plot model</a></li>\n<li><a class=\"reference internal\" href=\"#analyze-and-release\">Analyze and release</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/02-HFSS/Flex_CPWG", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}