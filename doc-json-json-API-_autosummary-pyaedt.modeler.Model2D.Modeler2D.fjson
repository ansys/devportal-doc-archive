{"parents": [{"link": "../../", "title": "API reference"}, {"link": "../../Primitives/", "title": "Modeler and  primitives"}], "prev": {"link": "../../Primitives/", "title": "Modeler and  primitives"}, "next": {"link": "../pyaedt.modeler.Model2D.Modeler2D.add_new_objects/", "title": "add_new_objects"}, "title": "pyaedt.modeler.Model2D.Modeler2D", "meta": {}, "body": "<section id=\"pyaedt-modeler-model2d-modeler2d\">\n<h1>pyaedt.modeler.Model2D.Modeler2D<a class=\"headerlink\" href=\"#pyaedt-modeler-model2d-modeler2d\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.modeler.Model2D.Modeler2D\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">pyaedt.modeler.Model2D.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Modeler2D</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">application</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/modeler/Model2D/#Modeler2D\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.modeler.Model2D.Modeler2D\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Provides the Modeler 2D application interface.</p>\n<p>This class is inherited in the caller application and is accessible through the modeler variable\nobject( eg. <code class=\"docutils literal notranslate\"><span class=\"pre\">maxwell2d.modeler</span></code>).</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>application</strong><span class=\"classifier\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pyaedt.application.Analysis2D.FieldAnalysis2D</span></code></span></dt><dd></dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">Maxwell2d</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Maxwell2d</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">my_modeler</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.add_new_objects/#pyaedt.modeler.Model2D.Modeler2D.add_new_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.add_new_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.add_new_objects</span></code></a>()</p></td>\n<td><p>Add objects that have been created in the modeler by previous operations.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.add_new_user_defined_component/#pyaedt.modeler.Model2D.Modeler2D.add_new_user_defined_component\" title=\"pyaedt.modeler.Model2D.Modeler2D.add_new_user_defined_component\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.add_new_user_defined_component</span></code></a>()</p></td>\n<td><p>Add 3D components and user-defined models that have been created in the modeler by previous operations.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.automatic_thicken_sheets/#pyaedt.modeler.Model2D.Modeler2D.automatic_thicken_sheets\" title=\"pyaedt.modeler.Model2D.Modeler2D.automatic_thicken_sheets\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.automatic_thicken_sheets</span></code></a>(...[,\u00a0...])</p></td>\n<td><p>Create thickened sheets for a list of input faces.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.break_spaceclaim_connection/#pyaedt.modeler.Model2D.Modeler2D.break_spaceclaim_connection\" title=\"pyaedt.modeler.Model2D.Modeler2D.break_spaceclaim_connection\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.break_spaceclaim_connection</span></code></a>()</p></td>\n<td><p>Break the connection with SpaceClaim.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.calculate_radius_2D/#pyaedt.modeler.Model2D.Modeler2D.calculate_radius_2D\" title=\"pyaedt.modeler.Model2D.Modeler2D.calculate_radius_2D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.calculate_radius_2D</span></code></a>(object_name[,\u00a0...])</p></td>\n<td><p>Calculate the extremity of an object in the radial direction.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.chassis_subtraction/#pyaedt.modeler.Model2D.Modeler2D.chassis_subtraction\" title=\"pyaedt.modeler.Model2D.Modeler2D.chassis_subtraction\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.chassis_subtraction</span></code></a>(chassis_part)</p></td>\n<td><p>Subtract all non-vacuum objects from the main chassis object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.check_plane/#pyaedt.modeler.Model2D.Modeler2D.check_plane\" title=\"pyaedt.modeler.Model2D.Modeler2D.check_plane\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.check_plane</span></code></a>(obj,\u00a0faceposition[,\u00a0...])</p></td>\n<td><p>Check for the plane that is defined as the face for an object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.clean_objects_name/#pyaedt.modeler.Model2D.Modeler2D.clean_objects_name\" title=\"pyaedt.modeler.Model2D.Modeler2D.clean_objects_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.clean_objects_name</span></code></a>(main_part_name)</p></td>\n<td><p>Clean the names of the objects for a main part.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.cleanup_objects/#pyaedt.modeler.Model2D.Modeler2D.cleanup_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.cleanup_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.cleanup_objects</span></code></a>()</p></td>\n<td><p>Clean up objects that no longer exist in the modeler because they were removed by previous operations.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.clone/#pyaedt.modeler.Model2D.Modeler2D.clone\" title=\"pyaedt.modeler.Model2D.Modeler2D.clone\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.clone</span></code></a>(objid)</p></td>\n<td><p>Clone objects from a list of object IDs.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.connect/#pyaedt.modeler.Model2D.Modeler2D.connect\" title=\"pyaedt.modeler.Model2D.Modeler2D.connect\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.connect</span></code></a>(theList)</p></td>\n<td><p>Connect objects from a list.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.convert_to_selections/#pyaedt.modeler.Model2D.Modeler2D.convert_to_selections\" title=\"pyaedt.modeler.Model2D.Modeler2D.convert_to_selections\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.convert_to_selections</span></code></a>(objtosplit)</p></td>\n<td><p>Convert one or more object to selections.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.cover_lines/#pyaedt.modeler.Model2D.Modeler2D.cover_lines\" title=\"pyaedt.modeler.Model2D.Modeler2D.cover_lines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.cover_lines</span></code></a>(selection)</p></td>\n<td><p>Cover a closed line and transform it to sheet.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_air_region/#pyaedt.modeler.Model2D.Modeler2D.create_air_region\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_air_region\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_air_region</span></code></a>([x_pos,\u00a0y_pos,\u00a0...])</p></td>\n<td><p>Create an air region.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_airbox/#pyaedt.modeler.Model2D.Modeler2D.create_airbox\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_airbox\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_airbox</span></code></a>([offset,\u00a0...])</p></td>\n<td><p>Create an airbox that is as big as the bounding extension of the project.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_circle/#pyaedt.modeler.Model2D.Modeler2D.create_circle\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_circle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_circle</span></code></a>(position,\u00a0radius[,\u00a0...])</p></td>\n<td><p>Create a circle.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_coordinate_system/#pyaedt.modeler.Model2D.Modeler2D.create_coordinate_system\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_coordinate_system\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_coordinate_system</span></code></a>([origin,\u00a0...])</p></td>\n<td><p>Create a coordinate system.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_ellipse/#pyaedt.modeler.Model2D.Modeler2D.create_ellipse\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_ellipse\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_ellipse</span></code></a>(position,\u00a0...[,\u00a0...])</p></td>\n<td><p>Create an ellipse.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_face_coordinate_system/#pyaedt.modeler.Model2D.Modeler2D.create_face_coordinate_system\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_face_coordinate_system\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_face_coordinate_system</span></code></a>(...)</p></td>\n<td><p>Create a face coordinate system.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_face_list/#pyaedt.modeler.Model2D.Modeler2D.create_face_list\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_face_list\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_face_list</span></code></a>(face_list[,\u00a0name])</p></td>\n<td><p>Create a list of faces given a list of face ID or a list of objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_faceted_bondwire_from_true_surface/#pyaedt.modeler.Model2D.Modeler2D.create_faceted_bondwire_from_true_surface\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_faceted_bondwire_from_true_surface\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_faceted_bondwire_from_true_surface</span></code></a>(...)</p></td>\n<td><p>Create a faceted bondwire from an existing true surface bondwire.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_group/#pyaedt.modeler.Model2D.Modeler2D.create_group\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_group\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_group</span></code></a>([objects,\u00a0...])</p></td>\n<td><p>Group objects or groups into one group.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_object_from_edge/#pyaedt.modeler.Model2D.Modeler2D.create_object_from_edge\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_object_from_edge\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_object_from_edge</span></code></a>(edge[,\u00a0...])</p></td>\n<td><p>Create an object from one or multiple edges.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_object_from_face/#pyaedt.modeler.Model2D.Modeler2D.create_object_from_face\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_object_from_face\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_object_from_face</span></code></a>(face[,\u00a0...])</p></td>\n<td><p>Create an object from one or multiple face.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_object_list/#pyaedt.modeler.Model2D.Modeler2D.create_object_list\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_object_list\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_object_list</span></code></a>(object_list[,\u00a0name])</p></td>\n<td><p>Create an object list given a list of object names.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_outer_facelist/#pyaedt.modeler.Model2D.Modeler2D.create_outer_facelist\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_outer_facelist\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_outer_facelist</span></code></a>(externalobjects)</p></td>\n<td><p>Create a face list from a list of outer objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_point/#pyaedt.modeler.Model2D.Modeler2D.create_point\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_point\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_point</span></code></a>(position[,\u00a0name,\u00a0color])</p></td>\n<td><p>Create a point.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_polyline/#pyaedt.modeler.Model2D.Modeler2D.create_polyline\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_polyline\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_polyline</span></code></a>(position_list[,\u00a0...])</p></td>\n<td><p>Draw a polyline object in the 3D modeler.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_rectangle/#pyaedt.modeler.Model2D.Modeler2D.create_rectangle\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_rectangle\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_rectangle</span></code></a>(position,\u00a0...[,\u00a0...])</p></td>\n<td><p>Create a rectangle.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_region/#pyaedt.modeler.Model2D.Modeler2D.create_region\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_region\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_region</span></code></a>([pad_percent,\u00a0...])</p></td>\n<td><p>Create an air region.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_regular_polygon/#pyaedt.modeler.Model2D.Modeler2D.create_regular_polygon\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_regular_polygon\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_regular_polygon</span></code></a>(position,\u00a0...)</p></td>\n<td><p>Create a rectangle.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_sheet_to_ground/#pyaedt.modeler.Model2D.Modeler2D.create_sheet_to_ground\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_sheet_to_ground\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_sheet_to_ground</span></code></a>(objectname)</p></td>\n<td><p>Create a sheet between an object and a ground plane.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_spiral_on_face/#pyaedt.modeler.Model2D.Modeler2D.create_spiral_on_face\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_spiral_on_face\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_spiral_on_face</span></code></a>(face,\u00a0poly_width)</p></td>\n<td><p>Create a Spiral Polyline inside a face.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.create_udp/#pyaedt.modeler.Model2D.Modeler2D.create_udp\" title=\"pyaedt.modeler.Model2D.Modeler2D.create_udp\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.create_udp</span></code></a>(udp_dll_name,\u00a0...[,\u00a0...])</p></td>\n<td><p>Create a user-defined primitive (UDP).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.delete/#pyaedt.modeler.Model2D.Modeler2D.delete\" title=\"pyaedt.modeler.Model2D.Modeler2D.delete\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.delete</span></code></a>([objects])</p></td>\n<td><p>Delete objects or groups.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.delete_objects_containing/#pyaedt.modeler.Model2D.Modeler2D.delete_objects_containing\" title=\"pyaedt.modeler.Model2D.Modeler2D.delete_objects_containing\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.delete_objects_containing</span></code></a>(...[,\u00a0...])</p></td>\n<td><p>Delete all objects with a given prefix.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.does_object_exists/#pyaedt.modeler.Model2D.Modeler2D.does_object_exists\" title=\"pyaedt.modeler.Model2D.Modeler2D.does_object_exists\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.does_object_exists</span></code></a>(object)</p></td>\n<td><p>&quot;Check to see if an object exists.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.duplicate_along_line/#pyaedt.modeler.Model2D.Modeler2D.duplicate_along_line\" title=\"pyaedt.modeler.Model2D.Modeler2D.duplicate_along_line\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.duplicate_along_line</span></code></a>(objid,\u00a0vector)</p></td>\n<td><p>Duplicate a selection along a line.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.duplicate_and_mirror/#pyaedt.modeler.Model2D.Modeler2D.duplicate_and_mirror\" title=\"pyaedt.modeler.Model2D.Modeler2D.duplicate_and_mirror\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.duplicate_and_mirror</span></code></a>(objid,\u00a0...[,\u00a0...])</p></td>\n<td><p>Duplicate and mirror a selection.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.duplicate_around_axis/#pyaedt.modeler.Model2D.Modeler2D.duplicate_around_axis\" title=\"pyaedt.modeler.Model2D.Modeler2D.duplicate_around_axis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.duplicate_around_axis</span></code></a>(objid,\u00a0cs_axis)</p></td>\n<td><p>Duplicate a selection around an axis.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.edit_region_dimensions/#pyaedt.modeler.Model2D.Modeler2D.edit_region_dimensions\" title=\"pyaedt.modeler.Model2D.Modeler2D.edit_region_dimensions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.edit_region_dimensions</span></code></a>(listvalues)</p></td>\n<td><p>Modify the dimensions of the region.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.explicitly_subtract/#pyaedt.modeler.Model2D.Modeler2D.explicitly_subtract\" title=\"pyaedt.modeler.Model2D.Modeler2D.explicitly_subtract\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.explicitly_subtract</span></code></a>(diellist,\u00a0...)</p></td>\n<td><p>Explicitly subtract all elements in a SolveInside list and a SolveSurface list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.find_closest_edges/#pyaedt.modeler.Model2D.Modeler2D.find_closest_edges\" title=\"pyaedt.modeler.Model2D.Modeler2D.find_closest_edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.find_closest_edges</span></code></a>(start_obj,\u00a0end_obj)</p></td>\n<td><p>Retrieve the two closest edges that are not perpendicular for two objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.find_new_objects/#pyaedt.modeler.Model2D.Modeler2D.find_new_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.find_new_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.find_new_objects</span></code></a>()</p></td>\n<td><p>Find any new objects in the modeler that were created by previous operations.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.find_point_around/#pyaedt.modeler.Model2D.Modeler2D.find_point_around\" title=\"pyaedt.modeler.Model2D.Modeler2D.find_point_around\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.find_point_around</span></code></a>(objectname,\u00a0...)</p></td>\n<td><p>Find the point around an object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.find_port_faces/#pyaedt.modeler.Model2D.Modeler2D.find_port_faces\" title=\"pyaedt.modeler.Model2D.Modeler2D.find_port_faces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.find_port_faces</span></code></a>(port_sheets)</p></td>\n<td><p>Find the vaccums given a list of input sheets.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.fit_all/#pyaedt.modeler.Model2D.Modeler2D.fit_all\" title=\"pyaedt.modeler.Model2D.Modeler2D.fit_all\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.fit_all</span></code></a>()</p></td>\n<td><p>Fit all.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.flatten_assembly/#pyaedt.modeler.Model2D.Modeler2D.flatten_assembly\" title=\"pyaedt.modeler.Model2D.Modeler2D.flatten_assembly\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.flatten_assembly</span></code></a>()</p></td>\n<td><p>Flatten the assembly, removing all group trees.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.generate_object_history/#pyaedt.modeler.Model2D.Modeler2D.generate_object_history\" title=\"pyaedt.modeler.Model2D.Modeler2D.generate_object_history\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.generate_object_history</span></code></a>(objectname)</p></td>\n<td><p>Generate history for the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_bodynames_from_position/#pyaedt.modeler.Model2D.Modeler2D.get_bodynames_from_position\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_bodynames_from_position\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_bodynames_from_position</span></code></a>(position)</p></td>\n<td><p>Retrieve the names of the objects that are in contact with a given point.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_boundaries_name/#pyaedt.modeler.Model2D.Modeler2D.get_boundaries_name\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_boundaries_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_boundaries_name</span></code></a>()</p></td>\n<td><p>Retrieve all boundary names.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_bounding_dimension/#pyaedt.modeler.Model2D.Modeler2D.get_bounding_dimension\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_bounding_dimension\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_bounding_dimension</span></code></a>()</p></td>\n<td><p>Retrieve the dimension array of the bounding box.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_closest_edgeid_to_position/#pyaedt.modeler.Model2D.Modeler2D.get_closest_edgeid_to_position\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_closest_edgeid_to_position\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_closest_edgeid_to_position</span></code></a>(...)</p></td>\n<td><p>Get the edge ID closest to a given position.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edge_length/#pyaedt.modeler.Model2D.Modeler2D.get_edge_length\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edge_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edge_length</span></code></a>(edgeID)</p></td>\n<td><p>Get the length of an edge.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edge_midpoint/#pyaedt.modeler.Model2D.Modeler2D.get_edge_midpoint\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edge_midpoint\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edge_midpoint</span></code></a>(partID)</p></td>\n<td><p>Retrieve the midpoint coordinates of a given edge ID or edge name.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edge_vertices/#pyaedt.modeler.Model2D.Modeler2D.get_edge_vertices\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edge_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edge_vertices</span></code></a>(edgeID)</p></td>\n<td><p>Retrieve the vertex IDs of a given edge ID or edge name.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edgeid_from_position/#pyaedt.modeler.Model2D.Modeler2D.get_edgeid_from_position\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edgeid_from_position\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edgeid_from_position</span></code></a>(position)</p></td>\n<td><p>Get an edge ID from a position.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edgeids_from_vertexid/#pyaedt.modeler.Model2D.Modeler2D.get_edgeids_from_vertexid\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edgeids_from_vertexid\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edgeids_from_vertexid</span></code></a>(...)</p></td>\n<td><p>Retrieve edge IDs for a vertex ID.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edges_for_circuit_port/#pyaedt.modeler.Model2D.Modeler2D.get_edges_for_circuit_port\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edges_for_circuit_port\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edges_for_circuit_port</span></code></a>(face_id)</p></td>\n<td><p>Retrieve two edge IDs suitable for the circuit port.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edges_for_circuit_port_from_sheet/#pyaedt.modeler.Model2D.Modeler2D.get_edges_for_circuit_port_from_sheet\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edges_for_circuit_port_from_sheet\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edges_for_circuit_port_from_sheet</span></code></a>(sheet)</p></td>\n<td><p>Retrieve two edge IDs that are suitable for a circuit port from a sheet.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_edges_on_bounding_box/#pyaedt.modeler.Model2D.Modeler2D.get_edges_on_bounding_box\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_edges_on_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_edges_on_bounding_box</span></code></a>(sheets)</p></td>\n<td><p>Retrieve the edges of the sheets passed in the input that are lying on the bounding box.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_entitylist_id/#pyaedt.modeler.Model2D.Modeler2D.get_entitylist_id\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_entitylist_id\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_entitylist_id</span></code></a>(name)</p></td>\n<td><p>Retrieve the ID of an entity list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_equivalent_parallel_edges/#pyaedt.modeler.Model2D.Modeler2D.get_equivalent_parallel_edges\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_equivalent_parallel_edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_equivalent_parallel_edges</span></code></a>(edgelist)</p></td>\n<td><p>Create two new edges that are parallel and equal to the smallest edge given a parallel couple of edges.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_existing_polyline/#pyaedt.modeler.Model2D.Modeler2D.get_existing_polyline\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_existing_polyline\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_existing_polyline</span></code></a>(object)</p></td>\n<td><p>Retrieve a polyline object to manipulate it.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_face_area/#pyaedt.modeler.Model2D.Modeler2D.get_face_area\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_face_area\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_face_area</span></code></a>(face_id)</p></td>\n<td><p>Retrieve the area of a given face ID.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_face_center/#pyaedt.modeler.Model2D.Modeler2D.get_face_center\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_face_center\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_face_center</span></code></a>(face_id)</p></td>\n<td><p>Retrieve the center position for a given planar face ID.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_face_edges/#pyaedt.modeler.Model2D.Modeler2D.get_face_edges\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_face_edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_face_edges</span></code></a>(partId)</p></td>\n<td><p>Retrieve the edge IDs of a given face name or face ID.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_face_vertices/#pyaedt.modeler.Model2D.Modeler2D.get_face_vertices\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_face_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_face_vertices</span></code></a>(face_id)</p></td>\n<td><p>Retrieve the vertex IDs of a given face ID or face name.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_faceid_from_position/#pyaedt.modeler.Model2D.Modeler2D.get_faceid_from_position\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_faceid_from_position\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_faceid_from_position</span></code></a>(position)</p></td>\n<td><p>Retrieve a face ID from a position.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_faces_from_materials/#pyaedt.modeler.Model2D.Modeler2D.get_faces_from_materials\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_faces_from_materials\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_faces_from_materials</span></code></a>(mats)</p></td>\n<td><p>Select all outer faces given a list of materials.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_group_bounding_box/#pyaedt.modeler.Model2D.Modeler2D.get_group_bounding_box\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_group_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_group_bounding_box</span></code></a>(group)</p></td>\n<td><p>Retrieve the bounding box of a group.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_line_ids/#pyaedt.modeler.Model2D.Modeler2D.get_line_ids\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_line_ids\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_line_ids</span></code></a>()</p></td>\n<td><p>Create a dictionary of object IDs for the lines in the design with the line name as the key.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_matched_object_name/#pyaedt.modeler.Model2D.Modeler2D.get_matched_object_name\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_matched_object_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_matched_object_name</span></code></a>(search_string)</p></td>\n<td><p>Retrieve the name of the matched object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_mid_points_on_dir/#pyaedt.modeler.Model2D.Modeler2D.get_mid_points_on_dir\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_mid_points_on_dir\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_mid_points_on_dir</span></code></a>(sheet,\u00a0axisdir)</p></td>\n<td><p>Retrieve midpoints on a given axis direction.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_model_bounding_box/#pyaedt.modeler.Model2D.Modeler2D.get_model_bounding_box\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_model_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_model_bounding_box</span></code></a>()</p></td>\n<td><p>Retrieve the model bounding box.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_obj_id/#pyaedt.modeler.Model2D.Modeler2D.get_obj_id\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_obj_id\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_obj_id</span></code></a>(objname)</p></td>\n<td><p>Return the object ID from an object name.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_object_edges/#pyaedt.modeler.Model2D.Modeler2D.get_object_edges\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_object_edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_object_edges</span></code></a>(partId)</p></td>\n<td><p>Retrieve the edge IDs of a given object ID or object name.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_object_faces/#pyaedt.modeler.Model2D.Modeler2D.get_object_faces\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_object_faces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_object_faces</span></code></a>(partId)</p></td>\n<td><p>Retrieve the face IDs of a given object ID or object name.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_object_from_name/#pyaedt.modeler.Model2D.Modeler2D.get_object_from_name\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_object_from_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_object_from_name</span></code></a>(objname)</p></td>\n<td><p>Return the object from an object name.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_object_name_from_edge_id/#pyaedt.modeler.Model2D.Modeler2D.get_object_name_from_edge_id\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_object_name_from_edge_id\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_object_name_from_edge_id</span></code></a>(edge_id)</p></td>\n<td><p>Retrieve the object name for a predefined edge ID.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_object_vertices/#pyaedt.modeler.Model2D.Modeler2D.get_object_vertices\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_object_vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_object_vertices</span></code></a>(partID)</p></td>\n<td><p>Retrieve the vertex IDs of a given object name or object ID.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_objects_by_material/#pyaedt.modeler.Model2D.Modeler2D.get_objects_by_material\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_objects_by_material\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_objects_by_material</span></code></a>(materialname)</p></td>\n<td><p>Retrieve a list of the IDs for objects of a specified material.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_objects_in_group/#pyaedt.modeler.Model2D.Modeler2D.get_objects_in_group\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_objects_in_group\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_objects_in_group</span></code></a>(group)</p></td>\n<td><p>Retrieve a list of objects belonging to a group.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_objects_w_string/#pyaedt.modeler.Model2D.Modeler2D.get_objects_w_string\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_objects_w_string\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_objects_w_string</span></code></a>(stringname[,\u00a0...])</p></td>\n<td><p>Retrieve all objects with a given string in their names.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_solving_volume/#pyaedt.modeler.Model2D.Modeler2D.get_solving_volume\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_solving_volume\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_solving_volume</span></code></a>()</p></td>\n<td><p>Generate a mesh for a setup.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_vertex_position/#pyaedt.modeler.Model2D.Modeler2D.get_vertex_position\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_vertex_position\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_vertex_position</span></code></a>(vertex_id)</p></td>\n<td><p>Retrieve a vector of vertex coordinates.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.get_vertices_of_line/#pyaedt.modeler.Model2D.Modeler2D.get_vertices_of_line\" title=\"pyaedt.modeler.Model2D.Modeler2D.get_vertices_of_line\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.get_vertices_of_line</span></code></a>(sLineName)</p></td>\n<td><p>Generate a list of vertex positions for a line object from AEDT in model units.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.global_to_cs/#pyaedt.modeler.Model2D.Modeler2D.global_to_cs\" title=\"pyaedt.modeler.Model2D.Modeler2D.global_to_cs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.global_to_cs</span></code></a>(point,\u00a0ref_cs)</p></td>\n<td><p>Transform a point from the global coordinate system to another coordinate system.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.import_3d_cad/#pyaedt.modeler.Model2D.Modeler2D.import_3d_cad\" title=\"pyaedt.modeler.Model2D.Modeler2D.import_3d_cad\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.import_3d_cad</span></code></a>(filename[,\u00a0healing,\u00a0...])</p></td>\n<td><p>Import a CAD model.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.import_spaceclaim_document/#pyaedt.modeler.Model2D.Modeler2D.import_spaceclaim_document\" title=\"pyaedt.modeler.Model2D.Modeler2D.import_spaceclaim_document\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.import_spaceclaim_document</span></code></a>(SCFile)</p></td>\n<td><p>Import a SpaceClaim document.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.imprint/#pyaedt.modeler.Model2D.Modeler2D.imprint\" title=\"pyaedt.modeler.Model2D.Modeler2D.imprint\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.imprint</span></code></a>(blank_list,\u00a0tool_list[,\u00a0...])</p></td>\n<td><p>Imprin an object list on another object list.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.imprint_normal_projection/#pyaedt.modeler.Model2D.Modeler2D.imprint_normal_projection\" title=\"pyaedt.modeler.Model2D.Modeler2D.imprint_normal_projection\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.imprint_normal_projection</span></code></a>(tool_list)</p></td>\n<td><p>Imprint the normal projection of objects over a sheet.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.imprint_vector_projection/#pyaedt.modeler.Model2D.Modeler2D.imprint_vector_projection\" title=\"pyaedt.modeler.Model2D.Modeler2D.imprint_vector_projection\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.imprint_vector_projection</span></code></a>(...[,\u00a0...])</p></td>\n<td><p>Imprint the projection of objects over a sheet with a specified vector and distance.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.intersect/#pyaedt.modeler.Model2D.Modeler2D.intersect\" title=\"pyaedt.modeler.Model2D.Modeler2D.intersect\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.intersect</span></code></a>(theList[,\u00a0keep_originals])</p></td>\n<td><p>Intersect objects from a list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.load_hfss/#pyaedt.modeler.Model2D.Modeler2D.load_hfss\" title=\"pyaedt.modeler.Model2D.Modeler2D.load_hfss\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.load_hfss</span></code></a>(cadfile)</p></td>\n<td><p>Load HFSS.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.load_objects_bytype/#pyaedt.modeler.Model2D.Modeler2D.load_objects_bytype\" title=\"pyaedt.modeler.Model2D.Modeler2D.load_objects_bytype\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.load_objects_bytype</span></code></a>(obj_type)</p></td>\n<td><p>Load all objects of a specified type.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.load_scdm_in_hfss/#pyaedt.modeler.Model2D.Modeler2D.load_scdm_in_hfss\" title=\"pyaedt.modeler.Model2D.Modeler2D.load_scdm_in_hfss\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.load_scdm_in_hfss</span></code></a>(SpaceClaimFile)</p></td>\n<td><p>Load a SpaceClaim file in HFSS.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.mirror/#pyaedt.modeler.Model2D.Modeler2D.mirror\" title=\"pyaedt.modeler.Model2D.Modeler2D.mirror\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.mirror</span></code></a>(objid,\u00a0position,\u00a0vector)</p></td>\n<td><p>Mirror a selection.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.modeler_variable/#pyaedt.modeler.Model2D.Modeler2D.modeler_variable\" title=\"pyaedt.modeler.Model2D.Modeler2D.modeler_variable\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.modeler_variable</span></code></a>(value)</p></td>\n<td><p>Modeler variable.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.move/#pyaedt.modeler.Model2D.Modeler2D.move\" title=\"pyaedt.modeler.Model2D.Modeler2D.move\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.move</span></code></a>(objid,\u00a0vector)</p></td>\n<td><p>Move objects from a list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.move_edge/#pyaedt.modeler.Model2D.Modeler2D.move_edge\" title=\"pyaedt.modeler.Model2D.Modeler2D.move_edge\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.move_edge</span></code></a>(edges[,\u00a0offset])</p></td>\n<td><p>Move an input edge or a list of input edges of a specific object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.move_face/#pyaedt.modeler.Model2D.Modeler2D.move_face\" title=\"pyaedt.modeler.Model2D.Modeler2D.move_face\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.move_face</span></code></a>(faces[,\u00a0offset])</p></td>\n<td><p>Move an input face or a list of input faces of a specific object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.objects_in_bounding_box/#pyaedt.modeler.Model2D.Modeler2D.objects_in_bounding_box\" title=\"pyaedt.modeler.Model2D.Modeler2D.objects_in_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.objects_in_bounding_box</span></code></a>(bounding_box)</p></td>\n<td><p>Given a 2D bounding box, check if sheets and lines are inside it.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.purge_history/#pyaedt.modeler.Model2D.Modeler2D.purge_history\" title=\"pyaedt.modeler.Model2D.Modeler2D.purge_history\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.purge_history</span></code></a>(theList)</p></td>\n<td><p>Purge history objects from object names.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.radial_split_2D/#pyaedt.modeler.Model2D.Modeler2D.radial_split_2D\" title=\"pyaedt.modeler.Model2D.Modeler2D.radial_split_2D\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.radial_split_2D</span></code></a>(radius,\u00a0name)</p></td>\n<td><p>Split the stator and rotor for mesh refinement.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.refresh/#pyaedt.modeler.Model2D.Modeler2D.refresh\" title=\"pyaedt.modeler.Model2D.Modeler2D.refresh\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.refresh</span></code></a>()</p></td>\n<td><p>Refresh this object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.refresh_all_ids/#pyaedt.modeler.Model2D.Modeler2D.refresh_all_ids\" title=\"pyaedt.modeler.Model2D.Modeler2D.refresh_all_ids\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.refresh_all_ids</span></code></a>()</p></td>\n<td><p>Refresh all IDs.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.rotate/#pyaedt.modeler.Model2D.Modeler2D.rotate\" title=\"pyaedt.modeler.Model2D.Modeler2D.rotate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.rotate</span></code></a>(objid,\u00a0cs_axis[,\u00a0angle,\u00a0unit])</p></td>\n<td><p>Rotate the selection.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.section/#pyaedt.modeler.Model2D.Modeler2D.section\" title=\"pyaedt.modeler.Model2D.Modeler2D.section\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.section</span></code></a>(object_list,\u00a0plane[,\u00a0...])</p></td>\n<td><p>Section the selection.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.select_allfaces_fromobjects/#pyaedt.modeler.Model2D.Modeler2D.select_allfaces_fromobjects\" title=\"pyaedt.modeler.Model2D.Modeler2D.select_allfaces_fromobjects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.select_allfaces_fromobjects</span></code></a>(elements)</p></td>\n<td><p>Select all outer faces given a list of objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.separate_bodies/#pyaedt.modeler.Model2D.Modeler2D.separate_bodies\" title=\"pyaedt.modeler.Model2D.Modeler2D.separate_bodies\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.separate_bodies</span></code></a>(object_list[,\u00a0...])</p></td>\n<td><p>Separate bodies of the selection.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.set_object_model_state/#pyaedt.modeler.Model2D.Modeler2D.set_object_model_state\" title=\"pyaedt.modeler.Model2D.Modeler2D.set_object_model_state\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.set_object_model_state</span></code></a>(obj_list[,\u00a0...])</p></td>\n<td><p>Set a list of objects to either models or non-models.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.set_objects_deformation/#pyaedt.modeler.Model2D.Modeler2D.set_objects_deformation\" title=\"pyaedt.modeler.Model2D.Modeler2D.set_objects_deformation\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.set_objects_deformation</span></code></a>(objects)</p></td>\n<td><p>Assign deformation objects to a Workbench link.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.set_objects_temperature/#pyaedt.modeler.Model2D.Modeler2D.set_objects_temperature\" title=\"pyaedt.modeler.Model2D.Modeler2D.set_objects_temperature\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.set_objects_temperature</span></code></a>(objects[,\u00a0...])</p></td>\n<td><p>Assign temperatures to objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.set_working_coordinate_system/#pyaedt.modeler.Model2D.Modeler2D.set_working_coordinate_system\" title=\"pyaedt.modeler.Model2D.Modeler2D.set_working_coordinate_system\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.set_working_coordinate_system</span></code></a>(name)</p></td>\n<td><p>Set the working coordinate system to another coordinate system.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.setunassigned_mats/#pyaedt.modeler.Model2D.Modeler2D.setunassigned_mats\" title=\"pyaedt.modeler.Model2D.Modeler2D.setunassigned_mats\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.setunassigned_mats</span></code></a>()</p></td>\n<td><p>Find unassagned objects and set them to non-model.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.split/#pyaedt.modeler.Model2D.Modeler2D.split\" title=\"pyaedt.modeler.Model2D.Modeler2D.split\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.split</span></code></a>(objects,\u00a0plane[,\u00a0sides])</p></td>\n<td><p>Split a list of objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.subtract/#pyaedt.modeler.Model2D.Modeler2D.subtract\" title=\"pyaedt.modeler.Model2D.Modeler2D.subtract\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.subtract</span></code></a>(blank_list,\u00a0tool_list[,\u00a0...])</p></td>\n<td><p>Subtract objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.sweep_along_normal/#pyaedt.modeler.Model2D.Modeler2D.sweep_along_normal\" title=\"pyaedt.modeler.Model2D.Modeler2D.sweep_along_normal\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.sweep_along_normal</span></code></a>(obj_name,\u00a0face_id)</p></td>\n<td><p>Sweep the selection along the vector.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.sweep_along_path/#pyaedt.modeler.Model2D.Modeler2D.sweep_along_path\" title=\"pyaedt.modeler.Model2D.Modeler2D.sweep_along_path\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.sweep_along_path</span></code></a>(objid,\u00a0sweep_object)</p></td>\n<td><p>Sweep the selection along a path.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.sweep_along_vector/#pyaedt.modeler.Model2D.Modeler2D.sweep_along_vector\" title=\"pyaedt.modeler.Model2D.Modeler2D.sweep_along_vector\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.sweep_along_vector</span></code></a>(objid,\u00a0sweep_vector)</p></td>\n<td><p>Sweep the selection along a vector.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.sweep_around_axis/#pyaedt.modeler.Model2D.Modeler2D.sweep_around_axis\" title=\"pyaedt.modeler.Model2D.Modeler2D.sweep_around_axis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.sweep_around_axis</span></code></a>(objid,\u00a0cs_axis)</p></td>\n<td><p>Sweep the selection around the axis.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.thicken_sheet/#pyaedt.modeler.Model2D.Modeler2D.thicken_sheet\" title=\"pyaedt.modeler.Model2D.Modeler2D.thicken_sheet\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.thicken_sheet</span></code></a>(objid,\u00a0thickness[,\u00a0...])</p></td>\n<td><p>Thicken the sheet of the selection.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.translate/#pyaedt.modeler.Model2D.Modeler2D.translate\" title=\"pyaedt.modeler.Model2D.Modeler2D.translate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.translate</span></code></a>(objid,\u00a0vector)</p></td>\n<td><p>Translate objects from a list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.ungroup/#pyaedt.modeler.Model2D.Modeler2D.ungroup\" title=\"pyaedt.modeler.Model2D.Modeler2D.ungroup\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.ungroup</span></code></a>(groups)</p></td>\n<td><p>Ungroup one or more groups.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.unite/#pyaedt.modeler.Model2D.Modeler2D.unite\" title=\"pyaedt.modeler.Model2D.Modeler2D.unite\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.unite</span></code></a>(theList[,\u00a0purge])</p></td>\n<td><p>Unite objects from a list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.update_object/#pyaedt.modeler.Model2D.Modeler2D.update_object\" title=\"pyaedt.modeler.Model2D.Modeler2D.update_object\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.update_object</span></code></a>(obj)</p></td>\n<td><p>Update any <a class=\"reference internal\" href=\"../pyaedt.modeler.Object3d.Object3d/#pyaedt.modeler.Object3d.Object3d\" title=\"pyaedt.modeler.Object3d.Object3d\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pyaedt.modeler.Object3d.Object3d</span></code></a> derivatives that have potentially been modified by a modeler operation.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.update_udp/#pyaedt.modeler.Model2D.Modeler2D.update_udp\" title=\"pyaedt.modeler.Model2D.Modeler2D.update_udp\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.update_udp</span></code></a>(object_name,\u00a0...)</p></td>\n<td><p>Update an existing geometrical object that was originally created using a user-defined primitive (UDP).</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.value_in_object_units/#pyaedt.modeler.Model2D.Modeler2D.value_in_object_units\" title=\"pyaedt.modeler.Model2D.Modeler2D.value_in_object_units\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.value_in_object_units</span></code></a>(value)</p></td>\n<td><p>Convert one or more strings for numerical lengths to floating point values.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.vertex_data_of_lines/#pyaedt.modeler.Model2D.Modeler2D.vertex_data_of_lines\" title=\"pyaedt.modeler.Model2D.Modeler2D.vertex_data_of_lines\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.vertex_data_of_lines</span></code></a>([txtfilter])</p></td>\n<td><p>Generate a dictionary of line vertex data for all lines contained within the design.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.wrap_sheet/#pyaedt.modeler.Model2D.Modeler2D.wrap_sheet\" title=\"pyaedt.modeler.Model2D.Modeler2D.wrap_sheet\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.wrap_sheet</span></code></a>(sheet_name,\u00a0object_name)</p></td>\n<td><p>Execute the sheet wrapping around an object.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.coordinate_systems/#pyaedt.modeler.Model2D.Modeler2D.coordinate_systems\" title=\"pyaedt.modeler.Model2D.Modeler2D.coordinate_systems\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.coordinate_systems</span></code></a></p></td>\n<td><p>Coordinate Systems.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.defaultmaterial/#pyaedt.modeler.Model2D.Modeler2D.defaultmaterial\" title=\"pyaedt.modeler.Model2D.Modeler2D.defaultmaterial\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.defaultmaterial</span></code></a></p></td>\n<td><p>Default material.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.design_type/#pyaedt.modeler.Model2D.Modeler2D.design_type\" title=\"pyaedt.modeler.Model2D.Modeler2D.design_type\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.design_type</span></code></a></p></td>\n<td><p>Design type.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.dimension/#pyaedt.modeler.Model2D.Modeler2D.dimension\" title=\"pyaedt.modeler.Model2D.Modeler2D.dimension\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.dimension</span></code></a></p></td>\n<td><p>Dimensions.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.geometry_mode/#pyaedt.modeler.Model2D.Modeler2D.geometry_mode\" title=\"pyaedt.modeler.Model2D.Modeler2D.geometry_mode\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.geometry_mode</span></code></a></p></td>\n<td><p>Geometry mode.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.line_names/#pyaedt.modeler.Model2D.Modeler2D.line_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.line_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.line_names</span></code></a></p></td>\n<td><p>List of the names of all line objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.line_objects/#pyaedt.modeler.Model2D.Modeler2D.line_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.line_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.line_objects</span></code></a></p></td>\n<td><p>List of all line objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.logger/#pyaedt.modeler.Model2D.Modeler2D.logger\" title=\"pyaedt.modeler.Model2D.Modeler2D.logger\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.logger</span></code></a></p></td>\n<td><p>Logger.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.materials/#pyaedt.modeler.Model2D.Modeler2D.materials\" title=\"pyaedt.modeler.Model2D.Modeler2D.materials\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.materials</span></code></a></p></td>\n<td><p>Material library used in the project.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.model_consistency_report/#pyaedt.modeler.Model2D.Modeler2D.model_consistency_report\" title=\"pyaedt.modeler.Model2D.Modeler2D.model_consistency_report\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.model_consistency_report</span></code></a></p></td>\n<td><p>Summary of detected inconsistencies between the AEDT modeler and PyAEDT structures.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.model_objects/#pyaedt.modeler.Model2D.Modeler2D.model_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.model_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.model_objects</span></code></a></p></td>\n<td><p>List of the names of all model objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.model_units/#pyaedt.modeler.Model2D.Modeler2D.model_units\" title=\"pyaedt.modeler.Model2D.Modeler2D.model_units\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.model_units</span></code></a></p></td>\n<td><p>Model units as a string.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.modeler/#pyaedt.modeler.Model2D.Modeler2D.modeler\" title=\"pyaedt.modeler.Model2D.Modeler2D.modeler\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.modeler</span></code></a></p></td>\n<td><p>Modeler.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.non_model_names/#pyaedt.modeler.Model2D.Modeler2D.non_model_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.non_model_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.non_model_names</span></code></a></p></td>\n<td><p>List of names of all non-model objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.non_model_objects/#pyaedt.modeler.Model2D.Modeler2D.non_model_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.non_model_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.non_model_objects</span></code></a></p></td>\n<td><p>List of objects of all non-model objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.object_list/#pyaedt.modeler.Model2D.Modeler2D.object_list\" title=\"pyaedt.modeler.Model2D.Modeler2D.object_list\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.object_list</span></code></a></p></td>\n<td><p>List of all objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.object_names/#pyaedt.modeler.Model2D.Modeler2D.object_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.object_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.object_names</span></code></a></p></td>\n<td><p>List of the names of all objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.obounding_box/#pyaedt.modeler.Model2D.Modeler2D.obounding_box\" title=\"pyaedt.modeler.Model2D.Modeler2D.obounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.obounding_box</span></code></a></p></td>\n<td><p>Bounding box.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.oeditor/#pyaedt.modeler.Model2D.Modeler2D.oeditor\" title=\"pyaedt.modeler.Model2D.Modeler2D.oeditor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.oeditor</span></code></a></p></td>\n<td><p>Aedt oEditor Module.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.plane2d/#pyaedt.modeler.Model2D.Modeler2D.plane2d\" title=\"pyaedt.modeler.Model2D.Modeler2D.plane2d\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.plane2d</span></code></a></p></td>\n<td><p>Create a 2D plane.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.point_names/#pyaedt.modeler.Model2D.Modeler2D.point_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.point_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.point_names</span></code></a></p></td>\n<td><p>List of the names of all points.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.point_objects/#pyaedt.modeler.Model2D.Modeler2D.point_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.point_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.point_objects</span></code></a></p></td>\n<td><p>List of points objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.primitives/#pyaedt.modeler.Model2D.Modeler2D.primitives\" title=\"pyaedt.modeler.Model2D.Modeler2D.primitives\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.primitives</span></code></a></p></td>\n<td><p>Primitives.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.projdir/#pyaedt.modeler.Model2D.Modeler2D.projdir\" title=\"pyaedt.modeler.Model2D.Modeler2D.projdir\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.projdir</span></code></a></p></td>\n<td><p>Project directory.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.selections/#pyaedt.modeler.Model2D.Modeler2D.selections\" title=\"pyaedt.modeler.Model2D.Modeler2D.selections\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.selections</span></code></a></p></td>\n<td><p>Selections.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.sheet_names/#pyaedt.modeler.Model2D.Modeler2D.sheet_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.sheet_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.sheet_names</span></code></a></p></td>\n<td><p>List of the names of all sheet objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.sheet_objects/#pyaedt.modeler.Model2D.Modeler2D.sheet_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.sheet_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.sheet_objects</span></code></a></p></td>\n<td><p>List of all sheet objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.solid_bodies/#pyaedt.modeler.Model2D.Modeler2D.solid_bodies\" title=\"pyaedt.modeler.Model2D.Modeler2D.solid_bodies\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.solid_bodies</span></code></a></p></td>\n<td><p>List of Object Names.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.solid_names/#pyaedt.modeler.Model2D.Modeler2D.solid_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.solid_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.solid_names</span></code></a></p></td>\n<td><p>List of the names of all solid objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.solid_objects/#pyaedt.modeler.Model2D.Modeler2D.solid_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.solid_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.solid_objects</span></code></a></p></td>\n<td><p>List of all solid objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.unclassified_names/#pyaedt.modeler.Model2D.Modeler2D.unclassified_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.unclassified_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.unclassified_names</span></code></a></p></td>\n<td><p>List of the names of all unclassified objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.unclassified_objects/#pyaedt.modeler.Model2D.Modeler2D.unclassified_objects\" title=\"pyaedt.modeler.Model2D.Modeler2D.unclassified_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.unclassified_objects</span></code></a></p></td>\n<td><p>List of all unclassified objects.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.user_defined_component_names/#pyaedt.modeler.Model2D.Modeler2D.user_defined_component_names\" title=\"pyaedt.modeler.Model2D.Modeler2D.user_defined_component_names\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.user_defined_component_names</span></code></a></p></td>\n<td><p>List of the names of all 3D component objects.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.user_lists/#pyaedt.modeler.Model2D.Modeler2D.user_lists\" title=\"pyaedt.modeler.Model2D.Modeler2D.user_lists\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.user_lists</span></code></a></p></td>\n<td><p>User Lists.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.Model2D.Modeler2D.version/#pyaedt.modeler.Model2D.Modeler2D.version\" title=\"pyaedt.modeler.Model2D.Modeler2D.version\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Modeler2D.version</span></code></a></p></td>\n<td><p>Version.</p></td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["API/_autosummary/pyaedt.modeler.Model2D.Modeler2D.add_new_objects", "add_new_objects", "N", "next"], ["API/Primitives", "Modeler and  primitives", "P", "previous"]], "sourcename": "API/_autosummary/pyaedt.modeler.Model2D.Modeler2D.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">pyaedt.modeler.Model2D.Modeler2D</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.modeler.Model2D.Modeler2D\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Modeler2D</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "API/_autosummary/pyaedt.modeler.Model2D.Modeler2D", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}