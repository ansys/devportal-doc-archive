{"parents": [{"link": "../../", "title": "API EDB reference"}, {"link": "../../LayerData/", "title": "EDB layer classes"}, {"link": "../pyaedt.edb_core.edb_data.layer_data.EDBLayers/", "title": "pyaedt.edb_core.edb_data.layer_data.EDBLayers"}], "prev": {"link": "../pyaedt.edb_core.edb_data.layer_data.EDBLayers.add_outline_layer/", "title": "add_outline_layer"}, "next": {"link": "../pyaedt.edb_core.edb_data.layer_data.EDBLayers.remove_layer/", "title": "remove_layer"}, "title": "insert_layer_above", "meta": {}, "body": "<section id=\"insert-layer-above\">\n<h1>insert_layer_above<a class=\"headerlink\" href=\"#insert-layer-above\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above\">\n<span class=\"sig-prename descclassname\"><span class=\"pre\">EDBLayers.</span></span><span class=\"sig-name descname\"><span class=\"pre\">insert_layer_above</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layer_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">base_layer</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">material</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'copper'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">fillMaterial</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">thickness</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'35um'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layerType</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">negative_layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">roughness_enabled</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">etch_factor</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/edb_core/edb_data/layer_data/#EDBLayers.insert_layer_above\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Insert a layer above the specified base layer.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>layer_name</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a></span></dt><dd><p>Name of the layer to add.</p>\n</dd>\n<dt><strong>base_layer</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a></span></dt><dd><p>Name of the layer after which to add the new layer.\nThe default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>material</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Name of the material. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;copper&quot;</span></code>.</p>\n</dd>\n<dt><strong>fillMaterial</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Name of the fill material. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&quot;</span></code>.)</p>\n</dd>\n<dt><strong>thickness</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Thickness value, including units. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;35um&quot;</span></code>.</p>\n</dd>\n<dt><strong>layerType</strong></dt><dd><p>Type of the layer. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>\n<code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>: Signal layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>: Dielectric layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">2</span></code>: Conducting plane layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">3</span></code>: Airline layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">4</span></code>: Error layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">5</span></code>: Symbol layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">6</span></code>: Measure layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">8</span></code>: Assembly layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">9</span></code>: Silkscreen layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">10</span></code>: Solder Mask layer.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">11</span></code>: Solder Paste layer.</p>\n</dd>\n<dt><strong>negative_layer</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> when negative, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p>\n</dd>\n<dt><strong>roughness_enabled</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the layer has roughness, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.</p>\n</dd>\n<dt><strong>etch_factor</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Etch value if any. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n</dl>\n</dd>\n<dt class=\"field-even\">Returns<span class=\"colon\">:</span></dt>\n<dd class=\"field-even\"><dl class=\"simple\">\n<dt><a class=\"reference internal\" href=\"../pyaedt.edb_core.edb_data.layer_data.EDBLayer/#pyaedt.edb_core.edb_data.layer_data.EDBLayer\" title=\"pyaedt.edb_core.edb_data.layer_data.EDBLayer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pyaedt.edb_core.edb_data.layer_data.EDBLayer</span></code></a></dt><dd><p>Layer Object for stackup layers.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["EDBAPI/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.remove_layer", "remove_layer", "N", "next"], ["EDBAPI/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.add_outline_layer", "add_outline_layer", "P", "previous"]], "sourcename": "EDBAPI/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">insert_layer_above</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above\"><code class=\"docutils literal notranslate\"><span class=\"pre\">insert_layer_above()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "EDBAPI/_autosummary/pyaedt.edb_core.edb_data.layer_data.EDBLayers.insert_layer_above", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}