{"parents": [{"link": "../", "title": "Getting started"}], "prev": {"link": "../", "title": "Getting started"}, "next": {"link": "../ClientServer/", "title": "Client-server"}, "title": "Installation", "meta": null, "body": "<section id=\"installation\">\n<h1>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this heading\">#</a></h1>\n<p>PyAEDT consolidates and extends all existing capital around scripting for AEDT,\nallowing re-use of existing code, sharing of best practices, and collaboration.</p>\n<p>This PyAnsys library has been tested on HFSS, Icepak, and Maxwell 3D. It also provides\nbasic support for EDB and Circuit (Nexxim).</p>\n<section id=\"requirements\">\n<h2>Requirements<a class=\"headerlink\" href=\"#requirements\" title=\"Permalink to this heading\">#</a></h2>\n<p>In addition to the runtime dependencies listed in the installation information, PyAEDT\nrequires Ansys Electronics Desktop (AEDT) 2021 R2 or later. The AEDT Student Version is also supported.</p>\n</section>\n<section id=\"install-on-cpython-from-pypi\">\n<h2>Install on CPython from PyPI<a class=\"headerlink\" href=\"#install-on-cpython-from-pypi\" title=\"Permalink to this heading\">#</a></h2>\n<p>You can install PyAEDT on CPython 3.7 through 3.10 from PyPI:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pyaedt</span>\n</pre></div>\n</div>\n<p>You can also install PyAEDT from Conda-Forge:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">conda</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"n\">conda</span><span class=\"o\">-</span><span class=\"n\">forge</span> <span class=\"n\">pyaedt</span>\n</pre></div>\n</div>\n</section>\n<section id=\"linux-support\">\n<h2>Linux support<a class=\"headerlink\" href=\"#linux-support\" title=\"Permalink to this heading\">#</a></h2>\n<p>PyAEDT works with CPython 3.7 through 3.10 on Linux in AEDT 2022 R2 and later.\nHowever, you must set up the following environment variables:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span>export ANSYSEM_ROOT222=/path/to/AedtRoot/AnsysEM/v222/Linux64\nexport LD_LIBRARY_PATH=$ANSYSEM_ROOT222/common/mono/Linux64/lib64:$ANSYSEM_ROOT222/Delcross:$LD_LIBRARY_PATH\n</pre></div>\n</div>\n</section>\n<section id=\"install-offline-from-a-wheelhouse\">\n<h2>Install offline from a wheelhouse<a class=\"headerlink\" href=\"#install-offline-from-a-wheelhouse\" title=\"Permalink to this heading\">#</a></h2>\n<p>Using a wheelhouse can be helpful if you work for a company that restricts access to external networks.\nWheelhouses for CPython 3.7, 3.8, and 3.9 are available in the releases for PyAEDT v0.4.70\nand later for both Windows and Linux.\nYou can install PyAEDT and all of its dependencies from one single entry point that can be shared internally,\nwhich eases the security review of the PyAEDT package content.\n<cite>WheelHouse releases &lt;https://github.com/pyansys/pyaedt/releases&gt;</cite></p>\n<p>For example, here is a command for installing the PyAEDT package and all its dependencies from a wheelhouse:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">cache</span><span class=\"o\">-</span><span class=\"nb\">dir</span> <span class=\"o\">--</span><span class=\"n\">no</span><span class=\"o\">-</span><span class=\"n\">index</span> <span class=\"o\">--</span><span class=\"n\">find</span><span class=\"o\">-</span><span class=\"n\">links</span><span class=\"o\">=</span><span class=\"n\">file</span><span class=\"p\">:</span><span class=\"o\">///&lt;</span><span class=\"n\">path_to_wheelhouse</span><span class=\"o\">&gt;/</span><span class=\"n\">PyAEDT</span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"o\">&lt;</span><span class=\"n\">release_version</span><span class=\"o\">&gt;-</span><span class=\"n\">wheelhouse</span><span class=\"o\">-</span><span class=\"n\">Windows</span><span class=\"o\">-</span><span class=\"mf\">3.7</span> <span class=\"n\">pyaedt</span>\n</pre></div>\n</div>\n</section>\n<section id=\"install-from-a-batch-file\">\n<h2>Install from a batch file<a class=\"headerlink\" href=\"#install-from-a-batch-file\" title=\"Permalink to this heading\">#</a></h2>\n<p>AEDT already includes CPython 3.7, which can be used to run PyAEDT.\nIt is also possible to use CPython 3.7 as a virtual environment to run PyAEDT.</p>\n<p>If you are running on Windows, you can download\n<a class=\"reference download internal\" download=\"\" href=\"../../_downloads/be9b8109d5867375db6bce52fb9f3ba8/pyaedt_with_IDE.bat\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">PyAEDT</span> <span class=\"pre\">Environment</span> <span class=\"pre\">with</span> <span class=\"pre\">IDE</span> <span class=\"pre\">bat</span> <span class=\"pre\">file</span></code></a>\nand run this batch file on your local machine. Using this approach\nprovides you with a complete integrated development environment (IDE)\nfor writing PyAEDT scripts in Windows with a simple batch file.</p>\n<p>This batch file executes these steps:</p>\n<ol class=\"arabic simple\">\n<li><p>Creates a Python virtual environment in your <code class=\"docutils literal notranslate\"><span class=\"pre\">%APPDATA%</span></code> folder. To accomplish\nthis, it uses CPython in the selected version of AEDT available on your machine.</p></li>\n<li><p>Installs PyAEDT.</p></li>\n<li><p>Optionally installs <a class=\"reference external\" href=\"https://www.spyder-ide.org/\">Spyder</a> with -s flag.</p></li>\n<li><p>Installs <a class=\"reference external\" href=\"https://jupyter.org/\">Jupyter Lab</a>.</p></li>\n<li><p>Creates a symbolic link from your PyAEDT installation to AEDT <code class=\"docutils literal notranslate\"><span class=\"pre\">PersonalLib</span></code> so\nthat scripts can also be run within AEDT.</p></li>\n<li><p>Updates PyAEDT.</p></li>\n<li><p>Install PyAEDT toolkit in AEDT to enable PyAEDT Console and PyAEDT Run Script.</p></li>\n<li><p>Runs the tool that you choose (Spyder, Jupyter Lab, or a simple console).</p></li>\n</ol>\n<a class=\"reference internal image-reference\" href=\"../../_images/toolkits.png\"><img alt=\"PyAEDT toolkit installed after batch run\" src=\"../../_images/toolkits.png\" style=\"width: 800px;\" /></a>\n<p>Steps 1 through 5 are executed only the first time that you run the batch file or when <code class=\"docutils literal notranslate\"><span class=\"pre\">-f</span></code> is used:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">--</span><span class=\"n\">force</span><span class=\"o\">-</span><span class=\"n\">install</span>\n\n<span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">-</span><span class=\"n\">f</span>\n</pre></div>\n</div>\n<p>Step 6 is executed only when running the command with the <code class=\"docutils literal notranslate\"><span class=\"pre\">-update</span></code> option:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">--</span><span class=\"n\">update</span>\n\n<span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">-</span><span class=\"n\">u</span>\n</pre></div>\n</div>\n<p>Optionally, you can decide to pass a Python path. This path is then used to create a virtual environment:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">-</span><span class=\"n\">f</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"o\">&lt;</span><span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">python</span><span class=\"o\">-</span><span class=\"n\">root</span><span class=\"o\">-</span><span class=\"n\">folder</span><span class=\"o\">&gt;</span>\n</pre></div>\n</div>\n<p>In addition, it is possible to install the PyAEDT package and all its dependencies provided in the wheelhouse by\nexecuting the batch file mentioned earlier. You must use the Wheelhouse 3.7 package if no Python path is provided.\nOtherwise, you must download and use the correct wheelhouse:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span><span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"o\">&lt;</span><span class=\"n\">path_to_wheelhouse</span><span class=\"o\">&gt;</span><span class=\"n\">PyAEDT</span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"o\">&lt;</span><span class=\"n\">release_version</span><span class=\"o\">&gt;-</span><span class=\"n\">wheelhouse</span><span class=\"o\">-</span><span class=\"n\">Windows</span><span class=\"o\">-</span><span class=\"mf\">3.7</span>\n\n<span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"o\">&lt;</span><span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">python3</span><span class=\"mf\">.8</span><span class=\"o\">-</span><span class=\"n\">root</span><span class=\"o\">-</span><span class=\"n\">folder</span><span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"o\">&lt;</span><span class=\"n\">path_to_wheelhouse</span><span class=\"o\">&gt;</span><span class=\"n\">PyAEDT</span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"o\">&lt;</span><span class=\"n\">release_version</span><span class=\"o\">&gt;-</span><span class=\"n\">wheelhouse</span><span class=\"o\">-</span><span class=\"n\">Windows</span><span class=\"o\">-</span><span class=\"mf\">3.8</span>\n<span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"o\">&lt;</span><span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">python3</span><span class=\"mf\">.7</span><span class=\"o\">-</span><span class=\"n\">root</span><span class=\"o\">-</span><span class=\"n\">folder</span><span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"o\">&lt;</span><span class=\"n\">path_to_wheelhouse</span><span class=\"o\">&gt;</span><span class=\"n\">PyAEDT</span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"o\">&lt;</span><span class=\"n\">release_version</span><span class=\"o\">&gt;-</span><span class=\"n\">wheelhouse</span><span class=\"o\">-</span><span class=\"n\">Windows</span><span class=\"o\">-</span><span class=\"mf\">3.7</span>\n<span class=\"n\">pyaedt_with_IDE</span><span class=\"o\">.</span><span class=\"n\">bat</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"o\">&lt;</span><span class=\"n\">path</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">python3</span><span class=\"mf\">.9</span><span class=\"o\">-</span><span class=\"n\">root</span><span class=\"o\">-</span><span class=\"n\">folder</span><span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"n\">w</span> <span class=\"o\">&lt;</span><span class=\"n\">path_to_wheelhouse</span><span class=\"o\">&gt;</span><span class=\"n\">PyAEDT</span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"o\">&lt;</span><span class=\"n\">release_version</span><span class=\"o\">&gt;-</span><span class=\"n\">wheelhouse</span><span class=\"o\">-</span><span class=\"n\">Windows</span><span class=\"o\">-</span><span class=\"mf\">3.9</span>\n</pre></div>\n</div>\n</section>\n<section id=\"use-ironpython-in-aedt\">\n<h2>Use IronPython in AEDT<a class=\"headerlink\" href=\"#use-ironpython-in-aedt\" title=\"Permalink to this heading\">#</a></h2>\n<p>PyAEDT is designed to work in CPython 3.7+ and supports many advanced processing packages like\n<code class=\"docutils literal notranslate\"><span class=\"pre\">matplotlib</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">numpy</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">pyvista</span></code>. A user can still use PyAEDT in the IronPython\nenvironment available in AEDT with some limitations.</p>\n<p>To use IronPython in AEDT:</p>\n<ol class=\"arabic simple\">\n<li><p>Download the PyAEDT package from <code class=\"docutils literal notranslate\"><span class=\"pre\">https://pypi.org/project/pyaedt/#files</span></code>.</p></li>\n<li><p>Extract the files.</p></li>\n<li><p>Install PyAEDT into AEDT, specifying the full paths to <code class=\"docutils literal notranslate\"><span class=\"pre\">ipy64</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">setup-distutils.py</span></code> as needed:</p></li>\n</ol>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ipy64</span> <span class=\"n\">setup</span><span class=\"o\">-</span><span class=\"n\">distutils</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">install</span> <span class=\"o\">--</span><span class=\"n\">user</span>\n</pre></div>\n</div>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["Getting_started/ClientServer", "Client-server", "N", "next"], ["Getting_started/index", "Getting started", "P", "previous"]], "sourcename": "Getting_started/Installation.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Installation</a><ul>\n<li><a class=\"reference internal\" href=\"#requirements\">Requirements</a></li>\n<li><a class=\"reference internal\" href=\"#install-on-cpython-from-pypi\">Install on CPython from PyPI</a></li>\n<li><a class=\"reference internal\" href=\"#linux-support\">Linux support</a></li>\n<li><a class=\"reference internal\" href=\"#install-offline-from-a-wheelhouse\">Install offline from a wheelhouse</a></li>\n<li><a class=\"reference internal\" href=\"#install-from-a-batch-file\">Install from a batch file</a></li>\n<li><a class=\"reference internal\" href=\"#use-ironpython-in-aedt\">Use IronPython in AEDT</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "Getting_started/Installation", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}