{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.multiparts", "body": "<h1>Source code for pyaedt.modeler.multiparts</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.DataHandlers</span> <span class=\"kn\">import</span> <span class=\"n\">json_to_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.filesystem</span> <span class=\"kn\">import</span> <span class=\"n\">get_json_files</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.GeometryOperators</span> <span class=\"kn\">import</span> <span class=\"n\">GeometryOperators</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.parts</span> <span class=\"kn\">import</span> <span class=\"n\">Antenna</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.parts</span> <span class=\"kn\">import</span> <span class=\"n\">Part</span>\n\n\n<div class=\"viewcode-block\" id=\"MultiPartComponent\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.multiparts.MultiPartComponent/#pyaedt.modeler.multiparts.MultiPartComponent\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MultiPartComponent</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Supports multi-part 3D components for HFSS SBR+.</span>\n\n<span class=\"sd\">    .. note::</span>\n<span class=\"sd\">           Forward motion is in the X-axis direction if motion is set.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    comp_folder : str</span>\n<span class=\"sd\">        Full path to the folder with the JSON file containing the component definition.</span>\n<span class=\"sd\">        This JSON file must have the same name as the folder.</span>\n<span class=\"sd\">    name : str, optional</span>\n<span class=\"sd\">        Name of the multipart component. If this value is set, the</span>\n<span class=\"sd\">        component is selected from the corresponding JSON file in</span>\n<span class=\"sd\">        ``comp_folder``. The default is ``None``, in which case the</span>\n<span class=\"sd\">        name of the first JSON file in the folder is used.</span>\n<span class=\"sd\">    use_relative_cs : bool, optional</span>\n<span class=\"sd\">        Whether to use the relative coordinate system. The default is ``False``.</span>\n<span class=\"sd\">        Set to ``False`` if the multi-part component doesn&#39;t move. Set to ``True``</span>\n<span class=\"sd\">        if the multi-part component moves relative to the global coordinate system.</span>\n<span class=\"sd\">    relative_cs_name : str, optional</span>\n<span class=\"sd\">        Name of the coordinate system to connect the multipart relative system to</span>\n<span class=\"sd\">        when ``use_relative_cs=True``.</span>\n<span class=\"sd\">    motion : bool, optional</span>\n<span class=\"sd\">        Whether expressions should be used to define the position and orientation of</span>\n<span class=\"sd\">        the multi-part component. The default is ``False``.</span>\n<span class=\"sd\">    offset : list, optional</span>\n<span class=\"sd\">        List of ``[x, y, z]`` coordinate values defining the component offset.</span>\n<span class=\"sd\">        The default is ``[&quot;0&quot;, &quot;0&quot;, &quot;0&quot;]``.</span>\n<span class=\"sd\">    yaw : str or float, optional</span>\n<span class=\"sd\">        Yaw angle, indicating the rotation about the component&#39;s Z-axis. The default</span>\n<span class=\"sd\">        is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">    pitch : str or float, optional</span>\n<span class=\"sd\">        Pitch angle, indicating the rotation about the component Y-axis The default</span>\n<span class=\"sd\">        is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">    roll : str or float, optional</span>\n<span class=\"sd\">        Roll angle, indicating the rotation about the component X-axis. The default</span>\n<span class=\"sd\">        is ``&quot;0deg&quot;``.</span>\n<span class=\"sd\">    roll : str or float, optional</span>\n<span class=\"sd\">        Roll angle, indicating the rotation about the component&#39;s X-axis. The default</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">_component_classes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;environment&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rcs_standard&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;vehicle&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;person&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bike&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bird&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;radar&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Keep track of all assigned names to the class. Use the</span>\n    <span class=\"c1\"># properties &#39;.name&#39; and &#39;.index&#39; to ensure unique instance names.</span>\n    <span class=\"n\">_names</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"c1\"># for c in _component_classes:</span>\n    <span class=\"c1\">#     _count[c] = 0</span>\n\n    <span class=\"c1\"># Initialize variables and values for the app using</span>\n    <span class=\"c1\"># the MultiPartComponent</span>\n    <span class=\"n\">_t</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;time_var&quot;</span>\n    <span class=\"n\">_t_value</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0s&quot;</span>\n    <span class=\"n\">modeler_units</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;meter&quot;</span>\n\n<div class=\"viewcode-block\" id=\"MultiPartComponent.start\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.multiparts.MultiPartComponent.start/#pyaedt.modeler.multiparts.MultiPartComponent.start\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Initialize app for SBR+ simulation.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : class:`pyaedt.Hfss`</span>\n<span class=\"sd\">            HFSS application instance.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t_value</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;meter&quot;</span>  <span class=\"c1\"># Set units.</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">comp_folder</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">use_relative_cs</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">yaw</span><span class=\"o\">=</span><span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">pitch</span><span class=\"o\">=</span><span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">roll</span><span class=\"o\">=</span><span class=\"s2\">&quot;0deg&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">comp_folder</span> <span class=\"o\">=</span> <span class=\"n\">comp_folder</span>  <span class=\"c1\"># Folder where the component is defined.</span>\n        <span class=\"c1\"># self._name = os.path.split(comp_folder)[-1]  # Base name of multipart component.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># Counter used to assign unique name.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span> <span class=\"o\">=</span> <span class=\"n\">yaw</span>  <span class=\"c1\"># Yaw is the rotation about the z-axis</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span> <span class=\"o\">=</span> <span class=\"n\">pitch</span>  <span class=\"c1\"># Pitch is tilt toward the sky (i.e. rotation about y)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span> <span class=\"o\">=</span> <span class=\"n\">roll</span>  <span class=\"c1\"># Roll is rotation about the x-axis (x is the direction of movement)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span> <span class=\"o\">=</span> <span class=\"n\">relative_cs_name</span>\n        <span class=\"k\">if</span> <span class=\"n\">relative_cs_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reference_cs_name</span> <span class=\"o\">=</span> <span class=\"n\">relative_cs_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reference_cs_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Global&quot;</span>\n\n        <span class=\"c1\"># If the component moves, then expressions must be used for position and orientation</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">motion</span> <span class=\"o\">=</span> <span class=\"n\">motion</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_components</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>  <span class=\"c1\"># List of components</span>\n\n        <span class=\"c1\"># Find the json file that defines this part.</span>\n        <span class=\"n\">json_files</span> <span class=\"o\">=</span> <span class=\"n\">get_json_files</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">comp_folder</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>  <span class=\"c1\"># Define name from the passed parameter.</span>\n            <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">for</span> <span class=\"n\">fn</span> <span class=\"ow\">in</span> <span class=\"n\">json_files</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">fn</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n                    <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">fn</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">json_files</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>  <span class=\"c1\"># Define name from the json file name.</span>\n\n        <span class=\"n\">compdef</span> <span class=\"o\">=</span> <span class=\"n\">json_to_dict</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>  <span class=\"c1\"># dict defining the 3d component</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;class&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">compdef</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_class</span> <span class=\"o\">=</span> <span class=\"n\">compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_class</span><span class=\"p\">:</span>  <span class=\"c1\"># already defined by subclass. Do nothing.</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_class</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"c1\">#  Allow for different units in the multipart component. For example with radar.</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;units&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">compdef</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_units</span> <span class=\"o\">=</span> <span class=\"n\">compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;units&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_local_units</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># Default to global units.</span>\n\n        <span class=\"c1\"># Used to offset the multipart component.</span>\n        <span class=\"c1\"># These are the variable names in HFSS.</span>\n        <span class=\"c1\"># self.name is a unique name (see the @property definition for name)</span>\n        <span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;z&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_var_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">s</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">xyz</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># Instantiate parts with the Part class.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;parts&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">compdef</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">pn</span><span class=\"p\">,</span> <span class=\"n\">part_def</span> <span class=\"ow\">in</span> <span class=\"n\">compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;parts&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"n\">pn</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Part</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">comp_folder</span><span class=\"p\">,</span> <span class=\"n\">part_def</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">pn</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;antennas&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">compdef</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">a_def</span> <span class=\"ow\">in</span> <span class=\"n\">compdef</span><span class=\"p\">[</span><span class=\"s2\">&quot;antennas&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"n\">a</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Antenna</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">comp_folder</span><span class=\"p\">,</span> <span class=\"n\">a_def</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">a</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_relative_cs</span> <span class=\"o\">=</span> <span class=\"n\">use_relative_cs</span>\n        <span class=\"k\">if</span> <span class=\"n\">use_relative_cs</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_values</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_values</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cs_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Coordinate system name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the coordinate system.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_global_cs</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Global&quot;</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_cs&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Number of multi-part components.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">           Number of multi-part components.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>  <span class=\"c1\"># Only increment one time.</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span> <span class=\"o\">=</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_names</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n            <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_names</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index</span>\n\n    <span class=\"c1\"># The following read-only properties are used to</span>\n    <span class=\"c1\"># set the x,y,z offset variable name for this</span>\n    <span class=\"c1\"># multi-part 3d component instance in the app.</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_x_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;X-axis offset name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the X-axis offset.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_var_names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_y_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Y-axis offset name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the Y-axis offset.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_var_names</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_z_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Z-axis offset name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the Z-axis offset.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_var_names</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset_names</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;X-, Y-, and Z-axis offset names.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of the offset names for the X-, Y-, and Z-axes.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_x_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_y_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_z_name</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Yaw variable name. Yaw is the rotation about the object&#39;s Z-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the yaw variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_yaw&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Yaw variable value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the yaw variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span>\n\n    <span class=\"nd\">@yaw</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">yaw_str</span><span class=\"p\">):</span>\n        <span class=\"c1\"># TODO: Need variable checking for yaw angle.</span>\n        <span class=\"c1\"># yaw is the rotation about the object z-axis.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span> <span class=\"o\">=</span> <span class=\"n\">yaw_str</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"c1\"># This is the name of the variable for pitch in the app.</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pitch variable name. Pitch is the rotation about the object&#39;s Y-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the pitch variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_pitch&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pitch variable value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value of the pitch variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span>\n\n    <span class=\"nd\">@pitch</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pitch_str</span><span class=\"p\">):</span>\n        <span class=\"c1\"># TODO: Need variable checking for pitch angle.</span>\n        <span class=\"c1\"># pitch is the rotation about the object y-axis.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span> <span class=\"o\">=</span> <span class=\"n\">pitch_str</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"c1\"># This is the name of the variable for roll in the app.</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Roll variable name. Roll is the rotation about the object&#39;s X-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the roll variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_roll&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Roll variable value.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value of the roll variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span>\n\n    <span class=\"nd\">@roll</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">roll_str</span><span class=\"p\">):</span>\n        <span class=\"c1\"># TODO: Need variable checking for pitch angle.</span>\n        <span class=\"c1\"># roll is the rotation about the object x-axis.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span> <span class=\"o\">=</span> <span class=\"n\">roll_str</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_cs_pointing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">motion</span><span class=\"p\">:</span>  <span class=\"c1\"># Pass expressions to the app variable.</span>\n            <span class=\"n\">yaw_str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span>\n            <span class=\"n\">pitch_str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch_name</span>\n            <span class=\"n\">roll_str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># Pass values to the app variable.</span>\n            <span class=\"n\">yaw_str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw</span>\n            <span class=\"n\">pitch_str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch</span>\n            <span class=\"n\">roll_str</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">GeometryOperators</span><span class=\"o\">.</span><span class=\"n\">cs_xy_pointing_expression</span><span class=\"p\">(</span><span class=\"n\">yaw_str</span><span class=\"p\">,</span> <span class=\"n\">pitch_str</span><span class=\"p\">,</span> <span class=\"n\">roll_str</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Unique instance name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Name of the unique instance.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">+</span> <span class=\"n\">suffix</span>  <span class=\"c1\"># unique instance name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_global_cs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Global coordinate system.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Offset values for the multi-part component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of offset values.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_values</span>\n\n    <span class=\"nd\">@offset</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">):</span>\n        <span class=\"c1\"># TODO: Add check for validity</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_use_global_cs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_values</span> <span class=\"o\">=</span> <span class=\"n\">o</span>  <span class=\"c1\"># Expect tuple or list of strings</span>\n\n<div class=\"viewcode-block\" id=\"MultiPartComponent.position_in_app\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.multiparts.MultiPartComponent.position_in_app/#pyaedt.modeler.multiparts.MultiPartComponent.position_in_app\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">position_in_app</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Set up design variables and values to enable motion for the multi-part 3D component.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : pyaedt.Hfss</span>\n<span class=\"sd\">            HFSS application instance.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Modeler.CoordinateSystem`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">motion</span><span class=\"p\">:</span>\n            <span class=\"n\">xyz</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;z&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n                <span class=\"c1\"># app[self.offset_names[m]] = self.offset[m]</span>\n                <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n                    <span class=\"n\">variable_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_names</span><span class=\"p\">[</span><span class=\"n\">m</span><span class=\"p\">],</span>\n                    <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset</span><span class=\"p\">[</span><span class=\"n\">m</span><span class=\"p\">],</span>\n                    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"o\">+</span> <span class=\"n\">xyz</span><span class=\"p\">[</span><span class=\"n\">m</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;-position&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n                <span class=\"n\">variable_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; yaw&quot;</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n                <span class=\"n\">variable_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch_name</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pitch</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; pitch&quot;</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n                <span class=\"n\">variable_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll_name</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; roll&quot;</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">cs_origin</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_names</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">cs_origin</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_relative_cs</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_coordinate_system</span><span class=\"p\">(</span>\n                <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"n\">cs_origin</span><span class=\"p\">,</span>\n                <span class=\"n\">reference_cs</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_reference_cs_name</span><span class=\"p\">,</span>\n                <span class=\"n\">x_pointing</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cs_pointing</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n                <span class=\"n\">y_pointing</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cs_pointing</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;axis&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Insert the multi-part 3D component.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        app : :class:`pyaedt.hfss.Hfss`</span>\n<span class=\"sd\">            HFSS application where multi-part component is to be inserted.</span>\n<span class=\"sd\">        motion : bool, optional</span>\n<span class=\"sd\">            Whether variables (yaw, pitch, and roll) should be created in the app to set position.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">motion</span> <span class=\"o\">=</span> <span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">motion</span> <span class=\"k\">else</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">motion</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_global_cs</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span> <span class=\"ow\">in</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetCoordinateSystems</span><span class=\"p\">():</span>\n            <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">set_working_coordinate_system</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cs_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">use_relative_cs</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_relative_cs_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_cs&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position_in_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">:</span>\n            <span class=\"n\">inserted</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parts</span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>  <span class=\"c1\"># index ensures unique CS names.</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">inserted</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">inserted</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_components</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_group</span><span class=\"p\">(</span><span class=\"n\">components</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_components</span><span class=\"p\">,</span> <span class=\"n\">group_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"MultiPartComponent.insert\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.multiparts.MultiPartComponent.insert/#pyaedt.modeler.multiparts.MultiPartComponent.insert\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">insert</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Insert the object in HFSS SBR+.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_insert</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"n\">motion</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"Environment\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.multiparts.Environment/#pyaedt.modeler.multiparts.Environment\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Environment</span><span class=\"p\">(</span><span class=\"n\">MultiPartComponent</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Supports multi-part 3D components without motion for HFSS SBR+.</span>\n\n<span class=\"sd\">    This class is derived from :class:`MultiPartComponent`. Its</span>\n<span class=\"sd\">    call signature is identical to the parent class except</span>\n<span class=\"sd\">    ``motion`` is always set to ``False``.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    env_folder : str</span>\n<span class=\"sd\">        Full path to the folder with the JSON file containing the component definition.</span>\n<span class=\"sd\">    relative_cs_name : str, optional</span>\n<span class=\"sd\">        Name of the coordinate system to connect the component&#39;s relative system to</span>\n<span class=\"sd\">        when ``use_relative_cs=True``. The default is ``None``, in which case the</span>\n<span class=\"sd\">        global coordinate system is used.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">env_folder</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Environment</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">env_folder</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cs_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Coordinate system name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the coordinate system.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Global&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Yaw variable value. Yaw is the rotation about the object&#39;s Z-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the yaw variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span>\n\n    <span class=\"nd\">@yaw</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">yaw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">yaw_str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_yaw</span> <span class=\"o\">=</span> <span class=\"n\">yaw_str</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Pitch variable value. Pitch is the rotation about the object&#39;s Y-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the pitch variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span>\n\n    <span class=\"nd\">@pitch</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pitch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pitch_str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pitch</span> <span class=\"o\">=</span> <span class=\"n\">pitch_str</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Roll variable value. Roll is the rotation about the object&#39;s X-axis.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Value for the roll variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span>\n\n    <span class=\"nd\">@roll</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">roll_str</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_roll</span> <span class=\"o\">=</span> <span class=\"n\">roll_str</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Offset for the multi-part component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_values</span>\n\n    <span class=\"nd\">@offset</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">offset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_offset_values</span> <span class=\"o\">=</span> <span class=\"n\">o</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Actor\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.multiparts.Actor/#pyaedt.modeler.multiparts.Actor\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Actor</span><span class=\"p\">(</span><span class=\"n\">MultiPartComponent</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Provides an instance of an actor.</span>\n\n<span class=\"sd\">    This class is derived from :class:`MultiPartComponent`.</span>\n\n<span class=\"sd\">    .. note::  Motion is always forward in the X-axis direction.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    actor_folder : str</span>\n<span class=\"sd\">        Full path to the folder containing the definition of the person.</span>\n<span class=\"sd\">        This can be changed later in the :class:`Person` class definition.</span>\n<span class=\"sd\">    speed : float or str</span>\n<span class=\"sd\">        Speed of the person in the X-direction. The default is ``0```.</span>\n<span class=\"sd\">    relative_cs_name : str</span>\n<span class=\"sd\">        Name of the relative coordinate system of the actor. The default is ``None``,</span>\n<span class=\"sd\">        in which case the global coordinate system is used.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">actor_folder</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Actor</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">actor_folder</span><span class=\"p\">,</span> <span class=\"n\">use_relative_cs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">motion</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">relative_cs_name</span><span class=\"o\">=</span><span class=\"n\">relative_cs_name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_speed_expression</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">speed</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;m_per_sec&quot;</span>  <span class=\"c1\"># TODO: Need error checking here.</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">speed_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Speed variable name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Name of the speed variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_speed&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">speed_expression</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Speed variable expression.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Expression for the speed variable.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_speed_expression</span>\n\n    <span class=\"nd\">@speed_expression</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">speed_expression</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">):</span>  <span class=\"c1\"># TODO: Add validation of the expression.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_speed_expression</span> <span class=\"o\">=</span> <span class=\"n\">s</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_add_speed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">variable_manager</span><span class=\"o\">.</span><span class=\"n\">set_variable</span><span class=\"p\">(</span>\n            <span class=\"n\">variable_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_expression</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;object speed&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Update expressions for x and y position in app:</span>\n        <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; * &quot;</span> <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;* cos(&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">app</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset_names</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">offset</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">speed_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; * &quot;</span> <span class=\"o\">+</span> <span class=\"n\">MultiPartComponent</span><span class=\"o\">.</span><span class=\"n\">_t</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;* sin(&quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">yaw_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;)&quot;</span>\n        <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/multiparts", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}