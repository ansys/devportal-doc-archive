{"parents": [{"link": "../../", "title": "API AEDT reference"}, {"link": "../../Primitive_Objects/", "title": "Primitives"}], "prev": {"link": "../pyaedt.modeler.cad.polylines.PolylineSegment/", "title": "pyaedt.modeler.cad.polylines.PolylineSegment"}, "next": {"link": "../pyaedt.modeler.cad.polylines.Polyline.clone/", "title": "clone"}, "title": "pyaedt.modeler.cad.polylines.Polyline", "meta": {}, "body": "<section id=\"pyaedt-modeler-cad-polylines-polyline\">\n<h1>pyaedt.modeler.cad.polylines.Polyline<a class=\"headerlink\" href=\"#pyaedt-modeler-cad-polylines-polyline\" title=\"Permalink to this heading\">#</a></h1>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"pyaedt.modeler.cad.polylines.Polyline\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">pyaedt.modeler.cad.polylines.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Polyline</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">primitives</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">src_object</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">position_list</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">segment_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">cover_surface</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">close_surface</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">matname</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_orient</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_topwidth</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_height</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_num_seg</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">xsection_bend_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">non_model</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../_modules/pyaedt/modeler/cad/polylines/#Polyline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#pyaedt.modeler.cad.polylines.Polyline\" title=\"Permalink to this definition\">#</a></dt>\n<dd><p>Creates and manipulates a polyline.</p>\n<p>The constructor for this class is intended to be called from the\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">pyaedt.modeler.Primitives.Primitives.create_polyline()</span></code> method.\nThe documentation is provided there.</p>\n<p>The returned Polyline object exposes the methods for manipulating the polyline.</p>\n<dl class=\"field-list\">\n<dt class=\"field-odd\">Parameters<span class=\"colon\">:</span></dt>\n<dd class=\"field-odd\"><dl>\n<dt><strong>primitives</strong><span class=\"classifier\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pyaedt.modeler.Primitives3D.Primitives3D</span></code></span></dt><dd><p>Pointer to the parent Primitives object.</p>\n</dd>\n<dt><strong>src_object</strong><span class=\"classifier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>position_list</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#list\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>List of positions in the <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> format. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>segment_type</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a> or <a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#list\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Define the list of segment types.\nValid arguments are  <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Line&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Arc&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Spline&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;AngularArc&quot;</span></code>.\nThe default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>cover_surface</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt><strong>close_surface</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#bltin-boolean-values\" title=\"(in Python v3.12)\"><span class=\"xref std std-ref\">bool</span></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd>\n<dt><strong>name</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>matname</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Name of the material. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>xsection_type</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Type of the cross-section. Options are <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Line&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Circle&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Rectangle&quot;</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Isosceles</span> <span class=\"pre\">Trapezoid&quot;</span></code>. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>xsection_orient</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Direction of the normal vector to the width of the cross-section.\nOptions are <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;X&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Y&quot;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Z&quot;</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Auto&quot;</span></code>. The\ndefault is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd>\n<dt><strong>xsection_width</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#float\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a> or <a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Width or diameter of the cross-section for all types. The default is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>.</p>\n</dd>\n<dt><strong>xsection_topwidth</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#float\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a> or <a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Top width of the cross-section for the type <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Isosceles</span> <span class=\"pre\">Trapezoid&quot;</span></code> only.\nThe default is <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>.</p>\n</dd>\n<dt><strong>xsection_height</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#float\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code></a> or <a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Height of the cross-section for the types <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Rectangle&quot;</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Isosceles</span>\n<span class=\"pre\">Trapezoid&quot;</span></code> only. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>.</p>\n</dd>\n<dt><strong>xsection_num_seg</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/functions.html#int\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Number of segments in the cross-section surface for the types <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Circle&quot;</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Rectangle&quot;</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Isosceles</span> <span class=\"pre\">Trapezoid&quot;</span></code>. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>.\nThe value must be <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code> or greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">2</span></code>.</p>\n</dd>\n<dt><strong>xsection_bend_type</strong><span class=\"classifier\"><a class=\"reference external\" href=\"https://docs.python.org/dev/library/stdtypes.html#str\" title=\"(in Python v3.12)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">optional</span></code></span></dt><dd><p>Type of the bend. The default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, in which case the bend type\nis set to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Corner&quot;</span></code>. For the type <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Circle&quot;</span></code>, the bend type\nshould be set to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Curved&quot;</span></code>.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.clone/#pyaedt.modeler.cad.polylines.Polyline.clone\" title=\"pyaedt.modeler.cad.polylines.Polyline.clone\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.clone</span></code></a>()</p></td>\n<td><p>Clone a polyline object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.delete/#pyaedt.modeler.cad.polylines.Polyline.delete\" title=\"pyaedt.modeler.cad.polylines.Polyline.delete\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.delete</span></code></a>()</p></td>\n<td><p>Delete the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.duplicate_along_line/#pyaedt.modeler.cad.polylines.Polyline.duplicate_along_line\" title=\"pyaedt.modeler.cad.polylines.Polyline.duplicate_along_line\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.duplicate_along_line</span></code></a>(vector[,\u00a0...])</p></td>\n<td><p>Duplicate the object along a line.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.duplicate_around_axis/#pyaedt.modeler.cad.polylines.Polyline.duplicate_around_axis\" title=\"pyaedt.modeler.cad.polylines.Polyline.duplicate_around_axis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.duplicate_around_axis</span></code></a>(cs_axis[,\u00a0...])</p></td>\n<td><p>Duplicate the object around the axis.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.edges_by_length/#pyaedt.modeler.cad.polylines.Polyline.edges_by_length\" title=\"pyaedt.modeler.cad.polylines.Polyline.edges_by_length\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.edges_by_length</span></code></a>(length[,\u00a0...])</p></td>\n<td><p>Filter edges by length.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.export_image/#pyaedt.modeler.cad.polylines.Polyline.export_image\" title=\"pyaedt.modeler.cad.polylines.Polyline.export_image\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.export_image</span></code></a>([file_path])</p></td>\n<td><p>Export the model to path.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.faces_by_area/#pyaedt.modeler.cad.polylines.Polyline.faces_by_area\" title=\"pyaedt.modeler.cad.polylines.Polyline.faces_by_area\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.faces_by_area</span></code></a>(area[,\u00a0area_filter,\u00a0...])</p></td>\n<td><p>Filter faces by area.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.get_touching_faces/#pyaedt.modeler.cad.polylines.Polyline.get_touching_faces\" title=\"pyaedt.modeler.cad.polylines.Polyline.get_touching_faces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.get_touching_faces</span></code></a>(object_name)</p></td>\n<td><p>Get the objects that touch one of the face center of each face of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.insert_segment/#pyaedt.modeler.cad.polylines.Polyline.insert_segment\" title=\"pyaedt.modeler.cad.polylines.Polyline.insert_segment\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.insert_segment</span></code></a>(position_list[,\u00a0...])</p></td>\n<td><p>Add a segment to an existing polyline.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.intersect/#pyaedt.modeler.cad.polylines.Polyline.intersect\" title=\"pyaedt.modeler.cad.polylines.Polyline.intersect\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.intersect</span></code></a>(theList[,\u00a0keep_originals])</p></td>\n<td><p>Intersect the active object with a given list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.largest_face/#pyaedt.modeler.cad.polylines.Polyline.largest_face\" title=\"pyaedt.modeler.cad.polylines.Polyline.largest_face\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.largest_face</span></code></a>([n])</p></td>\n<td><p>Return only the face with the greatest area.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.longest_edge/#pyaedt.modeler.cad.polylines.Polyline.longest_edge\" title=\"pyaedt.modeler.cad.polylines.Polyline.longest_edge\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.longest_edge</span></code></a>([n])</p></td>\n<td><p>Return only the edge with the greatest length.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.mirror/#pyaedt.modeler.cad.polylines.Polyline.mirror\" title=\"pyaedt.modeler.cad.polylines.Polyline.mirror\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.mirror</span></code></a>(position,\u00a0vector)</p></td>\n<td><p>Mirror a selection.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.move/#pyaedt.modeler.cad.polylines.Polyline.move\" title=\"pyaedt.modeler.cad.polylines.Polyline.move\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.move</span></code></a>(vector)</p></td>\n<td><p>Move objects from a list.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.plot/#pyaedt.modeler.cad.polylines.Polyline.plot\" title=\"pyaedt.modeler.cad.polylines.Polyline.plot\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.plot</span></code></a>([show])</p></td>\n<td><p>Plot model with PyVista.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.remove_edges/#pyaedt.modeler.cad.polylines.Polyline.remove_edges\" title=\"pyaedt.modeler.cad.polylines.Polyline.remove_edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.remove_edges</span></code></a>(edge_id)</p></td>\n<td><p>Remove a vertex from an existing polyline by position.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.remove_vertex/#pyaedt.modeler.cad.polylines.Polyline.remove_vertex\" title=\"pyaedt.modeler.cad.polylines.Polyline.remove_vertex\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.remove_vertex</span></code></a>(position[,\u00a0abstol])</p></td>\n<td><p>Remove a vertex from an existing polyline by position.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.rotate/#pyaedt.modeler.cad.polylines.Polyline.rotate\" title=\"pyaedt.modeler.cad.polylines.Polyline.rotate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.rotate</span></code></a>(cs_axis[,\u00a0angle,\u00a0unit])</p></td>\n<td><p>Rotate the selection.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.section/#pyaedt.modeler.cad.polylines.Polyline.section\" title=\"pyaedt.modeler.cad.polylines.Polyline.section\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.section</span></code></a>(plane[,\u00a0create_new,\u00a0...])</p></td>\n<td><p>Section the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.set_crosssection_properties/#pyaedt.modeler.cad.polylines.Polyline.set_crosssection_properties\" title=\"pyaedt.modeler.cad.polylines.Polyline.set_crosssection_properties\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.set_crosssection_properties</span></code></a>([type,\u00a0...])</p></td>\n<td><p>Set the properties of an existing polyline object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.shortest_edge/#pyaedt.modeler.cad.polylines.Polyline.shortest_edge\" title=\"pyaedt.modeler.cad.polylines.Polyline.shortest_edge\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.shortest_edge</span></code></a>([n])</p></td>\n<td><p>Return only the edge with the smallest length.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.smallest_face/#pyaedt.modeler.cad.polylines.Polyline.smallest_face\" title=\"pyaedt.modeler.cad.polylines.Polyline.smallest_face\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.smallest_face</span></code></a>([n])</p></td>\n<td><p>Return only the face with the smallest area.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.split/#pyaedt.modeler.cad.polylines.Polyline.split\" title=\"pyaedt.modeler.cad.polylines.Polyline.split\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.split</span></code></a>(plane[,\u00a0sides])</p></td>\n<td><p>Split the active object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.subtract/#pyaedt.modeler.cad.polylines.Polyline.subtract\" title=\"pyaedt.modeler.cad.polylines.Polyline.subtract\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.subtract</span></code></a>(tool_list[,\u00a0keep_originals])</p></td>\n<td><p>Subtract one or more parts from the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.sweep_along_path/#pyaedt.modeler.cad.polylines.Polyline.sweep_along_path\" title=\"pyaedt.modeler.cad.polylines.Polyline.sweep_along_path\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.sweep_along_path</span></code></a>(sweep_object[,\u00a0...])</p></td>\n<td><p>Sweep the selection along a vector.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.sweep_along_vector/#pyaedt.modeler.cad.polylines.Polyline.sweep_along_vector\" title=\"pyaedt.modeler.cad.polylines.Polyline.sweep_along_vector\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.sweep_along_vector</span></code></a>(sweep_vector[,\u00a0...])</p></td>\n<td><p>Sweep the selection along a vector.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.sweep_around_axis/#pyaedt.modeler.cad.polylines.Polyline.sweep_around_axis\" title=\"pyaedt.modeler.cad.polylines.Polyline.sweep_around_axis\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.sweep_around_axis</span></code></a>(cs_axis[,\u00a0...])</p></td>\n<td><p>Sweep around an axis.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.translate/#pyaedt.modeler.cad.polylines.Polyline.translate\" title=\"pyaedt.modeler.cad.polylines.Polyline.translate\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.translate</span></code></a>(vector)</p></td>\n<td><p>Translate the object and return the 3D object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.unite/#pyaedt.modeler.cad.polylines.Polyline.unite\" title=\"pyaedt.modeler.cad.polylines.Polyline.unite\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.unite</span></code></a>(object_list)</p></td>\n<td><p>Unite a list of objects with this object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.wrap_sheet/#pyaedt.modeler.cad.polylines.Polyline.wrap_sheet\" title=\"pyaedt.modeler.cad.polylines.Polyline.wrap_sheet\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.wrap_sheet</span></code></a>(object_name[,\u00a0imprinted])</p></td>\n<td><p>Execute the sheet wrapping around an object.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table class=\"autosummary longtable docutils align-default\">\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bottom_edge_x/#pyaedt.modeler.cad.polylines.Polyline.bottom_edge_x\" title=\"pyaedt.modeler.cad.polylines.Polyline.bottom_edge_x\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bottom_edge_x</span></code></a></p></td>\n<td><p>Bottom edge in the X direction of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bottom_edge_y/#pyaedt.modeler.cad.polylines.Polyline.bottom_edge_y\" title=\"pyaedt.modeler.cad.polylines.Polyline.bottom_edge_y\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bottom_edge_y</span></code></a></p></td>\n<td><p>Bottom edge in the X direction of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bottom_edge_z/#pyaedt.modeler.cad.polylines.Polyline.bottom_edge_z\" title=\"pyaedt.modeler.cad.polylines.Polyline.bottom_edge_z\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bottom_edge_z</span></code></a></p></td>\n<td><p>Bottom edge in the Z direction of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bottom_face_x/#pyaedt.modeler.cad.polylines.Polyline.bottom_face_x\" title=\"pyaedt.modeler.cad.polylines.Polyline.bottom_face_x\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bottom_face_x</span></code></a></p></td>\n<td><p>Bottom face in the X direction of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bottom_face_y/#pyaedt.modeler.cad.polylines.Polyline.bottom_face_y\" title=\"pyaedt.modeler.cad.polylines.Polyline.bottom_face_y\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bottom_face_y</span></code></a></p></td>\n<td><p>Bottom face in the X direction of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bottom_face_z/#pyaedt.modeler.cad.polylines.Polyline.bottom_face_z\" title=\"pyaedt.modeler.cad.polylines.Polyline.bottom_face_z\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bottom_face_z</span></code></a></p></td>\n<td><p>Bottom face in the Z direction of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bounding_box/#pyaedt.modeler.cad.polylines.Polyline.bounding_box\" title=\"pyaedt.modeler.cad.polylines.Polyline.bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bounding_box</span></code></a></p></td>\n<td><p>Bounding box of a part.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.bounding_dimension/#pyaedt.modeler.cad.polylines.Polyline.bounding_dimension\" title=\"pyaedt.modeler.cad.polylines.Polyline.bounding_dimension\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.bounding_dimension</span></code></a></p></td>\n<td><p>Retrieve the dimension array of the bounding box.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.color/#pyaedt.modeler.cad.polylines.Polyline.color\" title=\"pyaedt.modeler.cad.polylines.Polyline.color\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.color</span></code></a></p></td>\n<td><p>Part color as a tuple of integer values for <cite>(Red, Green, Blue)</cite> color values.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.color_string/#pyaedt.modeler.cad.polylines.Polyline.color_string\" title=\"pyaedt.modeler.cad.polylines.Polyline.color_string\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.color_string</span></code></a></p></td>\n<td><p>Color tuple as a string in the format '(Red, Green, Blue)'.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.display_wireframe/#pyaedt.modeler.cad.polylines.Polyline.display_wireframe\" title=\"pyaedt.modeler.cad.polylines.Polyline.display_wireframe\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.display_wireframe</span></code></a></p></td>\n<td><p>Wireframe property of the part.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.edges/#pyaedt.modeler.cad.polylines.Polyline.edges\" title=\"pyaedt.modeler.cad.polylines.Polyline.edges\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.edges</span></code></a></p></td>\n<td><p>Information for each edge in the given part.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.end_point/#pyaedt.modeler.cad.polylines.Polyline.end_point\" title=\"pyaedt.modeler.cad.polylines.Polyline.end_point\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.end_point</span></code></a></p></td>\n<td><p>List of the <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> coordinates for the ending point in the polyline object in the object's coordinate system.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.face_closest_to_bounding_box/#pyaedt.modeler.cad.polylines.Polyline.face_closest_to_bounding_box\" title=\"pyaedt.modeler.cad.polylines.Polyline.face_closest_to_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.face_closest_to_bounding_box</span></code></a></p></td>\n<td><p>Return only the face ids of the face closest to the bounding box.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.faces/#pyaedt.modeler.cad.polylines.Polyline.faces\" title=\"pyaedt.modeler.cad.polylines.Polyline.faces\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.faces</span></code></a></p></td>\n<td><p>Information for each face in the given part.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.faces_on_bounding_box/#pyaedt.modeler.cad.polylines.Polyline.faces_on_bounding_box\" title=\"pyaedt.modeler.cad.polylines.Polyline.faces_on_bounding_box\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.faces_on_bounding_box</span></code></a></p></td>\n<td><p>Return only the face ids of the faces touching the bounding box.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.group_name/#pyaedt.modeler.cad.polylines.Polyline.group_name\" title=\"pyaedt.modeler.cad.polylines.Polyline.group_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.group_name</span></code></a></p></td>\n<td><p>Group the object belongs to.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.id/#pyaedt.modeler.cad.polylines.Polyline.id\" title=\"pyaedt.modeler.cad.polylines.Polyline.id\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.id</span></code></a></p></td>\n<td><p>ID of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.is3d/#pyaedt.modeler.cad.polylines.Polyline.is3d\" title=\"pyaedt.modeler.cad.polylines.Polyline.is3d\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.is3d</span></code></a></p></td>\n<td><p>Check for if the object is 3D.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.logger/#pyaedt.modeler.cad.polylines.Polyline.logger\" title=\"pyaedt.modeler.cad.polylines.Polyline.logger\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.logger</span></code></a></p></td>\n<td><p>Logger.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.m_Editor/#pyaedt.modeler.cad.polylines.Polyline.m_Editor\" title=\"pyaedt.modeler.cad.polylines.Polyline.m_Editor\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.m_Editor</span></code></a></p></td>\n<td><p>Pointer to the oEditor object in the AEDT API.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.mass/#pyaedt.modeler.cad.polylines.Polyline.mass\" title=\"pyaedt.modeler.cad.polylines.Polyline.mass\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.mass</span></code></a></p></td>\n<td><p>Object mass.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.material_name/#pyaedt.modeler.cad.polylines.Polyline.material_name\" title=\"pyaedt.modeler.cad.polylines.Polyline.material_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.material_name</span></code></a></p></td>\n<td><p>Material name of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.model/#pyaedt.modeler.cad.polylines.Polyline.model\" title=\"pyaedt.modeler.cad.polylines.Polyline.model\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.model</span></code></a></p></td>\n<td><p>Part Model/Non-model property.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.name/#pyaedt.modeler.cad.polylines.Polyline.name\" title=\"pyaedt.modeler.cad.polylines.Polyline.name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.name</span></code></a></p></td>\n<td><p>Name of the object as a string value.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.object_type/#pyaedt.modeler.cad.polylines.Polyline.object_type\" title=\"pyaedt.modeler.cad.polylines.Polyline.object_type\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.object_type</span></code></a></p></td>\n<td><p>Type of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.object_units/#pyaedt.modeler.cad.polylines.Polyline.object_units\" title=\"pyaedt.modeler.cad.polylines.Polyline.object_units\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.object_units</span></code></a></p></td>\n<td><p>Object units.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.part_coordinate_system/#pyaedt.modeler.cad.polylines.Polyline.part_coordinate_system\" title=\"pyaedt.modeler.cad.polylines.Polyline.part_coordinate_system\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.part_coordinate_system</span></code></a></p></td>\n<td><p>Part coordinate system.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.points/#pyaedt.modeler.cad.polylines.Polyline.points\" title=\"pyaedt.modeler.cad.polylines.Polyline.points\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.points</span></code></a></p></td>\n<td><p>Polyline Points.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.solve_inside/#pyaedt.modeler.cad.polylines.Polyline.solve_inside\" title=\"pyaedt.modeler.cad.polylines.Polyline.solve_inside\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.solve_inside</span></code></a></p></td>\n<td><p>Part solve inside flag.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.start_point/#pyaedt.modeler.cad.polylines.Polyline.start_point\" title=\"pyaedt.modeler.cad.polylines.Polyline.start_point\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.start_point</span></code></a></p></td>\n<td><p>List of the <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> coordinates for the starting point in the polyline object in the object's coordinate system.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.surface_material_name/#pyaedt.modeler.cad.polylines.Polyline.surface_material_name\" title=\"pyaedt.modeler.cad.polylines.Polyline.surface_material_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.surface_material_name</span></code></a></p></td>\n<td><p>Surface material name of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.top_edge_x/#pyaedt.modeler.cad.polylines.Polyline.top_edge_x\" title=\"pyaedt.modeler.cad.polylines.Polyline.top_edge_x\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.top_edge_x</span></code></a></p></td>\n<td><p>Top edge in the X direction of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.top_edge_y/#pyaedt.modeler.cad.polylines.Polyline.top_edge_y\" title=\"pyaedt.modeler.cad.polylines.Polyline.top_edge_y\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.top_edge_y</span></code></a></p></td>\n<td><p>Top edge in the Y direction of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.top_edge_z/#pyaedt.modeler.cad.polylines.Polyline.top_edge_z\" title=\"pyaedt.modeler.cad.polylines.Polyline.top_edge_z\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.top_edge_z</span></code></a></p></td>\n<td><p>Top edge in the Z direction of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.top_face_x/#pyaedt.modeler.cad.polylines.Polyline.top_face_x\" title=\"pyaedt.modeler.cad.polylines.Polyline.top_face_x\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.top_face_x</span></code></a></p></td>\n<td><p>Top face in the X direction of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.top_face_y/#pyaedt.modeler.cad.polylines.Polyline.top_face_y\" title=\"pyaedt.modeler.cad.polylines.Polyline.top_face_y\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.top_face_y</span></code></a></p></td>\n<td><p>Top face in the Y direction of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.top_face_z/#pyaedt.modeler.cad.polylines.Polyline.top_face_z\" title=\"pyaedt.modeler.cad.polylines.Polyline.top_face_z\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.top_face_z</span></code></a></p></td>\n<td><p>Top face in the Z direction of the object.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.touching_objects/#pyaedt.modeler.cad.polylines.Polyline.touching_objects\" title=\"pyaedt.modeler.cad.polylines.Polyline.touching_objects\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.touching_objects</span></code></a></p></td>\n<td><p>Get the objects that touch one of the vertex, edge midpoint or face of the object.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.transparency/#pyaedt.modeler.cad.polylines.Polyline.transparency\" title=\"pyaedt.modeler.cad.polylines.Polyline.transparency\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.transparency</span></code></a></p></td>\n<td><p>Part transparency as a value between 0.0 and 1.0.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.valid_properties/#pyaedt.modeler.cad.polylines.Polyline.valid_properties\" title=\"pyaedt.modeler.cad.polylines.Polyline.valid_properties\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.valid_properties</span></code></a></p></td>\n<td><p>Valid properties.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.vertex_positions/#pyaedt.modeler.cad.polylines.Polyline.vertex_positions\" title=\"pyaedt.modeler.cad.polylines.Polyline.vertex_positions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.vertex_positions</span></code></a></p></td>\n<td><p>List of the <code class=\"docutils literal notranslate\"><span class=\"pre\">[x,</span> <span class=\"pre\">y,</span> <span class=\"pre\">z]</span></code> coordinates for all vertex positions in the polyline object in the object's coordinate system.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.vertices/#pyaedt.modeler.cad.polylines.Polyline.vertices\" title=\"pyaedt.modeler.cad.polylines.Polyline.vertices\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.vertices</span></code></a></p></td>\n<td><p>Information for each vertex in the given part.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"../pyaedt.modeler.cad.polylines.Polyline.volume/#pyaedt.modeler.cad.polylines.Polyline.volume\" title=\"pyaedt.modeler.cad.polylines.Polyline.volume\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Polyline.volume</span></code></a></p></td>\n<td><p>Object volume.</p></td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["API/_autosummary/pyaedt.modeler.cad.polylines.Polyline.clone", "clone", "N", "next"], ["API/_autosummary/pyaedt.modeler.cad.polylines.PolylineSegment", "pyaedt.modeler.cad.polylines.PolylineSegment", "P", "previous"]], "sourcename": "API/_autosummary/pyaedt.modeler.cad.polylines.Polyline.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">pyaedt.modeler.cad.polylines.Polyline</a><ul>\n<li><a class=\"reference internal\" href=\"#pyaedt.modeler.cad.polylines.Polyline\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Polyline</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "API/_autosummary/pyaedt.modeler.cad.polylines.Polyline", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}