{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "EDB examples"}], "prev": {"link": "../00_EDB_Create_VIA/", "title": "EDB: geometry creation"}, "next": {"link": "../02_edb_to_ipc2581/", "title": "EDB: IPC2581 export"}, "title": "EDB: Siwave analysis from EDB setup", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-00-edb-01-edb-example-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"edb-siwave-analysis-from-edb-setup\">\n<span id=\"sphx-glr-examples-00-edb-01-edb-example-py\"></span><h1>EDB: Siwave analysis from EDB setup<a class=\"headerlink\" href=\"#edb-siwave-analysis-from-edb-setup\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use EDB to interact with a layout.</p>\n<section id=\"perform-required-imports\">\n<h2>Perform required imports<a class=\"headerlink\" href=\"#perform-required-imports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyaedt</span>\n\n<span class=\"n\">temp_folder</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">generate_unique_folder_name</span><span class=\"p\">()</span>\n<span class=\"n\">example_path</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">downloads</span><span class=\"o\">.</span><span class=\"n\">download_aedb</span><span class=\"p\">(</span><span class=\"n\">temp_folder</span><span class=\"p\">)</span>\n\n<span class=\"n\">targetfile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">example_path</span><span class=\"p\">)</span>\n\n<span class=\"n\">siwave_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">targetfile</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Galileo.siw&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">targetfile</span><span class=\"p\">)</span>\n<span class=\"n\">aedt_file</span> <span class=\"o\">=</span> <span class=\"n\">targetfile</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;aedt&quot;</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>D:\\Temp\\pyaedt_prj_NVR\\edb/Galileo.aedb\n</pre></div>\n</div>\n</section>\n<section id=\"launch-edb\">\n<h2>Launch EDB<a class=\"headerlink\" href=\"#launch-edb\" title=\"Permalink to this heading\">#</a></h2>\n<p>Launch the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pyaedt.Edb</span></code> class, using EDB 2022 R2 and SI units.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">aedt_file</span><span class=\"p\">):</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">aedt_file</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">Edb</span><span class=\"p\">(</span><span class=\"n\">edbpath</span><span class=\"o\">=</span><span class=\"n\">targetfile</span><span class=\"p\">,</span> <span class=\"n\">edbversion</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"compute-nets-and-components\">\n<h2>Compute nets and components<a class=\"headerlink\" href=\"#compute-nets-and-components\" title=\"Permalink to this heading\">#</a></h2>\n<p>Computes nets and components.\nThere are queries for nets, stackups, layers, components, and geometries.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Nets </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())))</span>\n<span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Components </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;elapsed time = &quot;</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>Nets 432\nComponents 531\nelapsed time =  0.0\n</pre></div>\n</div>\n</section>\n<section id=\"get-pin-position\">\n<h2>Get pin position<a class=\"headerlink\" href=\"#get-pin-position\" title=\"Permalink to this heading\">#</a></h2>\n<p>Get the position for a specific pin.\nThe next section shows how to get all pins for a specific component and\nthe positions of each of them.\nEach pin is a list of <code class=\"docutils literal notranslate\"><span class=\"pre\">[X,</span> <span class=\"pre\">Y]</span></code> coordinate positions.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">get_pin_from_component</span><span class=\"p\">(</span><span class=\"s2\">&quot;U2&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">pins</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">get_pin_position</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[0.08144438899999999, 0.0313309]\n[0.082944411, 0.0313309]\n[0.08144438899999999, 0.0324739]\n[0.082944411, 0.0324739]\n[0.081944388, 0.0313309]\n[0.082444412, 0.0313309]\n[0.081944388, 0.0324739]\n[0.082444412, 0.0324739]\n[0.081407, 0.0319024]\n[0.0829818, 0.0319024]\n</pre></div>\n</div>\n</section>\n<section id=\"get-all-nets-connected-to-a-component\">\n<h2>Get all nets connected to a component<a class=\"headerlink\" href=\"#get-all-nets-connected-to-a-component\" title=\"Permalink to this heading\">#</a></h2>\n<p>Get all nets connected to a specific component.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">get_component_net_connection_info</span><span class=\"p\">(</span><span class=\"s2\">&quot;U2&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>{&#39;refdes&#39;: [&#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;, &#39;U2&#39;], &#39;pin_name&#39;: [&#39;1&#39;, &#39;4&#39;, &#39;9&#39;, &#39;6&#39;, &#39;2&#39;, &#39;3&#39;, &#39;8&#39;, &#39;7&#39;, &#39;10&#39;, &#39;5&#39;], &#39;net_name&#39;: [&#39;IO0_MUX&#39;, &#39;IO1_GPIO&#39;, &#39;LVL_RXD&#39;, &#39;IO1&#39;, &#39;IO0_GPIO&#39;, &#39;GND&#39;, &#39;VSHLD_S5&#39;, &#39;LVL_TXD&#39;, &#39;IO0&#39;, &#39;IO1_MUX&#39;]}\n</pre></div>\n</div>\n</section>\n<section id=\"compute-rats\">\n<h2>Compute rats<a class=\"headerlink\" href=\"#compute-rats\" title=\"Permalink to this heading\">#</a></h2>\n<p>Computes rats.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">rats</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">get_rats</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</section>\n<section id=\"get-all-dc-connected-net-lists-through-inductance\">\n<h2>Get all DC-connected net lists through inductance<a class=\"headerlink\" href=\"#get-all-dc-connected-net-lists-through-inductance\" title=\"Permalink to this heading\">#</a></h2>\n<p>Get all DC-connected net lists through inductance.\nThe inputs needed are ground net lists. The returned list contains all nets\nconnected to a ground through an inductor.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">GROUND_NETS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PGND&quot;</span><span class=\"p\">]</span>\n<span class=\"n\">dc_connected_net_list</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">get_dcconnected_net_list</span><span class=\"p\">(</span><span class=\"n\">GROUND_NETS</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dc_connected_net_list</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[{&#39;V1P5_S5&#39;, &#39;BST_V1P5_S5&#39;}, {&#39;BST_V3P3_S5&#39;, &#39;V3P3_S5&#39;}, {&#39;BST_V1P0_S0&#39;, &#39;V1P0_S0&#39;}]\n</pre></div>\n</div>\n</section>\n<section id=\"get-power-tree-based-on-a-specific-net\">\n<h2>Get power tree based on a specific net<a class=\"headerlink\" href=\"#get-power-tree-based-on-a-specific-net\" title=\"Permalink to this heading\">#</a></h2>\n<p>Get the power tree based on a specific net.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">VRM</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;U3A1&quot;</span>\n<span class=\"n\">OUTPUT_NET</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;BST_V1P0_S0&quot;</span>\n<span class=\"n\">powertree_df</span><span class=\"p\">,</span> <span class=\"n\">component_list_columns</span><span class=\"p\">,</span> <span class=\"n\">net_group</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">get_powertree</span><span class=\"p\">(</span><span class=\"n\">OUTPUT_NET</span><span class=\"p\">,</span> <span class=\"n\">GROUND_NETS</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">powertree_df</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;C4A2&#39;, &#39;1&#39;, &#39;BST_V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;602433-057&#39;, &#39;1&#39;]\n[&#39;L4B1&#39;, &#39;1&#39;, &#39;BST_V1P0_S0&#39;, &#39;Inductor&#39;, &#39;A32422-019&#39;, &#39;1&#39;]\n[&#39;U3A1&#39;, &#39;36&#39;, &#39;BST_V1P0_S0&#39;, &#39;IC&#39;, &#39;G43225-001&#39;, &#39;36-37&#39;]\n[&#39;U3A1&#39;, &#39;37&#39;, &#39;BST_V1P0_S0&#39;, &#39;IC&#39;, &#39;G43225-001&#39;, &#39;36-37&#39;]\n[&#39;U2A5&#39;, &#39;Y14&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;AB14&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;AD14&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;V14&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;Y20&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;Y18&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;Y16&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;AB20&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;AB18&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;T18&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;V20&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;V18&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;U2A5&#39;, &#39;V16&#39;, &#39;V1P0_S0&#39;, &#39;IC&#39;, &#39;IPD031-201&#39;, &#39;Y14-AB14-AD14-V14-Y20-Y18-Y16-AB20-AB18-T18-V20-V18-V16&#39;]\n[&#39;C2L14&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;A36096-066&#39;, &#39;1&#39;]\n[&#39;R2L19&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Resistor&#39;, &#39;E41735-001&#39;, &#39;1&#39;]\n[&#39;C3L22&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;A36096-108&#39;, &#39;1&#39;]\n[&#39;C3B10&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;602433-081&#39;, &#39;1&#39;]\n[&#39;C2B2&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;602433-081&#39;, &#39;1&#39;]\n[&#39;C3L28&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L17&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L15&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L18&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L20&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L26&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L24&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3L29&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C83410-012&#39;, &#39;1&#39;]\n[&#39;C3B9&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C97875-001&#39;, &#39;1&#39;]\n[&#39;C3B11&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;C97875-001&#39;, &#39;1&#39;]\n[&#39;FB3L1&#39;, &#39;2&#39;, &#39;V1P0_S0&#39;, &#39;Other&#39;, &#39;G22224-001&#39;, &#39;2&#39;]\n[&#39;L4B1&#39;, &#39;2&#39;, &#39;V1P0_S0&#39;, &#39;Inductor&#39;, &#39;A32422-019&#39;, &#39;2&#39;]\n[&#39;C2B12&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;E16347-001&#39;, &#39;1&#39;]\n[&#39;C3B17&#39;, &#39;1&#39;, &#39;V1P0_S0&#39;, &#39;Capacitor&#39;, &#39;E16347-001&#39;, &#39;1&#39;]\n</pre></div>\n</div>\n</section>\n<section id=\"delete-all-rlcs-with-only-one-pin\">\n<h2>Delete all RLCs with only one pin<a class=\"headerlink\" href=\"#delete-all-rlcs-with-only-one-pin\" title=\"Permalink to this heading\">#</a></h2>\n<p>Delete all RLCs with only one pin. This method provides a useful way of\nremoving components not needed in the simulation.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">delete_single_pin_rlc</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;R2B29&#39;, &#39;R3M13&#39;]\n</pre></div>\n</div>\n</section>\n<section id=\"delete-components\">\n<h2>Delete components<a class=\"headerlink\" href=\"#delete-components\" title=\"Permalink to this heading\">#</a></h2>\n<p>Delete manually one or more components.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_components</span><span class=\"o\">.</span><span class=\"n\">delete_component</span><span class=\"p\">(</span><span class=\"s2\">&quot;C3B17&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"delete-nets\">\n<h2>Delete nets<a class=\"headerlink\" href=\"#delete-nets\" title=\"Permalink to this heading\">#</a></h2>\n<p>Delete manually one or more nets.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">delete_nets</span><span class=\"p\">(</span><span class=\"s2\">&quot;A0_N&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;A0_N&#39;]\n</pre></div>\n</div>\n</section>\n<section id=\"get-stackup-limits\">\n<h2>Get stackup limits<a class=\"headerlink\" href=\"#get-stackup-limits\" title=\"Permalink to this heading\">#</a></h2>\n<p>Get the stackup limits (top and bottom layers and elevations).</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_stackup</span><span class=\"o\">.</span><span class=\"n\">stackup_limits</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>(&#39;UNNAMED_000&#39;, 0.00203454, &#39;UNNAMED_012&#39;, 0.0)\n</pre></div>\n</div>\n</section>\n<section id=\"create-coaxial-port\">\n<h2>Create coaxial port<a class=\"headerlink\" href=\"#create-coaxial-port\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a coaxial port for the HFSS simulation.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_hfss</span><span class=\"o\">.</span><span class=\"n\">create_coax_port_on_component</span><span class=\"p\">(</span><span class=\"s2\">&quot;U2A5&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V1P0_S0&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;U2A5_V1P0_S0_Y14&#39;, &#39;U2A5_V1P0_S0_AB14&#39;, &#39;U2A5_V1P0_S0_AD14&#39;, &#39;U2A5_V1P0_S0_V14&#39;, &#39;U2A5_V1P0_S0_Y20&#39;, &#39;U2A5_V1P0_S0_Y18&#39;, &#39;U2A5_V1P0_S0_Y16&#39;, &#39;U2A5_V1P0_S0_AB20&#39;, &#39;U2A5_V1P0_S0_AB18&#39;, &#39;U2A5_V1P0_S0_T18&#39;, &#39;U2A5_V1P0_S0_V20&#39;, &#39;U2A5_V1P0_S0_V18&#39;, &#39;U2A5_V1P0_S0_V16&#39;]\n</pre></div>\n</div>\n</section>\n<section id=\"edit-stackup-layers-and-material\">\n<h2>Edit stackup layers and material<a class=\"headerlink\" href=\"#edit-stackup-layers-and-material\" title=\"Permalink to this heading\">#</a></h2>\n<p>Edit the stackup layers and material. You can change stackup layer\nproperties with assignment and create materials and assign them to layers.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_stackup</span><span class=\"o\">.</span><span class=\"n\">stackup_layers</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"s2\">&quot;TOP&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">thickness</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;75um&quot;</span>\n<span class=\"c1\"># edb.core_stackup.stackup_layers.layers[&quot;Diel1&quot;].material_name = &quot;Fr4_epoxy&quot;</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_stackup</span><span class=\"o\">.</span><span class=\"n\">create_debye_material</span><span class=\"p\">(</span><span class=\"s2\">&quot;My_Debye&quot;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.02</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">1e5</span><span class=\"p\">,</span> <span class=\"mf\">1e9</span><span class=\"p\">)</span>\n<span class=\"c1\"># edb.core_stackup.stackup_layers.layers[&#39;BOTTOM&#39;].material_name = &quot;My_Debye&quot;</span>\n<span class=\"c1\"># edb.core_stackup.stackup_layers.remove_layer(&quot;Signal3&quot;)</span>\n<span class=\"c1\"># edb.core_stackup.stackup_layers.remove_layer(&quot;Signal1&quot;)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Ansys.Ansoft.Edb.Definition.MaterialDef object at 0x0000019AFA362C40&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-voltage-source-and-siwave-dcir-analysis\">\n<h2>Create voltage source and Siwave DCIR analysis<a class=\"headerlink\" href=\"#create-voltage-source-and-siwave-dcir-analysis\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a voltage source and then set up a DCIR analysis.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_siwave</span><span class=\"o\">.</span><span class=\"n\">create_voltage_source_on_net</span><span class=\"p\">(</span><span class=\"s2\">&quot;U2A5&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V1P5_S3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;U2A5&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">,</span> <span class=\"mf\">3.3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V1&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_siwave</span><span class=\"o\">.</span><span class=\"n\">create_current_source_on_net</span><span class=\"p\">(</span><span class=\"s2\">&quot;U1B5&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;V1P5_S3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;U1B5&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;I1&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_siwave</span><span class=\"o\">.</span><span class=\"n\">add_siwave_dc_analysis</span><span class=\"p\">(</span><span class=\"s2\">&quot;myDCIR_4&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">use_dc_custom_settings</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">dc_slider_position</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">add_source_terminal_to_ground</span><span class=\"p\">(</span><span class=\"s2\">&quot;V1&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"save-modifications\">\n<h2>Save modifications<a class=\"headerlink\" href=\"#save-modifications\" title=\"Permalink to this heading\">#</a></h2>\n<p>Save modifications.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">save_edb</span><span class=\"p\">()</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_nets</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s2\">&quot;TOP&quot;</span><span class=\"p\">,</span><span class=\"n\">plot_components_on_top</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">siw_file</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">solve_siwave</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_01_edb_example_001.png\" srcset=\"../../_images/sphx_glr_01_edb_example_001.png\" alt=\"Galileo_um\" class = \"sphx-glr-single-img\"/></section>\n<section id=\"export-siwave-reports\">\n<h2>Export Siwave Reports<a class=\"headerlink\" href=\"#export-siwave-reports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Export all DC Reports quantities.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">export_siwave_dc_results</span><span class=\"p\">(</span><span class=\"n\">siw_file</span><span class=\"p\">,</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>[&#39;&quot;C:\\\\Program Files\\\\AnsysEM\\\\v222\\\\Win64\\\\siwave.exe&quot;&#39;, &#39;-embedding&#39;, &#39;-RunScriptAndExit&#39;, &#39;&quot;D:\\\\Temp\\\\pyaedt_prj_NVR\\\\edb\\\\export_results.py&quot;&#39;]\n</pre></div>\n</div>\n</section>\n<section id=\"close-edb\">\n<h2>Close EDB<a class=\"headerlink\" href=\"#close-edb\" title=\"Permalink to this heading\">#</a></h2>\n<p>Close EDB. After EDB is closed, it can be opened by AEDT.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">close_edb</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"postprocess-in-siwave\">\n<h2>Postprocess in Siwave<a class=\"headerlink\" href=\"#postprocess-in-siwave\" title=\"Permalink to this heading\">#</a></h2>\n<p>Open Siwave and generate a report. This works on Window only.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># from pyaedt import Siwave</span>\n<span class=\"c1\"># siwave = Siwave(&quot;2022.2&quot;)</span>\n<span class=\"c1\"># siwave.open_project(siwave_file)</span>\n<span class=\"c1\"># report_file = os.path.join(temp_folder,&#39;Galileo.htm&#39;)</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># siwave.export_siwave_report(&quot;myDCIR_4&quot;, report_file)</span>\n<span class=\"c1\"># siwave.close_project()</span>\n<span class=\"c1\"># siwave.quit_application()</span>\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  58.959 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-00-edb-01-edb-example-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/5774d0d0329aed798c6bb385cb43883d/01_edb_example.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">01_edb_example.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/e5c2bcb06785a9702c44f837b85e5c62/01_edb_example.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">01_edb_example.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/00-EDB/02_edb_to_ipc2581", "EDB: IPC2581 export", "N", "next"], ["examples/00-EDB/00_EDB_Create_VIA", "EDB: geometry creation", "P", "previous"]], "sourcename": "examples/00-EDB/01_edb_example.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">EDB: Siwave analysis from EDB setup</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-imports\">Perform required imports</a></li>\n<li><a class=\"reference internal\" href=\"#launch-edb\">Launch EDB</a></li>\n<li><a class=\"reference internal\" href=\"#compute-nets-and-components\">Compute nets and components</a></li>\n<li><a class=\"reference internal\" href=\"#get-pin-position\">Get pin position</a></li>\n<li><a class=\"reference internal\" href=\"#get-all-nets-connected-to-a-component\">Get all nets connected to a component</a></li>\n<li><a class=\"reference internal\" href=\"#compute-rats\">Compute rats</a></li>\n<li><a class=\"reference internal\" href=\"#get-all-dc-connected-net-lists-through-inductance\">Get all DC-connected net lists through inductance</a></li>\n<li><a class=\"reference internal\" href=\"#get-power-tree-based-on-a-specific-net\">Get power tree based on a specific net</a></li>\n<li><a class=\"reference internal\" href=\"#delete-all-rlcs-with-only-one-pin\">Delete all RLCs with only one pin</a></li>\n<li><a class=\"reference internal\" href=\"#delete-components\">Delete components</a></li>\n<li><a class=\"reference internal\" href=\"#delete-nets\">Delete nets</a></li>\n<li><a class=\"reference internal\" href=\"#get-stackup-limits\">Get stackup limits</a></li>\n<li><a class=\"reference internal\" href=\"#create-coaxial-port\">Create coaxial port</a></li>\n<li><a class=\"reference internal\" href=\"#edit-stackup-layers-and-material\">Edit stackup layers and material</a></li>\n<li><a class=\"reference internal\" href=\"#create-voltage-source-and-siwave-dcir-analysis\">Create voltage source and Siwave DCIR analysis</a></li>\n<li><a class=\"reference internal\" href=\"#save-modifications\">Save modifications</a></li>\n<li><a class=\"reference internal\" href=\"#export-siwave-reports\">Export Siwave Reports</a></li>\n<li><a class=\"reference internal\" href=\"#close-edb\">Close EDB</a></li>\n<li><a class=\"reference internal\" href=\"#postprocess-in-siwave\">Postprocess in Siwave</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/00-EDB/01_edb_example", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}