{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "EDB examples"}], "prev": {"link": "../05_Plot_nets/", "title": "EDB: plot nets with Matplotlib"}, "next": {"link": "../07_WPF_Merge_Utility/", "title": "EDB: merge utility"}, "title": "EDB: parametric via creation", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-00-edb-06-advanced-edb-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"edb-parametric-via-creation\">\n<span id=\"sphx-glr-examples-00-edb-06-advanced-edb-py\"></span><h1>EDB: parametric via creation<a class=\"headerlink\" href=\"#edb-parametric-via-creation\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use EDB to create a layout.</p>\n<section id=\"perform-required-imports\">\n<h2>Perform required imports<a class=\"headerlink\" href=\"#perform-required-imports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyaedt</span>\n\n\n<span class=\"n\">aedb_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">generate_unique_folder_name</span><span class=\"p\">(),</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;via_opt&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedb&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-stackup\">\n<h2>Create stackup<a class=\"headerlink\" href=\"#create-stackup\" title=\"Permalink to this heading\">#</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">StackupSimple</span></code> class creates a stackup based on few inputs. This stackup\nis used later.</p>\n</section>\n<section id=\"create-ground-plane\">\n<h2>Create ground plane<a class=\"headerlink\" href=\"#create-ground-plane\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a ground plane on specific layers.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">_create_ground_planes</span><span class=\"p\">(</span><span class=\"n\">edb</span><span class=\"p\">,</span> <span class=\"n\">layers</span><span class=\"p\">):</span>\n    <span class=\"n\">plane</span> <span class=\"o\">=</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">Shape</span><span class=\"p\">(</span><span class=\"s2\">&quot;rectangle&quot;</span><span class=\"p\">,</span> <span class=\"n\">pointA</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;-3mm&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-3mm&quot;</span><span class=\"p\">],</span> <span class=\"n\">pointB</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;3mm&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3mm&quot;</span><span class=\"p\">])</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">layers</span><span class=\"p\">:</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">create_polygon</span><span class=\"p\">(</span><span class=\"n\">plane</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-edb\">\n<h2>Create EDB<a class=\"headerlink\" href=\"#create-edb\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create EDB. If the path doesn\u2019t exist, PyAEDT automatically generates a new AEDB folder.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">Edb</span><span class=\"p\">(</span><span class=\"n\">edbpath</span><span class=\"o\">=</span><span class=\"n\">aedb_path</span><span class=\"p\">,</span> <span class=\"n\">edbversion</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-stackup-layers\">\n<h2>Create stackup layers<a class=\"headerlink\" href=\"#create-stackup-layers\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create stackup layers.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">layout_count</span> <span class=\"o\">=</span> <span class=\"mi\">12</span>\n<span class=\"n\">diel_material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;FR4_epoxy&quot;</span>\n<span class=\"n\">diel_thickness</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0.15mm&quot;</span>\n<span class=\"n\">cond_thickness_outer</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0.05mm&quot;</span>\n<span class=\"n\">cond_thickness_inner</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0.017mm&quot;</span>\n<span class=\"n\">soldermask_thickness</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;0.05mm&quot;</span>\n<span class=\"n\">trace_in_layer</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;TOP&quot;</span>\n<span class=\"n\">trace_out_layer</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;L10&quot;</span>\n<span class=\"n\">gvia_num</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">gvia_angle</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">create_symmetric_stackup</span><span class=\"p\">(</span><span class=\"n\">layer_count</span><span class=\"o\">=</span><span class=\"n\">layout_count</span><span class=\"p\">,</span> <span class=\"n\">inner_layer_thickness</span><span class=\"o\">=</span><span class=\"n\">cond_thickness_inner</span><span class=\"p\">,</span>\n                                     <span class=\"n\">outer_layer_thickness</span><span class=\"o\">=</span><span class=\"n\">cond_thickness_outer</span><span class=\"p\">,</span>\n                                     <span class=\"n\">soldermask_thickness</span><span class=\"o\">=</span><span class=\"n\">soldermask_thickness</span><span class=\"p\">,</span> <span class=\"n\">dielectric_thickness</span><span class=\"o\">=</span><span class=\"n\">diel_thickness</span><span class=\"p\">,</span>\n                                     <span class=\"n\">dielectric_material</span><span class=\"o\">=</span><span class=\"n\">diel_material_name</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># StackupSimple(</span>\n<span class=\"c1\">#     edb,</span>\n<span class=\"c1\">#     layer_count=layout_count,</span>\n<span class=\"c1\">#     diel_material_name=diel_material_name,</span>\n<span class=\"c1\">#     diel_thickness=diel_thickness,</span>\n<span class=\"c1\">#     cond_thickness_outer=cond_thickness_outer,</span>\n<span class=\"c1\">#     cond_thickness_inner=cond_thickness_inner,</span>\n<span class=\"c1\">#     soldermask_thickness=soldermask_thickness,</span>\n<span class=\"c1\"># ).create_stackup()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-variables\">\n<h2>Create variables<a class=\"headerlink\" href=\"#create-variables\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create all variables. If a variable has a <code class=\"docutils literal notranslate\"><span class=\"pre\">$</span></code> prefix, it is a project variable.\nOtherwise, is a design variable.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">giva_angle_rad</span> <span class=\"o\">=</span> <span class=\"n\">gvia_angle</span> <span class=\"o\">/</span> <span class=\"mi\">180</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;$via_hole_size&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.3mm&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;$antipaddiam&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.7mm&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;$paddiam&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.5mm&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;via_pitch&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_parameter</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;trace_in_width&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.2mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_parameter</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">add_design_variable</span><span class=\"p\">(</span><span class=\"s2\">&quot;trace_out_width&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0.1mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_parameter</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>(True, &lt;Ansys.Ansoft.Edb.Utility.VariableServer object at 0x000001BCAC224480&gt;)\n</pre></div>\n</div>\n</section>\n<section id=\"create-padstacks\">\n<h2>Create padstacks<a class=\"headerlink\" href=\"#create-padstacks\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create two padstacks, one for the ground and one for the signal. The padstacks\nare parametric.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">create_padstack</span><span class=\"p\">(</span>\n    <span class=\"n\">padstackname</span><span class=\"o\">=</span><span class=\"s2\">&quot;SVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">holediam</span><span class=\"o\">=</span><span class=\"s2\">&quot;$via_hole_size&quot;</span><span class=\"p\">,</span> <span class=\"n\">antipaddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;$antipaddiam&quot;</span><span class=\"p\">,</span> <span class=\"n\">paddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;$paddiam&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">create_padstack</span><span class=\"p\">(</span><span class=\"n\">padstackname</span><span class=\"o\">=</span><span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">holediam</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.3mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">antipaddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.7mm&quot;</span><span class=\"p\">,</span> <span class=\"n\">paddiam</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5mm&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&#39;GVIA&#39;\n</pre></div>\n</div>\n</section>\n<section id=\"place-padstack-for-signal\">\n<h2>Place padstack for signal<a class=\"headerlink\" href=\"#place-padstack-for-signal\" title=\"Permalink to this heading\">#</a></h2>\n<p>Place the padstack for the signal.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;SVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;RF&quot;</span><span class=\"p\">,</span> <span class=\"n\">fromlayer</span><span class=\"o\">=</span><span class=\"n\">trace_in_layer</span><span class=\"p\">,</span> <span class=\"n\">tolayer</span><span class=\"o\">=</span><span class=\"n\">trace_out_layer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.edb_core.edb_data.padstacks_data.EDBPadstackInstance object at 0x000001BCA9B566A0&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"place-padstack-for-ground\">\n<h2>Place padstack for ground<a class=\"headerlink\" href=\"#place-padstack-for-ground\" title=\"Permalink to this heading\">#</a></h2>\n<p>Place the padstack for the  ground. A loop iterates and places multiple ground\nvias on different positions.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gvia_num_side</span> <span class=\"o\">=</span> <span class=\"n\">gvia_num</span> <span class=\"o\">/</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">if</span> <span class=\"n\">gvia_num_side</span> <span class=\"o\">%</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Even number of ground vias on each side</span>\n    <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"s2\">&quot;via_pitch&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"s2\">&quot;via_pitch*-1&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">gvia_num_side</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"n\">xloc</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">*</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">giva_angle_rad</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"s2\">&quot;via_pitch&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">yloc</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">*</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">giva_angle_rad</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"s2\">&quot;via_pitch&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span><span class=\"p\">,</span> <span class=\"n\">yloc</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span><span class=\"p\">,</span> <span class=\"n\">yloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">,</span> <span class=\"n\">yloc</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">,</span> <span class=\"n\">yloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># Odd number of ground vias on each side</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">gvia_num_side</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"n\">xloc</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">*</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">giva_angle_rad</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span><span class=\"p\">)),</span> <span class=\"s2\">&quot;via_pitch&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">yloc</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">*</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">giva_angle_rad</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span><span class=\"p\">)),</span> <span class=\"s2\">&quot;via_pitch&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span><span class=\"p\">,</span> <span class=\"n\">yloc</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span><span class=\"p\">,</span> <span class=\"n\">yloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">,</span> <span class=\"n\">yloc</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_padstack</span><span class=\"o\">.</span><span class=\"n\">place_padstack</span><span class=\"p\">([</span><span class=\"n\">xloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">,</span> <span class=\"n\">yloc</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;*-1&quot;</span><span class=\"p\">],</span> <span class=\"s2\">&quot;GVIA&quot;</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;GND&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"generate-traces\">\n<h2>Generate traces<a class=\"headerlink\" href=\"#generate-traces\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate and place parametric traces.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">create_trace</span><span class=\"p\">(</span>\n    <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-3mm&quot;</span><span class=\"p\">]],</span> <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"n\">trace_in_layer</span><span class=\"p\">,</span> <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;RF&quot;</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"s2\">&quot;trace_in_width&quot;</span><span class=\"p\">,</span> <span class=\"n\">start_cap_style</span><span class=\"o\">=</span><span class=\"s2\">&quot;Flat&quot;</span><span class=\"p\">,</span> <span class=\"n\">end_cap_style</span><span class=\"o\">=</span><span class=\"s2\">&quot;Flat&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">core_primitives</span><span class=\"o\">.</span><span class=\"n\">create_trace</span><span class=\"p\">(</span>\n    <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3mm&quot;</span><span class=\"p\">]],</span>\n    <span class=\"n\">layer_name</span><span class=\"o\">=</span><span class=\"n\">trace_out_layer</span><span class=\"p\">,</span>\n    <span class=\"n\">net_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;RF&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"s2\">&quot;trace_out_width&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">start_cap_style</span><span class=\"o\">=</span><span class=\"s2\">&quot;Flat&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">end_cap_style</span><span class=\"o\">=</span><span class=\"s2\">&quot;Flat&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.edb_core.edb_data.primitives_data.EDBPrimitives object at 0x000001BCB26AE610&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"generate-ground-layers\">\n<h2>Generate ground layers<a class=\"headerlink\" href=\"#generate-ground-layers\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generate and place ground layers.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ground_layers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">stackup</span><span class=\"o\">.</span><span class=\"n\">signal_layers</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()]</span>\n<span class=\"n\">ground_layers</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">trace_in_layer</span><span class=\"p\">)</span>\n<span class=\"n\">ground_layers</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">trace_out_layer</span><span class=\"p\">)</span>\n<span class=\"n\">_create_ground_planes</span><span class=\"p\">(</span><span class=\"n\">edb</span><span class=\"o\">=</span><span class=\"n\">edb</span><span class=\"p\">,</span> <span class=\"n\">layers</span><span class=\"o\">=</span><span class=\"n\">ground_layers</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"save-edb-and-close\">\n<h2>Save EDB and close<a class=\"headerlink\" href=\"#save-edb-and-close\" title=\"Permalink to this heading\">#</a></h2>\n<p>Save EDB and close.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">save_edb</span><span class=\"p\">()</span>\n<span class=\"n\">edb</span><span class=\"o\">.</span><span class=\"n\">close_edb</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;aedb Saved in </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">aedb_path</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>aedb Saved in D:\\Temp\\pyaedt_prj_UKZ\\via_opt_94Z40D.aedb\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  12.351 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-00-edb-06-advanced-edb-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/6ab828cfbc5d1be71d70a028bb615083/06_Advanced_EDB.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">06_Advanced_EDB.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/adbc172c6504d9df76f483d74fa1a605/06_Advanced_EDB.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">06_Advanced_EDB.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/00-EDB/07_WPF_Merge_Utility", "EDB: merge utility", "N", "next"], ["examples/00-EDB/05_Plot_nets", "EDB: plot nets with Matplotlib", "P", "previous"]], "sourcename": "examples/00-EDB/06_Advanced_EDB.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">EDB: parametric via creation</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-imports\">Perform required imports</a></li>\n<li><a class=\"reference internal\" href=\"#create-stackup\">Create stackup</a></li>\n<li><a class=\"reference internal\" href=\"#create-ground-plane\">Create ground plane</a></li>\n<li><a class=\"reference internal\" href=\"#create-edb\">Create EDB</a></li>\n<li><a class=\"reference internal\" href=\"#create-stackup-layers\">Create stackup layers</a></li>\n<li><a class=\"reference internal\" href=\"#create-variables\">Create variables</a></li>\n<li><a class=\"reference internal\" href=\"#create-padstacks\">Create padstacks</a></li>\n<li><a class=\"reference internal\" href=\"#place-padstack-for-signal\">Place padstack for signal</a></li>\n<li><a class=\"reference internal\" href=\"#place-padstack-for-ground\">Place padstack for ground</a></li>\n<li><a class=\"reference internal\" href=\"#generate-traces\">Generate traces</a></li>\n<li><a class=\"reference internal\" href=\"#generate-ground-layers\">Generate ground layers</a></li>\n<li><a class=\"reference internal\" href=\"#save-edb-and-close\">Save EDB and close</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/00-EDB/06_Advanced_EDB", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}