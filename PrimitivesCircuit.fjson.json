{"parents": [{"link": "../../../", "title": "Module code"}], "title": "pyaedt.modeler.PrimitivesCircuit", "body": "<h1>Source code for pyaedt.modeler.PrimitivesCircuit</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.constants</span> <span class=\"kn\">import</span> <span class=\"n\">AEDT_UNITS</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_retry_ntimes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">filter_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">generate_unique_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">open_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">recursive_glob</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.LoadAEDTFile</span> <span class=\"kn\">import</span> <span class=\"n\">load_keyword_in_aedt_file</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.TouchstoneParser</span> <span class=\"kn\">import</span> <span class=\"n\">_parse_ports_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.modeler.Object3d</span> <span class=\"kn\">import</span> <span class=\"n\">CircuitComponent</span>\n\n\n<div class=\"viewcode-block\" id=\"CircuitComponents\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CircuitComponents</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;CircutComponents class.</span>\n\n<span class=\"sd\">    Manages all circuit components for Nexxim and Twin Builder.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import Circuit</span>\n<span class=\"sd\">    &gt;&gt;&gt; aedtapp = Circuit()</span>\n<span class=\"sd\">    &gt;&gt;&gt; prim = aedtapp.modeler.schematic</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">partname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve a part.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        partname : int or str</span>\n<span class=\"sd\">           Part ID or part name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Part object details.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">partname</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">partname</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">partname</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span> <span class=\"o\">==</span> <span class=\"n\">partname</span> <span class=\"ow\">or</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"n\">partname</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">modeler</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span> <span class=\"o\">=</span> <span class=\"n\">modeler</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">logger</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">oeditor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_currentId</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_all_ids</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">increment_mils</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"mi\">1000</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">limits_mils</span> <span class=\"o\">=</span> <span class=\"mi\">20000</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">o_definition_manager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Aedt oDefinitionManager.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oDefinitionManager = oProject.GetDefinitionManager()</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetDefinitionManager</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">o_component_manager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Component manager object.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">o_symbol_manager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Model manager object.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">o_symbol_manager</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">version</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Version.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_aedt_version</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_types</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design types.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_modeler</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Model units.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">model_units</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Design type.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">design_type</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">nets</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;List of all schematic nets.&quot;&quot;&quot;</span>\n        <span class=\"n\">nets_comp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetAllNets</span><span class=\"p\">()</span>\n        <span class=\"n\">nets</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">net</span> <span class=\"ow\">in</span> <span class=\"n\">nets_comp</span><span class=\"p\">:</span>\n            <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;Wire@&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">nets</span><span class=\"p\">:</span>\n                <span class=\"n\">nets</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;Wire@&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">nets</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">location</span><span class=\"p\">:</span>\n            <span class=\"n\">xpos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">xpos</span> <span class=\"o\">=</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span> <span class=\"o\">=</span> <span class=\"n\">location</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">increment_mils</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">limits_mils</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_position</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">AEDT_UNITS</span><span class=\"p\">[</span><span class=\"s2\">&quot;Length&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;mil&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">increment_mils</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_unique_id\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_unique_id/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_unique_id\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_unique_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an unique ID.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Unique ID in the range of ``[1, 65535]``.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"nb\">id</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">65535</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_wire\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_wire/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_wire\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_wire</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">points_array</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a wire.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        points_array : list</span>\n<span class=\"sd\">            A nested list of point coordinates. For example,</span>\n<span class=\"sd\">            ``[[x1, y1], [x2, y2], ...]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateWire</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">pointlist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">points_array</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateWire</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:WireData&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">20000</span><span class=\"p\">,</span> <span class=\"mi\">23000</span><span class=\"p\">),</span> <span class=\"s2\">&quot;Points:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">pointlist</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.add_pin_iports\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.add_pin_iports/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.add_pin_iports\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_pin_iports</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">id_num</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add ports on pins.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the component.</span>\n<span class=\"sd\">        id_num : int</span>\n<span class=\"sd\">            ID of circuit component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oeditor.AddPinIPorts</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">comp_id</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;CompInst@&quot;</span> <span class=\"o\">+</span> <span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">id_num</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;;395&quot;</span>\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Name:Selections&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Selections:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">comp_id</span><span class=\"p\">]]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">AddPinIPorts</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_iport\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_iport/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_iport\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_iport</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">posx</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">posy</span><span class=\"o\">=</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an interface port.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.0</span>\n<span class=\"sd\">           Use :func:`Circuit.modeler.schematic.create_interface_port` instead.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;`create_iport` is deprecated. Use `create_interface_port` instead.&quot;</span><span class=\"p\">,</span> <span class=\"ne\">DeprecationWarning</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_interface_port</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">posx</span><span class=\"p\">,</span> <span class=\"n\">posy</span><span class=\"p\">],</span> <span class=\"n\">angle</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_interface_port\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_interface_port/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_interface_port\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_interface_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create an interface port.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the port.</span>\n<span class=\"sd\">        location : list, optional</span>\n<span class=\"sd\">            Position on the X and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateIPort</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span><span class=\"p\">:</span>\n            <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:IPortProps&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">]</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateIPort</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_id_to_component</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"c1\"># return id, self.components[id].composed_name</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_page_port\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_page_port/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_page_port\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_page_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a page port.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        name : str</span>\n<span class=\"sd\">            Name of the port.</span>\n<span class=\"sd\">        location : list, optional</span>\n<span class=\"sd\">            Position on the X and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreatePagePort</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">location</span><span class=\"p\">:</span>\n            <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">location</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreatePagePort</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PagePortProps&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"c1\"># self.refresh_all_ids()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_id_to_component</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_gnd\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_gnd/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_gnd\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_gnd</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a ground.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        location : list, optional</span>\n<span class=\"sd\">            Position on the X and Y axis. The default is ``None``.</span>\n<span class=\"sd\">        angle : optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateGround</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateGround</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:GroundProps&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_id_to_component</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"c1\"># return id, self.components[id].composed_name</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_model_from_touchstone\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_model_from_touchstone/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_model_from_touchstone\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_model_from_touchstone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">touchstone_full_path</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a model from a Touchstone file.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        touchstone_full_path : str</span>\n<span class=\"sd\">            Full path to the Touchstone file.</span>\n<span class=\"sd\">        model_name : str, optional</span>\n<span class=\"sd\">            Name of the model. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Model name when successfully created. ``False`` if something went wrong.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">model_name</span><span class=\"p\">:</span>\n            <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">touchstone_full_path</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">model_name</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">GetNames</span><span class=\"p\">()):</span>\n            <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">num_terminal</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">touchstone_full_path</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s2\">&quot;.sp&quot;</span><span class=\"p\">))</span>\n        <span class=\"k\">with</span> <span class=\"n\">open_file</span><span class=\"p\">(</span><span class=\"n\">touchstone_full_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">port_names</span> <span class=\"o\">=</span> <span class=\"n\">_parse_ports_name</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n        <span class=\"n\">image_subcircuit_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_modeler</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">desktop_install_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;syslib&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Bitmaps&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;nport.bmp&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">port_names</span><span class=\"p\">:</span>\n            <span class=\"n\">port_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Port&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_terminal</span><span class=\"p\">)]</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">model_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">model_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModTime:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;LibLocation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModelType:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;nport&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ImageFile:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">image_subcircuit_path</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SymbolPinConfiguration:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortInfoBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PortOrderBlk&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;filename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">touchstone_full_path</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;numberofports:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">num_terminal</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;sssfilename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;sssmodel:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;PortNames:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">port_names</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;domain:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;frequency&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;datamode:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Link&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;devicename:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SolutionName:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;displayformat:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;MagnitudePhase&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;datatype:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;SMatrix&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:DesignerCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:NexximCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:HSpiceCustomization&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DCOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InterpOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExtrapOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Convolution:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Passivity:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Reciprocal:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelOption:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataType:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;NoiseModelOption:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;External&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_model_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">model_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Info:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;Type:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;NumTerminals:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">num_terminal</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;DataSource:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModifiedOn:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1618569625</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Manufacturer:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Symbol:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModelNames:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Footprint:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Description:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InfoTopic:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InfoHelpFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IconFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;nport.bmp&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OriginalLocation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;IEEE:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Author:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;OriginalAuthor:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CreationDate:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1618569625</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ExampleFile:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HiddenComponent:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;GroupID:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">&quot;CircuitEnv:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Refbase:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;S&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;NumParts:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_terminal</span><span class=\"p\">):</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;Terminal:=&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">port_names</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">port_names</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Electrical&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;0&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompExtID:=&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Parameters&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;MenuProp:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;CoSimulator&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;ButtonProp:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;CosimDefinition&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;SD&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Edit&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40501</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ButtonPropClientData:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[]],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:CosimDefinition&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;CosimulatorType:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">102</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;CosimDefName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;IsDefinition:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Connect:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ModelDefinitionName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">model_name</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;ShowRefPin2:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"mi\">2</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;LenPropName:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Default&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">model_name</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_component_from_touchstonmodel\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_component_from_touchstonmodel/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_component_from_touchstonmodel\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_component_from_touchstonmodel</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">model_name</span><span class=\"p\">,</span>\n        <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a component from a Touchstone model.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.14</span>\n<span class=\"sd\">           Use :func:`create_touchsthone_component` instead.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_name : str</span>\n<span class=\"sd\">            Name of the Touchstone model or full path to touchstone file.</span>\n<span class=\"sd\">            If full touchstone is provided then, new model will be created.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X  and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_touchsthone_component</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_touchsthone_component\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_touchsthone_component/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_touchsthone_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_touchsthone_component</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">model_name</span><span class=\"p\">,</span>\n        <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a component from a Touchstone model.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        model_name : str</span>\n<span class=\"sd\">            Name of the Touchstone model or full path to touchstone file.</span>\n<span class=\"sd\">            If full touchstone is provided then, new model will be created.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X  and Y axis.</span>\n<span class=\"sd\">        angle : float, optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oModelManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Add</span>\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"p\">):</span>\n            <span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_model_from_touchstone</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentProps&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)]</span>\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateComponent</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_id_to_component</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_component\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_component/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_component</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">inst_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Resistors&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;RES_&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n        <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">global_netlist_list</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a component from a library.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        inst_name : str, optional</span>\n<span class=\"sd\">            Name of the instance. The default is ``None.``</span>\n<span class=\"sd\">        component_library : str, optional</span>\n<span class=\"sd\">            Name of the component library. The default is ``&quot;Resistors&quot;``.</span>\n<span class=\"sd\">        component_name : str, optional</span>\n<span class=\"sd\">            Name of component in the library. The default is ``&quot;RES&quot;``.</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to enable the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n<span class=\"sd\">        global_netlist_list : list, optional</span>\n<span class=\"sd\">            The default is``[]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">component_library</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_libray</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_library</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span>\n        <span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:ComponentProps&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)]</span>\n        <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"n\">ypos</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_location</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n\n        <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">xpos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">ypos</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateComponent</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"c1\"># self.refresh_all_ids()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_id_to_component</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">inst_name</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"s2\">&quot;InstanceName&quot;</span><span class=\"p\">,</span> <span class=\"n\">inst_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">enable_use_instance_name</span><span class=\"p\">(</span><span class=\"n\">component_library</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">global_netlist_list</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">enable_global_netlist</span><span class=\"p\">(</span><span class=\"n\">component_name</span><span class=\"p\">,</span> <span class=\"n\">global_netlist_list</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.disable_data_netlist\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.disable_data_netlist/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.disable_data_netlist\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">disable_data_netlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Disable the Nexxim global net list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_name : str</span>\n<span class=\"sd\">            Name of the component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.GetData</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Edit</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span>\n\n        <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">nexxim</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">nexxim</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Data:=&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">nexxim_data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">nexxim_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n                    <span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">nexxim_data</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Edit</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Name:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span> <span class=\"n\">nexxim</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">]]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.enable_global_netlist\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.enable_global_netlist/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.enable_global_netlist\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enable_global_netlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"p\">,</span> <span class=\"n\">global_netlist_list</span><span class=\"o\">=</span><span class=\"p\">[]):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable Nexxim global net list.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_name : str</span>\n<span class=\"sd\">            Name of the component.</span>\n<span class=\"sd\">        global_netlist_list : list</span>\n<span class=\"sd\">            A list of lines to include. The default is ``[]``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.GetData</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Edit</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span>\n\n        <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">nexxim</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">nexxim</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;GRef:=&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">nexxim_data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">nexxim_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">global_netlist_list</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span>\n                    <span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">nexxim_data</span>\n        <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n            <span class=\"mi\">10</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Edit</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;Name:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span> <span class=\"n\">nexxim</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">]],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_symbol\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_symbol/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_symbol\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_symbol</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">symbol_name</span><span class=\"p\">,</span> <span class=\"n\">pin_lists</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a symbol.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        symbol_name : str</span>\n<span class=\"sd\">            Name of the symbol.</span>\n<span class=\"sd\">        pin_lists : list</span>\n<span class=\"sd\">            List of the pins.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oSymbolManager.Add</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">numpins</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">pin_lists</span><span class=\"p\">)</span>\n        <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">numpins</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">y2</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"mf\">0.00508</span>\n        <span class=\"n\">y1</span> <span class=\"o\">=</span> <span class=\"mf\">0.00254</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">+</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n        <span class=\"n\">xp</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.00254</span>\n        <span class=\"n\">yp</span> <span class=\"o\">=</span> <span class=\"mf\">0.00254</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_symbol_manager</span><span class=\"o\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">symbol_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModTime:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1591858230</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;LibLocation:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;HighestLevel:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Normalize:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;InitialLevels:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Graphics&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">arg</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;NAME:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">symbol_name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModTime:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1591858265</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Library:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;ModSinceLib:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;LibLocation:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Project&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;HighestLevel:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Normalize:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;InitialLevels:=&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">oDefinitionEditor</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">_oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDefinitionEditor</span><span class=\"p\">(</span><span class=\"s2\">&quot;SymbolEditor&quot;</span><span class=\"p\">,</span> <span class=\"n\">symbol_name</span><span class=\"p\">)</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n        <span class=\"n\">oDefinitionEditor</span><span class=\"o\">.</span><span class=\"n\">CreateRectangle</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:RectData&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;X1:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">x1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Y1:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">y1</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;X2:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">x2</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Y2:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">y2</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;LineWidth:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;BorderColor:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Fill:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Color:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span>\n                <span class=\"nb\">id</span><span class=\"p\">,</span>\n            <span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">numpins</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">pin</span> <span class=\"ow\">in</span> <span class=\"n\">pin_lists</span><span class=\"p\">:</span>\n            <span class=\"n\">oDefinitionEditor</span><span class=\"o\">.</span><span class=\"n\">CreatePin</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PinData&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Name:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">],</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:PinParams&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">xp</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Y:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">yp</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Angle:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Flip:=&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">],</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;NAME:PinDef&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Pin:=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">[</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">xp</span><span class=\"p\">,</span> <span class=\"n\">yp</span><span class=\"p\">,</span> <span class=\"n\">angle</span><span class=\"p\">,</span> <span class=\"s2\">&quot;N&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.00254</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">],</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">+</span> <span class=\"n\">r</span><span class=\"p\">):</span>\n                <span class=\"n\">yp</span> <span class=\"o\">=</span> <span class=\"mf\">0.00254</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">h</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n                <span class=\"n\">xp</span> <span class=\"o\">=</span> <span class=\"mf\">0.00762</span>\n                <span class=\"n\">angle</span> <span class=\"o\">=</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">yp</span> <span class=\"o\">-=</span> <span class=\"mf\">0.00254</span>\n            <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n            <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"n\">arg</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"s2\">&quot;NAME:Graphics&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Rect:=&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">+</span> <span class=\"n\">x2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">y1</span> <span class=\"o\">+</span> <span class=\"n\">y2</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">x2</span> <span class=\"o\">-</span> <span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span> <span class=\"o\">-</span> <span class=\"n\">y2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">8192</span><span class=\"p\">]],</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_symbol_manager</span><span class=\"o\">.</span><span class=\"n\">EditWithComps</span><span class=\"p\">(</span><span class=\"n\">symbol_name</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n        <span class=\"n\">oDefinitionEditor</span><span class=\"o\">.</span><span class=\"n\">CloseEditor</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.enable_use_instance_name\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.enable_use_instance_name/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.enable_use_instance_name\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">enable_use_instance_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"s2\">&quot;Resistors&quot;</span><span class=\"p\">,</span> <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;RES_&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Enable the use of the instance name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        component_library : str, optional</span>\n<span class=\"sd\">             Name of the component library. The default is ``&quot;Resistors&quot;``.</span>\n<span class=\"sd\">        component_name : str, optional</span>\n<span class=\"sd\">             Name of the component. The default is ``&quot;RES_&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.GetData</span>\n<span class=\"sd\">        &gt;&gt;&gt; oComponentManager.Edit</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">component_library</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_libray</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_library</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">component_name</span>\n\n        <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">GetData</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">nexxim</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">[</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">nexxim</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;Data:=&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">nexxim_data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">netlist</span> <span class=\"o\">=</span> <span class=\"n\">nexxim_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span> <span class=\"s2\">&quot;@InstanceName&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">netlist</span><span class=\"p\">[:</span><span class=\"mi\">15</span><span class=\"p\">]:</span>\n                        <span class=\"n\">newnetlist</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;@InstanceName&quot;</span> <span class=\"o\">+</span> <span class=\"n\">netlist</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">:]</span>\n                        <span class=\"n\">nexxim_data</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">newnetlist</span>\n                    <span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">nexxim_data</span>\n                <span class=\"k\">elif</span> <span class=\"n\">el</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;GRef:=&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">nexxim_data</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">nexxim</span><span class=\"p\">[</span><span class=\"n\">nexxim</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">nexxim_data</span>\n        <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n            <span class=\"mi\">10</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">o_component_manager</span><span class=\"o\">.</span><span class=\"n\">Edit</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;Name:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">component_name</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:CosimDefinitions&quot;</span><span class=\"p\">,</span> <span class=\"n\">nexxim</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultCosim:=&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefaultNetlist&quot;</span><span class=\"p\">]],</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.refresh_all_ids\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.refresh_all_ids/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.refresh_all_ids\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">refresh_all_ids</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Refresh all IDs and return the number of components.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetAllElements()&quot;&quot;&quot;</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetAllElements</span><span class=\"p\">()</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;Wire&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">i</span><span class=\"p\">[:</span><span class=\"mi\">4</span><span class=\"p\">]]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_obj_id</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">):</span>\n                <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tabname</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tab_name</span><span class=\"p\">)</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                        <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                        <span class=\"n\">objID</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                        <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n                        <span class=\"n\">objID</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">objID</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">o</span>\n        <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.add_id_to_component\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.add_id_to_component/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.add_id_to_component\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_id_to_component</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Add an ID to a component.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        id : int</span>\n<span class=\"sd\">            ID to assign the component.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        int</span>\n<span class=\"sd\">            Number of components.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetAllElements</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span><span class=\"p\">:</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">el</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;;&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tabname</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tab_name</span><span class=\"p\">)</span>\n                <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                    <span class=\"n\">objID</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">id</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n                    <span class=\"n\">objID</span> <span class=\"o\">=</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">schematic_id</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">objID</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">o</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.get_obj_id\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.get_obj_id/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.get_obj_id\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_obj_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the ID of an object.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        objname : str</span>\n<span class=\"sd\">            Name of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">el</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">objname</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">el</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.get_pins\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.get_pins/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.get_pins\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_pins</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">partid</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve one or more pins.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        partid : int or str</span>\n<span class=\"sd\">            One or more IDs or names for the pins to retrieve.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n<span class=\"sd\">            Pin with properties.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetComponentPins</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">partid</span><span class=\"p\">,</span> <span class=\"n\">CircuitComponent</span><span class=\"p\">):</span>\n            <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">,</span> <span class=\"n\">partid</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">partid</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">,</span> <span class=\"n\">partid</span><span class=\"p\">)</span>\n            <span class=\"c1\"># pins = self.oeditor.GetComponentPins(partid)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">pins</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPins</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">partid</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">)</span>\n            <span class=\"c1\"># pins = self.oeditor.GetComponentPins(self.components[partid].composed_name)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">pins</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.get_pin_location\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.get_pin_location/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.get_pin_location\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_pin_location</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">partid</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the location of a pin.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        partid : int</span>\n<span class=\"sd\">            ID of the part.</span>\n<span class=\"sd\">        pinname :</span>\n<span class=\"sd\">            Name of the pin.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        List</span>\n<span class=\"sd\">            List of axis values ``[x, y]``.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.GetComponentPinLocation</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">partid</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"n\">partid</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"n\">partid</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">partid</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">_retry_ntimes</span><span class=\"p\">(</span>\n                <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">GetComponentPinLocation</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">partid</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">composed_name</span><span class=\"p\">,</span> <span class=\"n\">pinname</span><span class=\"p\">,</span> <span class=\"kc\">False</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.arg_with_dim\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.arg_with_dim/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.arg_with_dim\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">arg_with_dim</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">,</span> <span class=\"n\">sUnits</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Format an argument with dimensions.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        Value : str</span>\n\n<span class=\"sd\">        sUnits :</span>\n<span class=\"sd\">            The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        type</span>\n\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">Value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">Value</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">sUnits</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">sUnits</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_units</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{0}{1}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">Value</span><span class=\"p\">,</span> <span class=\"n\">sUnits</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">val</span></div>\n\n<div class=\"viewcode-block\" id=\"CircuitComponents.create_line\"><a class=\"viewcode-back\" href=\"../../../../API/_autosummary/pyaedt.modeler.PrimitivesCircuit.CircuitComponents.create_line/#pyaedt.modeler.PrimitivesTwinBuilder.CircuitComponents.create_line\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_line</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">points_array</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">line_width</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Draw a graphical line.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        points_array : list</span>\n<span class=\"sd\">            A nested list of point coordinates. For example,</span>\n<span class=\"sd\">            ``[[x1, y1], [x2, y2], ...]``.</span>\n<span class=\"sd\">        color : string or 3 item list, optional</span>\n<span class=\"sd\">            Color or the line. The default is ``0``.</span>\n<span class=\"sd\">        line_width : float, optional</span>\n<span class=\"sd\">            Width of the line. The default is ``0``.</span>\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateLine</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">pointlist</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">points_array</span><span class=\"p\">]</span>\n        <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_unique_id</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">oeditor</span><span class=\"o\">.</span><span class=\"n\">CreateLine</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:LineData&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Points:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">pointlist</span><span class=\"p\">,</span> <span class=\"s2\">&quot;LineWidth:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">line_width</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Color:=&quot;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Id:=&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">],</span>\n            <span class=\"p\">[</span><span class=\"s2\">&quot;NAME:Attributes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Page:=&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n        <span class=\"p\">)</span></div></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ComponentInfo</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class that manage Circuit Catalog info.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">component_manager</span><span class=\"p\">,</span> <span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"n\">component_library</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span> <span class=\"o\">=</span> <span class=\"n\">component_manager</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"n\">file_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">component_library</span> <span class=\"o\">=</span> <span class=\"n\">component_library</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">props</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Retrieve the component properties.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span> <span class=\"o\">=</span> <span class=\"n\">load_keyword_in_aedt_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_props</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">place</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inst_name</span><span class=\"p\">,</span> <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a component from a library.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        inst_name : str, optional</span>\n<span class=\"sd\">            Name of the instance. The default is ``None.``</span>\n<span class=\"sd\">        location : list of float, optional</span>\n<span class=\"sd\">            Position on the X axis and Y axis.</span>\n<span class=\"sd\">        angle : optional</span>\n<span class=\"sd\">            Angle rotation in degrees. The default is ``0``.</span>\n<span class=\"sd\">        use_instance_id_netlist : bool, optional</span>\n<span class=\"sd\">            Whether to enable the instance ID in the net list.</span>\n<span class=\"sd\">            The default is ``False``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.Object3d.CircuitComponent`</span>\n<span class=\"sd\">            Circuit Component Object.</span>\n\n<span class=\"sd\">        References</span>\n<span class=\"sd\">        ----------</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; oEditor.CreateComponent</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"o\">.</span><span class=\"n\">create_component</span><span class=\"p\">(</span>\n            <span class=\"n\">inst_name</span><span class=\"o\">=</span><span class=\"n\">inst_name</span><span class=\"p\">,</span>\n            <span class=\"n\">component_library</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">component_library</span><span class=\"p\">,</span>\n            <span class=\"n\">component_name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">location</span><span class=\"o\">=</span><span class=\"n\">location</span><span class=\"p\">,</span>\n            <span class=\"n\">angle</span><span class=\"o\">=</span><span class=\"n\">angle</span><span class=\"p\">,</span>\n            <span class=\"n\">use_instance_id_netlist</span><span class=\"o\">=</span><span class=\"n\">use_instance_id_netlist</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ComponentCatalog</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Class that indexes Circuit Sys Catalog.&quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compname</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Get component from name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        compname : str</span>\n<span class=\"sd\">            ID or name of the object.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:`pyaedt.modeler.PrimitivesCircuit.ComponentInfo`</span>\n<span class=\"sd\">            Circuit Component Info.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">find_components</span><span class=\"p\">(</span><span class=\"s2\">&quot;*&quot;</span> <span class=\"o\">+</span> <span class=\"n\">compname</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">items</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">items</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Multiple components found.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Component not found.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">component_manager</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span> <span class=\"o\">=</span> <span class=\"n\">component_manager</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"o\">.</span><span class=\"n\">_app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index_components</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_index_components</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">library_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">library_path</span><span class=\"p\">:</span>\n            <span class=\"n\">sys_files</span> <span class=\"o\">=</span> <span class=\"n\">recursive_glob</span><span class=\"p\">(</span><span class=\"n\">library_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*.aclb&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"n\">library_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">sys_files</span> <span class=\"o\">=</span> <span class=\"n\">recursive_glob</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">syslib</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"o\">.</span><span class=\"n\">design_libray</span><span class=\"p\">),</span> <span class=\"s2\">&quot;*.aclb&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_app</span><span class=\"o\">.</span><span class=\"n\">syslib</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">sys_files</span><span class=\"p\">:</span>\n            <span class=\"n\">comps1</span> <span class=\"o\">=</span> <span class=\"n\">load_keyword_in_aedt_file</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DefInfo&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">comps2</span> <span class=\"o\">=</span> <span class=\"n\">load_keyword_in_aedt_file</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;CompInfo&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">comps</span> <span class=\"o\">=</span> <span class=\"n\">comps1</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;DefInfo&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n            <span class=\"n\">comps</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">comps2</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;CompInfo&quot;</span><span class=\"p\">,</span> <span class=\"p\">{}))</span>\n            <span class=\"k\">for</span> <span class=\"n\">compname</span><span class=\"p\">,</span> <span class=\"n\">comp_value</span> <span class=\"ow\">in</span> <span class=\"n\">comps</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">root_name</span><span class=\"p\">,</span> <span class=\"n\">ext</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">normpath</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">))</span>\n                <span class=\"n\">full_path</span> <span class=\"o\">=</span> <span class=\"n\">root_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">sep</span><span class=\"p\">)</span>\n                <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">full_path</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"o\">.</span><span class=\"n\">design_libray</span> <span class=\"ow\">in</span> <span class=\"n\">full_path</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">:]:</span>\n                    <span class=\"nb\">id</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"n\">comp_lib</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">full_path</span><span class=\"p\">[</span><span class=\"nb\">id</span><span class=\"p\">:])</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"o\">+</span> <span class=\"n\">compname</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"n\">comp_lib</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ComponentInfo</span><span class=\"p\">(</span>\n                    <span class=\"n\">compname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_component_manager</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">comp_lib</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;:&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">find_components</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">filter_str</span><span class=\"o\">=</span><span class=\"s2\">&quot;*&quot;</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Find all components with given filter wildcards.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        filter_str : str</span>\n<span class=\"sd\">            Filter String to search.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of matching component names.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n            <span class=\"k\">if</span> <span class=\"n\">filter_string</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">,</span> <span class=\"n\">filter_str</span><span class=\"p\">):</span>\n                <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">c</span>\n</pre></div>", "current_page_name": "_modules/pyaedt/modeler/PrimitivesCircuit", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}