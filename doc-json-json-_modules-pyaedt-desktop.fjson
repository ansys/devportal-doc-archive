{"parents": [{"link": "../../", "title": "Module code"}], "title": "pyaedt.desktop", "body": "<h1>Source code for pyaedt.desktop</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains the ``Desktop`` class.</span>\n\n<span class=\"sd\">This module is used to initialize AEDT and the message manager for managing AEDT.</span>\n\n<span class=\"sd\">You can initialize this module before launching an app or</span>\n<span class=\"sd\">have the app automatically initialize it to the latest installed AEDT version.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">absolute_import</span>  <span class=\"c1\"># noreorder</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pkgutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">traceback</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_logger</span>\n\n<span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;nt&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">IsWindows</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">IsWindows</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;ANS_NODEPCHECK&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">IsWindows</span> <span class=\"ow\">and</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">subprocessdotnet</span> <span class=\"k\">as</span> <span class=\"nn\">subprocess</span>\n\n\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">subprocess</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">__version__</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">pyaedt_function_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">_pythonver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">com_active_sessions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">grpc_active_sessions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">inside_desktop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.general_methods</span> <span class=\"kn\">import</span> <span class=\"n\">is_ironpython</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyaedt.misc</span> <span class=\"kn\">import</span> <span class=\"n\">list_installed_ansysem</span>\n\n<span class=\"n\">pathname</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span>\n\n<span class=\"n\">pyaedtversion</span> <span class=\"o\">=</span> <span class=\"n\">__version__</span>\n\n<span class=\"n\">modules</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tup</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">tup</span> <span class=\"ow\">in</span> <span class=\"n\">pkgutil</span><span class=\"o\">.</span><span class=\"n\">iter_modules</span><span class=\"p\">()]</span>\n\n<span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n    <span class=\"n\">_com</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ironpython&quot;</span>\n<span class=\"k\">elif</span> <span class=\"n\">IsWindows</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;pythonnet&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">modules</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n    <span class=\"n\">_com</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pythonnet_v3&quot;</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">_com</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;gprc_v3&quot;</span>\n    <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_check_grpc_port</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">machine_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">):</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">machine_name</span><span class=\"p\">:</span>\n            <span class=\"n\">machine_name</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">getfqdn</span><span class=\"p\">()</span>\n        <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">((</span><span class=\"n\">machine_name</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_find_free_port</span><span class=\"p\">(</span><span class=\"n\">port_start</span><span class=\"o\">=</span><span class=\"mi\">50001</span><span class=\"p\">,</span> <span class=\"n\">port_end</span><span class=\"o\">=</span><span class=\"mi\">60000</span><span class=\"p\">):</span>\n    <span class=\"n\">list_ports</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">port_start</span><span class=\"p\">,</span> <span class=\"n\">port_end</span><span class=\"p\">),</span> <span class=\"n\">port_end</span> <span class=\"o\">-</span> <span class=\"n\">port_start</span><span class=\"p\">)</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">port</span> <span class=\"ow\">in</span> <span class=\"n\">list_ports</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">((</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">getfqdn</span><span class=\"p\">(),</span> <span class=\"n\">port</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">port</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">exception_to_desktop</span><span class=\"p\">(</span><span class=\"n\">ex_value</span><span class=\"p\">,</span> <span class=\"n\">tb_data</span><span class=\"p\">):</span>  <span class=\"c1\"># pragma: no cover</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Writes the trace stack to AEDT when a Python error occurs.</span>\n\n<span class=\"sd\">    The message is added to the AEDT global logger and to the log file (if present).</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    ex_value : str</span>\n<span class=\"sd\">        Type of the exception.</span>\n<span class=\"sd\">    tb_data : str</span>\n<span class=\"sd\">        Traceback data.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">tb_trace</span> <span class=\"o\">=</span> <span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">format_tb</span><span class=\"p\">(</span><span class=\"n\">tb_data</span><span class=\"p\">)</span>\n    <span class=\"n\">tblist</span> <span class=\"o\">=</span> <span class=\"n\">tb_trace</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">pyaedt_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex_value</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">tblist</span><span class=\"p\">:</span>\n        <span class=\"n\">pyaedt_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_delete_objects</span><span class=\"p\">():</span>\n    <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"n\">pyaedt_logger</span><span class=\"o\">.</span><span class=\"n\">remove_all_project_file_logger</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">pyaedt_initialized</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">oAnsoftApplication</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">del</span> <span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">desktop</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"n\">gc</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">release_desktop</span><span class=\"p\">(</span><span class=\"n\">close_projects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">close_desktop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Release the AEDT API.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    close_projects : bool, optional</span>\n<span class=\"sd\">        Whether to close the AEDT projects open in the session. The default is ``True``.</span>\n<span class=\"sd\">    close_desktop : bool, optional</span>\n<span class=\"sd\">        Whether to close the active AEDT session. The default is ``True``.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    bool</span>\n<span class=\"sd\">        ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">_main</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">desktop</span> <span class=\"o\">=</span> <span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span>\n        <span class=\"k\">if</span> <span class=\"n\">close_projects</span><span class=\"p\">:</span>\n            <span class=\"n\">projects</span> <span class=\"o\">=</span> <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">GetProjectList</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">project</span> <span class=\"ow\">in</span> <span class=\"n\">projects</span><span class=\"p\">:</span>\n                <span class=\"n\">desktop</span><span class=\"o\">.</span><span class=\"n\">CloseProject</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n        <span class=\"n\">pid</span> <span class=\"o\">=</span> <span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetProcessID</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">aedt_version</span> <span class=\"o\">&gt;=</span> <span class=\"s2\">&quot;2022.2&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">_check_grpc_port</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">machine</span><span class=\"p\">):</span>\n                <span class=\"kn\">import</span> <span class=\"nn\">ScriptEnv</span>\n\n                <span class=\"k\">if</span> <span class=\"n\">close_desktop</span><span class=\"p\">:</span>\n                    <span class=\"n\">ScriptEnv</span><span class=\"o\">.</span><span class=\"n\">Shutdown</span><span class=\"p\">()</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">ScriptEnv</span><span class=\"o\">.</span><span class=\"n\">Release</span><span class=\"p\">()</span>\n            <span class=\"n\">_delete_objects</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">inside_desktop</span><span class=\"p\">:</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">scopeID</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n            <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">scopeID</span><span class=\"p\">:</span>\n                <span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span><span class=\"o\">.</span><span class=\"n\">ReleaseCOMObjectScope</span><span class=\"p\">(</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span><span class=\"o\">.</span><span class=\"n\">PInvokeProxyAPI</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">if</span> <span class=\"n\">close_desktop</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">kill</span><span class=\"p\">(</span><span class=\"n\">pid</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n                <span class=\"n\">_delete_objects</span><span class=\"p\">()</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n                <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">&quot;Something went wrong in closing AEDT.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"n\">_delete_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"n\">_delete_objects</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">force_close_desktop</span><span class=\"p\">():</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Forcibly close all AEDT projects and shut down AEDT.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    bool</span>\n<span class=\"sd\">        ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">Module</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">pid</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetProcessID</span><span class=\"p\">()</span>\n    <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">pid</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">projects</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetProjectList</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">project</span> <span class=\"ow\">in</span> <span class=\"n\">projects</span><span class=\"p\">:</span>\n                <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">CloseProject</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;No projects are open. Closing the AEDT connection.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"n\">scopeID</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n            <span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">scopeID</span><span class=\"p\">:</span>\n                <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span><span class=\"o\">.</span><span class=\"n\">ReleaseCOMObjectScope</span><span class=\"p\">(</span><span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span><span class=\"o\">.</span><span class=\"n\">PInvokeProxyAPI</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n                <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;No COM UTIL. Closing AEDT....&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">pyaedt_initialized</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">kill</span><span class=\"p\">(</span><span class=\"n\">pid</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)</span>\n            <span class=\"k\">del</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span>\n            <span class=\"n\">successfully_closed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"n\">pyaedt_logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Something went wrong in closing AEDT.&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">successfully_closed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">finally</span><span class=\"p\">:</span>\n            <span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s2\">&quot;Global&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">handlers</span> <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"p\">[:]</span>\n            <span class=\"k\">for</span> <span class=\"n\">handler</span> <span class=\"ow\">in</span> <span class=\"n\">handlers</span><span class=\"p\">:</span>\n                <span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n                <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">removeHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">successfully_closed</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">run_process</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">bufsize</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Run a process with a subprocess.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    command : str</span>\n<span class=\"sd\">        Command to execute.</span>\n<span class=\"sd\">    bufsize : int, optional</span>\n<span class=\"sd\">        Buffer size. The default is ``None``.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">bufsize</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">bufsize</span><span class=\"o\">=</span><span class=\"n\">bufsize</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_version_env_variable</span><span class=\"p\">(</span><span class=\"n\">version_id</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Get the environment variable for the AEDT version.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    version_id : str</span>\n<span class=\"sd\">        Full AEDT version number. For example, ``&quot;2021.2&quot;``.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    str</span>\n<span class=\"sd\">        Environment variable for the version.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from pyaedt import desktop</span>\n<span class=\"sd\">    &gt;&gt;&gt; desktop.get_version_env_variable(&quot;2021.2&quot;)</span>\n<span class=\"sd\">    &#39;ANSYSEM_ROOT212&#39;</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">version_env_var</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ANSYSEM_ROOT&quot;</span>\n    <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"n\">version_id</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">:])</span>\n    <span class=\"n\">release</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n    <span class=\"k\">if</span> <span class=\"n\">version</span> <span class=\"o\">&lt;</span> <span class=\"mi\">20</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">release</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n            <span class=\"n\">version</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">release</span> <span class=\"o\">+=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">version_env_var</span> <span class=\"o\">+=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">release</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">version_env_var</span>\n\n\n<div class=\"viewcode-block\" id=\"Desktop\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop/#pyaedt.desktop.Desktop\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Desktop</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides the Ansys Electronics Desktop (AEDT) interface.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    specified_version : str, optional</span>\n<span class=\"sd\">        Version of AEDT to use. The default is ``None``, in which case the</span>\n<span class=\"sd\">        active setup or latest installed version is used.</span>\n<span class=\"sd\">    non_graphical : bool, optional</span>\n<span class=\"sd\">        Whether to launch AEDT in non-graphical mode. The default</span>\n<span class=\"sd\">        is ``False``, in which case AEDT is launched in graphical mode.</span>\n<span class=\"sd\">        This parameter is ignored when a script is launched within AEDT.</span>\n<span class=\"sd\">    new_desktop_session : bool, optional</span>\n<span class=\"sd\">        Whether to launch an instance of AEDT in a new thread, even if</span>\n<span class=\"sd\">        another instance of the ``specified_version`` is active on the machine.</span>\n<span class=\"sd\">        The default is ``True``.</span>\n<span class=\"sd\">    close_on_exit : bool, optional</span>\n<span class=\"sd\">        Whether to close AEDT on exit. The default is ``True``.</span>\n<span class=\"sd\">    student_version : bool, optional</span>\n<span class=\"sd\">        Whether to open the AEDT student version. The default is</span>\n<span class=\"sd\">        ``False``.</span>\n<span class=\"sd\">    machine : str, optional</span>\n<span class=\"sd\">        Machine name to connect the oDesktop session to. This parameters works only in 2022 R2</span>\n<span class=\"sd\">        and later. The remote server must be up and running with the command</span>\n<span class=\"sd\">        `&quot;ansysedt.exe -grpcsrv portnum&quot;`. If the machine is `&quot;localhost&quot;`, the server also</span>\n<span class=\"sd\">        starts if not present.</span>\n<span class=\"sd\">    port : int, optional</span>\n<span class=\"sd\">        Port number on which to start the oDesktop communication on the already existing server.</span>\n<span class=\"sd\">        This parameter is ignored when creating a new server. It works only in 2022 R2 and</span>\n<span class=\"sd\">        later. The remote server must be up and running with the command `&quot;ansysedt.exe -grpcsrv portnum&quot;`.</span>\n<span class=\"sd\">    aedt_process_id : int, optional</span>\n<span class=\"sd\">        Process ID for the instance of AEDT to point PyAEDT at. The default is</span>\n<span class=\"sd\">        ``None``. This parameter is only used when ``new_desktop_session = False``.</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    Launch AEDT 2021 R1 in non-graphical mode and initialize HFSS.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; import pyaedt</span>\n<span class=\"sd\">    &gt;&gt;&gt; desktop = pyaedt.Desktop(&quot;2021.2&quot;, non_graphical=True)</span>\n<span class=\"sd\">    pyaedt INFO: pyaedt v...</span>\n<span class=\"sd\">    pyaedt INFO: Python version ...</span>\n<span class=\"sd\">    &gt;&gt;&gt; hfss = pyaedt.Hfss(designname=&quot;HFSSDesign1&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: Project...</span>\n<span class=\"sd\">    pyaedt INFO: Added design &#39;HFSSDesign1&#39; of type HFSS.</span>\n\n<span class=\"sd\">    Launch AEDT 2021 R1 in graphical mode and initialize HFSS.</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; desktop = Desktop(&quot;2021.2&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: pyaedt v...</span>\n<span class=\"sd\">    pyaedt INFO: Python version ...</span>\n<span class=\"sd\">    &gt;&gt;&gt; hfss = pyaedt.Hfss(designname=&quot;HFSSDesign1&quot;)</span>\n<span class=\"sd\">    pyaedt INFO: No project is defined. Project...</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">machine</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Initialize desktop.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"p\">[</span><span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">interpreter</span> <span class=\"o\">=</span> <span class=\"n\">_com</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span> <span class=\"o\">=</span> <span class=\"n\">close_on_exit</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span> <span class=\"o\">=</span> <span class=\"n\">close_on_exit</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">pyaedt_version</span> <span class=\"o\">=</span> <span class=\"n\">pyaedtversion</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">interpreter_ver</span> <span class=\"o\">=</span> <span class=\"n\">_pythonver</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">student_version</span> <span class=\"o\">=</span> <span class=\"n\">student_version</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span> <span class=\"o\">=</span> <span class=\"n\">machine</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">port</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_process_id</span> <span class=\"o\">=</span> <span class=\"n\">aedt_process_id</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logfile</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt_logger</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;using existing logger.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;oDesktop&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">():</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"o\">=</span> <span class=\"n\">oDesktop</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetIsNonGraphical</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">non_graphical</span>\n        <span class=\"k\">elif</span> <span class=\"s2\">&quot;oDesktop&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_on_exit</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetIsNonGraphical</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">non_graphical</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">non_graphical</span>\n\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;oDesktop&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"p\">):</span>\n                <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">student_version</span><span class=\"p\">,</span> <span class=\"n\">version_key</span><span class=\"p\">,</span> <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_version</span><span class=\"p\">(</span><span class=\"n\">specified_version</span><span class=\"p\">,</span> <span class=\"n\">student_version</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">version_key</span> <span class=\"o\">&lt;</span> <span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">elif</span> <span class=\"p\">(</span>\n                <span class=\"n\">version_key</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;2022.2&quot;</span>\n                <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span>\n                <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span>\n                <span class=\"ow\">and</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n                <span class=\"ow\">and</span> <span class=\"n\">_com</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;gprc_v3&quot;</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">elif</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">_com</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;gprc_v3&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"n\">_com</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ironpython&quot;</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Launching PyAEDT outside AEDT with IronPython.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_ironpython</span><span class=\"p\">(</span><span class=\"n\">non_graphical</span><span class=\"p\">,</span> <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span><span class=\"p\">:</span>\n                <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">use_grpc_api</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_cpython_new</span><span class=\"p\">(</span><span class=\"n\">non_graphical</span><span class=\"p\">,</span> <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">student_version</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">_com</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;pythonnet_v3&quot;</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Launching PyAEDT outside AEDT with CPython and PythonNET.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_cpython</span><span class=\"p\">(</span>\n                    <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n                    <span class=\"n\">new_desktop_session</span><span class=\"p\">,</span>\n                    <span class=\"n\">version</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">student_version</span><span class=\"p\">,</span>\n                    <span class=\"n\">version_key</span><span class=\"p\">,</span>\n                    <span class=\"n\">aedt_process_id</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">win32_client</span>\n\n                <span class=\"n\">oAnsoftApp</span> <span class=\"o\">=</span> <span class=\"n\">win32_client</span><span class=\"o\">.</span><span class=\"n\">Dispatch</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"o\">=</span> <span class=\"n\">oAnsoftApp</span><span class=\"o\">.</span><span class=\"n\">GetAppDesktop</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_logger_file</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_init_desktop</span><span class=\"p\">(</span><span class=\"n\">non_graphical</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;pyaedt v</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">pyaedt_version</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_api</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Python version </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span>\n        <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">aedt_version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetVersion</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n        <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">machine</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span>\n        <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">aedt_process_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetProcessID</span><span class=\"p\">()</span>  <span class=\"c1\"># bit of cleanup for consistency if used in future</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">_com</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;ironpython&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;common&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;commonfiles&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IronPython&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DLLs&quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__exit__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ex_type</span><span class=\"p\">,</span> <span class=\"n\">ex_value</span><span class=\"p\">,</span> <span class=\"n\">ex_traceback</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Write the trace stack to the log file if an exception occurred in the main script.</span>\n        <span class=\"k\">if</span> <span class=\"n\">ex_type</span><span class=\"p\">:</span>\n            <span class=\"n\">err</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_exception</span><span class=\"p\">(</span><span class=\"n\">ex_value</span><span class=\"p\">,</span> <span class=\"n\">ex_traceback</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">is_ironpython</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">(</span><span class=\"n\">close_projects</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span><span class=\"p\">,</span> <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close_on_exit</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_design_name</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the application interface object (Hfss, Icepak, Maxwell3D...) for a given project name and design name.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_design_name : list</span>\n<span class=\"sd\">            Project and design name.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        :class:Application interface</span>\n<span class=\"sd\">            Returns None if project and design name are not found.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">pyaedt</span> <span class=\"kn\">import</span> <span class=\"n\">get_pyaedt_app</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">project_design_name</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_list</span><span class=\"p\">()):</span>\n            <span class=\"n\">projectname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_list</span><span class=\"p\">()[</span><span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">project_list</span><span class=\"p\">():</span>\n            <span class=\"n\">projectname</span> <span class=\"o\">=</span> <span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">initial_oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">initial_oproject</span><span class=\"o\">.</span><span class=\"n\">GetName</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"n\">projectname</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">projectname</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">()):</span>\n            <span class=\"n\">designname</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">()[</span><span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">design_list</span><span class=\"p\">():</span>\n            <span class=\"n\">designname</span> <span class=\"o\">=</span> <span class=\"n\">project_design_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">get_pyaedt_app</span><span class=\"p\">(</span><span class=\"n\">projectname</span><span class=\"p\">,</span> <span class=\"n\">designname</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">install_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Installation path for AEDT.&quot;&quot;&quot;</span>\n        <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">AEDTVersion</span>\n        <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">version_key</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">root</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">version_keys</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Version keys for AEDT.&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">version_list</span> <span class=\"o\">=</span> <span class=\"n\">list_installed_ansysem</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">version_env_var</span> <span class=\"ow\">in</span> <span class=\"n\">version_list</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;ANSYSEMSV_ROOT&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">version_env_var</span><span class=\"p\">:</span>\n                <span class=\"n\">current_version_id</span> <span class=\"o\">=</span> <span class=\"n\">version_env_var</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;ANSYSEMSV_ROOT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">student</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">current_version_id</span> <span class=\"o\">=</span> <span class=\"n\">version_env_var</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;ANSYSEM_ROOT&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">student</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">current_version_id</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                <span class=\"n\">release</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">current_version_id</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n                <span class=\"k\">if</span> <span class=\"n\">version</span> <span class=\"o\">&lt;</span> <span class=\"mi\">20</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"n\">release</span> <span class=\"o\">&lt;</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n                        <span class=\"n\">version</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">release</span> <span class=\"o\">-=</span> <span class=\"mi\">2</span>\n                <span class=\"k\">if</span> <span class=\"n\">student</span><span class=\"p\">:</span>\n                    <span class=\"n\">v_key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;20</span><span class=\"si\">{0}</span><span class=\"s2\">.</span><span class=\"si\">{1}</span><span class=\"s2\">SV&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">release</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v_key</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">v_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">version_env_var</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">v_key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;20</span><span class=\"si\">{0}</span><span class=\"s2\">.</span><span class=\"si\">{1}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">release</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v_key</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">v_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">version_env_var</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_keys</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">current_version</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Current AEDT version.&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">version_keys</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"p\">(</span><span class=\"ne\">NameError</span><span class=\"p\">,</span> <span class=\"ne\">IndexError</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">current_version_student</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Current student AEDT version.&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">version_key</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">version_keys</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;SV&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">version_key</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">version_key</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">AEDTVersion</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetVersion</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">RestoreWindow</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetExeDir</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">pyaedt_initialized</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">enable_desktop_logs</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetIsNonGraphical</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">enable_desktop_logs</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"n\">non_graphical</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_version</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">specified_version</span><span class=\"p\">,</span> <span class=\"n\">student_version</span><span class=\"p\">):</span>\n        <span class=\"n\">student_version_flag</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">specified_version</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">specified_version</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2021</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">specified_version</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2019</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;PyAEDT supports AEDT version 2021 R1 and later.&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n<span class=\"w\">                        </span><span class=\"sd\">&quot;&quot;&quot;PyAEDT has limited capabilities when used with an AEDT version earlier than 2021 R1.</span>\n<span class=\"sd\">                        PyAEDT officially supports AEDT version 2021 R1 and later.&quot;&quot;&quot;</span>\n                    <span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">student_version</span><span class=\"p\">:</span>\n                <span class=\"n\">specified_version</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;SV&quot;</span>\n                <span class=\"n\">student_version_flag</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">assert</span> <span class=\"n\">specified_version</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">version_keys</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Specified version </span><span class=\"si\">{}</span><span class=\"s2\"> is not known&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">specified_version</span><span class=\"p\">)</span>\n            <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"n\">specified_version</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">student_version</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_version_student</span><span class=\"p\">:</span>\n                <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_version_student</span>\n                <span class=\"n\">student_version_flag</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">version_key</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_version</span>\n                <span class=\"n\">student_version_flag</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"n\">student_version</span> <span class=\"ow\">and</span> <span class=\"n\">student_version_flag</span><span class=\"p\">:</span>\n            <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Ansoft.ElectronicsDesktop.&quot;</span> <span class=\"o\">+</span> <span class=\"n\">version_key</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Ansoft.ElectronicsDesktop.&quot;</span> <span class=\"o\">+</span> <span class=\"n\">version_key</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_version_ids</span><span class=\"p\">[</span><span class=\"n\">version_key</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">student_version_flag</span><span class=\"p\">,</span> <span class=\"n\">version_key</span><span class=\"p\">,</span> <span class=\"n\">version</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_ironpython</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"p\">,</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">_clr</span>\n\n        <span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PythonFiles&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DesktopPlugin&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">AddReference</span><span class=\"p\">(</span><span class=\"s2\">&quot;Ansys.Ansoft.CoreCOMScripting&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">AnsoftCOMUtil</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s2\">&quot;Ansys.Ansoft.CoreCOMScripting&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span> <span class=\"o\">=</span> <span class=\"n\">AnsoftCOMUtil</span><span class=\"o\">.</span><span class=\"n\">Ansoft</span><span class=\"o\">.</span><span class=\"n\">CoreCOMScripting</span><span class=\"o\">.</span><span class=\"n\">Util</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span>\n        <span class=\"n\">StandalonePyScriptWrapper</span> <span class=\"o\">=</span> <span class=\"n\">AnsoftCOMUtil</span><span class=\"o\">.</span><span class=\"n\">Ansoft</span><span class=\"o\">.</span><span class=\"n\">CoreCOMScripting</span><span class=\"o\">.</span><span class=\"n\">COM</span><span class=\"o\">.</span><span class=\"n\">StandalonePyScriptWrapper</span>\n        <span class=\"k\">if</span> <span class=\"n\">non_graphical</span> <span class=\"ow\">or</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">:</span>\n            <span class=\"c1\"># forcing new thread to start in non-graphical</span>\n            <span class=\"n\">oAnsoftApp</span> <span class=\"o\">=</span> <span class=\"n\">StandalonePyScriptWrapper</span><span class=\"o\">.</span><span class=\"n\">CreateObjectNew</span><span class=\"p\">(</span><span class=\"n\">non_graphical</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oAnsoftApp</span> <span class=\"o\">=</span> <span class=\"n\">StandalonePyScriptWrapper</span><span class=\"o\">.</span><span class=\"n\">CreateObject</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"o\">=</span> <span class=\"n\">oAnsoftApp</span><span class=\"o\">.</span><span class=\"n\">GetAppDesktop</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;common&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;commonfiles&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;IronPython&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DLLs&quot;</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_run_student</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">DETACHED_PROCESS</span> <span class=\"o\">=</span> <span class=\"mh\">0x00000008</span>\n        <span class=\"n\">pid</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">Popen</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ansysedtsv.exe&quot;</span><span class=\"p\">)],</span> <span class=\"n\">creationflags</span><span class=\"o\">=</span><span class=\"n\">DETACHED_PROCESS</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pid</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_dispatch_win32</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">win32_client</span>\n\n        <span class=\"n\">o_ansoft_app</span> <span class=\"o\">=</span> <span class=\"n\">win32_client</span><span class=\"o\">.</span><span class=\"n\">Dispatch</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"o\">=</span> <span class=\"n\">o_ansoft_app</span><span class=\"o\">.</span><span class=\"n\">GetAppDesktop</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_cpython</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n        <span class=\"n\">new_aedt_session</span><span class=\"p\">,</span>\n        <span class=\"n\">version</span><span class=\"p\">,</span>\n        <span class=\"n\">student_version</span><span class=\"p\">,</span>\n        <span class=\"n\">version_key</span><span class=\"p\">,</span>\n        <span class=\"n\">aedt_process_id</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">pythoncom</span>\n\n        <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">_clr</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;posix&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;PyAEDT supports COM initialization in Windows only. To use in Linux, upgrade to AEDT 2022 R2 or later.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PythonFiles&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DesktopPlugin&quot;</span><span class=\"p\">))</span>\n        <span class=\"n\">launch_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;AEDT installation Path </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">launch_msg</span><span class=\"p\">)</span>\n        <span class=\"n\">_clr</span><span class=\"o\">.</span><span class=\"n\">AddReference</span><span class=\"p\">(</span><span class=\"s2\">&quot;Ansys.Ansoft.CoreCOMScripting&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">AnsoftCOMUtil</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s2\">&quot;Ansys.Ansoft.CoreCOMScripting&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span> <span class=\"o\">=</span> <span class=\"n\">AnsoftCOMUtil</span><span class=\"o\">.</span><span class=\"n\">Ansoft</span><span class=\"o\">.</span><span class=\"n\">CoreCOMScripting</span><span class=\"o\">.</span><span class=\"n\">Util</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">COMUtil</span>\n        <span class=\"n\">StandalonePyScriptWrapper</span> <span class=\"o\">=</span> <span class=\"n\">AnsoftCOMUtil</span><span class=\"o\">.</span><span class=\"n\">Ansoft</span><span class=\"o\">.</span><span class=\"n\">CoreCOMScripting</span><span class=\"o\">.</span><span class=\"n\">COM</span><span class=\"o\">.</span><span class=\"n\">StandalonePyScriptWrapper</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Launching AEDT with module PythonNET.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">processID</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">IsWindows</span><span class=\"p\">:</span>\n            <span class=\"n\">processID</span> <span class=\"o\">=</span> <span class=\"n\">com_active_sessions</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">student_version</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">student_version</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">processID</span><span class=\"p\">:</span>  <span class=\"c1\"># Opens an instance if processID is an empty list</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_run_student</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"n\">non_graphical</span> <span class=\"ow\">or</span> <span class=\"n\">new_aedt_session</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">processID</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Force new object if no non-graphical instance is running or if there is not an already existing process.</span>\n            <span class=\"n\">StandalonePyScriptWrapper</span><span class=\"o\">.</span><span class=\"n\">CreateObjectNew</span><span class=\"p\">(</span><span class=\"n\">non_graphical</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">StandalonePyScriptWrapper</span><span class=\"o\">.</span><span class=\"n\">CreateObject</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n        <span class=\"n\">processID2</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">IsWindows</span><span class=\"p\">:</span>\n            <span class=\"n\">processID2</span> <span class=\"o\">=</span> <span class=\"n\">com_active_sessions</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">student_version</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"p\">)</span>\n        <span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">processID2</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">processID</span><span class=\"p\">]</span>  <span class=\"c1\"># Looking for the &quot;new&quot; process</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"ow\">not</span> <span class=\"n\">proc</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"ow\">not</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">aedt_process_id</span>\n        <span class=\"p\">):</span>  <span class=\"c1\"># if it isn&#39;t a new aedt session and a process ID is given</span>\n            <span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">aedt_process_id</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"ow\">not</span> <span class=\"n\">proc</span><span class=\"p\">:</span>\n            <span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"n\">processID2</span>\n        <span class=\"k\">if</span> <span class=\"n\">proc</span> <span class=\"o\">==</span> <span class=\"n\">processID2</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">processID2</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dispatch_win32</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">version_key</span> <span class=\"o\">&gt;=</span> <span class=\"s2\">&quot;2021.2&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">student_version</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\"> Student version started with process ID </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">proc</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\"> Started with process ID </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">proc</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n            <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">pythoncom</span><span class=\"o\">.</span><span class=\"n\">CreateBindCtx</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n            <span class=\"n\">running_coms</span> <span class=\"o\">=</span> <span class=\"n\">pythoncom</span><span class=\"o\">.</span><span class=\"n\">GetRunningObjectTable</span><span class=\"p\">()</span>\n            <span class=\"n\">monikiers</span> <span class=\"o\">=</span> <span class=\"n\">running_coms</span><span class=\"o\">.</span><span class=\"n\">EnumRunning</span><span class=\"p\">()</span>\n            <span class=\"k\">for</span> <span class=\"n\">monikier</span> <span class=\"ow\">in</span> <span class=\"n\">monikiers</span><span class=\"p\">:</span>\n                <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">:]</span> <span class=\"o\">+</span> <span class=\"sa\">r</span><span class=\"s2\">&quot;\\.\\d:&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">proc</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"n\">monikier</span><span class=\"o\">.</span><span class=\"n\">GetDisplayName</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">monikier</span><span class=\"p\">))</span>\n                <span class=\"k\">if</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n                    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">running_coms</span><span class=\"o\">.</span><span class=\"n\">GetObject</span><span class=\"p\">(</span><span class=\"n\">monikier</span><span class=\"p\">)</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n                    <span class=\"kn\">from</span> <span class=\"nn\">pyaedt.generic.clr_module</span> <span class=\"kn\">import</span> <span class=\"n\">win32_client</span>\n\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"o\">=</span> <span class=\"n\">win32_client</span><span class=\"o\">.</span><span class=\"n\">Dispatch</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">QueryInterface</span><span class=\"p\">(</span><span class=\"n\">pythoncom</span><span class=\"o\">.</span><span class=\"n\">IID_IDispatch</span><span class=\"p\">))</span>\n                    <span class=\"k\">break</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;PyAEDT is not supported in AEDT versions earlier than 2021 R2. Trying to launch PyAEDT with PyWin32.&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dispatch_win32</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_init_cpython_new</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"p\">,</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">student_version</span><span class=\"p\">):</span>\n        <span class=\"n\">base_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">sDesktopinstallDirectory</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">)</span>\n        <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;PythonFiles&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;DesktopPlugin&quot;</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;posix&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;LD_LIBRARY_PATH&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;LD_LIBRARY_PATH&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;defer&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">pathsep</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;LD_LIBRARY_PATH&quot;</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;LD_LIBRARY_PATH&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;defer&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">pyaedt_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span> <span class=\"s2\">&quot;..&quot;</span><span class=\"p\">))</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;PATH&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt_path</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">pathsep</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;PATH&quot;</span><span class=\"p\">]</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">ScriptEnv</span>\n\n        <span class=\"n\">launch_msg</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;AEDT installation Path </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">base_path</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">launch_msg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Launching AEDT with the gRPC plugin.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n            <span class=\"s2\">&quot;localhost&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;127.0.0.1&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">getfqdn</span><span class=\"p\">(),</span>\n            <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">getfqdn</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">],</span>\n        <span class=\"p\">]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_api</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;New Session of AEDT cannot be started on remote machine from Desktop Class.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Either use port argument or start an rpc session to start AEDT on remote machine.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Use client = pyaedt.common_rpc.client(machinename) to start a remote session.&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Use client.aedt(port) to start aedt on remote machine before connecting.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">_find_free_port</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;New AEDT session is starting on gRPC port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">sessions</span> <span class=\"o\">=</span> <span class=\"n\">grpc_active_sessions</span><span class=\"p\">(</span>\n                    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">student_version</span><span class=\"o\">=</span><span class=\"n\">student_version</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">non_graphical</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">sessions</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">sessions</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sessions</span><span class=\"p\">):</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Found active gRPC session on port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                            <span class=\"s2\">&quot;Multiple AEDT gRPC sessions are found. Setting the active session on port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span>\n                        <span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">_find_free_port</span><span class=\"p\">()</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;New AEDT session is starting on gRPC port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">new_aedt_session</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">_check_grpc_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;New AEDT session is starting on gRPC port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;New Session of AEDT cannot be started on specified port because occupied.&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">_find_free_port</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;New AEDT session is starting on gRPC port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">_check_grpc_port</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Connecting to AEDT session on gRPC port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;AEDT session is starting on gRPC port </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n            <span class=\"n\">new_aedt_session</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"n\">ScriptEnv</span><span class=\"o\">.</span><span class=\"n\">_doInitialize</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">,</span> <span class=\"n\">non_graphical</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">machine</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;oAnsoftApplication&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">isoutsideDesktop</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oAnsoftApplication</span><span class=\"o\">.</span><span class=\"n\">GetAppDesktop</span><span class=\"p\">()</span>\n            <span class=\"n\">_proc</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetProcessID</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">new_aedt_session</span><span class=\"p\">:</span>\n                <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\"> version started with process ID </span><span class=\"si\">{}</span><span class=\"s2\">.&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Student&quot;</span> <span class=\"k\">if</span> <span class=\"n\">student_version</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">_proc</span>\n                <span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;The gRPC plugin is not supported in AEDT versions earlier than 2022 R2.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_logger_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Set up the log file in the AEDT project directory</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">remote_api</span><span class=\"p\">:</span>\n            <span class=\"n\">project_dir</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">gettempdir</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"s2\">&quot;oDesktop&quot;</span> <span class=\"ow\">in</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"p\">):</span>\n            <span class=\"n\">project_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">GetProjectDirectory</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">project_dir</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">gettempdir</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">logger_file_path</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logfile</span> <span class=\"o\">=</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">logger_file_path</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logfile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                <span class=\"n\">project_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pyaedt</span><span class=\"si\">{}</span><span class=\"s2\">.log&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">&quot;%Y%m</span><span class=\"si\">%d</span><span class=\"s2\">_%H%M%S&quot;</span><span class=\"p\">))</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">messenger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Messenger manager for the AEDT logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">pyaedt_logger</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">logger</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;AEDT logger.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_logger</span>\n\n<div class=\"viewcode-block\" id=\"Desktop.project_list\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.project_list/#pyaedt.desktop.Desktop.project_list\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get a list of projects.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of projects.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetProjectList</span><span class=\"p\">())</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.analyze_all\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.analyze_all/#pyaedt.desktop.Desktop.analyze_all\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">analyze_all</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Analyze all setups in a project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project : str, optional</span>\n<span class=\"sd\">            Project name. The default is ``None``, in which case the active project</span>\n<span class=\"sd\">            is used.</span>\n<span class=\"sd\">        design : str, optional</span>\n<span class=\"sd\">            Design name. The default is ``None``, in which case all designs in</span>\n<span class=\"sd\">            the project are analyzed.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">oproject</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">design</span><span class=\"p\">:</span>\n                <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">AnalyzeAll</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">design</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">odesign</span><span class=\"p\">:</span>\n                    <span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">AnalyzeAll</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.clear_messages\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.clear_messages/#pyaedt.desktop.Desktop.clear_messages\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">clear_messages</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Clear all AEDT messages.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">ClearMessages</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.save_project\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.save_project/#pyaedt.desktop.Desktop.save_project\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_project</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">project_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Save the project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_name : str, optional</span>\n<span class=\"sd\">            Project name. The default is ``None``, in which case the active project</span>\n<span class=\"sd\">            is used.</span>\n<span class=\"sd\">        project_path : str, optional</span>\n<span class=\"sd\">            Full path to the project. The default is ``None``. If a path is</span>\n<span class=\"sd\">            provided, ``save as`` is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project_name</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">project_path</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SaveAs</span><span class=\"p\">(</span><span class=\"n\">project_path</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Save</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.copy_design\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.copy_design/#pyaedt.desktop.Desktop.copy_design\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">copy_design</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">target_project</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Copy a design and paste it in an existing project or new project.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.6.31</span>\n<span class=\"sd\">           Use :func:`copy_design_from` instead.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_name : str, optional</span>\n<span class=\"sd\">            Project name. The default is ``None``, in which case the active project</span>\n<span class=\"sd\">            is used.</span>\n<span class=\"sd\">        design_name : str, optional</span>\n<span class=\"sd\">            Design name. The default is ``None``.</span>\n<span class=\"sd\">        target_project : str, optional</span>\n<span class=\"sd\">            Target project. The default is ``None``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project_name</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">oproject</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: no cover</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">design_name</span><span class=\"p\">:</span>\n                <span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetActiveDesign</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">odesign</span><span class=\"p\">:</span>\n                <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">CopyDesign</span><span class=\"p\">(</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">target_project</span><span class=\"p\">:</span>\n                    <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">oproject_target</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">target_project</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">oproject_target</span><span class=\"p\">:</span>\n                        <span class=\"n\">oproject_target</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">NewProject</span><span class=\"p\">(</span><span class=\"n\">target_project</span><span class=\"p\">)</span>\n                        <span class=\"n\">oproject_target</span><span class=\"o\">.</span><span class=\"n\">Paste</span><span class=\"p\">()</span>\n                        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.project_path\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.project_path/#pyaedt.desktop.Desktop.project_path\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">project_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the path to the project.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_name : str, optional</span>\n<span class=\"sd\">            Project name. The default is ``None``, in which case the active</span>\n<span class=\"sd\">            project is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Path to the project.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project_name</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">oproject</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetPath</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.design_list\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.design_list/#pyaedt.desktop.Desktop.design_list\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get a list of the designs.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project : str, optional</span>\n<span class=\"sd\">            Project name. The default is ``None``, in which case the active</span>\n<span class=\"sd\">            project is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        list</span>\n<span class=\"sd\">            List of the designs.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">updateddeslist</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">oproject</span><span class=\"p\">:</span>\n            <span class=\"n\">deslist</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetTopDesignList</span><span class=\"p\">())</span>\n            <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">deslist</span><span class=\"p\">:</span>\n                <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;[^;]+$&quot;</span><span class=\"p\">,</span> <span class=\"n\">el</span><span class=\"p\">)</span>\n                <span class=\"n\">updateddeslist</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">updateddeslist</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.design_type\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.design_type/#pyaedt.desktop.Desktop.design_type\">[docs]</a>    <span class=\"nd\">@pyaedt_function_handler</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">design_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">project_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">design_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Get the type of a design.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        project_name : str, optional</span>\n<span class=\"sd\">            Project name. The default is ``None``, in which case the active</span>\n<span class=\"sd\">            project is used.</span>\n<span class=\"sd\">        design_name : str, optional</span>\n<span class=\"sd\">            Design name. The default is ``None``, in which case the active</span>\n<span class=\"sd\">            design is used.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Design type.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">project_name</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetActiveProject</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">oproject</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">SetActiveProject</span><span class=\"p\">(</span><span class=\"n\">project_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">oproject</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">design_name</span><span class=\"p\">:</span>\n            <span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">GetActiveDesign</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">odesign</span> <span class=\"o\">=</span> <span class=\"n\">oproject</span><span class=\"o\">.</span><span class=\"n\">SetActiveDesign</span><span class=\"p\">(</span><span class=\"n\">design_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">odesign</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">odesign</span><span class=\"o\">.</span><span class=\"n\">GetDesignType</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">personallib</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;PersonalLib directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``PersonalLib`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetPersonalLibDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">userlib</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;UserLib directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``UserLib`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetUserLibDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">syslib</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;SysLib directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``SysLib`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetLibraryDirectory</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">aedt_version_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;AEDT version.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Version of AEDT.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span><span class=\"o\">.</span><span class=\"n\">GetVersion</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;.&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">version</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">version</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]])</span>\n        <span class=\"k\">return</span> <span class=\"n\">v</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">src_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Python source directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Full absolute path for the ``python`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pyaedt_dir</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;PyAEDT directory.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">           Full absolute path for the ``pyaedt`` directory.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">realpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">src_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;..&quot;</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_exception</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ex_value</span><span class=\"p\">,</span> <span class=\"n\">tb_data</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Write the trace stack to AEDT when a Python error occurs.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        ex_value : str</span>\n<span class=\"sd\">            Type of the exception.</span>\n<span class=\"sd\">        tb_data : str</span>\n<span class=\"sd\">            Traceback data.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        str</span>\n<span class=\"sd\">            Type of the exception.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">tb_trace</span> <span class=\"o\">=</span> <span class=\"n\">traceback</span><span class=\"o\">.</span><span class=\"n\">format_tb</span><span class=\"p\">(</span><span class=\"n\">tb_data</span><span class=\"p\">)</span>\n        <span class=\"n\">tblist</span> <span class=\"o\">=</span> <span class=\"n\">tb_trace</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex_value</span><span class=\"p\">))</span>\n        <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">tblist</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">el</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex_value</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Desktop.release_desktop\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.release_desktop/#pyaedt.desktop.Desktop.release_desktop\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">release_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">close_projects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Release AEDT.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        close_projects : bool, optional</span>\n<span class=\"sd\">            Whether to close the AEDT projects that are open in the session.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n<span class=\"sd\">        close_on_exit : bool, optional</span>\n<span class=\"sd\">            Whether to close the active AEDT session on exiting AEDT.</span>\n<span class=\"sd\">            The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; import pyaedt</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop = pyaedt.Desktop(&quot;2021.2&quot;)</span>\n<span class=\"sd\">        pyaedt INFO: pyaedt v...</span>\n<span class=\"sd\">        pyaedt INFO: Python version ...</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop.release_desktop(close_projects=False, close_on_exit=False) # doctest: +SKIP</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">release_desktop</span><span class=\"p\">(</span><span class=\"n\">close_projects</span><span class=\"p\">,</span> <span class=\"n\">close_on_exit</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">odesktop</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.force_close_desktop\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.force_close_desktop/#pyaedt.desktop.Desktop.force_close_desktop\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">force_close_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Forcibly close all projects and shut down AEDT.</span>\n\n<span class=\"sd\">        .. deprecated:: 0.4.0</span>\n<span class=\"sd\">           Use :func:`desktop.close_desktop` instead.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;`force_close_desktop` is deprecated. Use `close_desktop` instead.&quot;</span><span class=\"p\">,</span>\n            <span class=\"ne\">DeprecationWarning</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">force_close_desktop</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.close_desktop\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.close_desktop/#pyaedt.desktop.Desktop.close_desktop\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">close_desktop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Close all projects and shut down AEDT.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; import pyaedt</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop = pyaedt.Desktop(&quot;2021.2&quot;)</span>\n<span class=\"sd\">        pyaedt INFO: pyaedt v...</span>\n<span class=\"sd\">        pyaedt INFO: Python version ...</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop.close_desktop() # doctest: +SKIP</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">release_desktop</span><span class=\"p\">(</span><span class=\"n\">close_projects</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">close_on_exit</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.enable_autosave\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.enable_autosave/#pyaedt.desktop.Desktop.enable_autosave\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">enable_autosave</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Enable the autosave option.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; import pyaedt</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop = pyaedt.Desktop(&quot;2021.2&quot;)</span>\n<span class=\"sd\">        pyaedt INFO: pyaedt v...</span>\n<span class=\"sd\">        pyaedt INFO: Python version ...</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop.enable_autosave()</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">EnableAutoSave</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.disable_autosave\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.disable_autosave/#pyaedt.desktop.Desktop.disable_autosave\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">disable_autosave</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Disable the autosave option.</span>\n\n<span class=\"sd\">        Examples</span>\n<span class=\"sd\">        --------</span>\n<span class=\"sd\">        &gt;&gt;&gt; import pyaedt</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop = pyaedt.Desktop(&quot;2021.2&quot;)</span>\n<span class=\"sd\">        pyaedt INFO: pyaedt v...</span>\n<span class=\"sd\">        pyaedt INFO: Python version ...</span>\n<span class=\"sd\">        &gt;&gt;&gt; desktop.disable_autosave()</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">EnableAutoSave</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.change_license_type\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.change_license_type/#pyaedt.desktop.Desktop.change_license_type\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">change_license_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">license_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;Pool&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Change the license type.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        license_type : str, optional</span>\n<span class=\"sd\">            Type of the license. The options are ``&quot;Pack&quot;`` and ``&quot;Pool&quot;``.</span>\n<span class=\"sd\">            The default is ``&quot;Pool&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">           ``True``.</span>\n\n<span class=\"sd\">            .. note::</span>\n<span class=\"sd\">               Because of an API limitation, this method returns ``True`` even when the key is wrong.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryString</span><span class=\"p\">(</span><span class=\"s2\">&quot;Desktop/Settings/ProjectOptions/HPCLicenseType&quot;</span><span class=\"p\">,</span> <span class=\"n\">license_type</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.change_registry_key\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.change_registry_key/#pyaedt.desktop.Desktop.change_registry_key\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">change_registry_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Change an AEDT registry key to a new value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        key_full_name : str</span>\n<span class=\"sd\">            Full name of the AEDT registry key.</span>\n<span class=\"sd\">        key_value : str, int</span>\n<span class=\"sd\">            Value for the AEDT registry key.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryString</span><span class=\"p\">(</span><span class=\"n\">key_full_name</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key </span><span class=\"si\">%s</span><span class=\"s2\"> correctly changed.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error setting up Key </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">key_value</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryInt</span><span class=\"p\">(</span><span class=\"n\">key_full_name</span><span class=\"p\">,</span> <span class=\"n\">key_value</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key </span><span class=\"si\">%s</span><span class=\"s2\"> correctly changed.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">True</span>\n            <span class=\"k\">except</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error setting up Key </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">key_full_name</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Key value must be an integer or string.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.change_active_dso_config_name\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.change_active_dso_config_name/#pyaedt.desktop.Desktop.change_active_dso_config_name\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">change_active_dso_config_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">product_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;HFSS&quot;</span><span class=\"p\">,</span> <span class=\"n\">config_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Local&quot;</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Change a specific registry key to a new value.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        product_name : str, optional</span>\n<span class=\"sd\">            Name of the tool to apply the active configuration to. The default is</span>\n<span class=\"sd\">            ``&quot;HFSS&quot;``.</span>\n<span class=\"sd\">        config_name : str, optional</span>\n<span class=\"sd\">            Name of the configuration to apply. The default is ``&quot;Local&quot;``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_registry_key</span><span class=\"p\">(</span><span class=\"s2\">&quot;Desktop/ActiveDSOConfigurations/</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">product_name</span><span class=\"p\">),</span> <span class=\"n\">config_name</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;Configuration Changed correctly to </span><span class=\"si\">%s</span><span class=\"s2\"> for </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">config_name</span><span class=\"p\">,</span> <span class=\"n\">product_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;Error Setting Up Configuration </span><span class=\"si\">%s</span><span class=\"s2\"> for </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span><span class=\"p\">,</span> <span class=\"n\">config_name</span><span class=\"p\">,</span> <span class=\"n\">product_name</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n<div class=\"viewcode-block\" id=\"Desktop.change_registry_from_file\"><a class=\"viewcode-back\" href=\"../../../API/_autosummary/pyaedt.desktop.Desktop.change_registry_from_file/#pyaedt.desktop.Desktop.change_registry_from_file\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">change_registry_from_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">registry_file</span><span class=\"p\">,</span> <span class=\"n\">make_active</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Apply desktop registry settings from an ACF file.</span>\n\n<span class=\"sd\">        One way to get an ACF file is to export a configuration from the AEDT UI and then edit and reuse it.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        registry_file : str</span>\n<span class=\"sd\">            Full path to the ACF file.</span>\n<span class=\"sd\">        make_active : bool, optional</span>\n<span class=\"sd\">            Whether to set the imported configuration as active. The default is ``True``.</span>\n\n<span class=\"sd\">        Returns</span>\n<span class=\"sd\">        -------</span>\n<span class=\"sd\">        bool</span>\n<span class=\"sd\">            ``True`` when successful, ``False`` when failed.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_main</span><span class=\"o\">.</span><span class=\"n\">oDesktop</span><span class=\"o\">.</span><span class=\"n\">SetRegistryFromFile</span><span class=\"p\">(</span><span class=\"n\">registry_file</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">make_active</span><span class=\"p\">:</span>\n                <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">registry_file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;r&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                        <span class=\"n\">stripped_line</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n                        <span class=\"k\">if</span> <span class=\"s2\">&quot;ConfigName&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">stripped_line</span><span class=\"p\">:</span>\n                            <span class=\"n\">config_name</span> <span class=\"o\">=</span> <span class=\"n\">stripped_line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span>\n                        <span class=\"k\">elif</span> <span class=\"s2\">&quot;DesignType&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">stripped_line</span><span class=\"p\">:</span>\n                            <span class=\"n\">design_type</span> <span class=\"o\">=</span> <span class=\"n\">stripped_line</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;=&quot;</span><span class=\"p\">)</span>\n                            <span class=\"k\">break</span>\n                    <span class=\"k\">if</span> <span class=\"n\">design_type</span> <span class=\"ow\">and</span> <span class=\"n\">config_name</span><span class=\"p\">:</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">change_registry_key</span><span class=\"p\">(</span><span class=\"n\">design_type</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">config_name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span></div></div>\n</pre></div>", "current_page_name": "_modules/pyaedt/desktop", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "theme_show_toc_level": 1, "theme_logo": {}}