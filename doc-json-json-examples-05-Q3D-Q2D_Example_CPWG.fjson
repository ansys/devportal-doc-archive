{"parents": [{"link": "../../", "title": "Examples"}, {"link": "../", "title": "2D Extractor and Q3D Extractor examples"}], "prev": {"link": "../", "title": "2D Extractor and Q3D Extractor examples"}, "next": {"link": "../Q2D_Example_Stripline/", "title": "2D Extractor: stripline analysis"}, "title": "2D Extractor: CPWG analysis", "meta": null, "body": "<div class=\"sphx-glr-download-link-note admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Click <a class=\"reference internal\" href=\"#sphx-glr-download-examples-05-q3d-q2d-example-cpwg-py\"><span class=\"std std-ref\">here</span></a>\nto download the full example code</p>\n</div>\n<section class=\"sphx-glr-example-title\" id=\"d-extractor-cpwg-analysis\">\n<span id=\"sphx-glr-examples-05-q3d-q2d-example-cpwg-py\"></span><h1>2D Extractor: CPWG analysis<a class=\"headerlink\" href=\"#d-extractor-cpwg-analysis\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example shows how you can use PyAEDT to create a CPWG (coplanar waveguide with ground) design\nin 2D Extractor and run a simulation.</p>\n<section id=\"perform-required-imports\">\n<h2>Perform required imports<a class=\"headerlink\" href=\"#perform-required-imports\" title=\"Permalink to this heading\">#</a></h2>\n<p>Perform required imports.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyaedt</span>\n</pre></div>\n</div>\n</section>\n<section id=\"set-non-graphical-mode\">\n<h2>Set non-graphical mode<a class=\"headerlink\" href=\"#set-non-graphical-mode\" title=\"Permalink to this heading\">#</a></h2>\n<p>Set non-graphical mode. <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span></code> is needed to generate\ndocumentation only.\nYou can set <code class=\"docutils literal notranslate\"><span class=\"pre\">non_graphical</span></code> either to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">non_graphical</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">&quot;PYAEDT_NON_GRAPHICAL&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;False&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;true&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;t&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"launch-aedt-and-2d-extractor\">\n<h2>Launch AEDT and 2D Extractor<a class=\"headerlink\" href=\"#launch-aedt-and-2d-extractor\" title=\"Permalink to this heading\">#</a></h2>\n<p>Launch AEDT 2022 R2 in graphical mode and launch 2D Extractor. This example\nuses SI units.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">Q2d</span><span class=\"p\">(</span><span class=\"n\">specified_version</span><span class=\"o\">=</span><span class=\"s2\">&quot;2022.2&quot;</span><span class=\"p\">,</span>\n               <span class=\"n\">non_graphical</span><span class=\"o\">=</span><span class=\"n\">non_graphical</span><span class=\"p\">,</span>\n               <span class=\"n\">new_desktop_session</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n               <span class=\"n\">projectname</span><span class=\"o\">=</span><span class=\"n\">pyaedt</span><span class=\"o\">.</span><span class=\"n\">generate_unique_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;pyaedt_q2d_example&quot;</span><span class=\"p\">),</span>\n               <span class=\"n\">designname</span><span class=\"o\">=</span><span class=\"s2\">&quot;coplanar_waveguide&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"define-variables\">\n<h2>Define variables<a class=\"headerlink\" href=\"#define-variables\" title=\"Permalink to this heading\">#</a></h2>\n<p>Define variables.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">e_factor</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;e_factor&quot;</span>\n<span class=\"n\">sig_bot_w</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sig_bot_w&quot;</span>\n<span class=\"n\">co_gnd_w</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;gnd_w&quot;</span>\n<span class=\"n\">clearance</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;clearance&quot;</span>\n<span class=\"n\">cond_h</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cond_h&quot;</span>\n<span class=\"n\">d_h</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;d_h&quot;</span>\n<span class=\"n\">sm_h</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sm_h&quot;</span>\n\n<span class=\"k\">for</span> <span class=\"n\">var_name</span><span class=\"p\">,</span> <span class=\"n\">var_value</span> <span class=\"ow\">in</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;sig_bot_w&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;150um&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;e_factor&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;gnd_w&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;500um&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;clearance&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;150um&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;cond_h&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;50um&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;d_h&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;150um&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;sm_h&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;20um&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">q</span><span class=\"p\">[</span><span class=\"n\">var_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">var_value</span>\n\n<span class=\"n\">delta_w_half</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(</span><span class=\"si\">{0}</span><span class=\"s2\">/</span><span class=\"si\">{1}</span><span class=\"s2\">)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">cond_h</span><span class=\"p\">,</span> <span class=\"n\">e_factor</span><span class=\"p\">)</span>\n<span class=\"n\">sig_top_w</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(</span><span class=\"si\">{1}</span><span class=\"s2\">-</span><span class=\"si\">{0}</span><span class=\"s2\">*2)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">delta_w_half</span><span class=\"p\">,</span> <span class=\"n\">sig_bot_w</span><span class=\"p\">)</span>\n<span class=\"n\">co_gnd_top_w</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(</span><span class=\"si\">{1}</span><span class=\"s2\">-</span><span class=\"si\">{0}</span><span class=\"s2\">*2)&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">delta_w_half</span><span class=\"p\">,</span> <span class=\"n\">co_gnd_w</span><span class=\"p\">)</span>\n<span class=\"n\">model_w</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">*2+</span><span class=\"si\">{}</span><span class=\"s2\">*2+</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">clearance</span><span class=\"p\">,</span> <span class=\"n\">sig_bot_w</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-primitives\">\n<h2>Create primitives<a class=\"headerlink\" href=\"#create-primitives\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create primitives and define the layer heights.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">layer_1_lh</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">layer_1_uh</span> <span class=\"o\">=</span> <span class=\"n\">cond_h</span>\n<span class=\"n\">layer_2_lh</span> <span class=\"o\">=</span> <span class=\"n\">layer_1_uh</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"n\">d_h</span>\n<span class=\"n\">layer_2_uh</span> <span class=\"o\">=</span> <span class=\"n\">layer_2_lh</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"n\">cond_h</span>\n</pre></div>\n</div>\n</section>\n<section id=\"create-signal\">\n<h2>Create signal<a class=\"headerlink\" href=\"#create-signal\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a signal.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base_line_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">sig_bot_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">top_line_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_2_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">sig_top_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">objid</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">top_line_obj</span><span class=\"p\">],</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">delta_w_half</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">([</span><span class=\"n\">base_line_obj</span><span class=\"p\">,</span> <span class=\"n\">top_line_obj</span><span class=\"p\">])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">objid</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">base_line_obj</span><span class=\"p\">],</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">+</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">clearance</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-coplanar-ground\">\n<h2>Create coplanar ground<a class=\"headerlink\" href=\"#create-coplanar-ground\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a coplanar ground.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">base_line_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]],</span>\n                                          <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;co_gnd_left&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">top_line_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_2_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">co_gnd_top_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">objid</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">top_line_obj</span><span class=\"p\">],</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">delta_w_half</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">([</span><span class=\"n\">base_line_obj</span><span class=\"p\">,</span> <span class=\"n\">top_line_obj</span><span class=\"p\">])</span>\n\n<span class=\"n\">base_line_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]],</span>\n                                          <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;co_gnd_right&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">top_line_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_polyline</span><span class=\"p\">(</span><span class=\"n\">position_list</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_2_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">co_gnd_top_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">objid</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">top_line_obj</span><span class=\"p\">],</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">delta_w_half</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">([</span><span class=\"n\">base_line_obj</span><span class=\"p\">,</span> <span class=\"n\">top_line_obj</span><span class=\"p\">])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">(</span><span class=\"n\">objid</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">base_line_obj</span><span class=\"p\">],</span> <span class=\"n\">vector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">+</span><span class=\"si\">{}</span><span class=\"s2\">*2+</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">clearance</span><span class=\"p\">,</span> <span class=\"n\">sig_bot_w</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n</section>\n<section id=\"create-reference-ground-plane\">\n<h2>Create reference ground plane<a class=\"headerlink\" href=\"#create-reference-ground-plane\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a reference ground plane.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_rectangle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_1_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dimension_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">model_w</span><span class=\"p\">,</span> <span class=\"n\">cond_h</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;ref_gnd&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modeler.cad.object3d.Object3d object at 0x0000020E67E61A60&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-dielectric\">\n<h2>Create dielectric<a class=\"headerlink\" href=\"#create-dielectric\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a dielectric.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_rectangle</span><span class=\"p\">(</span>\n    <span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">layer_1_uh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dimension_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">model_w</span><span class=\"p\">,</span> <span class=\"n\">d_h</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Dielectric&quot;</span><span class=\"p\">,</span> <span class=\"n\">matname</span><span class=\"o\">=</span><span class=\"s2\">&quot;FR4_epoxy&quot;</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modeler.cad.object3d.Object3d object at 0x0000020E362263A0&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-conformal-coating\">\n<h2>Create conformal coating<a class=\"headerlink\" href=\"#create-conformal-coating\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a conformal coating.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">sm_obj_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">obj_name</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;co_gnd_left&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;co_gnd_right&quot;</span><span class=\"p\">]:</span>\n    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">obj_name</span><span class=\"p\">)</span>\n    <span class=\"n\">e_obj_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]:</span>\n        <span class=\"n\">e_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_object_from_edge</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n        <span class=\"n\">e_obj_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">e_obj</span><span class=\"p\">)</span>\n    <span class=\"n\">e_obj_1</span> <span class=\"o\">=</span> <span class=\"n\">e_obj_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">unite</span><span class=\"p\">(</span><span class=\"n\">e_obj_list</span><span class=\"p\">)</span>\n    <span class=\"n\">new_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">sweep_along_vector</span><span class=\"p\">(</span><span class=\"n\">e_obj_1</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">sm_h</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"n\">sm_obj_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_obj</span><span class=\"p\">)</span>\n\n<span class=\"n\">new_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_rectangle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dimension_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">clearance</span><span class=\"p\">,</span> <span class=\"n\">sm_h</span><span class=\"p\">])</span>\n<span class=\"n\">sm_obj_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_obj</span><span class=\"p\">)</span>\n\n<span class=\"n\">new_obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">create_rectangle</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">co_gnd_w</span><span class=\"p\">,</span> <span class=\"n\">layer_2_lh</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">dimension_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">clearance</span><span class=\"p\">,</span> <span class=\"n\">sm_h</span><span class=\"p\">])</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">move</span><span class=\"p\">([</span><span class=\"n\">new_obj</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">sig_bot_w</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"o\">+</span> <span class=\"n\">clearance</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">sm_obj_list</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">new_obj</span><span class=\"p\">)</span>\n\n<span class=\"n\">sm_obj</span> <span class=\"o\">=</span> <span class=\"n\">sm_obj_list</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">unite</span><span class=\"p\">(</span><span class=\"n\">sm_obj_list</span><span class=\"p\">)</span>\n<span class=\"n\">sm_obj</span><span class=\"o\">.</span><span class=\"n\">material_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;SolderMask&quot;</span>\n<span class=\"n\">sm_obj</span><span class=\"o\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">sm_obj</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;solder_mask&quot;</span>\n</pre></div>\n</div>\n</section>\n<section id=\"assign-conductor\">\n<h2>Assign conductor<a class=\"headerlink\" href=\"#assign-conductor\" title=\"Permalink to this heading\">#</a></h2>\n<p>Assign a conductor to the signal.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">assign_single_conductor</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">target_objects</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">obj</span><span class=\"p\">],</span> <span class=\"n\">conductor_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;SignalLine&quot;</span><span class=\"p\">,</span> <span class=\"n\">solve_option</span><span class=\"o\">=</span><span class=\"s2\">&quot;SolveOnBoundary&quot;</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;mm&quot;</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x0000020E67F96760&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-reference-ground\">\n<h2>Create reference ground<a class=\"headerlink\" href=\"#create-reference-ground\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create a reference ground.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s2\">&quot;co_gnd_left&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;co_gnd_right&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ref_gnd&quot;</span><span class=\"p\">]]</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">assign_single_conductor</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;gnd&quot;</span><span class=\"p\">,</span> <span class=\"n\">target_objects</span><span class=\"o\">=</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">conductor_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;ReferenceGround&quot;</span><span class=\"p\">,</span> <span class=\"n\">solve_option</span><span class=\"o\">=</span><span class=\"s2\">&quot;SolveOnBoundary&quot;</span><span class=\"p\">,</span> <span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"s2\">&quot;mm&quot;</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x0000020E02DE0F40&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"assign-huray-model-on-signal\">\n<h2>Assign Huray model on signal<a class=\"headerlink\" href=\"#assign-huray-model-on-signal\" title=\"Permalink to this heading\">#</a></h2>\n<p>Assign the Huray model on the signal.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">modeler</span><span class=\"o\">.</span><span class=\"n\">get_object_from_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;signal&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">assign_huray_finitecond_to_edges</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">edges</span><span class=\"p\">,</span> <span class=\"n\">radius</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.5um&quot;</span><span class=\"p\">,</span> <span class=\"n\">ratio</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;b_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;pyaedt.modules.Boundary.BoundaryObject object at 0x0000020E03E06490&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"create-setup-analyze-and-plot\">\n<h2>Create setup, analyze, and plot<a class=\"headerlink\" href=\"#create-setup-analyze-and-plot\" title=\"Permalink to this heading\">#</a></h2>\n<p>Create the setup, analyze it, and plot solution data.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">setup</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">create_setup</span><span class=\"p\">(</span><span class=\"n\">setupname</span><span class=\"o\">=</span><span class=\"s2\">&quot;new_setup&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">sweep</span> <span class=\"o\">=</span> <span class=\"n\">setup</span><span class=\"o\">.</span><span class=\"n\">add_sweep</span><span class=\"p\">(</span><span class=\"n\">sweepname</span><span class=\"o\">=</span><span class=\"s2\">&quot;sweep1&quot;</span><span class=\"p\">,</span> <span class=\"n\">sweeptype</span><span class=\"o\">=</span><span class=\"s2\">&quot;Discrete&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;RangeType&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LinearStep&quot;</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;RangeStart&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;1GHz&quot;</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;RangeStep&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;100MHz&quot;</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;RangeEnd&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;5GHz&quot;</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SaveFields&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;SaveRadFields&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">props</span><span class=\"p\">[</span><span class=\"s2\">&quot;Type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Interpolating&quot;</span>\n\n<span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">analyze_nominal</span><span class=\"p\">()</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">get_solution_data</span><span class=\"p\">(</span><span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"s2\">&quot;Z0(signal,signal)&quot;</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"s2\">&quot;Original&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<img src=\"../../_images/sphx_glr_Q2D_Example_CPWG_001.png\" srcset=\"../../_images/sphx_glr_Q2D_Example_CPWG_001.png\" alt=\"Simulation Results Plot\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>&lt;Figure size 2000x1000 with 1 Axes&gt;\n</pre></div>\n</div>\n</section>\n<section id=\"save-project-and-close-aedt\">\n<h2>Save project and close AEDT<a class=\"headerlink\" href=\"#save-project-and-close-aedt\" title=\"Permalink to this heading\">#</a></h2>\n<p>Save the project and close AEDT.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">home</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">expanduser</span><span class=\"p\">(</span><span class=\"s2\">&quot;~&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">save_project</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">home</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Downloads&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pyaedt_example&quot;</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">project_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.aedt&quot;</span><span class=\"p\">))</span>\n<span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">close_desktop</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>True\n</pre></div>\n</div>\n<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  33.834 seconds)</p>\n<div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-examples-05-q3d-q2d-example-cpwg-py\">\n<div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/50d1a5de1c2f3155e267e7a8fb3de25c/Q2D_Example_CPWG.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">Q2D_Example_CPWG.py</span></code></a></p>\n</div>\n<div class=\"sphx-glr-download sphx-glr-download-jupyter docutils container\">\n<p><a class=\"reference download internal\" download=\"\" href=\"../../../_downloads/d4735580111dc4b25150d068e5a31c2c/Q2D_Example_CPWG.ipynb\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Jupyter</span> <span class=\"pre\">notebook:</span> <span class=\"pre\">Q2D_Example_CPWG.ipynb</span></code></a></p>\n</div>\n</div>\n<p class=\"sphx-glr-signature\"><a class=\"reference external\" href=\"https://sphinx-gallery.github.io\">Gallery generated by Sphinx-Gallery</a></p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.19: https://docutils.sourceforge.io/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["examples/05-Q3D/Q2D_Example_Stripline", "2D Extractor: stripline analysis", "N", "next"], ["examples/05-Q3D/index", "2D Extractor and Q3D Extractor examples", "P", "previous"]], "sourcename": "examples/05-Q3D/Q2D_Example_CPWG.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">2D Extractor: CPWG analysis</a><ul>\n<li><a class=\"reference internal\" href=\"#perform-required-imports\">Perform required imports</a></li>\n<li><a class=\"reference internal\" href=\"#set-non-graphical-mode\">Set non-graphical mode</a></li>\n<li><a class=\"reference internal\" href=\"#launch-aedt-and-2d-extractor\">Launch AEDT and 2D Extractor</a></li>\n<li><a class=\"reference internal\" href=\"#define-variables\">Define variables</a></li>\n<li><a class=\"reference internal\" href=\"#create-primitives\">Create primitives</a></li>\n<li><a class=\"reference internal\" href=\"#create-signal\">Create signal</a></li>\n<li><a class=\"reference internal\" href=\"#create-coplanar-ground\">Create coplanar ground</a></li>\n<li><a class=\"reference internal\" href=\"#create-reference-ground-plane\">Create reference ground plane</a></li>\n<li><a class=\"reference internal\" href=\"#create-dielectric\">Create dielectric</a></li>\n<li><a class=\"reference internal\" href=\"#create-conformal-coating\">Create conformal coating</a></li>\n<li><a class=\"reference internal\" href=\"#assign-conductor\">Assign conductor</a></li>\n<li><a class=\"reference internal\" href=\"#create-reference-ground\">Create reference ground</a></li>\n<li><a class=\"reference internal\" href=\"#assign-huray-model-on-signal\">Assign Huray model on signal</a></li>\n<li><a class=\"reference internal\" href=\"#create-setup-analyze-and-plot\">Create setup, analyze, and plot</a></li>\n<li><a class=\"reference internal\" href=\"#save-project-and-close-aedt\">Save project and close AEDT</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "examples/05-Q3D/Q2D_Example_CPWG", "sidebars": ["search-field.html", "sidebar-nav-bs.html"], "customsidebar": null, "alabaster_version": "0.7.12", "theme_show_toc_level": 1, "theme_logo": {}}